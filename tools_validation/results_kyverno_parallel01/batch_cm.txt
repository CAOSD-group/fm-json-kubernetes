##### FILE: deploy.broken-pods.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/broken-pods:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broken-pods
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: broken-pod
  template:
    metadata:
      labels:
        app: broken-pod
    spec:
      containers:
      - command:
        - sh
        - -c
        - exit 1
        image: busybox
        name: broken-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/broken-pods

skipped mutate policy add-safe-to-evict -> resource default/Deployment/broken-pods
policy disallow-default-namespace -> resource default/Deployment/broken-pods failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/broken-pods failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/broken-pods failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/broken-pods failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/broken-pods failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy.broken-pods1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/broken-pods:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broken-pods
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: broken-pod
  template:
    metadata:
      labels:
        app: broken-pod
    spec:
      containers:
      - command:
        - sh
        - -c
        - exit 1
        image: busybox
        name: broken-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/broken-pods

skipped mutate policy add-safe-to-evict -> resource default/Deployment/broken-pods
policy disallow-default-namespace -> resource default/Deployment/broken-pods failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/broken-pods failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/broken-pods failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/broken-pods failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/broken-pods failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/broken-pods failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy.demo-tiny-one.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/demo-tiny-one:
apiVersion: v1
kind: Service
metadata:
  labels:
    component: tiny
  name: demo-tiny-one
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: demo-tiny-one

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy.demo-tiny-one_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/demo-tiny-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: tiny
  name: demo-tiny-one
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-tiny-one
  template:
    metadata:
      labels:
        app: demo-tiny-one
    spec:
      containers:
      - env:
        - name: MESSAGE
          value: "\U0001F44B Hello World \U0001F30D"
        image: philippecharriere494/tiny-service:0.0.3
        imagePullPolicy: IfNotPresent
        name: demo-tiny-one
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/demo-tiny-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/demo-tiny-one
policy disallow-default-namespace -> resource default/Deployment/demo-tiny-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/demo-tiny-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy.demo-tiny-one_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/demo-tiny-one:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    component: tiny
  name: demo-tiny-one
  namespace: default
spec:
  rules:
  - host: demo-tiny-one.3f1e2ff0-d14f-46a0-9601-c78cd127f940.k8s.civo.com
    http:
      paths:
      - backend:
          service:
            name: demo-tiny-one
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy.demo-tiny-three.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/demo-tiny-three:
apiVersion: v1
kind: Service
metadata:
  labels:
    component: tiny
  name: demo-tiny-three
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: demo-tiny-three

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy.demo-tiny-three_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/demo-tiny-three:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: tiny
  name: demo-tiny-three
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-tiny-three
  template:
    metadata:
      labels:
        app: demo-tiny-three
    spec:
      containers:
      - env:
        - name: MESSAGE
          value: "\U0001F44B Hello World \U0001F917"
        image: philippecharriere494/tiny-service:0.0.3
        imagePullPolicy: IfNotPresent
        name: demo-tiny-three
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/demo-tiny-three

skipped mutate policy add-safe-to-evict -> resource default/Deployment/demo-tiny-three
policy disallow-default-namespace -> resource default/Deployment/demo-tiny-three failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/demo-tiny-three failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy.demo-tiny-three_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/demo-tiny-three:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    component: tiny
  name: demo-tiny-three
  namespace: default
spec:
  rules:
  - host: demo-tiny-three.3f1e2ff0-d14f-46a0-9601-c78cd127f940.k8s.civo.com
    http:
      paths:
      - backend:
          service:
            name: demo-tiny-three
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy.demo-tiny-two.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/demo-tiny-two:
apiVersion: v1
kind: Service
metadata:
  labels:
    component: tiny
  name: demo-tiny-two
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: demo-tiny-two

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy.demo-tiny-two_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/demo-tiny-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: tiny
  name: demo-tiny-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-tiny-two
  template:
    metadata:
      labels:
        app: demo-tiny-two
    spec:
      containers:
      - env:
        - name: MESSAGE
          value: "\U0001F44B Hello World \U0001F916"
        image: philippecharriere494/tiny-service:0.0.3
        imagePullPolicy: IfNotPresent
        name: demo-tiny-two
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/demo-tiny-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/demo-tiny-two
policy disallow-default-namespace -> resource default/Deployment/demo-tiny-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/demo-tiny-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy.demo-tiny-two_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/demo-tiny-two:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    component: tiny
  name: demo-tiny-two
  namespace: default
spec:
  rules:
  - host: demo-tiny-two.3f1e2ff0-d14f-46a0-9601-c78cd127f940.k8s.civo.com
    http:
      paths:
      - backend:
          service:
            name: demo-tiny-two
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy.kiada.0.6.recreate.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.6"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.6
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.6.recreate1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.6"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.6
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.7.minReadySeconds.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 120
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.7"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.7
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.7.minReadySeconds1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 120
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.7"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.7
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.7.rollingUpdate.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.7"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.7
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.7.rollingUpdate1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.7"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.7
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.8.minReadySeconds0.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 120
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.8"
    spec:
      containers:
      - env:
        - name: FAIL_AFTER_SECONDS
          value: "30"
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.8
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 0
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.8.minReadySeconds01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 120
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.8"
    spec:
      containers:
      - env:
        - name: FAIL_AFTER_SECONDS
          value: "30"
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.8
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 0
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.8.minReadySeconds60.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 60
  progressDeadlineSeconds: 120
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.8"
    spec:
      containers:
      - env:
        - name: FAIL_AFTER_SECONDS
          value: "30"
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.8
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 0
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.8.minReadySeconds601.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 60
  progressDeadlineSeconds: 120
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.8"
    spec:
      containers:
      - env:
        - name: FAIL_AFTER_SECONDS
          value: "30"
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.8
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 0
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.9.hostPort.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.9"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NODE_AGENT_URL
          value: http://$(NODE_IP):11559
        image: luksa/kiada:0.9
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.9.hostPort1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.9"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NODE_AGENT_URL
          value: http://$(NODE_IP):11559
        image: luksa/kiada:0.9
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.9"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: NODE_AGENT_URL
          value: http://node-agent
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.9
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.0.91.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.9"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: NODE_AGENT_URL
          value: http://node-agent
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.9
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.labelled.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.labelled1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.noReplicas.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  selector:
    matchLabels:
      app: kiada
      rel: stable
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.noReplicas1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  selector:
    matchLabels:
      app: kiada
      rel: stable
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.recreate.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.recreate1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.6"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.6
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.9"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: NODE_AGENT_URL
          value: http://node-agent
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.9
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiada
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.5"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.5
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.6"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.6
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.kiada5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kiada:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kiada
    rel: stable
  name: kiada
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: kiada
      rel: stable
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kiada
        rel: stable
        ver: "0.9"
    spec:
      containers:
      - env:
        - name: QUOTE_URL
          value: http://quote/quote
        - name: QUIZ_URL
          value: http://quiz
        - name: NODE_AGENT_URL
          value: http://node-agent
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: luksa/kiada:0.9
        imagePullPolicy: Always
        name: kiada
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: envoyproxy/envoy:v1.14.1
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 9901
          name: admin
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
        volumeMounts:
        - mountPath: /etc/envoy
          name: etc-envoy
          readOnly: true
      volumes:
      - name: etc-envoy
        projected:
          sources:
          - configMap:
              name: kiada-envoy-config
          - secret:
              items:
              - key: tls.crt
                path: example-com.crt
              - key: tls.key
                mode: 384
                path: example-com.key
              name: kiada-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kiada
policy disallow-default-namespace -> resource default/Deployment/kiada failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kiada failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kiada failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kiada failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/kiada failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kiada failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy.quiz.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quiz:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiz
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quiz
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quiz
        rel: stable
    spec:
      containers:
      - image: luksa/quiz-api:0.1
        imagePullPolicy: Always
        name: quiz-api
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: mongo:5
        name: mongo
        volumeMounts:
        - mountPath: /data/db
          name: quiz-data
        - mountPath: /docker-entrypoint-initdb.d/
          name: initdb
          readOnly: true
      initContainers:
      - image: luksa/quiz-initdb-script-installer:0.1
        imagePullPolicy: Always
        name: installer
        volumeMounts:
        - mountPath: /initdb.d
          name: initdb
      volumes:
      - emptyDir: {}
        name: initdb
      - emptyDir: {}
        name: quiz-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quiz
policy disallow-default-namespace -> resource default/Deployment/quiz failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quiz failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quiz failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quiz failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quiz failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quiz failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quiz1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quiz:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quiz
  name: quiz
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quiz
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quiz
        rel: stable
    spec:
      containers:
      - image: luksa/quiz-api:0.1
        imagePullPolicy: Always
        name: quiz-api
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: mongo:5
        name: mongo
        volumeMounts:
        - mountPath: /data/db
          name: quiz-data
        - mountPath: /docker-entrypoint-initdb.d/
          name: initdb
          readOnly: true
      initContainers:
      - image: luksa/quiz-initdb-script-installer:0.1
        imagePullPolicy: Always
        name: installer
        volumeMounts:
        - mountPath: /initdb.d
          name: initdb
      volumes:
      - emptyDir: {}
        name: initdb
      - name: quiz-data
        persistentVolumeClaim:
          claimName: quiz-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quiz
policy disallow-default-namespace -> resource default/Deployment/quiz failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quiz failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quiz failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quiz failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quiz failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quiz failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quiz2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quiz:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiz
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quiz
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quiz
        rel: stable
    spec:
      containers:
      - image: luksa/quiz-api:0.1
        imagePullPolicy: Always
        name: quiz-api
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: mongo:5
        name: mongo
        volumeMounts:
        - mountPath: /data/db
          name: quiz-data
        - mountPath: /docker-entrypoint-initdb.d/
          name: initdb
          readOnly: true
      initContainers:
      - image: luksa/quiz-initdb-script-installer:0.1
        imagePullPolicy: Always
        name: installer
        volumeMounts:
        - mountPath: /initdb.d
          name: initdb
      volumes:
      - emptyDir: {}
        name: initdb
      - emptyDir: {}
        name: quiz-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quiz
policy disallow-default-namespace -> resource default/Deployment/quiz failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quiz failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quiz failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quiz failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quiz failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quiz failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quiz3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quiz:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quiz
  name: quiz
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quiz
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quiz
        rel: stable
    spec:
      containers:
      - image: luksa/quiz-api:0.1
        imagePullPolicy: Always
        name: quiz-api
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8080
            scheme: HTTP
      - image: mongo:5
        name: mongo
        volumeMounts:
        - mountPath: /data/db
          name: quiz-data
        - mountPath: /docker-entrypoint-initdb.d/
          name: initdb
          readOnly: true
      initContainers:
      - image: luksa/quiz-initdb-script-installer:0.1
        imagePullPolicy: Always
        name: installer
        volumeMounts:
        - mountPath: /initdb.d
          name: initdb
      volumes:
      - emptyDir: {}
        name: initdb
      - name: quiz-data
        persistentVolumeClaim:
          claimName: quiz-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quiz
policy disallow-default-namespace -> resource default/Deployment/quiz failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quiz failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quiz failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quiz failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quiz failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quiz failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quiz failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quote.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quote:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quote
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quote
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quote
        rel: stable
    spec:
      containers:
      - image: luksa/quote-writer:0.1
        imagePullPolicy: Always
        name: quote-writer
        volumeMounts:
        - mountPath: /var/local/output
          name: shared
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /quote
            port: 80
            scheme: HTTP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - echo "This is the quote service running in pod $HOSTNAME on node $NODE_NAME"
          > /html/index.html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: busybox
        name: index-creator
        volumeMounts:
        - mountPath: /html
          name: shared
      volumes:
      - emptyDir: {}
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quote
policy disallow-default-namespace -> resource default/Deployment/quote failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/quote failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/quote failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quote failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quote failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quote failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quote failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quote failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quote failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quote1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quote:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quote
  name: quote
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quote
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quote
        rel: stable
    spec:
      containers:
      - image: luksa/quote-writer:0.1
        imagePullPolicy: Always
        name: quote-writer
        volumeMounts:
        - mountPath: /var/local/output
          name: shared
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /quote
            port: 80
            scheme: HTTP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - echo "This is the quote service running in pod $HOSTNAME on node $NODE_NAME"
          > /html/index.html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: busybox
        name: index-creator
        volumeMounts:
        - mountPath: /html
          name: shared
      volumes:
      - emptyDir: {}
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quote
policy disallow-default-namespace -> resource default/Deployment/quote failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/quote failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/quote failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quote failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quote failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quote failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quote failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quote failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quote failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quote2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quote:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quote
  name: quote
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quote
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quote
        rel: stable
    spec:
      containers:
      - image: luksa/quote-writer:0.1
        imagePullPolicy: Always
        name: quote-writer
        volumeMounts:
        - mountPath: /var/local/output
          name: shared
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /quote
            port: 80
            scheme: HTTP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - echo "This is the quote service running in pod $HOSTNAME on node $NODE_NAME"
          > /html/index.html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: busybox
        name: index-creator
        volumeMounts:
        - mountPath: /html
          name: shared
      volumes:
      - emptyDir: {}
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quote
policy disallow-default-namespace -> resource default/Deployment/quote failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/quote failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/quote failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quote failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quote failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quote failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quote failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quote failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quote failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quote3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quote:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quote
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quote
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quote
        rel: stable
    spec:
      containers:
      - image: luksa/quote-writer:0.1
        imagePullPolicy: Always
        name: quote-writer
        volumeMounts:
        - mountPath: /var/local/output
          name: shared
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /quote
            port: 80
            scheme: HTTP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - echo "This is the quote service running in pod $HOSTNAME on node $NODE_NAME"
          > /html/index.html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: busybox
        name: index-creator
        volumeMounts:
        - mountPath: /html
          name: shared
      volumes:
      - emptyDir: {}
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quote
policy disallow-default-namespace -> resource default/Deployment/quote failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/quote failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/quote failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quote failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quote failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quote failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quote failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quote failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quote failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quote4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quote:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quote
  name: quote
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quote
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quote
        rel: stable
    spec:
      containers:
      - image: luksa/quote-writer:0.1
        imagePullPolicy: Always
        name: quote-writer
        volumeMounts:
        - mountPath: /var/local/output
          name: shared
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /quote
            port: 80
            scheme: HTTP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - echo "This is the quote service running in pod $HOSTNAME on node $NODE_NAME"
          > /html/index.html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: busybox
        name: index-creator
        volumeMounts:
        - mountPath: /html
          name: shared
      volumes:
      - emptyDir: {}
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quote
policy disallow-default-namespace -> resource default/Deployment/quote failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/quote failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/quote failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quote failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quote failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quote failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quote failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quote failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quote failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy.quote5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quote:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quote
  name: quote
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quote
      rel: stable
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: quote
        rel: stable
    spec:
      containers:
      - image: luksa/quote-writer:0.1
        imagePullPolicy: Always
        name: quote-writer
        volumeMounts:
        - mountPath: /var/local/output
          name: shared
      - image: nginx:alpine
        name: nginx
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /quote
            port: 80
            scheme: HTTP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - echo "This is the quote service running in pod $HOSTNAME on node $NODE_NAME"
          > /html/index.html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: busybox
        name: index-creator
        volumeMounts:
        - mountPath: /html
          name: shared
      volumes:
      - emptyDir: {}
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quote
policy disallow-default-namespace -> resource default/Deployment/quote failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/quote failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/quote failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quote failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quote failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quote failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/quote failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quote failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quote failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy.test-auth-k8s.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-auth-k8s:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-auth-k8s
  name: test-auth-k8s
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-auth-k8s
  template:
    metadata:
      labels:
        app: test-auth-k8s
    spec:
      containers:
      - env:
        - name: VAULT_ADDR
          value: http://192.168.65.254:8200
        - name: JWT
          value: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        - name: KUBE_TOKEN
          value: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        image: wbitt/network-multitool:alpine-extra
        name: test-auth-k8s
        ports:
        - containerPort: 80
      serviceAccountName: vault-auth

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-auth-k8s

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-auth-k8s
policy disallow-default-namespace -> resource default/Deployment/test-auth-k8s failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy.test-auth-k8s1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-auth-k8s:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-auth-k8s
  name: test-auth-k8s
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-auth-k8s
  template:
    metadata:
      labels:
        app: test-auth-k8s
    spec:
      containers:
      - env:
        - name: VAULT_ADDR
          value: http://192.168.65.254:8200
        - name: JWT
          value: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        - name: KUBE_TOKEN
          value: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        image: wbitt/network-multitool:alpine-extra
        name: test-auth-k8s
        ports:
        - containerPort: 80
      serviceAccountName: vault-auth

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-auth-k8s

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-auth-k8s
policy disallow-default-namespace -> resource default/Deployment/test-auth-k8s failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/test-auth-k8s failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy.where-are-the-pods.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/where-are-the-pods:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: where-are-the-pods
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: where-are-the-pods
  template:
    metadata:
      labels:
        app: where-are-the-pods
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: busybox
        name: main
      serviceAccountName: missing-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/where-are-the-pods

skipped mutate policy add-safe-to-evict -> resource default/Deployment/where-are-the-pods
policy disallow-default-namespace -> resource default/Deployment/where-are-the-pods failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy.where-are-the-pods1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/where-are-the-pods:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: where-are-the-pods
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: where-are-the-pods
  template:
    metadata:
      labels:
        app: where-are-the-pods
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: busybox
        name: main
      serviceAccountName: missing-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/where-are-the-pods

skipped mutate policy add-safe-to-evict -> resource default/Deployment/where-are-the-pods
policy disallow-default-namespace -> resource default/Deployment/where-are-the-pods failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/where-are-the-pods failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/parrot-core:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: parrot-core
  name: parrot-core
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parrot-core
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: parrot-core
    spec:
      containers:
      - command:
        - /bin/sleep
        - 3650d
        image: lostcauze7/parrot-core
        imagePullPolicy: Always
        name: parrot-core
        ports:
        - containerPort: 8088
        resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/parrot-core

skipped mutate policy add-safe-to-evict -> resource default/Deployment/parrot-core
policy disallow-default-namespace -> resource default/Deployment/parrot-core failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/parrot-core failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/parrot-core failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/parrot-core failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/parrot-core failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/parrot-core failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/parrot-core failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/parrot-core failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/parrot-core failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched-again.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched-again1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched-again2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched-again3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy00-patched-again4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment00:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment00
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment00
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment00 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy01
policy disallow-default-namespace -> resource default/Deployment/deploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-container-sock-mounts -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-container-sock-mounts -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-container-sock-mounts -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-container-sock-mounts -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-container-sock-mounts -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched-again.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched-again1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched-again2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched-again3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy01-patched-again4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo.io/foo: bar
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment01
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment01
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-container-sock-mounts -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-container-sock-mounts -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-container-sock-mounts -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-container-sock-mounts -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-container-sock-mounts -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-not-patched9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment02
policy disallow-default-namespace -> resource default/Deployment/deployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched-again.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched-again1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched-again2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched-again3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy02-patched-again4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bar.org/foo: foo
    vault.hashicorp.com/agent-inject: "true"
  labels:
    app: busybox
  name: deployment02
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.6.0
        name: vault-agent
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment02
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    vault.hashicorp.com/agent-inject: "false"
  labels:
    app: busybox
  name: deployment03
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    vault.hashicorp.com/agent-inject: "false"
  labels:
    app: busybox
  name: deployment03
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    vault.hashicorp.com/agent-inject: "false"
  labels:
    app: busybox
  name: deployment03
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    vault.hashicorp.com/agent-inject: "false"
  labels:
    app: busybox
  name: deployment03
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
    distributed: required
  name: deployment03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            distributed: required
        maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-not-patched9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    vault.hashicorp.com/agent-inject: "false"
  labels:
    app: busybox
  name: deployment03
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment03
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment03
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-container-sock-mounts -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment03
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-container-sock-mounts -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment03
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-container-sock-mounts -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment03
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-container-sock-mounts -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy03-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment03:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sre.corp.org/troubleshooting-needed: "true"
  labels:
    app: busybox
  name: deployment03
  namespace: default
spec:
  replicas: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment03
policy disallow-container-sock-mounts -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/deployment03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deployment03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/deployment03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy04-not-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment04:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment04
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy04-not-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment04:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment04
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy04-not-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment04:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment04
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy04-not-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment04:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment04
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy04-not-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to update-image-tag-ns/Deployment/deployment04:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment04
  namespace: update-image-tag-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: vault:1.5.4
        name: vault-agent

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04

skipped mutate policy add-safe-to-evict -> resource update-image-tag-ns/Deployment/deployment04
policy drop-all-capabilities -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource update-image-tag-ns/Deployment/deployment04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/parrot-security:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: parrot-securty
  name: parrot-security
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parrot-security
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: parrot-security
    spec:
      containers:
      - command:
        - /bin/sleep
        - 3650d
        image: lostcauze7/parrot-security
        imagePullPolicy: Always
        name: parrot-security
        ports:
        - containerPort: 8087
        resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/parrot-security

skipped mutate policy add-safe-to-evict -> resource default/Deployment/parrot-security
policy disallow-default-namespace -> resource default/Deployment/parrot-security failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/parrot-security failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/parrot-security failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/parrot-security failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/parrot-security failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/parrot-security failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/parrot-security failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/parrot-security failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/parrot-security failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/kubernetes-cronhpa-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubernetes-cronhpa-controller
    controller-tools.k8s.io: "2.0"
  name: kubernetes-cronhpa-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-cronhpa-controller
      controller-tools.k8s.io: "2.0"
  template:
    metadata:
      labels:
        app: kubernetes-cronhpa-controller
        controller-tools.k8s.io: "2.0"
    spec:
      containers:
      - env:
        - name: TZ
          value: Asia/Shanghai
        image: registry.aliyuncs.com/acs/kubernetes-cronhpa-controller:v1.4.3-2f290b2-aliyun
        imagePullPolicy: Always
        name: kubernetes-cronhpa-controller
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      serviceAccount: kubernetes-cronhpa-controller

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/kubernetes-cronhpa-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/kubernetes-cronhpa-controller
policy drop-all-capabilities -> resource kube-system/Deployment/kubernetes-cronhpa-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/kubernetes-cronhpa-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/kubernetes-cronhpa-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/Deployment/kubernetes-cronhpa-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/kubernetes-cronhpa-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/kubernetes-cronhpa-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy100.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/exoscale-loadbalancer-description: NGINX Ingress Controller
      load balancer
    service.beta.kubernetes.io/exoscale-loadbalancer-service-healthcheck-interval: 10s
    service.beta.kubernetes.io/exoscale-loadbalancer-service-healthcheck-mode: http
    service.beta.kubernetes.io/exoscale-loadbalancer-service-healthcheck-retries: "1"
    service.beta.kubernetes.io/exoscale-loadbalancer-service-healthcheck-timeout: 3s
    service.beta.kubernetes.io/exoscale-loadbalancer-service-healthcheck-uri: /
    service.beta.kubernetes.io/exoscale-loadbalancer-service-strategy: source-hash
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/DaemonSet/ingress-nginx-controller:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/DaemonSet/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/DaemonSet/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy100_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy100_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy100_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy100_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource ingress-nginx/Service/ingress-nginx-controller failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --watch-ingress-without-class=true
        - --publish-status-address=localhost
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        ingress-ready: "true"
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 0
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy101_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy101_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy101_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy101_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/oci-load-balancer-shape: flexible
    service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "100"
    service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "10"
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy102_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy102_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy102_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy102_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
  use-proxy-protocol: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/scw-loadbalancer-proxy-protocol-v2: "true"
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy103_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy103_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy103_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy103_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy104.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/app-1:
apiVersion: v1
data:
  config.json: |
    {
      "environment" : "dev"
    }
kind: ConfigMap
metadata:
  name: app-1
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy104_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app-1
  name: app-1
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: app-1
    spec:
      containers:
      - image: andreishvedau/flask-hello-world:v1.1
        name: app-1
        resources:
          limits:
            cpu: 20m
            memory: 64Mi
          requests:
            cpu: 20m
            memory: 64Mi
        tolerations:
        - effect: PreferNoSchedule
          key: workloadKind
          operator: Equal
          value: apps
        volumeMounts:
        - mountPath: /configs/
          name: config-volume
      volumes:
      - configMap:
          name: app-1
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-1
policy disallow-default-namespace -> resource default/Deployment/app-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/app-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy104_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/app-1:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: app-1
  name: app-1
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: app-1
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy106.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy107.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    nodePort: 32103
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource ingress-nginx/Service/ingress-nginx-controller failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-controller-leader
        - --watch-ingress-without-class=true
        - --default-backend-service=app-space/default-backend-service
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: k8s.gcr.io/ingress-nginx/controller:v1.1.2@sha256:28b11ce69e57843de44e3db6413e98d09de0f6688e33d4bd384002a44f78405c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy107_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.1.2
        helm.sh/chart: ingress-nginx-4.0.18
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy107_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.1.2
        helm.sh/chart: ingress-nginx-4.0.18
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy107_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy107_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.2
    helm.sh/chart: ingress-nginx-4.0.18
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy108.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/petclinic:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
      - command:
        - java
        - -jar
        - spring-petclinic-3.2.0-SNAPSHOT.jar
        - --spring.datasource.initialize=true
        env:
        - name: MYSQL_URL
          valueFrom:
            configMapKeyRef:
              key: MYSQL_URL
              name: configmap
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: MYSQL_DATABASE
              name: configmap
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: configmap
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: secret-petclinic
        image: deepak8934/petapp:66
        name: petclinic
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/petclinic

skipped mutate policy add-safe-to-evict -> resource default/Deployment/petclinic
policy disallow-default-namespace -> resource default/Deployment/petclinic failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/petclinic failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/petclinic failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/petclinic failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/petclinic failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/petclinic failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/petclinic failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/petclinic failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-controller-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.3.0@sha256:d1707ca76d3b044ab8a28277a2466a02100ee9f58a86af1535a3edf9323ea1b5
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy11_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.3.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy11_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.3.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy11_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-controller-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy11_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: __EXTERNAL_DNS_TARGET__
    external-dns.alpha.kubernetes.io/register: "true"
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/DaemonSet/ingress-nginx-controller:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --http-port=80
        - --https-port=443
        - --annotations-prefix=nginx.ingress.kubernetes.io
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
        master: "true"
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/DaemonSet/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/DaemonSet/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy110_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
        master: "true"
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy110_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
        master: "true"
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy110_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy110_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy1100.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
  namespace: default
spec:
  replicas: 7
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 100m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy111.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource ingress-nginx/Service/ingress-nginx-controller failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/DaemonSet/ingress-nginx-controller:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --http-port=80
        - --https-port=443
        - --annotations-prefix=nginx.ingress.kubernetes.io
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        master: "true"
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/DaemonSet/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/DaemonSet/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/DaemonSet/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy111_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
        master: "true"
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy111_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
        master: "true"
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy111_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy111_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource ingress-nginx/Service/ingress-nginx-controller failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --watch-ingress-without-class=true
        - --publish-status-address=localhost
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        ingress-ready: "true"
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 0
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy112_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy112_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy112_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy112_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy113.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-health-container:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-health-container
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-health
  template:
    metadata:
      labels:
        app: go-health
    spec:
      containers:
      - image: innoskrit/go-k8s-deployment
        name: go-health-container
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-health-container

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-health-container
policy disallow-default-namespace -> resource default/Deployment/go-health-container failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-health-container failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-health-container failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-health-container failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-health-container failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy114.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/first-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: first-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      a: america
  template:
    metadata:
      labels:
        a: america
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: second-cm
        image: httpd
        name: container-1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/first-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/first-deployment
policy disallow-default-namespace -> resource default/Deployment/first-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/first-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/first-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/first-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/first-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy115.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: my-app
    component: reactjs-app
  name: my-pod
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: agile-env
    image: authentication:v1
    imagePullPolicy: Never
    name: authentication-container
  - image: reactjs:v1
    imagePullPolicy: Never
    name: reactjs-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod
policy disallow-default-namespace -> resource default/Pod/my-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/my-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/my-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy115_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/reactjs-service:
apiVersion: v1
kind: Service
metadata:
  name: reactjs-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: my-app
    component: reactjs-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/reactjs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy115_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/authentication-service:
apiVersion: v1
kind: Service
metadata:
  name: authentication-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: my-app
    component: reactjs-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/authentication-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy116.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/new-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: account
  name: new-deploy
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      env: prod
  template:
    metadata:
      labels:
        env: prod
      name: new-deploy-pod
    spec:
      containers:
      - image: nginx
        name: prodnginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/new-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/new-deploy
policy disallow-default-namespace -> resource default/Deployment/new-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/new-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/new-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/new-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/new-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy117.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/new-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: account
  name: new-deploy
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      env: prod
  template:
    metadata:
      labels:
        env: prod
      name: new-deploy-pod
    spec:
      containers:
      - image: nginx
        name: prodnginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/new-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/new-deploy
policy disallow-default-namespace -> resource default/Deployment/new-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/new-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/new-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/new-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/new-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/new-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy118.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-svc-ex:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-svc-ex
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-svc
  template:
    metadata:
      labels:
        app: test-svc
    spec:
      containers:
      - image: nginx:1.19.1
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-svc-ex

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-svc-ex
policy disallow-default-namespace -> resource default/Deployment/deployment-svc-ex failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-svc-ex failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/spintest:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spintest
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spintest
  template:
    metadata:
      labels:
        app: spintest
    spec:
      containers:
      - command:
        - /
        image: todo
        imagePullPolicy: IfNotPresent
        name: spintest
        resources:
          limits:
            cpu: 150m
            memory: 150Mi
          requests:
            cpu: 50m
            memory: 100Mi
      runtimeClassName: wasmtime-spin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/spintest

skipped mutate policy add-safe-to-evict -> resource default/Deployment/spintest
policy disallow-default-namespace -> resource default/Deployment/spintest failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/spintest failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/spintest failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/spintest failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/spintest failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/spintest failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/spintest failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/spintest failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy120.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/debug:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debug
  namespace: default
spec:
  replicas: 8
  selector:
    matchLabels:
      app: debug
  template:
    metadata:
      labels:
        app: debug
    spec:
      containers:
      - command:
        - /bin/sleep
        - infinity
        image: busybox
        name: debug
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/debug

skipped mutate policy add-safe-to-evict -> resource default/Deployment/debug
policy disallow-default-namespace -> resource default/Deployment/debug failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/debug failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/debug failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/debug failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/debug failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/debug failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/debug failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/debug failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy121.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/debug:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debug
  namespace: default
spec:
  replicas: 8
  selector:
    matchLabels:
      app: debug
  template:
    metadata:
      labels:
        app: debug
    spec:
      containers:
      - command:
        - /bin/sleep
        - infinity
        image: busybox
        name: debug

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/debug

skipped mutate policy add-safe-to-evict -> resource default/Deployment/debug
policy disallow-default-namespace -> resource default/Deployment/debug failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/debug failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/debug failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/debug failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/debug failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/debug failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/debug failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/debug failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/debug failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy122.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource ingress-nginx/Service/ingress-nginx-controller failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --watch-ingress-without-class=true
        - --publish-status-address=localhost
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.9.5@sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        ingress-ready: "true"
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 0
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy122_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy122_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.9.5
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0@sha256:a7943503b45d552785aa3b5e457f169a5661fb94d82b8a3373bcd9ebaf9aac80
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: deploy122_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy122_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.5
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy123.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mkdocs-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mkdocs
  name: mkdocs-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mkdocs
  template:
    metadata:
      labels:
        app: mkdocs
    spec:
      containers:
      - image: cafanwii/httpd-documentation:latest
        name: mkdocs-container
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mkdocs-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mkdocs-deployment
policy disallow-default-namespace -> resource default/Deployment/mkdocs-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mkdocs-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy124.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/todo-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: ngnix
  template:
    metadata:
      labels:
        app: ngnix
    spec:
      containers:
      - image: mknnyk/django_todo_cicd:54
        name: todo-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app
policy disallow-default-namespace -> resource default/Deployment/todo-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/todo-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/todo-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/todo-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/todo-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/todo-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy125.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/todo-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: todo-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: abhishekf5/todo-app:v1
        name: todo
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app
policy disallow-default-namespace -> resource default/Deployment/todo-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/todo-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/todo-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/todo-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/todo-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/todo-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy126.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/website-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: website
  template:
    metadata:
      labels:
        app: website
    spec:
      containers:
      - image: gorle19/s314781_site:v1.0
        name: website-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/website-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/website-deployment
policy disallow-default-namespace -> resource default/Deployment/website-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/website-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/website-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/website-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/website-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/website-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/website-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/website-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy128.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/readiness-probe-test:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  generation: 2
  labels:
    lbLabel: dummyLB
    release: readiness-probe-test
  name: readiness-probe-test
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      lbLabel: dummyLB
      release: readiness-probe-test
  template:
    metadata:
      labels:
        lbLabel: dummyLB
        release: readiness-probe-test
    spec:
      containers:
      - env:
        - name: NODE_REPLICA
          value: "1"
        image: devchainstack/readiness-probe:v0.0.2
        imagePullPolicy: IfNotPresent
        name: readiness-probe
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          periodSeconds: 5
          successThreshold: 2
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 10Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/readiness-probe-test

skipped mutate policy add-safe-to-evict -> resource default/Deployment/readiness-probe-test
policy disallow-default-namespace -> resource default/Deployment/readiness-probe-test failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/readiness-probe-test failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/readiness-probe-test failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/readiness-probe-test failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/readiness-probe-test failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/readiness-probe-test failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment02
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02
policy disallow-default-namespace -> resource default/Deployment/gooddeployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource production/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource production/Deployment/deployment01
policy drop-all-capabilities -> resource production/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource production/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource production/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment01
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment02
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02
policy disallow-default-namespace -> resource default/Deployment/gooddeployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy01
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy01
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy02
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
        see: saw
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy02
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good18_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy03
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginbox
  template:
    metadata:
      labels:
        app: nginbox
        bar: foo
        foo: bar
        saw: see
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy03
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-pdb-ns/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: require-pdb-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-pdb-ns/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource require-pdb-ns/Deployment/gooddeploy01
policy drop-all-capabilities -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy01
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy01
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy02
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
        see: saw
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy02
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy03
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginbox
  template:
    metadata:
      labels:
        app: nginbox
        bar: foo
        foo: bar
        saw: see
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy03
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-pdb-ns/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: require-pdb-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-pdb-ns/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource require-pdb-ns/Deployment/gooddeploy01
policy drop-all-capabilities -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource production/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource production/Deployment/deployment01
policy drop-all-capabilities -> resource production/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource production/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource production/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment01
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment02
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02
policy disallow-default-namespace -> resource default/Deployment/gooddeployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy01
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy01
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy02
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
        see: saw
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy02
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-netpol-ns/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeploy03
  namespace: require-netpol-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginbox
  template:
    metadata:
      labels:
        app: nginbox
        bar: foo
        foo: bar
        saw: see
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource require-netpol-ns/Deployment/gooddeploy03
policy drop-all-capabilities -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-netpol-ns/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to require-pdb-ns/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: require-pdb-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource require-pdb-ns/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource require-pdb-ns/Deployment/gooddeploy01
policy drop-all-capabilities -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource require-pdb-ns/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource production/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource production/Deployment/deployment01
policy drop-all-capabilities -> resource production/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource production/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource production/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource production/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment01
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-good9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment02
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment02
policy disallow-default-namespace -> resource default/Deployment/gooddeployment02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-green.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/testdeploy-green:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: testdeploy
    version: green
  name: testdeploy-green
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: testdeploy
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: testdeploy
        version: green
    spec:
      containers:
      - image: docker-registry:5000/test-app:1.02
        name: test-app
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/testdeploy-green

skipped mutate policy add-safe-to-evict -> resource default/Deployment/testdeploy-green
policy disallow-default-namespace -> resource default/Deployment/testdeploy-green failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/testdeploy-green failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/testdeploy-green failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/testdeploy-green failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-green1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/testdeploy-green:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: testdeploy
    version: green
  name: testdeploy-green
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: testdeploy
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: testdeploy
        version: green
    spec:
      containers:
      - image: docker-registry:5000/test-app:1.02
        name: test-app
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/testdeploy-green

skipped mutate policy add-safe-to-evict -> resource default/Deployment/testdeploy-green
policy disallow-default-namespace -> resource default/Deployment/testdeploy-green failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/testdeploy-green failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/testdeploy-green failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/testdeploy-green failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/testdeploy-green failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-green2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/timeserver-green:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeserver-green
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      pod: timeserver-green
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        pod: timeserver-green
    spec:
      containers:
      - image: docker.io/wdenniss/timeserver:2
        name: timeserver-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/timeserver-green

skipped mutate policy add-safe-to-evict -> resource default/Deployment/timeserver-green
policy disallow-default-namespace -> resource default/Deployment/timeserver-green failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/timeserver-green failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/timeserver-green failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/timeserver-green failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/timeserver-green failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/timeserver-green failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/timeserver-green failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/timeserver-green failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-helpdesk.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/helpdesk:
apiVersion: v1
kind: Namespace
metadata:
  name: helpdesk
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/helpdesk:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: helpdesk
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/helpdesk:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: helpdesk
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/helpdesk:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: helpdesk
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/helpdesk:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: helpdesk
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-helpdesk_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to helpdesk/PersistentVolumeClaim/mysql-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: helpdesk
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-helpdesk_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to helpdesk/PersistentVolumeClaim/glpi-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glpi-pvc
  namespace: helpdesk
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-helpdesk_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to helpdesk/Service/helpdesk-svc:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helpdesk-svc
  name: helpdesk-svc
  namespace: helpdesk
spec:
  ports:
  - port: 80
  selector:
    app: glpi-helpdesk
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-helpdesk_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to helpdesk/Deployment/glpi-helpdesk:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: glpi-helpdesk
  name: glpi-helpdesk
  namespace: helpdesk
spec:
  selector:
    matchLabels:
      app: glpi-helpdesk
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: glpi-helpdesk
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/Paris
        image: diouxx/glpi:latest
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "60"
        name: glpi-helpdesk
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: glpi-pvc
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: glpi
        - name: MYSQL_USER
          value: glpi
        - name: MYSQL_PASSWORD
          value: glpi
        image: mysql:latest
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "60"
        name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-pvc
      volumes:
      - name: glpi-pvc
        persistentVolumeClaim:
          claimName: glpi-pvc
      - name: mysql-pvc
        persistentVolumeClaim:
          claimName: mysql-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource helpdesk/Deployment/glpi-helpdesk

skipped mutate policy add-safe-to-evict -> resource helpdesk/Deployment/glpi-helpdesk
policy disallow-latest-tag -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource helpdesk/Deployment/glpi-helpdesk failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-helpdesk_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to helpdesk/Ingress/helpdesk-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
  name: helpdesk-ingress
  namespace: helpdesk
spec:
  ingressClassName: nginx
  rules:
  - host: helpdesk.yourdomain.fr
    http:
      paths:
      - backend:
          service:
            name: helpdesk-svc
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - helpdesk.yourdomain.fr
    secretName: helpdesk-your-domain-fr-site-cert

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-hiload.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/Deployment/bb2-hiload:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bbox2
  name: bb2-hiload
  namespace: student
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbox2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bbox2
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "echo 'Test 1 prepare.. wait 30 seconds..'\nsleep 30\necho 'CPU load test
          start. wait 60 sec'\n# dd if=/dev/zero of=/dev/null bs=4096 count=60000000\ndd
          if=/dev/zero of=/dev/null bs=4096 &\nsleep 45\nkill $!\necho 'Test 1 end'\necho
          'Test 2 prepare.. wait 30 seconds..'\nsleep 30\necho 'CPU test 2 start.
          wait 60 sec'\ndd if=/dev/zero of=/dev/null bs=4096 &\nsleep 45 \nkill $!\necho
          'CPU test 2 end'\necho 'End of cpu load script, start pinging ggl..'\nping
          8.8.8.8\n"
        image: busybox
        name: bbox-loads
        resources:
          limits:
            cpu: 750m
            memory: 40Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/Deployment/bb2-hiload

skipped mutate policy add-safe-to-evict -> resource student/Deployment/bb2-hiload
policy disallow-latest-tag -> resource student/Deployment/bb2-hiload failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource student/Deployment/bb2-hiload failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/Deployment/bb2-hiload failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/Deployment/bb2-hiload failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-hiload-priv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/Deployment/bb2-hiload:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bbox2
  name: bb2-hiload
  namespace: student
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbox2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bbox2
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "echo 'Test 1 prepare.. wait 30 seconds..'\nsleep 30\necho 'CPU load test
          start. wait 60 sec'\n# dd if=/dev/zero of=/dev/null bs=4096 count=60000000\ndd
          if=/dev/zero of=/dev/null bs=4096 &\nsleep 45\nkill $!\necho 'Test 1 end'\necho
          'Test 2 prepare.. wait 30 seconds..'\nsleep 10\necho 'CPU test 2 start.
          wait 60 sec'\ndd if=/dev/zero of=/dev/null bs=4096 &\nsleep 45 \nkill $!\necho
          'CPU test 2 end'\necho 'End of cpu load script, start pinging ggl..'\nping
          8.8.8.8\n"
        image: dock01:5002/bbox:1.36.1
        name: bbox-loads
        resources:
          limits:
            cpu: 750m
            memory: 40Mi
      imagePullSecrets:
      - name: dock5002-admin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/Deployment/bb2-hiload

skipped mutate policy add-safe-to-evict -> resource student/Deployment/bb2-hiload
policy drop-all-capabilities -> resource student/Deployment/bb2-hiload failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/Deployment/bb2-hiload failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/Deployment/bb2-hiload failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/Deployment/bb2-hiload failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-hpa-hiload.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/Deployment/bbox-hpa-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bbox-hpa
  name: bbox-hpa-deploy
  namespace: student
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbox-hpa
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bbox-hpa
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "echo Test 1 prepare, 30 sec... \nsleep 30\necho Test 1 starts, 60 sec \ndd
          if=/dev/zero of=/dev/null bs=4096 &\nsleep 60\nkill $!\necho Test 1 finished..
          start pinging\nping 8.8.8.8 \n"
        image: dock01:5001/bbox:nov
        name: greets
        resources:
          limits:
            cpu: 350m
            memory: 30Mi
      imagePullSecrets:
      - name: dock5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/Deployment/bbox-hpa-deploy

skipped mutate policy add-safe-to-evict -> resource student/Deployment/bbox-hpa-deploy
policy drop-all-capabilities -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/Deployment/bbox-hpa-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-influxdb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/influxdb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: default
spec:
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      - image: influxdb:1.7
        name: influxdb

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/influxdb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/influxdb
policy disallow-default-namespace -> resource default/Deployment/influxdb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/influxdb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/influxdb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/influxdb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/influxdb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/influxdb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/influxdb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/influxdb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-influxdb1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/influxdb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: default
spec:
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      - image: influxdb:1.7
        name: influxdb

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/influxdb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/influxdb
policy disallow-default-namespace -> resource default/Deployment/influxdb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/influxdb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/influxdb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/influxdb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/influxdb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/influxdb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/influxdb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/influxdb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/foo-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: foo
  name: foo-app
  namespace: default
spec:
  containers:
  - command:
    - /agnhost
    - netexec
    - --http-port
    - "8080"
    image: registry.k8s.io/e2e-test-images/agnhost:2.39
    name: foo-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/foo-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/foo-app
policy disallow-default-namespace -> resource default/Pod/foo-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/foo-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/foo-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/foo-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/foo-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/foo-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/foo-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/foo-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/foo-service:
apiVersion: v1
kind: Service
metadata:
  name: foo-service
  namespace: default
spec:
  ports:
  - port: 8080
  selector:
    app: foo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bar-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: bar
  name: bar-app
  namespace: default
spec:
  containers:
  - command:
    - /agnhost
    - netexec
    - --http-port
    - "8080"
    image: registry.k8s.io/e2e-test-images/agnhost:2.39
    name: bar-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bar-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/bar-app
policy disallow-default-namespace -> resource default/Pod/bar-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/bar-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bar-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bar-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/bar-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/bar-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bar-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bar-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-ingress_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/bar-service:
apiVersion: v1
kind: Service
metadata:
  name: bar-service
  namespace: default
spec:
  ports:
  - port: 8080
  selector:
    app: bar

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/example-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: example-ingress
  namespace: default
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: foo-service
            port:
              number: 8080
        path: /foo(/|$)(.*)
        pathType: Prefix
      - backend:
          service:
            name: bar-service
            port:
              number: 8080
        path: /bar(/|$)(.*)
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/example-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.32.0
        helm.sh/chart: ingress-nginx-2.0.3
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.ingress-nginx.svc
        - --namespace=ingress-nginx
        - --secret-name=ingress-nginx-admission
        image: jettech/kube-webhook-certgen:v1.2.0
        imagePullPolicy: IfNotPresent
        name: create
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-ingress1_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.32.0
        helm.sh/chart: ingress-nginx-2.0.3
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=ingress-nginx
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        image: jettech/kube-webhook-certgen:v1.2.0
        imagePullPolicy: null
        name: patch
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-ingress1_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader-nginx
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-ingress1_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=ingress-nginx/ingress-nginx-controller
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --configmap=ingress-nginx/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.32.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy-inventario.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/inventario:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventario
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventario
  template:
    metadata:
      labels:
        app: inventario
    spec:
      containers:
      - image: lucasycosta/inventario:latest
        name: containerinventario
        ports:
        - containerPort: 8082

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/inventario

skipped mutate policy add-safe-to-evict -> resource default/Deployment/inventario
policy disallow-default-namespace -> resource default/Deployment/inventario failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/inventario failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/inventario failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/inventario failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/inventario failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/inventario failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/inventario failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/inventario failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/inventario failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-iron-db.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to iron-namespace-devops/Deployment/iron-db-deployment-devops:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    db: mariadb
  name: iron-db-deployment-devops
  namespace: iron-namespace-devops
spec:
  replicas: 1
  selector:
    matchLabels:
      db: mariadb
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        db: mariadb
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: database_host
        - name: MYSQL_ROOT_PASSWORD
          value: zJ<HqQzX7bj
        - name: MYSQL_PASSWORD
          value: kBuJ5*1#J8yN
        - name: MYSQL_USER
          value: kodekloud
        image: kodekloud/irondb:2.0
        name: iron-db-container-devops
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: db
      volumes:
      - emptyDir: {}
        name: db

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops
policy drop-all-capabilities -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource iron-namespace-devops/Deployment/iron-db-deployment-devops failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: deploy-iron-gallery.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to iron-namespace-devops/Deployment/iron-gallery-deployment-devops:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: iron-gallery
  name: iron-gallery-deployment-devops
  namespace: iron-namespace-devops
spec:
  replicas: 1
  selector:
    matchLabels:
      run: iron-gallery
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        run: iron-gallery
    spec:
      containers:
      - image: kodekloud/irongallery:2.0
        name: iron-gallery-container-devops
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html/data
          name: config
        - mountPath: /usr/share/nginx/html/uploads
          name: images
      volumes:
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: images

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops
policy drop-all-capabilities -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource iron-namespace-devops/Deployment/iron-gallery-deployment-devops failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: deploy-java.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/java-dp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-dp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java
  template:
    metadata:
      labels:
        app: java
    spec:
      containers:
      - image: mario21ic/java-app:v3
        name: java

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-dp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-dp
policy disallow-default-namespace -> resource default/Deployment/java-dp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/java-dp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/java-dp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/java-dp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/java-dp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/java-dp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/java-dp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/java-dp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-jenkins.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/Deployment/deploy-test:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    purpose: learning
  name: deploy-test
  namespace: prod
spec:
  replicas: 2
  selector:
    matchLabels:
      type: create
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        company: talent
        devops: "18"
        type: create
      name: httpd
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource prod/Deployment/deploy-test

skipped mutate policy add-safe-to-evict -> resource prod/Deployment/deploy-test
policy drop-all-capabilities -> resource prod/Deployment/deploy-test failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource prod/Deployment/deploy-test failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource prod/Deployment/deploy-test failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource prod/Deployment/deploy-test failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource prod/Deployment/deploy-test failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource prod/Deployment/deploy-test failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource prod/Deployment/deploy-test failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-jenkins1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      containers:
      - image: jenkins/jenkins:lts
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
        name: jenkins
        ports:
        - containerPort: 8080
          name: httpport
        - containerPort: 50000
          name: jnlpport
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-data
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: admin
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-kapacitor.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kapacitor:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kapacitor
  namespace: default
spec:
  selector:
    matchLabels:
      app: kapacitor
  template:
    metadata:
      labels:
        app: kapacitor
    spec:
      containers:
      - env:
        - name: KAPACITOR_INFLUXDB_0_URLS_0
          value: http://influxdb:8086
        image: kapacitor:1.5
        name: kapacitor

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kapacitor

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kapacitor
policy disallow-default-namespace -> resource default/Deployment/kapacitor failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kapacitor failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kapacitor failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kapacitor failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-kapacitor1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kapacitor:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kapacitor
  namespace: default
spec:
  selector:
    matchLabels:
      app: kapacitor
  template:
    metadata:
      labels:
        app: kapacitor
    spec:
      containers:
      - env:
        - name: KAPACITOR_INFLUXDB_0_URLS_0
          value: http://influxdb:8086
        image: kapacitor:1.5
        name: kapacitor

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kapacitor

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kapacitor
policy disallow-default-namespace -> resource default/Deployment/kapacitor failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kapacitor failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kapacitor failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kapacitor failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kapacitor failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-kibana.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kibana:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - image: kibana:6.6.0
        name: kibana

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kibana

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kibana
policy disallow-default-namespace -> resource default/Deployment/kibana failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kibana failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kibana failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kibana failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kibana failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/kibana failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/kibana failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kibana failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-kibana1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/kibana:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - image: kibana:6.6.0
        name: kibana

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/kibana

skipped mutate policy add-safe-to-evict -> resource default/Deployment/kibana
policy disallow-default-namespace -> resource default/Deployment/kibana failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/kibana failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/kibana failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/kibana failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/kibana failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/kibana failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/kibana failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/kibana failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-label.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-label:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deploy-label
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        imagePullPolicy: IfNotPresent
        name: busybox
      nodeSelector:
        cloud: GCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-label

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-label
policy disallow-default-namespace -> resource default/Deployment/deploy-label failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-label failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-label failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-label failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-landpage.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/landing-page:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: landing-page
  name: landing-page
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: landing-page
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: landing-page
        tier: frontend
    spec:
      containers:
      - image: bitnami/nginx:1.21
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: tcp-landingpage
          initialDelaySeconds: 5
          periodSeconds: 10
        name: nginx
        ports:
        - containerPort: 8080
          name: tcp-landingpage
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: tcp-landingpage
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/html/index.html
          name: landing-page
          subPath: index.html
        - mountPath: /opt/bitnami/nginx/tmp
          name: tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 493
          name: landing-page
        name: landing-page
      - emptyDir: {}
        name: tmp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/landing-page
policy disallow-default-namespace -> resource default/Deployment/landing-page failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/landing-page failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/landing-page failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/landing-page failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/landing-page failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource default/Deployment/landing-page failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: deploy-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.8.1
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.8.1@sha256:e5c4824e7375fcf2a393e1c03c293b69759af37a9ca6abdb91b13d78a93da8bd
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy-loadbalancer_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.8.1
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230407@sha256:543c40fd093964bc9ab509d3e791f9989963021f1e9e4c9c7b6700b02bfb227b
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-loadbalancer_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.8.1
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230407@sha256:543c40fd093964bc9ab509d3e791f9989963021f1e9e4c9c7b6700b02bfb227b
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-loadbalancer_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-loadbalancer1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tethys-lb:
apiVersion: v1
kind: Service
metadata:
  name: tethys-lb
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: tethys
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-locust.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/locust-giropops:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: locust-giropops
  name: locust-giropops
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust-giropops
  template:
    metadata:
      labels:
        app: locust-giropops
    spec:
      containers:
      - env:
        - name: LOCUST_LOCUSTFILE
          value: /usr/src/app/scripts/locustfile.py
        image: linuxtips/locust-giropops:1.0
        imagePullPolicy: Always
        name: locust-giropops
        ports:
        - containerPort: 8089
        volumeMounts:
        - mountPath: /usr/src/app/scripts
          name: locust-scripts
      volumes:
      - configMap:
          name: locust-scripts
          optional: true
        name: locust-scripts

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/locust-giropops

skipped mutate policy add-safe-to-evict -> resource default/Deployment/locust-giropops
policy disallow-default-namespace -> resource default/Deployment/locust-giropops failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/locust-giropops failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/locust-giropops failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/locust-giropops failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/locust-giropops failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/locust-giropops failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/locust-giropops failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/locust-giropops failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-logstash.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/logstash:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - command:
        - logstash
        - -f
        - /config/logstash.conf
        image: logstash:6.6.0
        name: logstash
        volumeMounts:
        - mountPath: /config/logstash.conf
          name: config
      volumes:
      - configMap:
          name: logstash-config
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/logstash

skipped mutate policy add-safe-to-evict -> resource default/Deployment/logstash
policy disallow-default-namespace -> resource default/Deployment/logstash failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/logstash failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/logstash failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/logstash failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/logstash failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/logstash failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/logstash failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/logstash failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-logstash1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/logstash:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - command:
        - logstash
        - -f
        - /config/logstash.conf
        image: logstash:6.6.0
        name: logstash
        volumeMounts:
        - mountPath: /config/logstash.conf
          name: config
      volumes:
      - configMap:
          name: logstash-config
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/logstash

skipped mutate policy add-safe-to-evict -> resource default/Deployment/logstash
policy disallow-default-namespace -> resource default/Deployment/logstash failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/logstash failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/logstash failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/logstash failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/logstash failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/logstash failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/logstash failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/logstash failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mariadb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mariadb:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mariadb
    tier: backend
  name: mariadb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
      tier: backend
  template:
    metadata:
      labels:
        app: mariadb
        tier: backend
    spec:
      containers:
      - env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rootpasswd
              name: secret-mariadb
        - name: MARIADB_DATABASE
          valueFrom:
            configMapKeyRef:
              key: database
              name: cm-mariadb
        - name: MARIADB_USER
          valueFrom:
            configMapKeyRef:
              key: user
              name: cm-mariadb
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: passwd
              name: secret-mariadb
        image: mariadb
        name: contenedor-mariadb
        ports:
        - containerPort: 3306
          name: mariadb
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: volumen-mariadb
      volumes:
      - name: volumen-mariadb
        persistentVolumeClaim:
          claimName: pvc-mariadb

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mariadb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mariadb
policy disallow-default-namespace -> resource default/Deployment/mariadb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mariadb failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mariadb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mariadb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mariadb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mariadb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mariadb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mariadb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mariadb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-master.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: docker.io/jenkins/jenkins:lts-jdk11
        name: jenkins
        ports:
        - containerPort: 8080
          name: httpport
        - containerPort: 50000
          name: jnlpport
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-pvc
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin
      volumes:
      - name: jenkins-pvc
        persistentVolumeClaim:
          claimName: jenkins-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-master1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: docker.io/jenkins/jenkins:lts-jdk11
        name: jenkins
        ports:
        - containerPort: 8080
          name: httpport
        - containerPort: 50000
          name: jnlpport
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-pvc
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin
      volumes:
      - name: jenkins-pvc
        persistentVolumeClaim:
          claimName: jenkins-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mongo-db9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:3.6.5-jessie
        name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb
policy disallow-default-namespace -> resource default/Deployment/mongodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-my-nginx.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dep-php8-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-php8-nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: php8-nginx
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        run: php8-nginx
    spec:
      containers:
      - image: docker.io/nginx:1.22.0
        name: php8-nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: "8"
            memory: 12Gi
          requests:
            cpu: "4"
            memory: 6Gi
        volumeMounts:
        - mountPath: /var/www/html/
          name: contents
        - mountPath: /etc/nginx/conf.d/default.conf
          name: nginx-config
          subPath: nginx.conf
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /mnt/data/tewin/devphp8
          type: Directory
        name: contents
      - configMap:
          name: php8-configmap-nginx
        name: nginx-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dep-php8-nginx
policy disallow-default-namespace -> resource default/Deployment/dep-php8-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dep-php8-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dep-php8-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dep-php8-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dep-php8-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dep-php8-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dep-php8-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: deploy-my-phpfpm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dep-php8-phpfpm:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-php8-phpfpm
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: php8-phpfpm
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        run: php8-phpfpm
    spec:
      containers:
      - image: docker.io/php:8.2.13-fpm-alpine3.18
        imagePullPolicy: IfNotPresent
        name: php8-phpfpm
        ports:
        - containerPort: 9000
          protocol: TCP
        resources:
          limits:
            cpu: "8"
            memory: 12Gi
          requests:
            cpu: "4"
            memory: 6Gi
        volumeMounts:
        - mountPath: /var/www/html/
          name: contents
      volumes:
      - hostPath:
          path: /mnt/data/tewin/devphp8
          type: Directory
        name: contents

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dep-php8-phpfpm
policy disallow-default-namespace -> resource default/Deployment/dep-php8-phpfpm failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dep-php8-phpfpm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dep-php8-phpfpm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dep-php8-phpfpm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dep-php8-phpfpm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dep-php8-phpfpm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dep-php8-phpfpm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: deploy-mysql.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/drupal-mysql:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql-app
  name: drupal-mysql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-app
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-app
        tier: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-root-pass
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: mysql-db-url
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-user-pass
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-user-pass
        image: mysql:5.7
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: drupal-mysql-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/drupal-mysql

skipped mutate policy add-safe-to-evict -> resource default/Deployment/drupal-mysql
policy disallow-default-namespace -> resource default/Deployment/drupal-mysql failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/drupal-mysql failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/drupal-mysql failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/drupal-mysql failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/drupal-mysql failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/drupal-mysql failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/drupal-mysql failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/drupal-mysql failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mysql1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mysql-d:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql
    type: db
  name: mysql-d
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      type: db
  template:
    metadata:
      labels:
        app: mysql
        type: db
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: data-mysql
        - secretRef:
            name: secret-mysql
        image: mysql
        name: mysql
        ports:
        - containerPort: 3306
          name: db-port
        resources:
          limits:
            cpu: "1"
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mysql-d

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mysql-d
policy disallow-default-namespace -> resource default/Deployment/mysql-d failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mysql-d failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mysql-d failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mysql-d failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mysql-d failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mysql-d failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/mysql-d failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mysql-d failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mysql-d failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mysql2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mysql:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wordpress
    tier: mysql
  name: mysql
  namespace: default
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mysql
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-mysql2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mysql-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql
  name: mysql-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      microservice: mysql
  template:
    metadata:
      labels:
        app: mysql
        microservice: mysql
        version: v1
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: asd123
        - name: MYSQL_DATABASE
          value: wordpress_db
        - name: MYSQL_USER
          value: wordpress_user
        - name: MYSQL_PASSWORD
          value: asdf1234
        image: wlopezm/mysql:v1
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mysql-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mysql-deployment
policy disallow-default-namespace -> resource default/Deployment/mysql-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mysql-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mysql-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mysql-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mysql-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mysql-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mysql-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mysql-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-mysql8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-mysql:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql
  name: deploy-mysql
  namespace: default
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: Test12344321
        - name: MYSQL_DATABASE
          value: phpmyadmin
        - name: MYSQL_USER
          value: sysdba
        - name: MYSQL_PASSWORD
          value: Test12344321
        image: docker.io/library/mysql:8.0.34
        name: mysql
        ports:
        - containerPort: 3306
        resources:
          limits:
            cpu: "8"
            memory: 12Gi
          requests:
            cpu: "4"
            memory: 6Gi
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
        - mountPath: /etc/mysql/conf.d/default_auth.cnf
          name: mysql-config-volume
          subPath: default_auth
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - configMap:
          name: mysql-config
        name: mysql-config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-mysql

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-mysql
policy disallow-default-namespace -> resource default/Deployment/deploy-mysql failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-mysql failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-mysql failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-mysql failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/deploy-mysql failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-mysql failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-mysql failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/deploy-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: deploy-namespace
  namespace: default
spec: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/deploy-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: deploy-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/deploy-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: deploy-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/deploy-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: deploy-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/deploy-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: deploy-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-namespace_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to deploy-namespace/Deployment/deploy-namespace-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deploy-namespace: nginx
  name: deploy-namespace-nginx
  namespace: deploy-namespace
spec:
  replicas: 10
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: container-nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: 265Mi
          requests:
            cpu: "0.3"
            memory: 65Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource deploy-namespace/Deployment/deploy-namespace-nginx

skipped mutate policy add-safe-to-evict -> resource deploy-namespace/Deployment/deploy-namespace-nginx
policy disallow-latest-tag -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-namespace-strategy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/deploy-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: deploy-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/deploy-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: deploy-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/deploy-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: deploy-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/deploy-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: deploy-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/deploy-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: deploy-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-namespace-strategy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to deploy-namespace/Deployment/deploy-namespace-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deploy-namespace: nginx
  name: deploy-namespace-nginx
  namespace: deploy-namespace
spec:
  replicas: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%!
(MISSING)      maxUnavailable: 0%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: container-nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: 265Mi
          requests:
            cpu: "0.3"
            memory: 65Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource deploy-namespace/Deployment/deploy-namespace-nginx

skipped mutate policy add-safe-to-evict -> resource deploy-namespace/Deployment/deploy-namespace-nginx
policy disallow-latest-tag -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource deploy-namespace/Deployment/deploy-namespace-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-neural-meme-identify-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/neural-meme-identify-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neural-meme-identify-server
  namespace: default
spec:
  replicas: 0
  selector:
    matchLabels:
      app: neural-meme-identify-server
  template:
    metadata:
      labels:
        app: neural-meme-identify-server
    spec:
      containers:
      - env:
        - name: PORT
          value: "8338"
        - name: DEBUG
          value: "false"
        image: ghcr.io/maxwlang/neural-meme-identify-server:v1.0.1
        name: neural-meme-identify-server
        resources:
          limits:
            cpu: 1000m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 64Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 33

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/neural-meme-identify-server

skipped mutate policy add-safe-to-evict -> resource default/Deployment/neural-meme-identify-server
policy disallow-default-namespace -> resource default/Deployment/neural-meme-identify-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/neural-meme-identify-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/neural-meme-identify-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/neural-meme-identify-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/neural-meme-identify-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/neural-meme-identify-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/neural-meme-identify-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-neural-meme-v1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/neural-meme-v1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neural-meme-v1
  namespace: default
spec:
  replicas: 0
  selector:
    matchLabels:
      app: neural-meme-v1
  template:
    metadata:
      labels:
        app: neural-meme-v1
    spec:
      containers:
      - env:
        - name: GPT_API
          value: http://g4f-api.gpu.svc.cluster.local:1337/v1/chat/completions
        - name: GPT_MODEL
          value: gpt-4
        - name: GPT_TIMEOUT
          value: "12000"
        - name: GPT_BLACKLISTED_PROVIDERS
          value: Phind
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              key: WEBHOOK_URL
              name: neural-meme-secrets
        - name: POST_INTERVAL
          value: "600000"
        image: ghcr.io/maxwlang/neural-meme:v1.1.2
        name: neural-meme-v1
        resources:
          limits:
            cpu: 1000m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 64Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/neural-meme-v1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/neural-meme-v1
policy disallow-default-namespace -> resource default/Deployment/neural-meme-v1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/neural-meme-v1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/neural-meme-v1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/neural-meme-v1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/neural-meme-v1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/neural-meme-v1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/neural-meme-v1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nexus1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bootcamp/Deployment/nexus:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus
  namespace: bootcamp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nexus
  template:
    metadata:
      labels:
        app: nexus
    spec:
      containers:
      - image: docker.io/meherliatrio/k8s-nexusserver:v1
        name: nexus
        ports:
        - containerPort: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource bootcamp/Deployment/nexus

skipped mutate policy add-safe-to-evict -> resource bootcamp/Deployment/nexus
policy drop-all-capabilities -> resource bootcamp/Deployment/nexus failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource bootcamp/Deployment/nexus failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource bootcamp/Deployment/nexus failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource bootcamp/Deployment/nexus failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource bootcamp/Deployment/nexus failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nfs-provisioner.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nfs-provisioner:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nfs-provisioner
  name: nfs-provisioner
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-provisioner
    spec:
      containers:
      - env:
        - name: PROVISIONER_NAME
          value: nfs.io/dynamic
        - name: NFS_SERVER
          value: <PLACE-YOUR-NFS-SERVER-IP-HERE>
        - name: NFS_PATH
          value: /mnt/appdata
        image: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2
        name: nfs-provisioner
        volumeMounts:
        - mountPath: /persistentvolumes
          name: nfs-client-root
      serviceAccountName: nfs-provisioner
      volumes:
      - name: nfs-client-root
        nfs:
          path: /mnt/appdata
          server: <PLACE-YOUR-NFS-SERVER-IP-HERE>

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nfs-provisioner

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nfs-provisioner
policy disallow-default-namespace -> resource default/Deployment/nfs-provisioner failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nfs-provisioner1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nfs-provisioner:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nfs-provisioner
  name: nfs-provisioner
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-provisioner
    spec:
      containers:
      - env:
        - name: PROVISIONER_NAME
          value: nfs.io/dynamic
        - name: NFS_SERVER
          value: <PLACE-YOUR-NFS-SERVER-IP-HERE>
        - name: NFS_PATH
          value: /mnt/appdata
        image: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2
        name: nfs-provisioner
        volumeMounts:
        - mountPath: /persistentvolumes
          name: nfs-client-root
      serviceAccountName: nfs-provisioner
      volumes:
      - name: nfs-client-root
        nfs:
          path: /mnt/appdata
          server: <PLACE-YOUR-NFS-SERVER-IP-HERE>

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nfs-provisioner

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nfs-provisioner
policy disallow-default-namespace -> resource default/Deployment/nfs-provisioner failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nfs-provisioner failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container
      tolerations:
      - effect: NoSchedule
        key: role
        operator: Equal
        value: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-nginx-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-deploy
  name: my-nginx-deploy
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-pod
  template:
    metadata:
      labels:
        app: nginx-pod
      name: my-nginx-pod
    spec:
      containers:
      - image: nginx
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-nginx-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-nginx-deploy
policy disallow-default-namespace -> resource default/Deployment/my-nginx-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-nginx-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container
      tolerations:
      - effect: NoSchedule
        key: role
        operator: Equal
        value: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-dp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: mario21ic/nginx:fake-v1.6
        name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-dp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-dp
policy disallow-default-namespace -> resource default/Deployment/nginx-dp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-dp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-dp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-dp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-dp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-dp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-dp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-dp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/metadata-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prod
  name: metadata-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prod
  template:
    metadata:
      labels:
        app: prod
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/metadata-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/metadata-deployment
policy disallow-default-namespace -> resource default/Deployment/metadata-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/metadata-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/metadata-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/metadata-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/bar100:
apiVersion: v1
kind: Namespace
metadata:
  name: bar100
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/bar100:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: bar100
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/bar100:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: bar100
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/bar100:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: bar100
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/bar100:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: bar100
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bar100/PersistentVolumeClaim/bar100-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: bar100
  name: bar100-pvc
  namespace: bar100
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: ceph-rbd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx20_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bar100/Deployment/bar100:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bar100
  name: bar100
  namespace: bar100
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bar100
  template:
    metadata:
      labels:
        app: bar100
    spec:
      containers:
      - image: nginx:latest
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 80
        name: bar100
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: bar100-html
      volumes:
      - name: bar100-html
        persistentVolumeClaim:
          claimName: bar100-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource bar100/Deployment/bar100

skipped mutate policy add-safe-to-evict -> resource bar100/Deployment/bar100
policy disallow-latest-tag -> resource bar100/Deployment/bar100 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource bar100/Deployment/bar100 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource bar100/Deployment/bar100 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource bar100/Deployment/bar100 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource bar100/Deployment/bar100 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource bar100/Deployment/bar100 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx20_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bar100/Service/bar100-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bar100
  name: bar100-service
  namespace: bar100
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: bar100
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx20_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bar100/Ingress/bar100-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: bar100
  name: bar100-ingress
  namespace: bar100
spec:
  rules:
  - host: bar100.danber.casa
    http:
      paths:
      - backend:
          service:
            name: bar100-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - bar100.danber.casa
    secretName: bar100-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/rblredwood:
apiVersion: v1
kind: Namespace
metadata:
  name: rblredwood
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/rblredwood:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: rblredwood
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/rblredwood:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: rblredwood
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/rblredwood:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: rblredwood
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/rblredwood:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: rblredwood
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rblredwood/PersistentVolumeClaim/rblredwood-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: rblredwood
  name: rblredwood-pvc
  namespace: rblredwood
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: ceph-rbd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx21_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rblredwood/Deployment/rblredwood:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rblredwood
  name: rblredwood
  namespace: rblredwood
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rblredwood
  template:
    metadata:
      labels:
        app: rblredwood
    spec:
      containers:
      - image: nginx:latest
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 80
        name: rblredwood
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: rblredwood-html
      volumes:
      - name: rblredwood-html
        persistentVolumeClaim:
          claimName: rblredwood-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource rblredwood/Deployment/rblredwood

skipped mutate policy add-safe-to-evict -> resource rblredwood/Deployment/rblredwood
policy disallow-latest-tag -> resource rblredwood/Deployment/rblredwood failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource rblredwood/Deployment/rblredwood failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource rblredwood/Deployment/rblredwood failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource rblredwood/Deployment/rblredwood failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource rblredwood/Deployment/rblredwood failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource rblredwood/Deployment/rblredwood failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx21_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rblredwood/Service/rblredwood-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rblredwood
  name: rblredwood-service
  namespace: rblredwood
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: rblredwood
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx21_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rblredwood/Ingress/rblredwood-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: rblredwood
  name: rblredwood-ingress
  namespace: rblredwood
spec:
  rules:
  - host: rbl.danber.casa
    http:
      paths:
      - backend:
          service:
            name: rblredwood-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - rbl.danber.casa
    secretName: rblredwood-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/shit:
apiVersion: v1
kind: Namespace
metadata:
  name: shit
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/shit:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: shit
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/shit:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: shit
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/shit:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: shit
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/shit:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: shit
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shit/PersistentVolumeClaim/shit-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: shit
  name: shit-pvc
  namespace: shit
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: ceph-rbd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx22_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shit/Deployment/shit:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shit
  name: shit
  namespace: shit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shit
  template:
    metadata:
      labels:
        app: shit
    spec:
      containers:
      - image: nginx:latest
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 80
        name: shit
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shit-html
      volumes:
      - name: shit-html
        persistentVolumeClaim:
          claimName: shit-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource shit/Deployment/shit

skipped mutate policy add-safe-to-evict -> resource shit/Deployment/shit
policy disallow-latest-tag -> resource shit/Deployment/shit failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource shit/Deployment/shit failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource shit/Deployment/shit failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource shit/Deployment/shit failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource shit/Deployment/shit failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource shit/Deployment/shit failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx22_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shit/Service/shit-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: shit
  name: shit-service
  namespace: shit
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: shit
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx22_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shit/Ingress/shit-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: shit
  name: shit-ingress
  namespace: shit
spec:
  rules:
  - host: shit.danber.casa
    http:
      paths:
      - backend:
          service:
            name: shit-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - shit.danber.casa
    secretName: shit-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/subnetcalc:
apiVersion: v1
kind: Namespace
metadata:
  name: subnetcalc
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/subnetcalc:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: subnetcalc
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/subnetcalc:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: subnetcalc
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/subnetcalc:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: subnetcalc
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/subnetcalc:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: subnetcalc
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to subnetcalc/PersistentVolumeClaim/subnetcalc-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: subnetcalc
  name: subnetcalc-pvc
  namespace: subnetcalc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: ceph-rbd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx23_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to subnetcalc/Deployment/subnetcalc:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: subnetcalc
  name: subnetcalc
  namespace: subnetcalc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subnetcalc
  template:
    metadata:
      labels:
        app: subnetcalc
    spec:
      containers:
      - image: nginx:latest
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 80
        name: subnetcalc
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: subnetcalc-html
      volumes:
      - name: subnetcalc-html
        persistentVolumeClaim:
          claimName: subnetcalc-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource subnetcalc/Deployment/subnetcalc

skipped mutate policy add-safe-to-evict -> resource subnetcalc/Deployment/subnetcalc
policy disallow-latest-tag -> resource subnetcalc/Deployment/subnetcalc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource subnetcalc/Deployment/subnetcalc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource subnetcalc/Deployment/subnetcalc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource subnetcalc/Deployment/subnetcalc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource subnetcalc/Deployment/subnetcalc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource subnetcalc/Deployment/subnetcalc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx23_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to subnetcalc/Service/subnetcalc-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: subnetcalc
  name: subnetcalc-service
  namespace: subnetcalc
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: subnetcalc
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx23_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to subnetcalc/Ingress/subnetcalc-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: subnetcalc
  name: subnetcalc-ingress
  namespace: subnetcalc
spec:
  rules:
  - host: subnetcalc.danber.casa
    http:
      paths:
      - backend:
          service:
            name: subnetcalc-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - subnetcalc.danber.casa
    secretName: subnetcalc-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/tikibuggers:
apiVersion: v1
kind: Namespace
metadata:
  name: tikibuggers
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/tikibuggers:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: tikibuggers
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/tikibuggers:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: tikibuggers
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/tikibuggers:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: tikibuggers
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/tikibuggers:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: tikibuggers
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tikibuggers/PersistentVolumeClaim/tikibuggers-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: tikibuggers
  name: tikibuggers-pvc
  namespace: tikibuggers
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: ceph-rbd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tikibuggers/Deployment/tikibuggers:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tikibuggers
  name: tikibuggers
  namespace: tikibuggers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tikibuggers
  template:
    metadata:
      labels:
        app: tikibuggers
    spec:
      containers:
      - image: nginx:latest
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 80
        name: tikibuggers
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: tikibuggers-html
      volumes:
      - name: tikibuggers-html
        persistentVolumeClaim:
          claimName: tikibuggers-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource tikibuggers/Deployment/tikibuggers

skipped mutate policy add-safe-to-evict -> resource tikibuggers/Deployment/tikibuggers
policy disallow-latest-tag -> resource tikibuggers/Deployment/tikibuggers failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource tikibuggers/Deployment/tikibuggers failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource tikibuggers/Deployment/tikibuggers failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource tikibuggers/Deployment/tikibuggers failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource tikibuggers/Deployment/tikibuggers failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource tikibuggers/Deployment/tikibuggers failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx24_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tikibuggers/Service/tikibuggers-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tikibuggers
  name: tikibuggers-service
  namespace: tikibuggers
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: tikibuggers
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx24_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tikibuggers/Ingress/tikibuggers-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: tikibuggers
  name: tikibuggers-ingress
  namespace: tikibuggers
spec:
  rules:
  - host: tikibuggers.danber.casa
    http:
      paths:
      - backend:
          service:
            name: tikibuggers-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - tikibuggers.danber.casa
    secretName: tikibuggers-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ejm-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app-ejemplo
  name: ejm-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      proyecto: app-nginx
  template:
    metadata:
      labels:
        proyecto: app-nginx
      name: nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: persistent-storage-nginx
      volumes:
      - name: persistent-storage-nginx
        persistentVolumeClaim:
          claimName: pvc-nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ejm-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ejm-deployment
policy disallow-default-namespace -> resource default/Deployment/ejm-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ejm-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ejm-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ejm-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/metadata-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prod
  name: metadata-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prod
  template:
    metadata:
      labels:
        app: prod
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/metadata-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/metadata-deployment
policy disallow-default-namespace -> resource default/Deployment/metadata-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/metadata-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/metadata-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/metadata-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/metadata-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-app-ejemplo:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: app-ejemplo
  name: svc-app-ejemplo
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    proyecto: app-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nginx28_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ejm-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app-ejemplo
  name: ejm-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      proyecto: app-nginx
  template:
    metadata:
      labels:
        proyecto: app-nginx
      name: nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: persistent-storage-nginx
      volumes:
      - name: persistent-storage-nginx
        persistentVolumeClaim:
          claimName: pvc-nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ejm-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ejm-deployment
policy disallow-default-namespace -> resource default/Deployment/ejm-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ejm-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ejm-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ejm-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ejm-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: nginx
      environment: test
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
        environment: test
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - |
          touch /usr/share/nginx/html/ready
          echo "You have been served by Pod with IP address: $(hostname -i)" > /usr/share/nginx/html/index.html
          nginx -g "daemon off;"
        image: nginx:1.19
        name: nginx
        ports:
        - containerPort: 80
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to olv/Deployment/nginx-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deploy: nginx-deploy
  name: nginx-deploy
  namespace: olv
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: nginx-pod
  template:
    metadata:
      labels:
        pod: nginx-pod
      namespace: olv
    spec:
      containers:
      - image: nginx
        name: nginx-container
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource olv/Deployment/nginx-deploy

skipped mutate policy add-safe-to-evict -> resource olv/Deployment/nginx-deploy
policy disallow-latest-tag -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource olv/Deployment/nginx-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        resources:
          limits:
            cpu: 2
            memory: 2048M
          requests:
            cpu: 100m
            memory: 512M

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-probe:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-probe
  name: nginx-probe
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-probe
  template:
    metadata:
      labels:
        app: nginx-probe
    spec:
      containers:
      - env:
        - name: ENVIROMENT
          value: development
        image: nginx
        livenessProbe:
          httpGet:
            path: /
            port: 80
        name: nginx
        readinessProbe:
          httpGet:
            path: /
            port: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-probe

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-probe
policy disallow-default-namespace -> resource default/Deployment/nginx-probe failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx-probe failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx-probe failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-probe failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-probe failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-probe failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/nginx-probe failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-probe failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app: nginx
      environment: test
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
        environment: test
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - |
          touch /usr/share/nginx/html/ready
          echo "You have been served by Pod with IP address: $(hostname -i)" > /usr/share/nginx/html/index.html
          nginx -g "daemon off;"
        image: nginx:1.19
        name: nginx
        ports:
        - containerPort: 80
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container
      tolerations:
      - effect: NoSchedule
        key: role
        operator: Equal
        value: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webui
policy disallow-default-namespace -> resource default/Deployment/webui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nginx9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1.14
        name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeport.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource ingress-nginx/Service/ingress-nginx-controller failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.8.1
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.8.1@sha256:e5c4824e7375fcf2a393e1c03c293b69759af37a9ca6abdb91b13d78a93da8bd
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeport_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.8.1
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230407@sha256:543c40fd093964bc9ab509d3e791f9989963021f1e9e4c9c7b6700b02bfb227b
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeport_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.8.1
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230407@sha256:543c40fd093964bc9ab509d3e791f9989963021f1e9e4c9c7b6700b02bfb227b
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeport_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeport_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.8.1
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-nodeselctor.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to maloth/Deployment/nodeselector:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    purpose: learning
  name: nodeselector
  namespace: maloth
spec:
  replicas: 4
  selector:
    matchLabels:
      type: create
  template:
    metadata:
      labels:
        company: talent
        devops: "18"
        type: create
      name: httpd-test
    spec:
      containers:
      - image: httpd:latest
        name: httpd
        ports:
        - containerPort: 80
      nodeSelector:
        tier: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource maloth/Deployment/nodeselector

skipped mutate policy add-safe-to-evict -> resource maloth/Deployment/nodeselector
policy disallow-latest-tag -> resource maloth/Deployment/nodeselector failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource maloth/Deployment/nodeselector failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource maloth/Deployment/nodeselector failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource maloth/Deployment/nodeselector failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource maloth/Deployment/nodeselector failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource maloth/Deployment/nodeselector failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource maloth/Deployment/nodeselector failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource maloth/Deployment/nodeselector failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeselector.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        env: dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeselector1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        env: dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeselector2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        env: dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-nodeselector3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        env: dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-novo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: deploy-nginx
  name: deploy-nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: deploy-nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-operator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mysql-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-operator
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
  - list
  - watch
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
  - list
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - create
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - create
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - mysql.oracle.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - zalando.org
  resources:
  - '*'
  verbs:
  - get
  - patch
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
  - patch
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mysql-sidecar:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-sidecar
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
  - list
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - patch
- apiGroups:
  - mysql.oracle.com
  resources:
  - innodbclusters
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - mysql.oracle.com
  resources:
  - mysqlbackups
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - mysql.oracle.com
  resources:
  - mysqlbackups/status
  verbs:
  - get
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/mysql-operator-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mysql-operator-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mysql-operator
subjects:
- kind: ServiceAccount
  name: mysql-operator-sa
  namespace: mysql-operator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mysql-operator:
apiVersion: v1
kind: Namespace
metadata:
  name: mysql-operator
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mysql-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mysql-operator
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mysql-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mysql-operator
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mysql-operator:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mysql-operator
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mysql-operator:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mysql-operator
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mysql-operator/ServiceAccount/mysql-operator-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-operator-sa
  namespace: mysql-operator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mysql-operator/Deployment/mysql-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/created-by: mysql-operator
    app.kubernetes.io/instance: mysql-operator
    app.kubernetes.io/managed-by: mysql-operator
    app.kubernetes.io/name: mysql-operator
    app.kubernetes.io/version: 8.2.0-2.1.1
    version: "1.0"
  name: mysql-operator
  namespace: mysql-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mysql-operator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        name: mysql-operator
    spec:
      containers:
      - args:
        - mysqlsh
        - --log-level=@INFO
        - --pym
        - mysqloperator
        - operator
        env:
        - name: MYSQLSH_USER_CONFIG_HOME
          value: /mysqlsh
        - name: MYSQLSH_CREDENTIAL_STORE_SAVE_PASSWORDS
          value: never
        image: container-registry.oracle.com/mysql/community-operator:8.2.0-2.1.1
        imagePullPolicy: IfNotPresent
        name: mysql-operator
        readinessProbe:
          exec:
            command:
            - cat
            - /tmp/mysql-operator-ready
          initialDelaySeconds: 1
          periodSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 2
        volumeMounts:
        - mountPath: /mysqlsh
          name: mysqlsh-home
        - mountPath: /tmp
          name: tmpdir
      serviceAccountName: mysql-operator-sa
      volumes:
      - emptyDir: {}
        name: mysqlsh-home
      - emptyDir: {}
        name: tmpdir

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource mysql-operator/Deployment/mysql-operator
policy drop-all-capabilities -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: deploy-operator1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mysql-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-operator
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
  - list
  - watch
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
  - list
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - create
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - create
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - mysql.oracle.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - zalando.org
  resources:
  - '*'
  verbs:
  - get
  - patch
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
  - patch
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mysql-sidecar:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-sidecar
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
  - list
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - patch
- apiGroups:
  - mysql.oracle.com
  resources:
  - innodbclusters
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - mysql.oracle.com
  resources:
  - mysqlbackups
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - mysql.oracle.com
  resources:
  - mysqlbackups/status
  verbs:
  - get
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/mysql-operator-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mysql-operator-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mysql-operator
subjects:
- kind: ServiceAccount
  name: mysql-operator-sa
  namespace: mysql-operator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mysql-operator:
apiVersion: v1
kind: Namespace
metadata:
  name: mysql-operator
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mysql-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mysql-operator
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mysql-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mysql-operator
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mysql-operator:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mysql-operator
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mysql-operator:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mysql-operator
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mysql-operator/ServiceAccount/mysql-operator-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-operator-sa
  namespace: mysql-operator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-operator1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mysql-operator/Deployment/mysql-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/created-by: mysql-operator
    app.kubernetes.io/instance: mysql-operator
    app.kubernetes.io/managed-by: mysql-operator
    app.kubernetes.io/name: mysql-operator
    app.kubernetes.io/version: 8.2.0-2.1.1
    version: "1.0"
  name: mysql-operator
  namespace: mysql-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mysql-operator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        name: mysql-operator
    spec:
      containers:
      - args:
        - mysqlsh
        - --log-level=@INFO
        - --pym
        - mysqloperator
        - operator
        env:
        - name: MYSQLSH_USER_CONFIG_HOME
          value: /mysqlsh
        - name: MYSQLSH_CREDENTIAL_STORE_SAVE_PASSWORDS
          value: never
        image: container-registry.oracle.com/mysql/community-operator:8.2.0-2.1.1
        imagePullPolicy: IfNotPresent
        name: mysql-operator
        readinessProbe:
          exec:
            command:
            - cat
            - /tmp/mysql-operator-ready
          initialDelaySeconds: 1
          periodSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 2
        volumeMounts:
        - mountPath: /mysqlsh
          name: mysqlsh-home
        - mountPath: /tmp
          name: tmpdir
      serviceAccountName: mysql-operator-sa
      volumes:
      - emptyDir: {}
        name: mysqlsh-home
      - emptyDir: {}
        name: tmpdir

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource mysql-operator/Deployment/mysql-operator
policy drop-all-capabilities -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource mysql-operator/Deployment/mysql-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: foo
          value: bar
        image: busybox:1.35
        name: busybox02
      initContainers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox-init
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox02-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy01
policy disallow-default-namespace -> resource default/Deployment/mydeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched011.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy01
policy disallow-default-namespace -> resource default/Deployment/mydeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched012.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy01
policy disallow-default-namespace -> resource default/Deployment/mydeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched013.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy01
policy disallow-default-namespace -> resource default/Deployment/mydeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched014.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy01
policy disallow-default-namespace -> resource default/Deployment/mydeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched02.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy04:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy04
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox-init
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy04
policy disallow-default-namespace -> resource default/Deployment/mydeploy04 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched021.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy04:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy04
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox-init
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy04
policy disallow-default-namespace -> resource default/Deployment/mydeploy04 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched022.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy04:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy04
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox-init
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy04
policy disallow-default-namespace -> resource default/Deployment/mydeploy04 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched023.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy04:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy04
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox-init
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy04
policy disallow-default-namespace -> resource default/Deployment/mydeploy04 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched024.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy04:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy04
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        vault.hashicorp.com/agent-inject: "true"
      labels:
        app: myapp
    spec:
      containers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox
      initContainers:
      - image: vault:1.5.4
        imagePullPolicy: IfNotPresent
        name: vault-agent-init
        volumeMounts:
        - mountPath: /vault/secrets
          name: vault-secret
      - image: busybox:1.35
        name: busybox-init
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy04
policy disallow-default-namespace -> resource default/Deployment/mydeploy04 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy04 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy04 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy04 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: deploy-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      terminationGracePeriodSeconds: 50

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      terminationGracePeriodSeconds: 50

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/Deployment/deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment
  namespace: backup-velero-yes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: task-pv-storage
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: container01
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: mypvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment
policy drop-all-capabilities -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: foo
          value: bar
        image: busybox:1.35
        name: busybox02
      initContainers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox-init
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox02-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      terminationGracePeriodSeconds: 50

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/Deployment/deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment
  namespace: backup-velero-yes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: task-pv-storage
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: container01
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: mypvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment
policy drop-all-capabilities -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/Deployment/deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment
  namespace: backup-velero-yes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: task-pv-storage
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: container01
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: mypvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment
policy drop-all-capabilities -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: foo
          value: bar
        image: busybox:1.35
        name: busybox02
      initContainers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox-init
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox02-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      terminationGracePeriodSeconds: 50

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/Deployment/deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment
  namespace: backup-velero-yes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: task-pv-storage
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: container01
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: mypvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment
policy drop-all-capabilities -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: foo
          value: bar
        image: busybox:1.35
        name: busybox02
      initContainers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox-init
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox02-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      terminationGracePeriodSeconds: 50

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/Deployment/deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment
  namespace: backup-velero-yes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: task-pv-storage
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: container01
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: task-pv-storage
      volumes:
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: mypvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/Deployment/deployment
policy drop-all-capabilities -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/Deployment/deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-patched9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  strategy: {}
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: foo
          value: bar
        image: busybox:1.35
        name: busybox02
      initContainers:
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox-init
      - env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        image: busybox:1.35
        name: busybox02-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment01
policy disallow-default-namespace -> resource default/Deployment/deployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pedido.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/pedido:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pedido
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pedido
  template:
    metadata:
      labels:
        app: pedido
    spec:
      containers:
      - image: lucasycosta/pedido:latest
        name: containerpedido
        ports:
        - containerPort: 8083

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/pedido

skipped mutate policy add-safe-to-evict -> resource default/Deployment/pedido
policy disallow-default-namespace -> resource default/Deployment/pedido failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/pedido failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/pedido failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/pedido failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/pedido failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/pedido failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/pedido failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/pedido failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/pedido failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-perc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/echo-app-perc:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo-application
    env: test
    version: v1.0.0
  name: echo-app-perc
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: echo-application
      env: test
  strategy:
    rollingUpdate:
      maxSurge: 20%!
(MISSING)      maxUnavailable: 20%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: echo-application
        env: test
        version: v1.0.0
    spec:
      containers:
      - image: anvesh35/echo-pod-name
        name: echoapp
        ports:
        - containerPort: 80
        startupProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          tcpSocket:
            port: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/echo-app-perc

skipped mutate policy add-safe-to-evict -> resource default/Deployment/echo-app-perc
policy disallow-default-namespace -> resource default/Deployment/echo-app-perc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/echo-app-perc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/echo-app-perc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/echo-app-perc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/echo-app-perc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/echo-app-perc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/echo-app-perc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/echo-app-perc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    name: froendapp
  name: nginx
  namespace: dev
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx
policy drop-all-capabilities -> resource dev/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource dev/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    name: froendapp
  name: nginx
  namespace: dev
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx
policy drop-all-capabilities -> resource dev/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource dev/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    name: froendapp
  name: nginx
  namespace: dev
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx
policy drop-all-capabilities -> resource dev/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource dev/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-pod-23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    name: froendapp
  name: nginx
  namespace: dev
spec:
  containers:
  - image: nginx:1.21
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource dev/Pod/nginx
policy drop-all-capabilities -> resource dev/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource dev/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release1
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: udemy-k8s-cm
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release1
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: udemy-k8s-cm
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-simulator9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-simulator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        name: position-simulator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-simulator
policy disallow-default-namespace -> resource default/Deployment/position-simulator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-simulator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-simulator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-simulator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release1
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release1
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-position-tracker9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/position-tracker:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        name: position-tracker

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/position-tracker
policy disallow-default-namespace -> resource default/Deployment/position-tracker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/position-tracker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/position-tracker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/position-tracker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-postgres.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-postgres:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: postgresdb
        - name: POSTGRES_USER
          value: helena
        - name: POSTGRES_PASSWORD
          value: helena@12345
        image: postgres:latest
        name: container-postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      volumes:
      - emptyDir: {}
        name: postgres-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-postgres
policy disallow-default-namespace -> resource default/Deployment/deploy-postgres failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy-postgres1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-postgres:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: postgresdb
        - name: POSTGRES_USER
          value: helena
        - name: POSTGRES_PASSWORD
          value: helena@12345
        image: postgres:latest
        name: container-postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      volumes:
      - emptyDir: {}
        name: postgres-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-postgres
policy disallow-default-namespace -> resource default/Deployment/deploy-postgres failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy-postgres2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tethys-pg:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tethys-pg
  name: tethys-pg
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tethys-pg
  template:
    metadata:
      labels:
        app: tethys-pg
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: tethys-pg-config
        image: postgres:14.4
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          name: tethys-pg
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdb-teth
      volumes:
      - name: postgresdb-teth
        persistentVolumeClaim:
          claimName: tethys-postgres-data-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tethys-pg

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tethys-pg
policy disallow-default-namespace -> resource default/Deployment/tethys-pg failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/tethys-pg failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/tethys-pg failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/tethys-pg failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/tethys-pg failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/tethys-pg failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/tethys-pg failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/tethys-pg failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-postgres2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tethys-pg:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tethys-pg
  name: tethys-pg
  namespace: default
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: tethys-pg

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-private-registry.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/bbox-private-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bbox-priv
  name: bbox-private-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbox-priv
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bbox-priv
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "echo Test 1 prepare, 30 sec... \nsleep 30\necho Test 1 starts, 60 sec \ndd
          if=/dev/zero of=/dev/null bs=4096 &\nsleep 60\nkill $!\necho Test 1 finished..
          start pinging\nping 8.8.8.8 \n"
        image: dock01:5001/bbox:oct
        name: greets-priv
        resources:
          limits:
            cpu: 750m
            memory: 30Mi
      imagePullSecrets:
      - name: dock5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/bbox-private-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/bbox-private-deploy
policy disallow-default-namespace -> resource default/Deployment/bbox-private-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/bbox-private-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-private-registry-hiload.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/Deployment/bbox-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bbox
  name: bbox-deploy
  namespace: student
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bbox
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bbox
    spec:
      containers:
      - args:
        - if=/dev/zero
        - of=/dev/null
        - bs=4096
        command:
        - dd
        image: dock01:5001/bbox:1.36
        name: bbox-loads
        resources:
          limits:
            cpu: 250m
            memory: 30Mi
      imagePullSecrets:
      - name: dock5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/Deployment/bbox-deploy

skipped mutate policy add-safe-to-evict -> resource student/Deployment/bbox-deploy
policy drop-all-capabilities -> resource student/Deployment/bbox-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/Deployment/bbox-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/Deployment/bbox-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource student/Deployment/bbox-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource student/Deployment/bbox-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource student/Deployment/bbox-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/Deployment/bbox-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-prod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: default
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    spec:
      containers:
      - image: aphraz/node-app:1.1.1-dev
        imagePullPolicy: Always
        name: nginx
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deployment
policy disallow-default-namespace -> resource default/Deployment/web-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/web-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-pod-probes -> resource default/Deployment/web-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-produto.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/produto:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: produto
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: produto
  template:
    metadata:
      labels:
        app: produto
    spec:
      containers:
      - image: lucasycosta/produto:latest
        name: containerproduto
        ports:
        - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/produto

skipped mutate policy add-safe-to-evict -> resource default/Deployment/produto
policy disallow-default-namespace -> resource default/Deployment/produto failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/produto failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/produto failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/produto failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/produto failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/produto failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/produto failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/produto failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/produto failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release1
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release1
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            memory: 1500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            memory: 1500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/queue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-queue9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/queue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-queue:release2
        name: queue
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/queue
policy disallow-default-namespace -> resource default/Deployment/queue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/queue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/queue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/queue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/queue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/queue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/queue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-recreate.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/echo-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo-application
    env: test
    version: v1.0.0
  name: echo-app
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: echo-application
      env: test
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: echo-application
        env: test
        version: v1.0.0
    spec:
      containers:
      - image: anvesh35/echo-pod-name
        name: echoapp
        ports:
        - containerPort: 80
        startupProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          tcpSocket:
            port: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/echo-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/echo-app
policy disallow-default-namespace -> resource default/Deployment/echo-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/echo-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/echo-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/echo-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/echo-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/echo-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/echo-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/echo-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-recreate-strategy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/first-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: first-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      project: strategy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        project: strategy
      name: first-pod
    spec:
      containers:
      - image: nginx
        name: first-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/first-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/first-deployment
policy disallow-default-namespace -> resource default/Deployment/first-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/first-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/first-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/first-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/first-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/first-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-redis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  labes:
    app: redis
  name: deploy-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  spec:
    containers:
    - image: redis:4-alpine
      name: redis-container
      ports:
      - containerPort: 6379
  template:
    metadata:
      labels:
        app: redis

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-redis
policy disallow-container-sock-mounts -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/spec/

policy disallow-default-namespace -> resource default/Deployment/deploy-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deploy-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/

policy require-ro-rootfs -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/

policy restrict-image-registries -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-redis1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  labes:
    app: redis
  name: deploy-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  spec:
    containers:
    - image: redis:4-alpine
      name: redis-container
      ports:
      - containerPort: 6379
  template:
    metadata:
      labels:
        app: redis

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-redis
policy disallow-container-sock-mounts -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/spec/

policy disallow-default-namespace -> resource default/Deployment/deploy-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/deploy-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/

policy require-ro-rootfs -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/

policy restrict-image-registries -> resource default/Deployment/deploy-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-redis2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/redis:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis
  name: redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  serviceName: default
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redis
        ports:
        - containerPort: 6379
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 0
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/redis

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/redis
policy disallow-default-namespace -> resource default/StatefulSet/redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/redis failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/StatefulSet/redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-redis2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/redis-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-redis2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/redis-svc:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis-svc
  namespace: default
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-redis-master.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/redis-master:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-master
      tier: back-end
  template:
    metadata:
      labels:
        app: redis-master
        tier: back-end
    spec:
      containers:
      - image: redis
        name: master-redis-xfusion
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/redis-master

skipped mutate policy add-safe-to-evict -> resource default/Deployment/redis-master
policy disallow-default-namespace -> resource default/Deployment/redis-master failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/redis-master failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/redis-master failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/redis-master failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/redis-master failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/redis-master failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/redis-master failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/redis-master failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/redis-master failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-redis-slave.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/redis-slave:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis-slave
      tier: back-end
  template:
    metadata:
      labels:
        app: redis-slave
        tier: back-end
    spec:
      containers:
      - env:
        - name: GET_HOSTS_FROM
          value: dns
        image: gcr.io/google_samples/gb-redisslave:v3
        name: slave-redis-xfusion
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/redis-slave

skipped mutate policy add-safe-to-evict -> resource default/Deployment/redis-slave
policy disallow-default-namespace -> resource default/Deployment/redis-slave failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/redis-slave failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/redis-slave failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/redis-slave failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/redis-slave failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/redis-slave failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/redis-slave failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/redis-slave failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-replica-set.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/order-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-deployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app-name: order-service
  template:
    metadata:
      labels:
        app-name: order-service
    spec:
      containers:
      - env:
        - name: DUMMY
          value: "8"
        image: vinsdocker/k8s-app:v2
        name: order-service
        ports:
        - containerPort: 80
          name: app-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service-deployment
policy disallow-default-namespace -> resource default/Deployment/order-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/order-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/order-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/order-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-rfc2136.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/external-dns:
apiVersion: v1
kind: Namespace
metadata:
  name: external-dns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/external-dns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: external-dns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/external-dns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: external-dns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/external-dns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: external-dns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/external-dns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: external-dns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-rfc2136_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/external-dns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-rfc2136_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/external-dns-viewer:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: external-dns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-rfc2136_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to external-dns/Deployment/external-dns:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
spec:
  selector:
    matchLabels:
      app: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      containers:
      - args:
        - --source=ingress
        - --source=service
        - --registry=txt
        - --log-level=info
        - --domain-filter=__DOMAIN_NAME__
        - --annotation-filter=external-dns.alpha.kubernetes.io/register=true
        - --ignore-ingress-tls-spec
        - --txt-prefix=__PLATEFORM__.
        - --txt-owner-id=__PLATEFORM__.
        - --provider=rfc2136
        - --rfc2136-zone=__DOMAIN_NAME__
        - --rfc2136-host=__DNSHOST__
        - --rfc2136-port=__DNSPORT__
        - --rfc2136-tsig-secret=__TSIG_SECRET__
        - --rfc2136-tsig-secret-alg=__TSIG_ALGO__
        - --rfc2136-tsig-keyname=__TSIG_KEYNAME__
        - --rfc2136-tsig-axfr
        image: registry.k8s.io/external-dns/external-dns:v0.14.0
        imagePullPolicy: Always
        name: external-dns
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 100Mi
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: external-dns
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource external-dns/Deployment/external-dns

skipped mutate policy add-safe-to-evict -> resource external-dns/Deployment/external-dns
policy drop-all-capabilities -> resource external-dns/Deployment/external-dns failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource external-dns/Deployment/external-dns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource external-dns/Deployment/external-dns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource external-dns/Deployment/external-dns failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource external-dns/Deployment/external-dns failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource external-dns/Deployment/external-dns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-rfc2136_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to external-dns/ServiceAccount/external-dns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: external-dns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-rollback.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deploy: nginx
  name: deploy-nginx
  namespace: default
spec:
  replicas: 14
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        name: container-nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.3"
            memory: 64Mi
          requests:
            cpu: "0.2"
            memory: 34Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-nginx
policy disallow-default-namespace -> resource default/Deployment/deploy-nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: Deploy-RollingUpdate.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: app:v2
        name: app
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-rollout.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/order-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: deploying v3
  name: order-service-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app-name: order-service
  template:
    metadata:
      labels:
        app-name: order-service
    spec:
      containers:
      - image: vinsdocker/k8s-app:v3
        name: order-service
        ports:
        - containerPort: 80
          name: app-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service-deployment
policy disallow-default-namespace -> resource default/Deployment/order-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/order-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/order-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/order-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/order-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-route53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/external-dns:
apiVersion: v1
kind: Namespace
metadata:
  name: external-dns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/external-dns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: external-dns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/external-dns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: external-dns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/external-dns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: external-dns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/external-dns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: external-dns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-route53_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/external-dns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-route53_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/external-dns-viewer:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: external-dns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-route53_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to external-dns/Deployment/external-dns:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
spec:
  selector:
    matchLabels:
      app: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      containers:
      - args:
        - --source=ingress
        - --source=service
        - --registry=txt
        - --log-level=info
        - --domain-filter=__DOMAIN_NAME__
        - --annotation-filter=external-dns.alpha.kubernetes.io/register=true
        - --ignore-ingress-tls-spec
        - --txt-prefix=__PLATEFORM__.
        - --txt-owner-id=__PLATEFORM__.
        - --provider=aws
        - --policy=upsert-only
        - --aws-zone-type=__ZONE_TYPE__
        env:
        - name: AWS_DEFAULT_REGION
          value: __AWS_REGION__
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /.aws/credentials
        envFrom:
        - configMapRef:
            name: config-external-dns
        image: registry.k8s.io/external-dns/external-dns:v0.14.0
        imagePullPolicy: Always
        name: external-dns
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 100Mi
        volumeMounts:
        - mountPath: /.aws
          name: aws-credentials
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: external-dns
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: aws-credentials
        secret:
          secretName: aws-external-dns

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource external-dns/Deployment/external-dns

skipped mutate policy add-safe-to-evict -> resource external-dns/Deployment/external-dns
policy drop-all-capabilities -> resource external-dns/Deployment/external-dns failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource external-dns/Deployment/external-dns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource external-dns/Deployment/external-dns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource external-dns/Deployment/external-dns failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource external-dns/Deployment/external-dns failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource external-dns/Deployment/external-dns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-route53_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to external-dns/ServiceAccount/external-dns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: external-dns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-rset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-deployment
    teste: mudando
  name: nginx-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-deployment
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx-deployment
    spec:
      containers:
      - image: nginx:1.15.0
        name: nginx
        resources:
          limits:
            cpu: 0.6
            memory: 256Mi
          requests:
            cpu: 0.4
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-runas.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/timeserver:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeserver
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: timeserver-pod
  template:
    metadata:
      labels:
        pod: timeserver-pod
    spec:
      containers:
      - image: docker.io/wdenniss/timeserver:6
        name: timeserver-container
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/timeserver

skipped mutate policy add-safe-to-evict -> resource default/Deployment/timeserver
policy disallow-default-namespace -> resource default/Deployment/timeserver failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/timeserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/timeserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/timeserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/timeserver failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/timeserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/timeserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/timeserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-sample-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/sample-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app1
  name: sample-1
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - image: devopsprosamples/next-path-sample-1
        name: pathbase2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-1
policy disallow-default-namespace -> resource default/Deployment/sample-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/sample-1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/sample-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/sample-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/sample-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/sample-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/sample-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/sample-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/sample-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-sample-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/sample-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app2
  name: sample-2
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - image: devopsprosamples/next-path-sample-2
        name: pathbase2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-2
policy disallow-default-namespace -> resource default/Deployment/sample-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/sample-2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/sample-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/sample-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/sample-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/sample-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/sample-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/sample-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/sample-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-sample-3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/sample-3:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app3
  name: sample-3
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app3
  template:
    metadata:
      labels:
        app: app3
    spec:
      containers:
      - image: devopsprosamples/next-sample-1
        name: Hostbase1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-3

skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-3
policy disallow-default-namespace -> resource default/Deployment/sample-3 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/sample-3 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/sample-3 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/sample-3 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/sample-3 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/sample-3 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/sample-3 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/sample-3 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/sample-3 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-sample-4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/sample-4:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app4
  name: sample-4
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app4
  template:
    metadata:
      labels:
        app: app4
    spec:
      containers:
      - image: devopsprosamples/next-sample-4
        name: Hostbase2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-4

skipped mutate policy add-safe-to-evict -> resource default/Deployment/sample-4
policy disallow-default-namespace -> resource default/Deployment/sample-4 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/sample-4 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/sample-4 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/sample-4 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/sample-4 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/sample-4 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/sample-4 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/sample-4 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/sample-4 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-seletor.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-label:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: deploy-label
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: cloud
                operator: In
                values:
                - AWS
            weight: 20
          - preference:
              matchExpressions:
              - key: cloud
                operator: In
                values:
                - GCP
            weight: 80
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.28
        imagePullPolicy: IfNotPresent
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-label

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-label
policy disallow-default-namespace -> resource default/Deployment/deploy-label failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/deploy-label failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-label failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-label failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-label failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/deploy-service:
apiVersion: v1
kind: Service
metadata:
  name: deploy-service
  namespace: default
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: gopherbank
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/deploy-service:
apiVersion: v1
kind: Service
metadata:
  name: deploy-service
  namespace: default
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: gopherbank
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shopping/Deployment/ekart:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ekart
  namespace: shopping
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ekart
  template:
    metadata:
      labels:
        app: ekart
    spec:
      containers:
      - image: praveen431ece/shopping-cart:tagversion
        name: spring-boot-container
        ports:
        - containerPort: 8070

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource shopping/Deployment/ekart

skipped mutate policy add-safe-to-evict -> resource shopping/Deployment/ekart
policy drop-all-capabilities -> resource shopping/Deployment/ekart failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource shopping/Deployment/ekart failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource shopping/Deployment/ekart failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource shopping/Deployment/ekart failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource shopping/Deployment/ekart failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource shopping/Deployment/ekart failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource shopping/Deployment/ekart failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-service2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shopping/Service/ekart-service:
apiVersion: v1
kind: Service
metadata:
  name: ekart-service
  namespace: shopping
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8070
  selector:
    app: ekart
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-health-container:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-health-container
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-health
  template:
    metadata:
      labels:
        app: go-health
    spec:
      containers:
      - image: innoskrit/go-k8s-deployment
        name: go-health-container
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-health-container

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-health-container
policy disallow-default-namespace -> resource default/Deployment/go-health-container failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-health-container failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-health-container failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-health-container failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-health-container failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-health-container failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-service3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-health-service:
apiVersion: v1
kind: Service
metadata:
  name: go-health-service
  namespace: default
spec:
  ports:
  - port: 85
    protocol: TCP
    targetPort: 8085
  selector:
    app: go-health-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/go-health-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy-services.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/qr-tickets-secrets:
apiVersion: v1
data:
  AUTH_SECRET: convert your AUTH_SECRET to base64
  GOOGLE_CLIENT_ID: convert your GOOGLE_CLIENT_ID to base64
  GOOGLE_CLIENT_SECRET: convert your GOOGLE_CLIENT_SECRET to base64
  MONGODB_CONNECTION_STRING: convert your MONGODB_CONNECTION_STRING to base64
  MONGODB_URL: convert your mongodburl to base64
  NEXT_PUBLIC_APP_URL: convert your NEXT_PUBLIC_APP_URL to base64
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: convert your NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
    to base64
  RESEND_API_KEY: convert your RESEND_API_KEY to base64
  STRIPE_SECRET_KEY: convert your STRIPE_SECRET_KEY to base64
  STRIPE_WEBHOOK_SECRET: convert your STRIPE_WEBHOOK_SECRET to base64
kind: Secret
metadata:
  name: qr-tickets-secrets
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-services_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to /Deployment/:
apiVersion: apps/v1
kind: Deployment
metadata: nqr-tickets-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qr-tickets
  template:
    metadata:
      labels:
        app: qr-tickets
    spec:
      containers:
      - env:
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              key: AUTH_SECRET
              name: qr-tickets-secrets
        - name: NEXT_PUBLIC_APP_URL
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_APP_URL
              name: qr-tickets-secrets
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: GOOGLE_CLIENT_ID
              name: qr-tickets-secrets
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: GOOGLE_CLIENT_SECRET
              name: qr-tickets-secrets
        - name: RESEND_API_KEY
          valueFrom:
            secretKeyRef:
              key: RESEND_API_KEY
              name: qr-tickets-secrets
        - name: MONGODB_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              key: MONGODB_CONNECTION_STRING
              name: qr-tickets-secrets
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: qr-tickets-secrets
        - name: NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
              name: qr-tickets-secrets
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              key: STRIPE_WEBHOOK_SECRET
              name: qr-tickets-secrets
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: STRIPE_SECRET_KEY
              name: qr-tickets-secrets
        image: mohith9353/qr-ticket:latest
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
        name: qr-tickets-container
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource /Deployment/

skipped mutate policy add-safe-to-evict -> resource /Deployment/
policy disallow-default-namespace -> resource /Deployment/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/

policy disallow-latest-tag -> resource /Deployment/ failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource /Deployment/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource /Deployment/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource /Deployment/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource /Deployment/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource /Deployment/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource /Deployment/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-services_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/qr-tickets-service:
apiVersion: v1
kind: Service
metadata:
  name: qr-tickets-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: qr-tickets
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-service-test.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-app-mysql:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
  name: my-app-mysql
  namespace: default
spec:
  selector:
    matchLabels:
      app: my-app
      tier: mysql
  template:
    metadata:
      labels:
        app: my-app
        tier: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: my-app
        - name: MYSQL_ROOT_PASSWORD
          value: password
        image: mariadb:10.7
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app-mysql

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app-mysql
policy disallow-default-namespace -> resource default/Deployment/my-app-mysql failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-app-mysql failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-app-mysql failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-app-mysql failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-app-mysql failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-app-mysql failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-app-mysql failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-app-mysql failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-service-test_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-app-mysql:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-app
  name: my-app-mysql
  namespace: default
spec:
  ports:
  - port: 3306
  selector:
    app: my-app
    tier: mysql

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-service-test_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
  name: my-app
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: my-app
      tier: frontend
  template:
    metadata:
      labels:
        app: my-app
        tier: frontend
    spec:
      containers:
      - env:
        - name: WORD_PRESS_DB_HOST
          value: my-app-mysql
        - name: WORD_PRESS_DB_NAME
          value: my-app
        - name: WORD_PRESS_DB_USER
          value: root
        - name: WORD_PRESS_DB_PASSWORD
          value: password
        image: wordpress:5.9.1-php8.1-apache
        name: my-app
        ports:
        - containerPort: 80
          name: my-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app
policy disallow-default-namespace -> resource default/Deployment/my-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-service-test_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-app:
apiVersion: v1
kind: Service
metadata:
  name: my-app
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: my-app
    tier: frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/my-app failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy-staging.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: default
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    spec:
      containers:
      - image: aphraz/node-app:1.1.1-dev
        imagePullPolicy: Always
        name: nginx
        resources:
          limits:
            cpu: 750m
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deployment
policy disallow-default-namespace -> resource default/Deployment/web-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/web-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-pod-probes -> resource default/Deployment/web-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ngxdemo:
apiVersion: v1
kind: Service
metadata:
  name: ngxdemo
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: nginxweb
  selector:
    app: app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ngxdemo failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: deploy-svc-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      automountServiceAccountToken: true
      containers:
      - image: docker.io/dpthub/edkubectl:1.0
        name: login-app
      serviceAccountName: ed-svc-acc-01

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app
policy disallow-default-namespace -> resource default/Deployment/app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-account1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      automountServiceAccountToken: true
      containers:
      - image: docker.io/dpthub/edkubectl:1.0
        name: login-app
      serviceAccountName: ed-svc-acc-01

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app
policy disallow-default-namespace -> resource default/Deployment/app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-account2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      automountServiceAccountToken: true
      containers:
      - image: docker.io/dpthub/edkubectl:1.0
        name: login-app
      serviceAccountName: ed-svc-acc-01

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app
policy disallow-default-namespace -> resource default/Deployment/app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-account3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      automountServiceAccountToken: true
      containers:
      - image: docker.io/dpthub/edkubectl:1.0
        name: login-app
      serviceAccountName: ed-svc-acc-01

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app
policy disallow-default-namespace -> resource default/Deployment/app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-bar.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/bar-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bar-deploy
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bar-app
  template:
    metadata:
      labels:
        app: bar-app
    spec:
      containers:
      - image: whatwant/node-web:2.0
        name: bar-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/bar-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/bar-deploy
policy disallow-default-namespace -> resource default/Deployment/bar-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/bar-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/bar-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/bar-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-bar_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/bar-svc:
apiVersion: v1
kind: Service
metadata:
  name: bar-svc
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: bar-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-svc-bar1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/bar-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bar-deploy
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bar-app
  template:
    metadata:
      labels:
        app: bar-app
    spec:
      containers:
      - image: whatwant/node-web:2.0
        name: bar-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/bar-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/bar-deploy
policy disallow-default-namespace -> resource default/Deployment/bar-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/bar-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/bar-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/bar-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/bar-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-bar1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/bar-svc:
apiVersion: v1
kind: Service
metadata:
  name: bar-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: bar-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-svc-foo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/foo-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: foo-deploy
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: foo-app
  template:
    metadata:
      labels:
        app: foo-app
      name: foo-pod
    spec:
      containers:
      - image: whatwant/node-web:2.0
        name: foo-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/foo-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/foo-deploy
policy disallow-default-namespace -> resource default/Deployment/foo-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/foo-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/foo-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/foo-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-foo_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/foo-svc:
apiVersion: v1
kind: Service
metadata:
  name: foo-svc
  namespace: default
spec:
  ports:
  - port: 4200
    targetPort: 8080
  selector:
    app: foo-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-svc-foo1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/foo-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: foo-deploy
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: foo-app
  template:
    metadata:
      labels:
        app: foo-app
    spec:
      containers:
      - image: whatwant/node-web:2.0
        name: foo-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/foo-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/foo-deploy
policy disallow-default-namespace -> resource default/Deployment/foo-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/foo-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/foo-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/foo-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/foo-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-svc-foo1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/foo-svc:
apiVersion: v1
kind: Service
metadata:
  name: foo-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: foo-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-telegraf.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/telegraf:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: default
spec:
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - image: telegraf:1.10
        name: telegraf
        ports:
        - containerPort: 8186
        volumeMounts:
        - mountPath: /etc/telegraf/telegraf.conf
          name: config
          subPath: telegraf.conf
      volumes:
      - configMap:
          name: telegraf-config
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/telegraf

skipped mutate policy add-safe-to-evict -> resource default/Deployment/telegraf
policy disallow-default-namespace -> resource default/Deployment/telegraf failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/telegraf failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/telegraf failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/telegraf failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/telegraf failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/telegraf failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/telegraf failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/telegraf failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-telegraf1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/telegraf:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: default
spec:
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - image: telegraf:1.10
        name: telegraf
        ports:
        - containerPort: 8186
        volumeMounts:
        - mountPath: /etc/telegraf/telegraf.conf
          name: config
          subPath: telegraf.conf
      volumes:
      - configMap:
          name: telegraf-config
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/telegraf

skipped mutate policy add-safe-to-evict -> resource default/Deployment/telegraf
policy disallow-default-namespace -> resource default/Deployment/telegraf failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/telegraf failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/telegraf failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/telegraf failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/telegraf failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/telegraf failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/telegraf failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/telegraf failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-teste.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-teste:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: deploy-teste
  name: deploy-teste
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 5
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: deploy-teste
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-teste
    spec:
      containers:
      - image: httpd
        imagePullPolicy: Always
        name: deploy-teste
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-teste

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-teste
policy disallow-default-namespace -> resource default/Deployment/deploy-teste failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-teste failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-teste failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-teste failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-teste failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-teste failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-teste failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-teste failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-teste failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-teste2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-teste2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deploy-teste2
  name: deploy-teste2
  namespace: default
spec:
  replicas: 15
  selector:
    matchLabels:
      app: deploy-teste2
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-teste2
    spec:
      containers:
      - image: ubuntu
        name: ubuntu

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-teste2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-teste2
policy disallow-default-namespace -> resource default/Deployment/deploy-teste2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-teste2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-tethys.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tethys-dep:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tethys
  name: tethys-dep
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tethys
  template:
    metadata:
      labels:
        app: tethys
    spec:
      containers:
      - env:
        - name: K8S_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ALLOWED_HOSTS
          value: '"[localhost, 127.0.0.1, 10.102.74.211]"'
        - name: CLIENT_MAX_BODY_SIZE
          value: 75M
        - name: NGINX_PORT
          value: "80"
        - name: TETHYS_DB_HOST
          value: tethys-pg
        - name: TETHYS_DB_NAME
          value: tethys_platform
        - name: TETHYS_DB_USERNAME
          value: tethys_default
        - name: TETHYS_DB_PASSWORD
          value: pass
        - name: TETHYS_DB_SUPERUSER
          value: tethys_super
        - name: TETHYS_DB_SUPERUSER_PASS
          value: pass
        - name: TETHYS_PORT
          value: "8000"
        image: docker.io/gronka/tethys:latest
        imagePullPolicy: Always
        name: tethyscore
        ports:
        - containerPort: 8000
          hostPort: 8000
          name: tethys-port
          protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tethys-dep

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tethys-dep
policy disallow-default-namespace -> resource default/Deployment/tethys-dep failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/tethys-dep failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/tethys-dep failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/tethys-dep failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/tethys-dep failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/tethys-dep failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/tethys-dep failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/tethys-dep failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/tethys-dep failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-text.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx-pod:
apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: nginx-container
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx-pod
policy disallow-default-namespace -> resource default/Pod/nginx-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nginx-pod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nginx-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nginx-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-thecompany-blue.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/thecompany-blue:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: thecompany-blue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: thecompany-blue
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        run: thecompany-blue
    spec:
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: webdata
      initContainers:
      - command:
        - /bin/sh
        - -c
        - echo "<h1>I am <font color=blue>BLUE</font></h1>" > /webdata/index.html
        image: busybox
        name: web-content
        volumeMounts:
        - mountPath: /webdata
          name: webdata
      volumes:
      - emptyDir: {}
        name: webdata

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/thecompany-blue
policy disallow-default-namespace -> resource default/Deployment/thecompany-blue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/thecompany-blue failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/thecompany-blue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/thecompany-blue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/thecompany-blue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/thecompany-blue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/thecompany-blue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/thecompany-blue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/thecompany-blue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: deploy-tolerations.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      tolerations:
      - effect: NoSchedule
        key: frontend
        operator: Equal
        value: "yes"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-tolerations1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      tolerations:
      - effect: NoSchedule
        key: frontend
        operator: Equal
        value: "yes"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-tolerations2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      tolerations:
      - effect: NoSchedule
        key: frontend
        operator: Equal
        value: "yes"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-tolerations3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: env
      operator: In
      values:
      - dev
    matchLabels:
      app: login-app
  template:
    metadata:
      labels:
        app: login-app
        env: dev
      name: login
    spec:
      containers:
      - image: docker.io/dpthub/edtom:1.0
        name: login-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 1Mi
      tolerations:
      - effect: NoSchedule
        key: frontend
        operator: Equal
        value: "yes"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/app
policy drop-all-capabilities -> resource dev/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-uptime-kuma.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to olv/Deployment/uptime-kuma-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deploy: uptime-kuma-deploy
  name: uptime-kuma-deploy
  namespace: olv
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: uptime-kuma-pod
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        pod: uptime-kuma-pod
      namespace: olv
    spec:
      containers:
      - image: louislam/uptime-kuma:1
        imagePullPolicy: Always
        name: uptime-kuma-container
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - mountPath: /app/data
          name: uptime-kuma-vol-node
      volumes:
      - hostPath:
          path: /mnt/uptime-kuma
          type: DirectoryOrCreate
        name: uptime-kuma-vol-node

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource olv/Deployment/uptime-kuma-deploy
policy drop-all-capabilities -> resource olv/Deployment/uptime-kuma-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource olv/Deployment/uptime-kuma-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource olv/Deployment/uptime-kuma-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource olv/Deployment/uptime-kuma-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource olv/Deployment/uptime-kuma-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource olv/Deployment/uptime-kuma-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: deploy-v1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Deployment/hello-app-v1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hello-app-v1
  name: hello-app-v1
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-app-v1
  template:
    metadata:
      labels:
        app: hello-app-v1
    spec:
      containers:
      - image: gcr.io/google-samples/hello-app:1.0
        name: hello-app-v1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test/Deployment/hello-app-v1

skipped mutate policy add-safe-to-evict -> resource test/Deployment/hello-app-v1
policy drop-all-capabilities -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test/Deployment/hello-app-v1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-v2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Deployment/hello-app-v2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hello-app-v2
  name: hello-app-v2
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-app-v2
  template:
    metadata:
      labels:
        app: hello-app-v2
    spec:
      containers:
      - image: gcr.io/google-samples/hello-app:2.0
        name: hello-app-v2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test/Deployment/hello-app-v2

skipped mutate policy add-safe-to-evict -> resource test/Deployment/hello-app-v2
policy drop-all-capabilities -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test/Deployment/hello-app-v2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: deploy-v21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/timeserver:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeserver
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      pod: timeserver-pod
  template:
    metadata:
      labels:
        pod: timeserver-pod
    spec:
      containers:
      - image: mhoelzl/timeserver:0.0.2
        name: timeserver-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/timeserver

skipped mutate policy add-safe-to-evict -> resource default/Deployment/timeserver
policy disallow-default-namespace -> resource default/Deployment/timeserver failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/timeserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/timeserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/timeserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/timeserver failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/timeserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/timeserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/timeserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-vul-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/security-webapp:
apiVersion: v1
kind: Namespace
metadata:
  name: security-webapp
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/security-webapp:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: security-webapp
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/security-webapp:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: security-webapp
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/security-webapp:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: security-webapp
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/security-webapp:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: security-webapp
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-vul-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to security-webapp/ServiceAccount/secret-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-sa
  namespace: security-webapp

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-vul-app_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to security-webapp/ClusterRoleBinding/pod-sa-clusterrolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-sa-clusterrolebinding
  namespace: security-webapp
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: secret-role
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: secret-sa
  namespace: security-webapp

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-vul-app_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to security-webapp/ClusterRole/secret-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-role
  namespace: security-webapp
rules:
- apiGroups:
  - '*'
  resources:
  - serviceaccounts
  - serviceaccounts/token
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-vul-app_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to security-webapp/ReplicationController/vul-app:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: vul-app
  name: vul-app
  namespace: security-webapp
spec:
  replicas: 1
  selector:
    name: vul-app
  template:
    metadata:
      labels:
        name: vul-app
    spec:
      containers:
      - image: chrisley75/vul-app:2.0.0
        name: vul-app
        ports:
        - containerPort: 5000
          name: http-server
      serviceAccountName: secret-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource security-webapp/ReplicationController/vul-app

skipped mutate policy add-safe-to-evict -> resource security-webapp/ReplicationController/vul-app
policy drop-all-capabilities -> resource security-webapp/ReplicationController/vul-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource security-webapp/ReplicationController/vul-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource security-webapp/ReplicationController/vul-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource security-webapp/ReplicationController/vul-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource security-webapp/ReplicationController/vul-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource security-webapp/ReplicationController/vul-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: deploy-vul-app_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to security-webapp/Service/vul-app-svc:
apiVersion: v1
kind: Service
metadata:
  name: vul-app-svc
  namespace: security-webapp
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    name: vul-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-vul-app_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to security-webapp/ServiceAccount/cluster-admin-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-admin-sa
  namespace: security-webapp

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-vul-app_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-clusterrolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-clusterrolebinding
  namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: cluster-admin-sa
  namespace: security-webapp

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-wasm-from-remote.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/${SERVICE_NAME}:
apiVersion: v1
kind: Service
metadata:
  labels:
    component: simplism-function
  name: ${SERVICE_NAME}
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: ${SERVICE_NAME}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-wasm-from-remote_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/${SERVICE_NAME}:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: simplism-function
  name: ${SERVICE_NAME}
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - args:
        - listen
        - ${WASM_FILE}
        - ${FUNCTION_NAME}
        - --wasm-url
        - ${WASM_URL}
        command:
        - /simplism
        image: ${IMAGE_NAME}:${IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        name: ${SERVICE_NAME}
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/${SERVICE_NAME}

skipped mutate policy add-safe-to-evict -> resource default/Deployment/${SERVICE_NAME}
policy disallow-default-namespace -> resource default/Deployment/${SERVICE_NAME} failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/${SERVICE_NAME} failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-wasm-from-remote_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/${SERVICE_NAME}:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    component: simplism-function
  name: ${SERVICE_NAME}
  namespace: default
spec:
  rules:
  - host: ${KUBE_NAMESPACE}.${SERVICE_NAME}.${DNS}
    http:
      paths:
      - backend:
          service:
            name: ${SERVICE_NAME}
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-web.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/demo-jw:
apiVersion: v1
kind: Pod
metadata:
  name: demo-jw
  namespace: default
spec:
  containers:
  - image: sonofjorel/rating-web:v1
    imagePullPolicy: Always
    name: jw-web
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/demo-jw

skipped mutate policy add-safe-to-evict -> resource default/Pod/demo-jw
policy disallow-default-namespace -> resource default/Pod/demo-jw failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/demo-jw failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/demo-jw failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/demo-jw failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/demo-jw failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/demo-jw failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/demo-jw failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/demo-jw failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-web1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deploy-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - image: smlinux/hpa-example
        name: web
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deploy-web
policy disallow-default-namespace -> resource default/Deployment/deploy-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deploy-web failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deploy-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deploy-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deploy-web failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deploy-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/deploy-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deploy-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deploy-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-web1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-web:
apiVersion: v1
kind: Service
metadata:
  name: svc-web
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: web
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-webapp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release1
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release1
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapp/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: webapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: webapp
    spec:
      containers:
      - image: docker.io/library/nginx:1.23.2
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: webapp-conf
          readOnly: true
        - mountPath: /srv/webapp
          name: webapp-html
          readOnly: true
        - mountPath: /var/log/nginx
          name: nginx-log
      volumes:
      - configMap:
          name: webapp-conf
        name: webapp-conf
      - configMap:
          name: webapp-html
        name: webapp-html
      - emptyDir: {}
        name: nginx-log

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource webapp/Deployment/webapp
policy drop-all-capabilities -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource webapp/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: deploy-webapp23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapp/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: webapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: webapp
    spec:
      containers:
      - image: docker.io/library/nginx:1.23.2
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: webapp-conf
          readOnly: true
        - mountPath: /srv/webapp
          name: webapp-html
          readOnly: true
        - mountPath: /var/log/nginx
          name: nginx-log
      volumes:
      - configMap:
          name: webapp-conf
        name: webapp-conf
      - configMap:
          name: webapp-html
        name: webapp-html
      - emptyDir: {}
        name: nginx-log

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource webapp/Deployment/webapp
policy drop-all-capabilities -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource webapp/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: deploy-webapp3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-webapp9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-website.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ecomm-web-app-service:
apiVersion: v1
kind: Service
metadata:
  name: ecomm-web-app-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9999
  selector:
    app: ecomm-web-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-website_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ecomm-web-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ecomm-web-app
  name: ecomm-web-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecomm-web-app
  template:
    metadata:
      labels:
        app: ecomm-web-app
    spec:
      containers:
      - image: arunvel1988/ecomm-website_final
        name: ecomm-web-app
        ports:
        - containerPort: 9999

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ecomm-web-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ecomm-web-app
policy disallow-default-namespace -> resource default/Deployment/ecomm-web-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ecomm-web-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-env.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/httpd-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
      name: db-pod
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config
        image: docker.io/mysql
        name: db-container
        ports:
        - containerPort: 3306

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy
policy disallow-default-namespace -> resource default/Deployment/httpd-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/httpd-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-env1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/httpd-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
      name: db-pod
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config
        image: docker.io/mysql
        name: db-container
        ports:
        - containerPort: 3306

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy
policy disallow-default-namespace -> resource default/Deployment/httpd-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/httpd-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-env2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/httpd-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
      name: db-pod
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config
        image: docker.io/mysql
        name: db-container
        ports:
        - containerPort: 3306

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy
policy disallow-default-namespace -> resource default/Deployment/httpd-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/httpd-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-env3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/httpd-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
      name: db-pod
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: config
        image: docker.io/mysql
        name: db-container
        ports:
        - containerPort: 3306

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpd-deploy
policy disallow-default-namespace -> resource default/Deployment/httpd-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/httpd-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/httpd-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/httpd-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-file.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/config
          name: app-config
          readOnly: true
      volumes:
      - configMap:
          name: app-config
        name: app-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy
policy disallow-latest-tag -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-file1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/config
          name: app-config
          readOnly: true
      volumes:
      - configMap:
          name: app-config
        name: app-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy
policy disallow-latest-tag -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-file2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/config
          name: app-config
          readOnly: true
      volumes:
      - configMap:
          name: app-config
        name: app-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy
policy disallow-latest-tag -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-configmap-file3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: dev
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/config
          name: app-config
          readOnly: true
      volumes:
      - configMap:
          name: app-config
        name: app-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/web-deploy
policy disallow-latest-tag -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-node-anti-affinity.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - image: nginx
        name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/secret
          name: logins
          readOnly: true
      volumes:
      - name: logins
        secret:
          secretName: mysecret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy
policy disallow-default-namespace -> resource default/Deployment/web-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/secret
          name: logins
          readOnly: true
      volumes:
      - name: logins
        secret:
          secretName: mysecret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy
policy disallow-default-namespace -> resource default/Deployment/web-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/secret
          name: logins
          readOnly: true
      volumes:
      - name: logins
        secret:
          secretName: mysecret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy
policy disallow-default-namespace -> resource default/Deployment/web-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-with-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchExpressions:
    - key: tier
      operator: In
      values:
      - backend
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        tier: backend
      name: web-pod
    spec:
      containers:
      - image: docker.io/tomcat
        name: app-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/secret
          name: logins
          readOnly: true
      volumes:
      - name: logins
        secret:
          secretName: mysecret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-deploy
policy disallow-default-namespace -> resource default/Deployment/web-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/web-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: deploy-wordpress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/wordpress:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wordpress
  name: wordpress
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: wordpress
    tier: frontend
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-wordpress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/wordpress:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: wordpress
  name: wordpress
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: deploy-wordpress_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/wordpress-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wordpress
  name: wordpress-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: mysql
        - name: WORDPRESS_DB_USER
          value: wordpress_user
        - name: WORDPRESS_DB_PASSWORD
          value: asdf1234
        - name: WORDPRESS_DB_NAME
          value: wordpress_db
        image: wlopezm/wordpress:v1
        name: wordpress
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: wordpress-persistent-storage
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/wordpress-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/wordpress-deployment
policy disallow-default-namespace -> resource default/Deployment/wordpress-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/wordpress-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

