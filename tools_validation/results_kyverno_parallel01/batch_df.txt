##### FILE: ext_access.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ruby-app:
apiVersion: v1
kind: Service
metadata:
  name: ruby-app
  namespace: default
spec:
  ports:
  - nodePort: 31317
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: ruby-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ruby-app failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: external_dns2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/external-dns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: external-dns
  name: external-dns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_dns2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/external-dns-viewer:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: external-dns
  name: external-dns-viewer
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_dns2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/external-dns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: external-dns
  name: external-dns
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns
    spec:
      containers:
      - args:
        - --source=service
        - --source=ingress
        - --domain-filter=${domain}
        - --provider=aws
        - --aws-zone-type=private
        - --registry=txt
        - --txt-owner-id=${hosted_zone_id}
        env:
        - name: AWS_DEFAULT_REGION
          value: ${REGION}
        image: k8s.gcr.io/external-dns/external-dns:v0.11.0
        name: external-dns
      serviceAccountName: external-dns

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/external-dns

skipped mutate policy add-safe-to-evict -> resource default/Deployment/external-dns
policy disallow-default-namespace -> resource default/Deployment/external-dns failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/external-dns failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/external-dns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/external-dns failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/external-dns failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/external-dns failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/external-dns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: external_endpoint.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/EndpointSlice/external-service:
addressType: IPv4
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - 198.49.23.144
  conditions:
    ready: true
kind: EndpointSlice
metadata:
  labels:
    kubernetes.io/service-name: external-service
  name: external-service
  namespace: default
ports:
- port: 80
  protocol: TCP

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: external_pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/toservices:
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: toservices
    zgroup: external
  name: toservices
  namespace: default
spec:
  containers:
  - command:
    - bash
    - -c
    - while true; do sleep 5; done
    image: quay.io/cilium/demo-client:1.0
    imagePullPolicy: IfNotPresent
    name: app-reach-services

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/toservices

skipped mutate policy add-safe-to-evict -> resource default/Pod/toservices
policy disallow-default-namespace -> resource default/Pod/toservices failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/toservices failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/toservices failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/toservices failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/toservices failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/toservices failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/toservices failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/toservices failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: external_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to svc-mngt/Service/externalservice:
apiVersion: v1
kind: Service
metadata:
  name: externalservice
  namespace: svc-mngt
spec:
  externalName: my.dbservices.accountsnow.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_service_by_name.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/external-service:
apiVersion: v1
kind: Service
metadata:
  name: external-service
  namespace: default
spec:
  externalName: someapi.somecompany.com
  ports:
  - port: 80
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_service_endpoints.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/external-service:
apiVersion: v1
kind: Endpoints
metadata:
  name: external-service
  namespace: default
subsets:
- addresses:
  - ip: 11.11.11.11
  - ip: 22.22.22.22
  ports:
  - port: 80

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_service_load_balancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kubia-loadbalancer:
apiVersion: v1
kind: Service
metadata:
  name: kubia-loadbalancer
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: kubia
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_service_without_selector.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/external-service:
apiVersion: v1
kind: Service
metadata:
  name: external-service
  namespace: default
spec:
  ports:
  - port: 80

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: external_service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/external-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    test: external
    zgroup: external
  name: external-service
  namespace: default
spec:
  clusterIP: ""
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9376

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Externalservice3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  externalName: my.database.example.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Externalservice4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  externalName: my.database.example.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Externalservice5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  externalName: my.database.example.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: externalsql.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rdb-test:
apiVersion: v1
kind: Service
metadata:
  name: rdb-test
  namespace: default
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mariadb-sts
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: externam-db_svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to application-ns/Service/external-db-service:
apiVersion: v1
kind: Service
metadata:
  name: external-db-service
  namespace: application-ns
spec:
  externalName: my-database-service.database-ns.svc.cluster.local
  ports:
  - port: 5432
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: extreme-stress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/extreme-stress:
apiVersion: batch/v1
kind: Job
metadata:
  name: extreme-stress
  namespace: default
spec:
  backoffLimit: 4
  completionMode: Indexed
  completions: 30
  parallelism: 30
  template:
    metadata:
      labels:
        job: extreme-stress
      name: stress-ng-pod
    spec:
      containers:
      - args:
        - apt-get update && apt-get install -y stress-ng && stress-ng --cpu 1 --timeout
          60s --metrics-brief
        command:
        - /bin/bash
        - -c
        image: ubuntu:latest
        name: stress-ng-container
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.5"
            memory: 512Mi
      nodeName: kind-worker
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/extreme-stress

skipped mutate policy add-safe-to-evict -> resource default/Job/extreme-stress
policy disallow-default-namespace -> resource default/Job/extreme-stress failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/extreme-stress failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/extreme-stress failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/extreme-stress failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/extreme-stress failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Job/extreme-stress failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/extreme-stress failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: f1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-10T19:06:55Z"
  labels:
    version: v1
    zone: prod
  name: nginx
  namespace: default
  resourceVersion: "8606"
  uid: 231139a9-91fd-443f-a610-9ebb4accf029
spec:
  containers:
  - image: wiltonsantacruz/nginx:v1
    imagePullPolicy: IfNotPresent
    name: nginx
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hrg4p
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-hrg4p
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-10T19:06:55Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-10T19:07:13Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-10T19:07:13Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-10T19:06:55Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://665c9b4d800e52531dfbdbe7eb87af219873db9d32acf19e27dca5a77b28e1e1
    image: wiltonsantacruz/nginx:v1
    imageID: docker-pullable://wiltonsantacruz/nginx@sha256:de66d3d547813b79d04d497ab05c00c8f27069c264cb217a647b5ff32ef5ce3d
    lastState: {}
    name: nginx
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-03-10T19:07:12Z"
  hostIP: 192.168.49.2
  phase: Running
  podIP: 10.244.0.6
  podIPs:
  - ip: 10.244.0.6
  qosClass: BestEffort
  startTime: "2023-03-10T19:06:55Z"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fabric8-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/fabric8-rbac:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fabric8-rbac
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: factorial-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/factorial5:
apiVersion: batch/v1
kind: Job
metadata:
  name: factorial5
  namespace: default
spec:
  template:
    metadata:
      name: factorial5
    spec:
      containers:
      - command:
        - python
        - -c
        - import math; print(math.factorial(5))
        image: g1g1/py-kube:0.3
        name: factorial5
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/factorial5

skipped mutate policy add-safe-to-evict -> resource default/Job/factorial5
policy disallow-default-namespace -> resource default/Job/factorial5 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/factorial5 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/factorial5 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/factorial5 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/factorial5 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/factorial5 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/factorial5 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: factorial-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/factorial5:
apiVersion: batch/v1
kind: Job
metadata:
  name: factorial5
  namespace: default
spec:
  template:
    metadata:
      name: factorial5
    spec:
      containers:
      - command:
        - python
        - -c
        - import math; print(math.factorial(5))
        image: g1g1/py-kube:0.3
        name: factorial5
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/factorial5

skipped mutate policy add-safe-to-evict -> resource default/Job/factorial5
policy disallow-default-namespace -> resource default/Job/factorial5 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/factorial5 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/factorial5 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/factorial5 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/factorial5 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/factorial5 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/factorial5 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fail1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fail2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fail3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: mysql-abcxyz
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 5.7.21
  namespace: default

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/
policy disallow-container-sock-mounts -> resource default/StatefulSet/ failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failed-command.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/broken-pods-failed-command-pod:
apiVersion: v1
kind: Pod
metadata:
  name: broken-pods-failed-command-pod
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - exit 1
    image: busybox
    name: broken-pods-failed-command-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/broken-pods-failed-command-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/broken-pods-failed-command-pod
policy disallow-default-namespace -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/broken-pods-failed-command-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failed-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/demo-failed-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: demo-failed-job
  namespace: default
spec:
  backoffLimit: 2
  completionMode: Indexed
  completions: 3
  template:
    spec:
      containers:
      - command:
        - python
        - -c
        - |
          import os
          pod_index = int(os.environ.get("JOB_COMPLETION_INDEX", -1))
          print("Pod Index:", pod_index)
          print(1 / pod_index)
        image: python:3.8-slim
        name: demo-failed-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/demo-failed-job

skipped mutate policy add-safe-to-evict -> resource default/Job/demo-failed-job
policy disallow-default-namespace -> resource default/Job/demo-failed-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/demo-failed-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/demo-failed-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/demo-failed-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/demo-failed-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/demo-failed-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/demo-failed-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: failing-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/failing-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: failing-job
  namespace: default
spec:
  activeDeadlineSeconds: 20
  completions: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: failing-job
    spec:
      containers:
      - args:
        - sleep
        - "60"
        image: busybox
        name: sleep-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/failing-job

skipped mutate policy add-safe-to-evict -> resource default/Job/failing-job
policy disallow-default-namespace -> resource default/Job/failing-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/failing-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/failing-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/failing-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Job/failing-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/failing-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/failing-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: failing-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/failing-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: failing-job
  namespace: default
spec:
  activeDeadlineSeconds: 20
  completions: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: failing-job
    spec:
      containers:
      - args:
        - sleep
        - "60"
        image: busybox
        name: sleep-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/failing-job

skipped mutate policy add-safe-to-evict -> resource default/Job/failing-job
policy disallow-default-namespace -> resource default/Job/failing-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/failing-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/failing-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/failing-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Job/failing-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/failing-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/failing-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: failing-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-pod:
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  namespace: default
spec:
  containers:
  - image: vinsdocker/k8s-failing-container
    name: failing-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod
policy disallow-default-namespace -> resource default/Pod/my-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/my-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/my-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/my-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failover-assistant.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Deployment/hwameistor-failover-assistant:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hwameistor-failover-assistant
  name: hwameistor-failover-assistant
  namespace: dynamic_parameters
spec:
  replicas: dynamic_parameters
  selector:
    matchLabels:
      app: hwameistor-failover-assistant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hwameistor-failover-assistant
    spec:
      containers:
      - image: dynamic_parameters/dynamic_parameters:dynamic_parameters
        imagePullPolicy: IfNotPresent
        name: failover-assistant
        resources: null
      serviceAccountName: hwameistor-admin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant

skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant
policy drop-all-capabilities -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: failover-assistant1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Deployment/hwameistor-failover-assistant:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hwameistor-failover-assistant
  name: hwameistor-failover-assistant
  namespace: dynamic_parameters
spec:
  replicas: dynamic_parameters
  selector:
    matchLabels:
      app: hwameistor-failover-assistant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hwameistor-failover-assistant
    spec:
      containers:
      - image: dynamic_parameters/dynamic_parameters:dynamic_parameters
        imagePullPolicy: IfNotPresent
        name: failover-assistant
        resources: null
      serviceAccountName: hwameistor-admin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant

skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant
policy drop-all-capabilities -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dynamic_parameters/Deployment/hwameistor-failover-assistant failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: failpatchedResource.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myfailedpod:
apiVersion: v1
kind: Pod
metadata:
  name: myfailedpod
  namespace: default
spec:
  automountServiceAccountToken: false
  containers:
  - image: kyverno/kyverno:1.2.3
    name: kyverno
  - image: redis:latest
    name: redis
  initContainers:
  - image: kyverno/kyverno:latest
    name: kyverno-init
  - image: busybox:1.28
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod
policy disallow-default-namespace -> resource default/Pod/myfailedpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myfailedpod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myfailedpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myfailedpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myfailedpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/myfailedpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/myfailedpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myfailedpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myfailedpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failpatchedResource1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myfailedpod:
apiVersion: v1
kind: Pod
metadata:
  name: myfailedpod
  namespace: default
spec:
  automountServiceAccountToken: false
  containers:
  - image: kyverno/kyverno:1.2.3
    name: kyverno
  - image: redis:latest
    name: redis
  initContainers:
  - image: kyverno/kyverno:latest
    name: kyverno-init
  - image: busybox:1.28
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod
policy disallow-default-namespace -> resource default/Pod/myfailedpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myfailedpod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myfailedpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myfailedpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myfailedpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/myfailedpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/myfailedpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myfailedpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myfailedpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failpatchedResource2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myfailedpod:
apiVersion: v1
kind: Pod
metadata:
  name: myfailedpod
  namespace: default
spec:
  automountServiceAccountToken: false
  containers:
  - image: kyverno/kyverno:1.2.3
    name: kyverno
  - image: redis:latest
    name: redis
  initContainers:
  - image: kyverno/kyverno:latest
    name: kyverno-init
  - image: busybox:1.28
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod
policy disallow-default-namespace -> resource default/Pod/myfailedpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myfailedpod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myfailedpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myfailedpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myfailedpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/myfailedpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/myfailedpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myfailedpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myfailedpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failpatchedResource3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myfailedpod:
apiVersion: v1
kind: Pod
metadata:
  name: myfailedpod
  namespace: default
spec:
  automountServiceAccountToken: false
  containers:
  - image: kyverno/kyverno:1.2.3
    name: kyverno
  - image: redis:latest
    name: redis
  initContainers:
  - image: kyverno/kyverno:latest
    name: kyverno-init
  - image: busybox:1.28
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod
policy disallow-default-namespace -> resource default/Pod/myfailedpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myfailedpod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myfailedpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myfailedpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myfailedpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/myfailedpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/myfailedpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myfailedpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myfailedpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failpatchedResource4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myfailedpod:
apiVersion: v1
kind: Pod
metadata:
  name: myfailedpod
  namespace: default
spec:
  automountServiceAccountToken: false
  containers:
  - image: kyverno/kyverno:1.2.3
    name: kyverno
  - image: redis:latest
    name: redis
  initContainers:
  - image: kyverno/kyverno:latest
    name: kyverno-init
  - image: busybox:1.28
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myfailedpod
policy disallow-default-namespace -> resource default/Pod/myfailedpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myfailedpod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myfailedpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myfailedpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myfailedpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/myfailedpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/myfailedpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myfailedpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myfailedpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failuer2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/failure2:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: failure2
  name: failure2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLables:
      app: failure2
  strategy: {}
  template:
    matadata:
      creationTimestamp: null
      labels:
        app: failure2
    spec:
      containers:
      - image: multistage-img
        imagePullPolicy: Never
        name: multistage-img
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/failure2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/failure2
policy disallow-default-namespace -> resource default/Deployment/failure2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/failure2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/failure2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/failure2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/failure2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/failure2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/failure2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/failure2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/failure2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failuer21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/failure2:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: failure2
  name: failure2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLables:
      app: failure2
  strategy: {}
  template:
    matadata:
      creationTimestamp: null
      labels:
        app: failure2
    spec:
      containers:
      - image: multistage-img
        imagePullPolicy: Never
        name: multistage-img
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/failure2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/failure2
policy disallow-default-namespace -> resource default/Deployment/failure2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/failure2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/failure2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/failure2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/failure2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/failure2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/failure2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/failure2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/failure2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failure.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/failure:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: failure
  name: failure
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - echo "Saliendo" && exit 1
    image: busybox
    name: failure
    resources:
      limits:
        cpu: 500m
        memory: 64Mi
  restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/failure

skipped mutate policy add-safe-to-evict -> resource default/Pod/failure
policy disallow-default-namespace -> resource default/Pod/failure failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/failure failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/failure failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/failure failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/failure failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/failure failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/failure failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/failure failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/failure failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: failure-during-sync.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/failure-during-sync:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    my-label: has-inva/id-character!
  name: failure-during-sync
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: failure-during-sync1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/failure-during-sync:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    my-label: has-inva/id-character!
  name: failure-during-sync
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fake-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fake-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fake-deployment
  namespace: default
spec:
  replicas: 5000
  selector:
    matchLabels:
      app: fake-pod
  template:
    metadata:
      labels:
        app: fake-pod
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - kwok
      containers:
      - image: fake-image
        name: fake-container
      tolerations:
      - effect: NoSchedule
        key: kwok.x-k8s.io/node
        operator: Exists

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fake-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fake-deployment
policy disallow-default-namespace -> resource default/Deployment/fake-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fake-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fake-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fake-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fake-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fake-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fake-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fake-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fake-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: FakeHello_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/tls-cert:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNzRENDQVpnQ0NRRFd2TnRjRzNpelZEQU5CZ2txaGtpRzl3MEJBUXNGQURBYU1SZ3dGZ1lEVlFRRERBOWgKYldKaGMzTmhaRzl5TFdObGNuUXdIaGNOTWpFd056QTRNakF5T0RNd1doY05Nakl3TnpBNE1qQXlPRE13V2pBYQpNUmd3RmdZRFZRUUREQTloYldKaGMzTmhaRzl5TFdObGNuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1pVbXhqT1lrTWlKRm0yZSttZDlMelNwd0oxSWlic1lUWHp5a1NiMExZYlNqcG5jMGoKV0dWMEppOXdlU3FSSFFPMHM4NUZreENzT2s1K2ZCWDFJOTYra1Z2V3NyeWgwcDlsdjI3ZUpHZFp1Q1ZsSmR3cApuYnBaWFF6R3JjWVVaeTA2WEVWOGxkaFdOSVhMazc1bmxsWmE5M2xjajRXRzNTRHpzT2MrdEtWaEtNaG9QSkVaClVGbXNxZ080dm8yZkJxYk0zNXhBT3lFSHhodXgvVlNLeVIxbHN0S0dsd25icGliZDc2UUZCdWYwbHN2bEJRTFAKV2xiRW8zZzI0NWxMNFhMWjg2UURoaTJseTdSNFN5em4yZ2E2TjZYQWNxMjFYTzNQUzhPaFp6d2J1cGpEMHRadApxL0JjY01kTElXbm9zVmlpc0FVdElLUHpCbjVkNFhBaGRtVnhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBSmFONUVxcTlqMi9IVnJWWk9wT3BuWVRSZlU0OU1pNDlvbkF1ZjlmQk9tR3dlMHBWSmpqTVlyQW9kZ1IKYWVyUHVWUlBEWGRzZXczejJkMjliRzBMVTJTdEpBMEY0Z05vWTY0bGVZUTN0RjFDUmxsczdKaWVWelN1RVVyUwpLZjZiaWJ0aUlLSU4waEdTV3R2YU04ZXhqb2Y3ZGUyeWFLNEVPeE1pQmJyZkFPNnJ6MXgzc1ovOENGTnp3OXNRClhCNWpZSWhNZWhsb2xhR0U5RGNydUdrbStFQ3ZCNjZkajFNcm5UamVJcWc4QnN4Wm5WYlZ4cDlUZTJRZ2hyTmkKckVySndjV1NSU3lUZzBEZXdUektYQUx2aW5iRTliZ3pNdFhNSEhkUmZQYUMvWmFCTUd1QXExeWJTOUV3M2MvWgo1dk00aFdOaHU5MS9DSmN5UVJHdlJRWXFiZTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbVZKc1l6bUpESWlSWnRudnBuZlM4MHFjQ2RTSW03R0UxODhwRW05QzJHMG82WjNOCkkxaGxkQ1l2Y0hrcWtSMER0TFBPUlpNUXJEcE9mbndWOVNQZXZwRmIxcks4b2RLZlpiOXUzaVJuV2JnbFpTWGMKS1oyNldWME14cTNHRkdjdE9seEZmSlhZVmpTRnk1TytaNVpXV3ZkNVhJK0ZodDBnODdEblByU2xZU2pJYUR5UgpHVkJacktvRHVMNk5ud2Ftek4rY1FEc2hCOFlic2YxVWlza2RaYkxTaHBjSjI2WW0zZStrQlFibjlKYkw1UVVDCnoxcFd4S040TnVPWlMrRnkyZk9rQTRZdHBjdTBlRXNzNTlvR3VqZWx3SEt0dFZ6dHowdkRvV2M4RzdxWXc5TFcKYmF2d1hIREhTeUZwNkxGWW9yQUZMU0NqOHdaK1hlRndJWFpsY1FJREFRQUJBb0lCQUdlaVNOVUE3TnZsNjdKRAptVE5DUnZwZjhmekxCZE9IT0MzUFB3blEzclAvaE9uejJkY01SdmN0WUY5NzV3UFRRcy8vd1d0UnJyRmJiL2NhCjFKU3dQRDAvYjM0OXJqY0xjT2FMY05zQ2JFRStzVGdmVVNOb0U2K1hyNjBUaEpJQjg1WkJERTdiMGpEaXE1VWgKTmxBNlZBQ0V5aW1BY1ZicFhQNmJFcE5WODNzcDFBUEUrc2xpUWVrMHBWK2VJcFNuWGNkMWRNbjdhcHNuYmR3MgpBbDErRDBiTkJweUNSd1dCMm81dmh0ZzIrcndaQUNOdTFQdmJGc0g5bURGUit2elJBT1oycFRDMzRwWDBhcktECnUyMGFMTU1PT2NETWN0bWp2OHJrcVJVRWt6aTNuV0ljWVVVYXFKVG1Ub2RLZlRobXhsbGx5aDg5UVAzUG8raEwKYWk0b0VJa0NnWUVBeUcvQ2xaa3g4WHF3M0NrZXJrZlZoTm83OHIxWFVFRFE3U3dMUUllaHo1Ri9iRU9WRS8yUgpJeGFZQkx2alMwRkRzY0s3TkpPeU9kTVBpU1VNcHdMSC9kNnNrWjA2QWRTVllPbUJpNUFCMUJNZXk1b0cvSmtXClpzSm42Q3g5aEJUZTVzQnRCUWQ1K1phUXU4aDBhUFcwcFh3b1h5aW1JejNpZ3Vxdk1Dc3plNU1DZ1lFQXc5TWQKY2ZmK1FhbmxqMnVpcmcxbnljMFVkN1h6ekFZRXVMUERPdHltcm1SSU9BNGl4c3JzMzRmbVE4STc4cXpDMnhmNQpEdlJPNTNzMW9XSHNzbXdxcmgzQ0RVaDF2UEVEcHVqR3dLd2E4bE1yQ2piWDhtYk1ibVNyelBuczVWeVhXaEhFCkN3VHNPV3RleUZ3OVFkZTR1K011SEYzSHB0SHFvZlRFTGZJRXBXc0NnWUVBdVBPM3dFZGVlSTlZUjYrQjZodkwKQVE1SHB4UGtUOStmYWxyci94Mm95RnBnRkV6QWNYUFh5Mkw3MzlKb1NIYnV1a2NRYTlHbDhnbTZHamtmMWJTUgpTc2VBd2RVdFE2Y2dPQThBUlFJYlRkQmU2RTAzQ1R0U0dueGxXUzVFbSs2T1NLdGpiZkthTVI4b2FyN3IvRFpOCi9TMzJLdWpkZFVPVGttNXdQYWgvbHhVQ2dZQmh3N0dNcDZJQmlGKzZaYU5YUUF3VC9OWCtHaEg0UnZ6dWRaaS8KZDArait4N3ZGV2VaVmRCQ25PZUI1cVBsT1Frak51bTU1SkRNRW9BbzdPbXQva0Nrb3VpeGx2NW84TzdBMHEvLwpteXpzMUViRmw3SGlMQjVkOHRhdXhBdllTb3lwZy9zYkFUOHFQNGVYZ2kxM0JNc095cEhIeWE0V2cvQ2ZJTU1jCnFScFd0d0tCZ0hYRjVSWUo4alpLTnE2bHI5TVZhZFRXdkpRZ01VbHR0UWlaM3ZrMmc0S09Kc1NWdWtEbjFpZysKQ0NKZUU2VS9OS0N3ejJSMXBjSWVET3dwek9IYzJWNkt4Z0RYZUYyVWsvMjMydlB3aXRjVExhS2hsTTlDOGNLcwp6RGlJcVFkZDRLdFhDajc4S040TlhHZ1hJdVdXOHZERFY4Q05wQm45eUlUUXFST3NRSHRrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: tls-cert
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: FakeHelloEC_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/tls-cert:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNzRENDQVpnQ0NRRFd2TnRjRzNpelZEQU5CZ2txaGtpRzl3MEJBUXNGQURBYU1SZ3dGZ1lEVlFRRERBOWgKYldKaGMzTmhaRzl5TFdObGNuUXdIaGNOTWpFd056QTRNakF5T0RNd1doY05Nakl3TnpBNE1qQXlPRE13V2pBYQpNUmd3RmdZRFZRUUREQTloYldKaGMzTmhaRzl5TFdObGNuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1pVbXhqT1lrTWlKRm0yZSttZDlMelNwd0oxSWlic1lUWHp5a1NiMExZYlNqcG5jMGoKV0dWMEppOXdlU3FSSFFPMHM4NUZreENzT2s1K2ZCWDFJOTYra1Z2V3NyeWgwcDlsdjI3ZUpHZFp1Q1ZsSmR3cApuYnBaWFF6R3JjWVVaeTA2WEVWOGxkaFdOSVhMazc1bmxsWmE5M2xjajRXRzNTRHpzT2MrdEtWaEtNaG9QSkVaClVGbXNxZ080dm8yZkJxYk0zNXhBT3lFSHhodXgvVlNLeVIxbHN0S0dsd25icGliZDc2UUZCdWYwbHN2bEJRTFAKV2xiRW8zZzI0NWxMNFhMWjg2UURoaTJseTdSNFN5em4yZ2E2TjZYQWNxMjFYTzNQUzhPaFp6d2J1cGpEMHRadApxL0JjY01kTElXbm9zVmlpc0FVdElLUHpCbjVkNFhBaGRtVnhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBSmFONUVxcTlqMi9IVnJWWk9wT3BuWVRSZlU0OU1pNDlvbkF1ZjlmQk9tR3dlMHBWSmpqTVlyQW9kZ1IKYWVyUHVWUlBEWGRzZXczejJkMjliRzBMVTJTdEpBMEY0Z05vWTY0bGVZUTN0RjFDUmxsczdKaWVWelN1RVVyUwpLZjZiaWJ0aUlLSU4waEdTV3R2YU04ZXhqb2Y3ZGUyeWFLNEVPeE1pQmJyZkFPNnJ6MXgzc1ovOENGTnp3OXNRClhCNWpZSWhNZWhsb2xhR0U5RGNydUdrbStFQ3ZCNjZkajFNcm5UamVJcWc4QnN4Wm5WYlZ4cDlUZTJRZ2hyTmkKckVySndjV1NSU3lUZzBEZXdUektYQUx2aW5iRTliZ3pNdFhNSEhkUmZQYUMvWmFCTUd1QXExeWJTOUV3M2MvWgo1dk00aFdOaHU5MS9DSmN5UVJHdlJRWXFiZTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbVZKc1l6bUpESWlSWnRudnBuZlM4MHFjQ2RTSW03R0UxODhwRW05QzJHMG82WjNOCkkxaGxkQ1l2Y0hrcWtSMER0TFBPUlpNUXJEcE9mbndWOVNQZXZwRmIxcks4b2RLZlpiOXUzaVJuV2JnbFpTWGMKS1oyNldWME14cTNHRkdjdE9seEZmSlhZVmpTRnk1TytaNVpXV3ZkNVhJK0ZodDBnODdEblByU2xZU2pJYUR5UgpHVkJacktvRHVMNk5ud2Ftek4rY1FEc2hCOFlic2YxVWlza2RaYkxTaHBjSjI2WW0zZStrQlFibjlKYkw1UVVDCnoxcFd4S040TnVPWlMrRnkyZk9rQTRZdHBjdTBlRXNzNTlvR3VqZWx3SEt0dFZ6dHowdkRvV2M4RzdxWXc5TFcKYmF2d1hIREhTeUZwNkxGWW9yQUZMU0NqOHdaK1hlRndJWFpsY1FJREFRQUJBb0lCQUdlaVNOVUE3TnZsNjdKRAptVE5DUnZwZjhmekxCZE9IT0MzUFB3blEzclAvaE9uejJkY01SdmN0WUY5NzV3UFRRcy8vd1d0UnJyRmJiL2NhCjFKU3dQRDAvYjM0OXJqY0xjT2FMY05zQ2JFRStzVGdmVVNOb0U2K1hyNjBUaEpJQjg1WkJERTdiMGpEaXE1VWgKTmxBNlZBQ0V5aW1BY1ZicFhQNmJFcE5WODNzcDFBUEUrc2xpUWVrMHBWK2VJcFNuWGNkMWRNbjdhcHNuYmR3MgpBbDErRDBiTkJweUNSd1dCMm81dmh0ZzIrcndaQUNOdTFQdmJGc0g5bURGUit2elJBT1oycFRDMzRwWDBhcktECnUyMGFMTU1PT2NETWN0bWp2OHJrcVJVRWt6aTNuV0ljWVVVYXFKVG1Ub2RLZlRobXhsbGx5aDg5UVAzUG8raEwKYWk0b0VJa0NnWUVBeUcvQ2xaa3g4WHF3M0NrZXJrZlZoTm83OHIxWFVFRFE3U3dMUUllaHo1Ri9iRU9WRS8yUgpJeGFZQkx2alMwRkRzY0s3TkpPeU9kTVBpU1VNcHdMSC9kNnNrWjA2QWRTVllPbUJpNUFCMUJNZXk1b0cvSmtXClpzSm42Q3g5aEJUZTVzQnRCUWQ1K1phUXU4aDBhUFcwcFh3b1h5aW1JejNpZ3Vxdk1Dc3plNU1DZ1lFQXc5TWQKY2ZmK1FhbmxqMnVpcmcxbnljMFVkN1h6ekFZRXVMUERPdHltcm1SSU9BNGl4c3JzMzRmbVE4STc4cXpDMnhmNQpEdlJPNTNzMW9XSHNzbXdxcmgzQ0RVaDF2UEVEcHVqR3dLd2E4bE1yQ2piWDhtYk1ibVNyelBuczVWeVhXaEhFCkN3VHNPV3RleUZ3OVFkZTR1K011SEYzSHB0SHFvZlRFTGZJRXBXc0NnWUVBdVBPM3dFZGVlSTlZUjYrQjZodkwKQVE1SHB4UGtUOStmYWxyci94Mm95RnBnRkV6QWNYUFh5Mkw3MzlKb1NIYnV1a2NRYTlHbDhnbTZHamtmMWJTUgpTc2VBd2RVdFE2Y2dPQThBUlFJYlRkQmU2RTAzQ1R0U0dueGxXUzVFbSs2T1NLdGpiZkthTVI4b2FyN3IvRFpOCi9TMzJLdWpkZFVPVGttNXdQYWgvbHhVQ2dZQmh3N0dNcDZJQmlGKzZaYU5YUUF3VC9OWCtHaEg0UnZ6dWRaaS8KZDArait4N3ZGV2VaVmRCQ25PZUI1cVBsT1Frak51bTU1SkRNRW9BbzdPbXQva0Nrb3VpeGx2NW84TzdBMHEvLwpteXpzMUViRmw3SGlMQjVkOHRhdXhBdllTb3lwZy9zYkFUOHFQNGVYZ2kxM0JNc095cEhIeWE0V2cvQ2ZJTU1jCnFScFd0d0tCZ0hYRjVSWUo4alpLTnE2bHI5TVZhZFRXdkpRZ01VbHR0UWlaM3ZrMmc0S09Kc1NWdWtEbjFpZysKQ0NKZUU2VS9OS0N3ejJSMXBjSWVET3dwek9IYzJWNkt4Z0RYZUYyVWsvMjMydlB3aXRjVExhS2hsTTlDOGNLcwp6RGlJcVFkZDRLdFhDajc4S040TlhHZ1hJdVdXOHZERFY4Q05wQm45eUlUUXFST3NRSHRrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: tls-cert
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: FakeHelloEC_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/hello-elliptic-curve-client:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrRENDQVRlZ0F3SUJBZ0lJWEVoem4rSlJMd2t3Q2dZSUtvWkl6ajBFQXdJd0l6RWhNQjhHQTFVRUF3d1kKYXpOekxXTnNhV1Z1ZEMxallVQXhOalExTmpRek5URTVNQjRYRFRJeU1ESXlNekU1TVRFMU9Wb1hEVEl6TURJeQpNekU1TVRFMU9Wb3dNREVYTUJVR0ExVUVDaE1PYzNsemRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41CmMzUmxiVHBoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJLVVJwSUs2K3VEWWppVTgKSjZwR2o2ZG9uNjh0UHNRY29TQU5sVnExQzZCSlk5ZW5lNFRpRmtLN05nSy9tbzFpUGx2aWtENnRxVXRpVUlwSQp2SWcvL0QralNEQkdNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFmCkJnTlZIU01FR0RBV2dCUk40U1g4MHMvQXpkMTJsSVlVaXYwZTVPcG1JakFLQmdncWhrak9QUVFEQWdOSEFEQkUKQWlBenZuWUYzRHVCK0pqcHNJSDdwZDltbVJjam1EdVZURGtJK1JNUVhCa3BGUUlnWFF3cm9SVTlMWmpxTEFiVwo4cnhLV0NwVm1QUHNWaHFabzNrTU9tNnpHN1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJlRENDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdFkyeHAKWlc1MExXTmhRREUyTkRVMk5ETTFNVGt3SGhjTk1qSXdNakl6TVRreE1UVTVXaGNOTXpJd01qSXhNVGt4TVRVNQpXakFqTVNFd0h3WURWUVFEREJock0zTXRZMnhwWlc1MExXTmhRREUyTkRVMk5ETTFNVGt3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSazhMMkdMVEdIaDJpcGV4YlhsUUpxYmRjZXU3WTdtR0lzdk5SSmNFS2IKUXAyendHb1VNNlNIQ25CZVFxRCtTelFqcE1mODR4eHFleDFYRnhyTHRyeXRvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVRlRWwvTkxQd00zZGRwU0dGSXI5Ckh1VHFaaUl3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUt3Skd4cjFsOFdwaC80UitRazZGTkRNSmV4OUFFdHEKbGY2L3QreXpDYW01QWlFQWtKSnA0dEpnV0xIT3pyeklxVmxsd1AxWUQvcCt3K3N3YkZ4b0R6ZU4xRDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURackt5SExTZXlMUXJUWUswOXNFcm5HRTNhMkhRVEpqeEU3QUxrOXFISERvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcFJHa2dycjY0TmlPSlR3bnFrYVBwMmlmcnkwK3hCeWhJQTJWV3JVTG9FbGoxNmQ3aE9JVwpRcnMyQXIrYWpXSStXK0tRUHEycFMySlFpa2k4aUQvOFB3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hello-elliptic-curve-client
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: FakeHelloEC_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/hello-elliptic-curve-kubeconfig:
apiVersion: v1
data:
  kubeconfig.yaml: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2FrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVeVRrUlZNazVFVFRGTlZHdDNTR2hqVGsxcVNYZE5ha2w2VFZScmVFMVVWVFZYYUdOT1RYcEpkMDFxU1hoTlZHdDRUVlJWTlFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXlUa1JWTWs1RVRURk5WR3QzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUUmtSVFVWbHpOMGx0VDFvd2VIRnlTRWh4ZFcwelkwZGhTVXBzUW5oWlJrUnRSVFpqUkROWFRGZ0tjR2xNYlZGa2RYaDBNMWh4U21WSFRrVXlWbk4wYjNoaE9ERkxkMGh0UkRZNFdYaGhjMEZvTmpkRlpFWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWU3RpV0VoM1VsWXJXQ3RPWlRrelVDdEZjemhXQ21oMFNVRndWa1YzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRkozUVhkU1FVbG5UMjgzY2t0VVpUbDRNbVIzWlhsbmEyOXVRak0wUXpWek9FTXdibVV5TVZvS1VuZEZhVmhUVkZkT1RGbERTVU55VWpoUGREQk5OWFp6Um5KRmVUWnNNbVZWZDBGcllXZGxRbkU0TmtSTVl6TXZWSEJTVm5CdFdtTUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly90ZXN0LWNsdXN0ZXIua2x1c3Rlci5iYWtlcnN0cmVldC5pbwogIG5hbWU6IGRlZmF1bHQKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGRlZmF1bHQKICAgIHVzZXI6IGRlZmF1bHQKICBuYW1lOiBkZWZhdWx0CmN1cnJlbnQtY29udGV4dDogZGVmYXVsdApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGRlZmF1bHQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVUpyUkVORFFWUmxaMEYzU1VKQlowbEpXRVZvZW00clNsSk1kMnQzUTJkWlNVdHZXa2w2YWpCRlFYZEpkMGw2UldoTlFqaEhRVEZWUlVGM2Qxa0tZWHBPZWt4WFRuTmhWMVoxWkVNeGFsbFZRWGhPYWxFeFRtcFJlazVVUlRWTlFqUllSRlJKZVUxRVNYbE5la1UxVFZSRk1VOVdiMWhFVkVsNlRVUkplUXBOZWtVMVRWUkZNVTlXYjNkTlJFVllUVUpWUjBFeFZVVkRhRTFQWXpOc2VtUkhWblJQYlRGb1l6TlNiR051VFhoR1ZFRlVRbWRPVmtKQlRWUkVTRTQxQ21NelVteGlWSEJvV2tjeGNHSnFRbHBOUWsxSFFubHhSMU5OTkRsQlowVkhRME54UjFOTk5EbEJkMFZJUVRCSlFVSkxWVkp3U1VzMkszVkVXV3BwVlRnS1NqWndSMm8yWkc5dU5qaDBVSE5SWTI5VFFVNXNWbkV4UXpaQ1NsazVaVzVsTkZScFJtdExOMDVuU3k5dGJ6RnBVR3gyYVd0RU5uUnhWWFJwVlVsd1NRcDJTV2N2TDBRcmFsTkVRa2ROUVRSSFFURlZaRVIzUlVJdmQxRkZRWGRKUm05RVFWUkNaMDVXU0ZOVlJVUkVRVXRDWjJkeVFtZEZSa0pSWTBSQmFrRm1Da0puVGxaSVUwMUZSMFJCVjJkQ1VrNDBVMWc0TUhNdlFYcGtNVEpzU1ZsVmFYWXdaVFZQY0cxSmFrRkxRbWRuY1docmFrOVFVVkZFUVdkT1NFRkVRa1VLUVdsQmVuWnVXVVl6UkhWQ0swcHFjSE5KU0Rkd1pEbHRiVkpqYW0xRWRWWlVSR3RKSzFKTlVWaENhM0JHVVVsbldGRjNjbTlTVlRsTVdtcHhURUZpVndvNGNuaExWME53Vm0xUVVITldhSEZhYnpOclRVOXRObnBITjFrOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwS0xTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVUpsUkVORFFWSXlaMEYzU1VKQlowbENRVVJCUzBKblozRm9hMnBQVUZGUlJFRnFRV3BOVTBWM1NIZFpSRlpSVVVSRVFtaHlUVE5OZEZreWVIQUtXbGMxTUV4WFRtaFJSRVV5VGtSVk1rNUVUVEZOVkd0M1NHaGpUazFxU1hkTmFrbDZUVlJyZUUxVVZUVlhhR05PVFhwSmQwMXFTWGhOVkd0NFRWUlZOUXBYYWtGcVRWTkZkMGgzV1VSV1VWRkVSRUpvY2swelRYUlpNbmh3V2xjMU1FeFhUbWhSUkVVeVRrUlZNazVFVFRGTlZHdDNWMVJCVkVKblkzRm9hMnBQQ2xCUlNVSkNaMmR4YUd0cVQxQlJUVUpDZDA1RFFVRlNhemhNTWtkTVZFZElhREpwY0dWNFlsaHNVVXB4WW1SalpYVTNXVGR0UjBsemRrNVNTbU5GUzJJS1VYQXllbmRIYjFWTk5sTklRMjVDWlZGeFJDdFRlbEZxY0UxbU9EUjRlSEZsZURGWVJuaHlUSFJ5ZVhSdk1FbDNVVVJCVDBKblRsWklVVGhDUVdZNFJRcENRVTFEUVhGUmQwUjNXVVJXVWpCVVFWRklMMEpCVlhkQmQwVkNMM3BCWkVKblRsWklVVFJGUm1kUlZWUmxSV3d2VGt4UWQwMHpaR1J3VTBkR1NYSTVDa2gxVkhGYWFVbDNRMmRaU1V0dldrbDZhakJGUVhkSlJGTlJRWGRTWjBsb1FVdDNTa2Q0Y2pGc09GZHdhQzgwVWl0UmF6WkdUa1JOU21WNE9VRkZkSEVLYkdZMkwzUXJlWHBEWVcwMVFXbEZRV3RLU25BMGRFcG5WMHhJVDNweWVrbHhWbXhzZDFBeFdVUXZjQ3QzSzNOM1lrWjRiMFI2WlU0eFJEZzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCRlF5QlFVa2xXUVZSRklFdEZXUzB0TFMwdENrMUlZME5CVVVWRlNVUmFja3Q1U0V4VFpYbE1VWEpVV1Vzd09YTkZjbTVIUlROaE1raFJWRXBxZUVVM1FVeHJPWEZJU0VSdlFXOUhRME54UjFOTk5Ea0tRWGRGU0c5VlVVUlJaMEZGY0ZKSGEyZHljalkwVG1sUFNsUjNibkZyWVZCd01tbG1jbmt3SzNoQ2VXaEpRVEpXVjNKVlRHOUZiR294Tm1RM2FFOUpWd3BSY25NeVFYSXJZV3BYU1N0WEswdFJVSEV5Y0ZNeVNsRnBhMms0YVVRdk9GQjNQVDBLTFMwdExTMUZUa1FnUlVNZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=
kind: Secret
metadata:
  name: hello-elliptic-curve-kubeconfig
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: FakeHelloEC_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/hello-elliptic-curve-broken-server:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNDVENDQWJDZ0F3SUJBZ0lJREhPVDU4ZHlUVkV3Q2dZSUtvWkl6ajBFQXdJd0l6RWhNQjhHQTFVRUF3d1kKYXpOekxYTmxjblpsY2kxallVQXhOalExTmpRek5URTVNQjRYRFRJeU1ESXlNekU1TVRFMU9Wb1hEVEl6TURJeQpNekU1TVRFMU9Wb3dHVEVYTUJVR0ExVUVBeE1PYTNWaVpTMWhjR2x6WlhKMlpYSXdXVEFUQmdjcWhrak9QUUlCCkJnZ3Foa2pPUFFNQkJ3TkNBQVFHbTdIcFV1ZUxXS2twK3U0SFRFbmQ1M0ZKM2Zlb3EwTlo1d3lMVkM0UWFqbmUKMGE1bUp0SzdjYVFWUXJyQ3c0OStsbVRkcHV0UjFUeXpzVzFVRC9BTW80SFhNSUhVTUE0R0ExVWREd0VCL3dRRQpBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQWZCZ05WSFNNRUdEQVdnQlQ1dGNmQkZYNWY0MTczCmMvNFN6eFdHMGdDbFVUQ0Jpd1lEVlIwUkJJR0RNSUdBZ2hacmRXSmxjbTVsZEdWekxtUmxabUYxYkhRdWMzWmoKZ2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQ0NtdDFZbVZ5Ym1WMFpYT0NDV3h2WTJGc2FHOXpkSUlqZEdWegpkQzFqYkhWemRHVnlMbXRzZFhOMFpYSXVZbUZyWlhKemRISmxaWFF1YVcrSEJBb3JBQUdIQkg4QUFBR0hCQXBZClFRS0hCQW9yQUFFd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0VsL254Z3pRRHYrUGpvQWN2bU9adFRyT3piOFgKaTRxcGpnQmdmS1RWcFBNQ0lDM0wxNHpJMGJwYWZpSVlUSHpVSWx0S1NlOFllRkF2YldRL3ZZdGRTTEh1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkakNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdGMyVnkKZG1WeUxXTmhRREUyTkRVMk5ETTFNVGt3SGhjTk1qSXdNakl6TVRreE1UVTVXaGNOTXpJd01qSXhNVGt4TVRVNQpXakFqTVNFd0h3WURWUVFEREJock0zTXRjMlZ5ZG1WeUxXTmhRREUyTkRVMk5ETTFNVGt3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFTRkRTUVlzN0ltT1oweHFySEhxdW0zY0dhSUpsQnhZRkRtRTZjRDNXTFgKcGlMbVFkdXh0M1hxSmVHTkUyVnN0b3hhODFLd0htRDY4WXhhc0FoNjdFZEZvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVStiWEh3UlYrWCtOZTkzUCtFczhWCmh0SUFwVkV3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnT283cktUZTl4MmR3ZXlna29uQjM0QzVzOEMwbmUyMVoKUndFaVhTVFdOTFlDSUNyUjhPdDBNNXZzRnJFeTZsMmVVd0FrYWdlQnE4NkRMYzMvVHBSVnBtWmMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCkVSUgotLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hello-elliptic-curve-broken-server
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fake-node.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Node/kwok-node-0:
apiVersion: v1
kind: Node
metadata:
  annotations:
    kwok.x-k8s.io/node: fake
    node.alpha.kubernetes.io/ttl: "0"
  labels:
    beta.kubernetes.io/arch: amd64
    beta.kubernetes.io/os: linux
    kubernetes.io/arch: amd64
    kubernetes.io/hostname: kwok-node-0
    kubernetes.io/os: linux
    kubernetes.io/role: agent
    node-role.kubernetes.io/agent: ""
    type: kwok
  name: kwok-node-0
  namespace: default
spec:
  taints:
  - effect: NoSchedule
    key: kwok.x-k8s.io/node
    value: fake
status:
  allocatable:
    cpu: "32"
    memory: 256Gi
    pods: "110"
  capacity:
    cpu: "32"
    memory: 256Gi
    pods: "110"
  nodeInfo:
    architecture: amd64
    bootID: ""
    containerRuntimeVersion: ""
    kernelVersion: ""
    kubeProxyVersion: fake
    kubeletVersion: fake
    machineID: ""
    operatingSystem: linux
    osImage: ""
    systemUUID: ""
  phase: Running

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fake-provider-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/secret-to-be-created:
apiVersion: v1
data:
  foo_bar: SEVMTE8x
  john: ZG9l
kind: Secret
metadata:
  name: secret-to-be-created
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: faker-etl-cj.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cron-jobs/CronJob/faker-etl:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: faker-etl
  namespace: cron-jobs
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: 192.168.5.100/faker-etl:0.0.2
            name: faker-etl
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
  schedule: '*/10 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cron-jobs/CronJob/faker-etl

skipped mutate policy add-safe-to-evict -> resource cron-jobs/CronJob/faker-etl
policy drop-cap-net-raw -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: fake-twitter-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fake-twitter-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fake-twitter-ingress
  namespace: default
spec:
  rules:
  - host: localhost
    http:
      paths:
      - backend:
          service:
            name: fake-twitter-fpm-service
            port:
              number: 9000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fake-twitter-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fake-twitter-volume:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fake-twitter-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: falco_rules.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to falco/ConfigMap/falco:
apiVersion: v1
data:
  falco.yaml: |-
    base_syscalls:
      custom_set: []
      repair: false
    buffered_outputs: false
    engine:
      kind: kmod
      kmod:
        buf_size_preset: 4
        drop_failed_exit: false
    file_output:
      enabled: false
      filename: ./events.txt
      keep_alive: false
    grpc:
      bind_address: unix:///run/falco/falco.sock
      enabled: false
      threadiness: 0
    grpc_output:
      enabled: false
    http_output:
      ca_bundle: ""
      ca_cert: ""
      ca_path: /etc/falco/certs/
      client_cert: /etc/falco/certs/client/client.crt
      client_key: /etc/falco/certs/client/client.key
      compress_uploads: false
      echo: false
      enabled: true
      insecure: false
      keep_alive: false
      mtls: false
      url: http://falco-falcosidekick:2801
      user_agent: falcosecurity/falco
    json_include_output_property: true
    json_include_tags_property: true
    json_output: true
    libs_logger:
      enabled: false
      severity: debug
    load_plugins: []
    log_level: info
    log_stderr: true
    log_syslog: true
    metrics:
      convert_memory_to_mb: true
      enabled: false
      include_empty_values: false
      interval: 1h
      kernel_event_counters_enabled: true
      libbpf_stats_enabled: true
      output_rule: true
      resource_utilization_enabled: true
      state_counters_enabled: true
    output_timeout: 2000
    outputs:
      max_burst: 1000
      rate: 0
    outputs_queue:
      capacity: 0
    plugins:
    - init_config: null
      library_path: libk8saudit.so
      name: k8saudit
      open_params: http://:9765/k8s-audit
    - library_path: libcloudtrail.so
      name: cloudtrail
    - init_config: ""
      library_path: libjson.so
      name: json
    priority: debug
    program_output:
      enabled: false
      keep_alive: false
      program: 'jq ''{text: .output}'' | curl -d @- -X POST https://hooks.slack.com/services/XXX'
    rule_matching: first
    rules_file:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/rules.d
    stdout_output:
      enabled: true
    syscall_event_drops:
      actions:
      - log
      - alert
      max_burst: 1
      rate: 0.03333
      simulate_drops: false
      threshold: 0.1
    syscall_event_timeouts:
      max_consecutives: 1000
    syslog_output:
      enabled: true
    time_format_iso_8601: false
    watch_config_files: true
    webserver:
      enabled: true
      k8s_healthz_endpoint: /healthz
      listen_port: 8765
      ssl_certificate: /etc/falco/falco.pem
      ssl_enabled: false
      threadiness: 0
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: falco
    meta.helm.sh/release-namespace: falco
  creationTimestamp: "2024-05-25T04:58:06Z"
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.37.1
    helm.sh/chart: falco-4.3.1
  name: falco
  namespace: falco
  resourceVersion: "371074"
  uid: 8b7bc696-7dc9-4755-90a7-021314bc433c

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: falcoctl-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to falco/ConfigMap/falco-falcoctl:
apiVersion: v1
data:
  falcoctl.yaml: |-
    artifact:
      allowedTypes:
      - rulesfile
      - plugin
      follow:
        every: 6h
        falcoversions: http://localhost:8765/versions
        pluginsDir: /plugins
        refs:
        - falco-rules:3
        rulesfilesDir: /rulesfiles
      install:
        pluginsDir: /plugins
        refs:
        - falco-rules:3
        resolveDeps: true
        rulesfilesDir: /rulesfiles
    indexes:
    - name: falcosecurity
      url: https://falcosecurity.github.io/falcoctl/index.yaml
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: 0.37.1
    helm.sh/chart: falco-4.3.0
  name: falco-falcoctl
  namespace: falco

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: falcoDaemonset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/falco:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: falco
  name: falco
  namespace: default
spec:
  selector:
    matchLabels:
      name: falco
  template:
    metadata:
      labels:
        name: falco
    spec:
      containers:
      - image: falcosecurity/falco:latest
        name: falco
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/falco/
          name: falco-rules-volume
      volumes:
      - configMap:
          name: falco-rules
        name: falco-rules-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/falco

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/falco
policy disallow-default-namespace -> resource default/DaemonSet/falco failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/falco failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/falco failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/falco failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/falco failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/falco failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/falco failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/falco failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/DaemonSet/falco failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: falco-ui-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/sidekick-ui-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sidekick-ui-ingress
  namespace: default
spec:
  rules:
  - host: sidekick-ui.$hostip.nip.io
    http:
      paths:
      - backend:
          service:
            name: falcosidekick-ui
            port:
              number: 2802
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: falco-ui-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/sidekick-ui-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sidekick-ui-ingress
  namespace: default
spec:
  rules:
  - host: sidekick-ui.test.nip.io
    http:
      paths:
      - backend:
          service:
            name: falcosidekick-ui
            port:
              number: 2802
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: falcoWebhook.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/falco-webhook:
apiVersion: v1
kind: Service
metadata:
  name: falco-webhook
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: falco-webhook

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fanout.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/multiapp-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: multiapp-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: googel.com
    http:
      paths:
      - backend:
          service:
            name: app1
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: app2
            port:
              number: 8080
        path: /app2
        pathType: Prefix
      - backend:
          service:
            name: app3
            port:
              number: 8080
        path: /app3
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fanout1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-fanout:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: ingress-fanout
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: testsvc1
            port:
              number: 4201
        path: /path1
        pathType: Exact
      - backend:
          service:
            name: testsvc2
            port:
              number: 4202
        path: /path2
        pathType: Exact

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fanout2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-fanout:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: ingress-fanout
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: testsvc1
            port:
              number: 4201
        path: /path1
        pathType: exact
      - backend:
          service:
            name: testsvc2
            port:
              number: 4202
        path: /path2
        pathType: exact

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fanout-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fanout-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fanout-ingress
  namespace: default
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: web
            port:
              number: 8080
        path: /v1
        pathType: Prefix
      - backend:
          service:
            name: web2
            port:
              number: 8080
        path: /v2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/fanout-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: faraday-svc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/faraday-service:
apiVersion: v1
kind: Service
metadata:
  name: faraday-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: faraday-svc
    env: prod
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: faraday-svc1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/faraday-service:
apiVersion: v1
kind: Service
metadata:
  name: faraday-service
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: faraday-svc
    env: test
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/faraday-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: faraday-svc2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/faraday-service:
apiVersion: v1
kind: Service
metadata:
  name: faraday-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: faraday-svc
    env: uat
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fargate_log.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to aws-observability/ConfigMap/aws-logging:
apiVersion: v1
data:
  filters.conf: |
    [FILTER]
        Name     parser
        Match    *
        Key_name log
        Parser   crio
  flb_log_cw: "false"
  output.conf: "[OUTPUT]\n    Name cloudwatch_logs\n    Match   *\n    region ap-northeast-2\n
    \   log_group_name <CloudWatch_Log_Group_Name>\n    log_stream_prefix from-fluent-bit-\n
    \   auto_create_group true\n    log_key log\n    \n"
  parsers.conf: |
    [PARSER]
        Name crio
        Format Regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>P|F) (?<log>(?:(?!healthcheck).)*)$
        Time_Key    time
        Time_Format %!Y(MISSING)-%!m(MISSING)-%!d(MISSING)T%!H(MISSING):%!M(MISSING):%!S(MISSING).%!L(MISSING)%!z(MISSING)
kind: ConfigMap
metadata:
  name: aws-logging
  namespace: aws-observability

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fast.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/fast:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast
  namespace: default
parameters:
  fstype: ext4
  replication-type: none
  type: pd-ssd
provisioner: kubernetes.io/gce-pd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fast_api_deploy_app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-app-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi-app-deploy
  name: fastapi-app-deploy
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi-app-deploy
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fastapi-app-deploy
    spec:
      containers:
      - image: pablohassan/fast_api_exam_app:latest
        imagePullPolicy: Always
        name: fast-api-exam-app
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: 100m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-app-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-app-deploy
policy disallow-default-namespace -> resource default/Deployment/fastapi-app-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-app-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fast_oom_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analytics-exporter-fast:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-exporter-fast
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-exporter-fast
  template:
    metadata:
      labels:
        app: analytics-exporter-fast
    spec:
      containers:
      - args:
        - 80Mi
        - "0"
        - 100Mi
        - "10"
        - "1"
        image: us-central1-docker.pkg.dev/genuine-flight-317411/devel/memory-eater:1.0
        imagePullPolicy: Always
        name: memory-eater
        resources:
          limits:
            memory: 100Mi
          requests:
            memory: 100Mi
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-exporter-fast

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-exporter-fast
policy disallow-default-namespace -> resource default/Deployment/analytics-exporter-fast failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fast_oom_deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analytics-exporter-fast:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-exporter-fast
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-exporter-fast
  template:
    metadata:
      labels:
        app: analytics-exporter-fast
    spec:
      containers:
      - args:
        - 80Mi
        - "0"
        - 100Mi
        - "10"
        - "1"
        image: us-central1-docker.pkg.dev/genuine-flight-317411/devel/memory-eater:1.0
        imagePullPolicy: Always
        name: memory-eater
        resources:
          limits:
            memory: 100Mi
          requests:
            memory: 100Mi
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-exporter-fast

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-exporter-fast
policy disallow-default-namespace -> resource default/Deployment/analytics-exporter-fast failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analytics-exporter-fast failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi:
apiVersion: v1
kind: Service
metadata:
  name: fastapi
  namespace: default
spec:
  ports:
  - port: 3333
    targetPort: 8000
  selector:
    app: fastapi
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: anemus/simple_fast_api
        name: fastapi
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-sentiment-analysis:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-sentiment-analysis
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi-sentiment-analysis
  template:
    metadata:
      labels:
        app: fastapi-sentiment-analysis
    spec:
      containers:
      - image: llm-sentiment
        name: fastapi-sentiment-analysis
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-sentiment-analysis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-sentiment-analysis
policy disallow-default-namespace -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-sentiment-analysis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi_deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: sidpalas/k8s-getting-started:0.0.1
        name: fastapi-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-sentiment-analysis-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-sentiment-analysis-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi-sentiment-analysis
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi:
apiVersion: v1
kind: Service
metadata:
  name: fastapi
  namespace: default
spec:
  ports:
  - port: 3333
    targetPort: 8000
  selector:
    app: fastapi
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/fastapi-1-configmap:
apiVersion: v1
data:
  APP_NAME: fastapi-1
kind: ConfigMap
metadata:
  name: fastapi-1-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: anemus/simple_fast_api
        name: fastapi
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-svc:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-svc
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-svc-preview:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-svc-preview
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-fastapi-1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: fastapi-1
  name: pod-fastapi-1
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: fastapi-1-configmap
    image: fastapi-app
    imagePullPolicy: IfNotPresent
    name: fastapi-container
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fastapi-1

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fastapi-1
policy disallow-default-namespace -> resource default/Pod/pod-fastapi-1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-fastapi-1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-fastapi-1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-fastapi-1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-fastapi-1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-fastapi-1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-fastapi-1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-fastapi-1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-fastapi-1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to store-config/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: store-config
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/fastapi-1-replicaset:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: fastapi-1-replicaset
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi-1
  template:
    metadata:
      labels:
        app: fastapi-1
      name: pod-fastapi-1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: fastapi-1-configmap
        image: fastapi-app
        imagePullPolicy: IfNotPresent
        name: fastapi-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/fastapi-1-replicaset

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/fastapi-1-replicaset
policy disallow-latest-tag -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/fastapi-1-replicaset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fastapi12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to store-config/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: store-config
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-app
  template:
    metadata:
      labels:
        app: fastapi-app
    spec:
      containers:
      - args:
        - -c
        - poetry run store
        command:
        - /bin/sh
        envFrom:
        - secretRef:
            name: fastapi-secret
        image: store
        imagePullPolicy: Never
        name: web
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource store-config/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource store-config/Deployment/fastapi-deployment
policy disallow-latest-tag -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource store-config/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fastapi13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: ptah://fastapi
        name: fastapi
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-fastapi-1:
apiVersion: v1
kind: Service
metadata:
  name: svc-fastapi-1
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: fastapi-1
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/fastapi-2-configmap:
apiVersion: v1
data:
  APP_NAME: fastapi-2
kind: ConfigMap
metadata:
  name: fastapi-2-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-2-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-2-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: fastapi-2-pod
  template:
    metadata:
      labels:
        app: fastapi-2-pod
      name: fastapi-2-pod
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: fastapi-2-configmap
        image: fastapi-app:cuda
        imagePullPolicy: IfNotPresent
        name: fastapi-container
        ports:
        - containerPort: 80
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-2-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-2-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-2-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-2-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-2-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-2-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-2-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-ro-rootfs -> resource default/Deployment/fastapi-2-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-2-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/fastapi-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fastapi-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi-2-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-fastapi-2:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: fastapi-2
  name: pod-fastapi-2
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: fastapi-2-configmap
    image: fastapi-app
    imagePullPolicy: IfNotPresent
    name: fastapi-container
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fastapi-2

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fastapi-2
policy disallow-default-namespace -> resource default/Pod/pod-fastapi-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-fastapi-2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-fastapi-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-fastapi-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-fastapi-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-fastapi-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-fastapi-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-fastapi-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-fastapi-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-fastapi-2:
apiVersion: v1
kind: Service
metadata:
  name: svc-fastapi-2
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 80
  selector:
    app: fastapi-2-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/svc-fastapi-2 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: boudun/fastapi:latest
        name: fastapi
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: standard
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: standard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: boudun/fastapi:latest
        name: fastapi
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi-deployment
policy disallow-latest-tag -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: standard
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fast-api-service:
apiVersion: v1
kind: Service
metadata:
  name: fast-api-service
  namespace: default
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: fast-api-backend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fast-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fast-api-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fast-api-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fast-api-backend
  template:
    metadata:
      labels:
        app: fast-api-backend
    spec:
      containers:
      - image: fast-api-backend:v1
        name: fast-api-backend
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fast-api-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fast-api-backend
policy disallow-default-namespace -> resource default/Deployment/fast-api-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fast-api-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fast-api-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fast-api-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fast-api-service:
apiVersion: v1
kind: Service
metadata:
  name: fast-api-service
  namespace: default
spec:
  ports:
  - nodePort: 31049
    port: 5000
    targetPort: 5000
  selector:
    app: fast-api-backend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fast-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fast-api-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fast-api-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fast-api-backend
  template:
    metadata:
      labels:
        app: fast-api-backend
    spec:
      containers:
      - image: fast-api-backend:v1
        name: fast-api-backend
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fast-api-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fast-api-backend
policy disallow-default-namespace -> resource default/Deployment/fast-api-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fast-api-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fast-api-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fast-api-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fast-api-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
    name: fastapi
  name: fastapi
  namespace: standard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: johndoe/kube-fastapi
        name: fastapi
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi
policy disallow-latest-tag -> resource standard/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource standard/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource standard/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource standard/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
    name: fastapi
  name: fastapi
  namespace: standard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: johndoe/kube-fastapi
        name: fastapi
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi
policy disallow-latest-tag -> resource standard/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource standard/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource standard/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource standard/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource standard/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-basic-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/fastapi-basic-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: fastapi-basic-label
  name: fastapi-basic-label
  namespace: default
spec:
  containers:
  - image: fn-fastapi-basic-api:es
    name: fastapi-basic-label
    ports:
    - containerPort: 7777
      protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/fastapi-basic-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/fastapi-basic-label
policy disallow-default-namespace -> resource default/Pod/fastapi-basic-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/fastapi-basic-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/fastapi-basic-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/fastapi-basic-label failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/fastapi-basic-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/fastapi-basic-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/fastapi-basic-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/fastapi-basic-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to grocery-ocr-api/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: grocery-ocr-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: postgresql_url
          valueFrom:
            secretKeyRef:
              key: url
              name: fastapi-secret
        image: grocery-ocr-api:latest
        imagePullPolicy: IfNotPresent
        name: fastapi
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource grocery-ocr-api/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource grocery-ocr-api/Deployment/fastapi-deployment
policy disallow-latest-tag -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to grocery-ocr-api/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: grocery-ocr-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: postgresql_url
          valueFrom:
            secretKeyRef:
              key: url
              name: fastapi-secret
        image: grocery-ocr-api:latest
        imagePullPolicy: IfNotPresent
        name: fastapi
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource grocery-ocr-api/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource grocery-ocr-api/Deployment/fastapi-deployment
policy disallow-latest-tag -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource grocery-ocr-api/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fast-api-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fast-api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fast-api-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fast-api
  template:
    metadata:
      labels:
        app: fast-api
    spec:
      containers:
      - image: jjclane97/k8s-fastapi
        name: fast-api
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 500m
            memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fast-api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fast-api-deployment
policy disallow-default-namespace -> resource default/Deployment/fast-api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fast-api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: fastapi-app:35
        name: fastapi
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-deployment12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: datascientest/fastapi:1.0.0
        name: fastapi
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: datascientest/fastapi:1.0.0
        name: fastapi
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: app-secrets
        image: testify876/microservices-ecommerce-fastapi_service:latest
        name: fastapi
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: "0.5"
            memory: 256Mi
      imagePullSecrets:
      - name: regcred

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: ENV
          valueFrom:
            configMapKeyRef:
              key: ENV
              name: app-configmap
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: MYSQL_HOST
              name: app-configmap
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: app-secret
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: app-secret
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: MYSQL_DATABASE
              name: app-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: app-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              key: OPENAI_API_KEY
              name: app-secret
        - name: GOOGLE_AI_STUDIO_API_KEY
          valueFrom:
            secretKeyRef:
              key: GOOGLE_AI_STUDIO_API_KEY
              name: app-secret
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              key: ANTHROPIC_API_KEY
              name: app-secret
        - name: AZURE_API_KEY
          valueFrom:
            secretKeyRef:
              key: AZURE_API_KEY
              name: app-secret
        - name: AZURE_API_BASE
          valueFrom:
            secretKeyRef:
              key: AZURE_API_BASE
              name: app-secret
        - name: GITHUB_API_KEY
          valueFrom:
            secretKeyRef:
              key: GITHUB_API_KEY
              name: app-secret
        - name: XAI_API_KEY
          valueFrom:
            secretKeyRef:
              key: XAI_API_KEY
              name: app-secret
        image: windsnow1025/fastapi
        name: fastapi
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: fastapi
  name: fastapi
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: fastapi
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/kubernates-quarkus-example-project-default: "true"
        io.kompose.service: fastapi
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          value: mongodb://root:example@mongo:27017/quarkus-database
        - name: PERSON_SERVICE_URL
          value: http://quarkus:8080
        image: ghcr.io/woraamy/kubernates-quarkus-example-project/fastapi
        imagePullPolicy: IfNotPresent
        name: fastapi
        ports:
        - containerPort: 5000
          hostPort: 5000
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-replication:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-replication
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi-replication
  template:
    metadata:
      labels:
        app: fastapi-replication
    spec:
      containers:
      - image: chanism/fastapi_example:0.1
        name: fastapi-replication
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-replication

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-replication
policy disallow-default-namespace -> resource default/Deployment/fastapi-replication failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-replication failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-replication failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-replication failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-replication failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-replication failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-replication failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-replication failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST
          value: db-service.default.svc.cluster.local
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: storedb
        - name: POSTGRES_USER
          value: admin
        - name: POSTGRES_PASSWORD
          value: password
        image: abeldevops1/kubernetes-devops-project_fastapi:latest
        name: fastapi-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        - name: REDIS_PORT
          value: "6379"
        image: fastapi-app:minikube
        name: fastapi-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fastapi-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to fastapi/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi
  namespace: fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: ghcr.io/wmramadan/fastapi-boilerplate:latest
        name: fastapi
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource fastapi/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource fastapi/Deployment/fastapi
policy disallow-latest-tag -> resource fastapi/Deployment/fastapi failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource fastapi/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource fastapi/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource fastapi/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource fastapi/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource fastapi/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource fastapi/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource fastapi/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: fastapi
  name: fastapi
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: fastapi
  strategy: {}
  template:
    metadata:
      labels:
        name: fastapi
    spec:
      containers:
      - image: kentronic/fastapi:latest
        name: fastapi
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fastapi
  name: fastapi
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    name: fastapi
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-deployment8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/hpa-fastapi:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-fastapi
  namespace: default
spec:
  maxReplicas: 6
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi
  targetCPUUtilizationPercentage: 70

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-deployment8_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-k8s
  name: fastapi-ingress
  namespace: default
spec:
  ingressClassName: traefik
  rules:
  - host: www.cynomart.site
    http:
      paths:
      - backend:
          service:
            name: fastapi
            port:
              number: 5000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - www.cynomart.site
    secretName: letsencrypt-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: fastapi
  name: fastapi
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: fastapi
  strategy: {}
  template:
    metadata:
      labels:
        name: fastapi
    spec:
      containers:
      - image: kentronic/fastapi:latest
        name: fastapi
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-deployment9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fastapi
  name: fastapi
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    name: fastapi
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-deployment9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/hpa-fastapi:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-fastapi
  namespace: default
spec:
  maxReplicas: 6
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi
  targetCPUUtilizationPercentage: 70

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-deployment-test.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: ENV
          valueFrom:
            configMapKeyRef:
              key: ENV
              name: app-configmap
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: MYSQL_HOST
              name: app-configmap
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: app-secret
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: app-secret
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: MYSQL_DATABASE
              name: app-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: app-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              key: OPENAI_API_KEY
              name: app-secret
        - name: GOOGLE_AI_STUDIO_API_KEY
          valueFrom:
            secretKeyRef:
              key: GOOGLE_AI_STUDIO_API_KEY
              name: app-secret
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              key: ANTHROPIC_API_KEY
              name: app-secret
        - name: AZURE_API_KEY
          valueFrom:
            secretKeyRef:
              key: AZURE_API_KEY
              name: app-secret
        - name: AZURE_API_BASE
          valueFrom:
            secretKeyRef:
              key: AZURE_API_BASE
              name: app-secret
        - name: GITHUB_API_KEY
          valueFrom:
            secretKeyRef:
              key: GITHUB_API_KEY
              name: app-secret
        - name: XAI_API_KEY
          valueFrom:
            secretKeyRef:
              key: XAI_API_KEY
              name: app-secret
        image: windsnow1025/fastapi:test
        imagePullPolicy: Always
        name: fastapi
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-deployment
policy disallow-default-namespace -> resource default/Deployment/fastapi-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-dpl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: standard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: jobmounchili/fastapi:latest
        name: fastapi
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi-deployment

skipped mutate policy add-safe-to-evict -> resource standard/Deployment/fastapi-deployment
policy disallow-latest-tag -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource standard/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/fastapi-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: fastapi-hpa
  namespace: default
spec:
  maxReplicas: 6
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-hpa1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/fastapi-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: fastapi-hpa
  namespace: default
spec:
  maxReplicas: 6
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-ingress
  namespace: default
spec:
  rules:
  - host: fastapidomain
    http:
      paths:
      - backend:
          service:
            name: fastapi-service
            port:
              number: 8080
        path: /api
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-ingress
  namespace: default
spec:
  rules:
  - host: fastapidomain
    http:
      paths:
      - backend:
          service:
            name: fastapi-service
            port:
              number: 8080
        path: /api
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-ingress
  namespace: default
spec:
  rules:
  - host: examabel.cloudns.ph
    http:
      paths:
      - backend:
          service:
            name: fastapi-service
            port:
              number: 5000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:062061726924:certificate/d1c0d3b8-f607-485a-88c9-419fc0ef6d4d
    alb.ingress.kubernetes.io/group.name: ozzorago-ingress-group
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
  name: fastapi-ingress
  namespace: default
spec:
  ingressClassName: alb
  rules:
  - host: fastapi.nalraon.kr
    http:
      paths:
      - backend:
          service:
            name: fastapi-svc
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to fastapi/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    nginx.ingress.kubernetes.io/limit-rpm: "100"
    nginx.ingress.kubernetes.io/limit-rps: "5"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    traefik.ingress.kubernetes.io/router.tls: "false"
  name: fastapi-ingress
  namespace: fastapi
spec:
  ingressClassName: traefik
  rules:
  - host: k3s-0.lan
    http:
      paths:
      - backend:
          service:
            name: fastapi
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-ingress5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastapi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: fastapi-ingress
  namespace: default
spec:
  rules:
  - host: kubernetes.nelly-datascientest.cloudns.be
    http:
      paths:
      - backend:
          service:
            name: fastapi-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - kubernetes.nelly-datascientest.cloudns.be
    secretName: fastapi-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/fastapi:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: fastapi
  name: fastapi
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/fastapi:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: fastapi
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/fastapi:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: fastapi
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/fastapi:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: fastapi
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/fastapi:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: fastapi
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  template:
    spec:
      containers:
      - env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: fastapi-config
        image: datascientest/fastapi:1.0.0
        name: fastapi
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-patch1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  replicas: 5
  template:
    spec:
      containers:
      - env:
        - name: ENVIRONMENT
          value: production
        - name: DEBUG
          value: "false"
        name: fastapi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/fastapi failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-patch2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: default
spec:
  replicas: 2
  template:
    spec:
      containers:
      - env:
        - name: ENVIRONMENT
          value: staging
        - name: DEBUG
          value: "true"
        name: fastapi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi
policy disallow-default-namespace -> resource default/Deployment/fastapi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/fastapi failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/fastapi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/fastapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fastapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-secret-template.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to grocery-ocr-api/Secret/fastapi-secret:
apiVersion: v1
data:
  url: changethis
kind: Secret
metadata:
  labels:
    app: fastapi
  name: fastapi-secret
  namespace: grocery-ocr-api

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-secret-template1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to grocery-ocr-api/Secret/fastapi-secret:
apiVersion: v1
data:
  url: changethis
kind: Secret
metadata:
  labels:
    app: fastapi
  name: fastapi-secret
  namespace: grocery-ocr-api

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vovcha/Deployment/fastapi-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi
  name: fastapi-deployment
  namespace: vovcha
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: fastapi
    spec:
      containers:
      - env:
        - name: UVICORN_PORT
          valueFrom:
            configMapKeyRef:
              key: uvicorn_port_listen
              name: webapp-conf
        - name: DEFAULT_RESPONSE_MESSAGE
          valueFrom:
            configMapKeyRef:
              key: default_response_message
              name: webapp-conf
        - name: REDIS_DEFAULT_USER_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: redis_default_user_password
              name: webapp-conf
        image: fastapi-server:v1
        name: fastapi-server
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /tmp/fastapi-cache
          name: cache-volume
      volumes:
      - emptyDir:
          sizeLimit: 100Mi
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource vovcha/Deployment/fastapi-deployment
policy drop-all-capabilities -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource vovcha/Deployment/fastapi-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to grocery-ocr-api/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: grocery-ocr-api
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fast-api-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fast-api-service:
apiVersion: v1
kind: Service
metadata:
  name: fast-api-service
  namespace: default
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: fast-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to grocery-ocr-api/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: grocery-ocr-api
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fastapi
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: fastapi
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: fastapi
  name: fastapi
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi-replication
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fastapi-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: fastapi
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fastapi-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: fastapi
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fastapi-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi-service
    app.kubernetes.io/name: fastapi-service
  name: fastapi-service
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi-service
  template:
    metadata:
      labels:
        app: fastapi-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: fastapi-service-config
        - secretRef:
            name: fastapi-service-secrets
        image: kovengers/fast-api:9
        imagePullPolicy: Always
        name: fastapi-container
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: 200m
            memory: 400Mi
      nodeSelector:
        kakaoi.io/kke-nodepool: backend-node

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fastapi-service
policy disallow-default-namespace -> resource default/Deployment/fastapi-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fastapi-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fastapi-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fastapi-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fastapi-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/fastapi-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fastapi-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fastapi-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastapi-service8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fastapi-service-secrets:
apiVersion: v1
data:
  KAKAO_RESTAPI_KEY: ZmFkN2FmOGRlMTcxNjJmNjc1NWM0OGQ4ZDMwODAwNjY=
  MONGO_URL: bW9uZ29kYitzcnY6Ly9rZWFrb3ZlbmdlcnM6YTVCRFlvazV1TDBQckZOZUBjbHVzdGVyMC5tNjE5YWJjLm1vbmdvZGIubmV0Lw==
  SECRET_KEY: and0c2VjcmV0a2V5
  openai_api_key: YmI4NjQ1ZGI5NjM5NDM5ZmE5Y2NmNTRjNDg1ZTY4ZGE=
  openai_azure_endpoint: aHR0cHM6Ly9rZWEta292ZW5nZXJzLWdwdC5vcGVuYWkuYXp1cmUuY29tLw==
kind: Secret
metadata:
  name: fastapi-service-secrets
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-service-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/fastapi-service-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fastapi-service-hpa
  namespace: default
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 75
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi-service

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fastapi-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vovcha/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: vovcha
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: fastapi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to fastapi/Service/fastapi:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fastapi
  name: fastapi
  namespace: fastapi
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: fastapi
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource fastapi/Service/fastapi failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastapi-svc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to standard/Service/fastapi-service:
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: standard
spec:
  ports:
  - nodePort: 30002
    port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: fastapi
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource standard/Service/fastapi-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fastcampus-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/svc-pod-1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: svc
  name: svc-pod-1
  namespace: default
spec:
  containers:
  - args:
    - -text=This is the SERVICE page of fastcompus.k8s. -1-
    image: dbgurum/ingress:hi
    name: svc1-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/svc-pod-1

skipped mutate policy add-safe-to-evict -> resource default/Pod/svc-pod-1
policy disallow-default-namespace -> resource default/Pod/svc-pod-1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/svc-pod-1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/svc-pod-1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/svc-pod-1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/svc-pod-1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/svc-pod-1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/svc-pod-1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/svc-pod-1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastcampus-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/svc-pod-2:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: svc
  name: svc-pod-2
  namespace: default
spec:
  containers:
  - args:
    - -text=This is the SERVICE page of fastcompus.k8s. -2-
    image: dbgurum/ingress:hi
    name: svc2-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/svc-pod-2

skipped mutate policy add-safe-to-evict -> resource default/Pod/svc-pod-2
policy disallow-default-namespace -> resource default/Pod/svc-pod-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/svc-pod-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/svc-pod-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/svc-pod-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/svc-pod-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/svc-pod-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/svc-pod-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/svc-pod-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastcampus-app_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-page:
apiVersion: v1
kind: Service
metadata:
  name: svc-page
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: svc

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastcampus-app_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/cloud-pod-1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: cloud
  name: cloud-pod-1
  namespace: default
spec:
  containers:
  - args:
    - -text=This is the CLOUD page of fastcompus.k8s. -1-
    image: dbgurum/ingress:hi
    name: cloud1-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/cloud-pod-1

skipped mutate policy add-safe-to-evict -> resource default/Pod/cloud-pod-1
policy disallow-default-namespace -> resource default/Pod/cloud-pod-1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/cloud-pod-1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/cloud-pod-1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/cloud-pod-1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/cloud-pod-1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/cloud-pod-1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/cloud-pod-1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/cloud-pod-1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastcampus-app_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/cloud-pod-2:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: cloud
  name: cloud-pod-2
  namespace: default
spec:
  containers:
  - args:
    - -text=This is the CLOUD page of fastcompus.k8s. -2-
    image: dbgurum/ingress:hi
    name: cloud2-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/cloud-pod-2

skipped mutate policy add-safe-to-evict -> resource default/Pod/cloud-pod-2
policy disallow-default-namespace -> resource default/Pod/cloud-pod-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/cloud-pod-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/cloud-pod-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/cloud-pod-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/cloud-pod-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/cloud-pod-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/cloud-pod-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/cloud-pod-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fastcampus-app_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cloud-page:
apiVersion: v1
kind: Service
metadata:
  name: cloud-page
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: cloud

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fastcampus-ing.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fastcampus-http:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: fastcampus-http
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: svc.fastcampus.k8s
    http:
      paths:
      - backend:
          service:
            name: svc-page
            port:
              number: 5678
        path: /
        pathType: Prefix
  - host: cloud.fastcampus.k8s
    http:
      paths:
      - backend:
          service:
            name: cloud-page
            port:
              number: 5678
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fast-good-for-dbs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/fast-good-for-dbs:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-good-for-dbs
  namespace: default
parameters:
  fstype: ext4
  replication-type: none
  type: pd-ssd
provisioner: kubernetes.io/gce-pd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fast-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/coit-frontend-fast:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: coit-frontend-fast
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: standard
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: faulty-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/faulty-pod:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faulty-pod
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: faulty-pod
  template:
    metadata:
      labels:
        app: faulty-pod
    spec:
      containers:
      - command:
        - sh
        - -c
        - exit 1
        image: busybox
        name: faulty-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/faulty-pod

skipped mutate policy add-safe-to-evict -> resource default/Deployment/faulty-pod
policy disallow-default-namespace -> resource default/Deployment/faulty-pod failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/faulty-pod failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/faulty-pod failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/faulty-pod failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/faulty-pod failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/faulty-pod failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/faulty-pod failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/faulty-pod failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/faulty-pod failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/fibre-channel-example-pod:
apiVersion: v1
kind: Pod
metadata:
  name: fibre-channel-example-pod
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: fc
    volumeMounts:
    - mountPath: /mnt/fc
      name: fc-vol
  volumes:
  - fc:
      fsType: ext4
      lun: <ADD LUN ID Here>
      readOnly: true
      targetWWNs:
      - <ADD Target WWN Here>
    name: fc-vol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/fibre-channel-example-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/fibre-channel-example-pod
policy disallow-default-namespace -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/fibre-channel-example-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/fibre-channel-example-pod:
apiVersion: v1
kind: Pod
metadata:
  name: fibre-channel-example-pod
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: fc
    volumeMounts:
    - mountPath: /mnt/fc
      name: fc-vol
  volumes:
  - fc:
      fsType: ext4
      lun: <ADD LUN ID Here>
      readOnly: true
      targetWWNs:
      - <ADD Target WWN Here>
    name: fc-vol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/fibre-channel-example-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/fibre-channel-example-pod
policy disallow-default-namespace -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/fibre-channel-example-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/fibre-channel-example-pod:
apiVersion: v1
kind: Pod
metadata:
  name: fibre-channel-example-pod
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: fc
    volumeMounts:
    - mountPath: /mnt/fc
      name: fc-vol
  volumes:
  - fc:
      fsType: ext4
      lun: <ADD LUN ID Here>
      readOnly: true
      targetWWNs:
      - <ADD Target WWN Here>
    name: fc-vol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/fibre-channel-example-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/fibre-channel-example-pod
policy disallow-default-namespace -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/fibre-channel-example-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/fibre-channel-example-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/fibre-channel-example-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fcm-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to fcm/Secret/fcm-app-secrets:
apiVersion: v1
kind: Secret
metadata:
  name: fcm-app-secrets
  namespace: fcm
stringData:
  database.dbName: my_database
  database.password: Ssafy123!@
  database.port: "30036"
  database.url: gaenari.kr
  database.username: root
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fconfigmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/frontend-configmap:
apiVersion: v1
data:
  dbAddr: backend-service
kind: ConfigMap
metadata:
  name: frontend-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fdb-operator_templates_manager_manager_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fdb-operator_templates_manager_secret_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/webhook-server-secret:
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fdb-operator_templates_manager_service_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/controller-manager-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: controller-manager-service
  namespace: default
spec:
  ports:
  - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fdb-operator_templates_manager_statefulset_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/controller-manager:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: controller-manager
  namespace: default
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: controller-manager-service
  template:
    metadata:
      labels:
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SECRET_NAME
          value: fdb-kubernetes-operator-secrets
        - name: DISABLE_SIDECAR_TLS_CHECK
          value: "1"
        - name: FDB_TLS_CERTIFICATE_FILE
          value: /tmp/fdb-certs/cert.pem
        - name: FDB_TLS_CA_FILE
          value: /tmp/fdb-certs/cert.pem
        - name: FDB_TLS_KEY_FILE
          value: /tmp/fdb-certs/key.pem
        image: kanisterio/fdb-kubernetes-operator:latest
        imagePullPolicy: IfNotPresent
        name: manager
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
        - mountPath: /tmp/fdb-certs
          name: fdb-certs
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
      - name: fdb-certs
        secret:
          secretName: fdb-kubernetes-operator-secrets

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/controller-manager

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/controller-manager
policy disallow-default-namespace -> resource default/StatefulSet/controller-manager failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/controller-manager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/StatefulSet/controller-manager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fdb-operator_templates_rbac_rbac_role_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/fdb-operator-manager-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: fdb-operator-manager-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - persistentvolumeclaims
  - events
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
- apiGroups:
  - apps.foundationdb.org
  resources:
  - foundationdbclusters
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.foundationdb.org
  resources:
  - foundationdbclusters/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fdb-operator_templates_rbac_rbac_role_binding_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/manager-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: manager-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fdb-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fe:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fe
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fe-apps
  template:
    metadata:
      labels:
        app: fe-apps
    spec:
      containers:
      - image: iansinambela/frontend:1.0
        name: fe
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.25"
            memory: 700Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fe

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fe
policy disallow-default-namespace -> resource default/Deployment/fe failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fe failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fe failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fe failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fe failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fe failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fe failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fe-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fe-service:
apiVersion: v1
kind: Service
metadata:
  name: fe-service
  namespace: default
spec:
  ports:
  - nodePort: 32000
    port: 3000
    targetPort: 3000
  selector:
    app: fe-apps
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fe-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: feature_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/feature-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: banana-controller
    app.kubernetes.io/instance: feature-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: banana-controller
  name: feature-editor-role
  namespace: default
rules:
- apiGroups:
  - banana.mdlwr.se
  resources:
  - features
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - banana.mdlwr.se
  resources:
  - features/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/feature-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: banana-controller
    app.kubernetes.io/instance: feature-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: banana-controller
  name: feature-viewer-role
  namespace: default
rules:
- apiGroups:
  - banana.mdlwr.se
  resources:
  - features
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - banana.mdlwr.se
  resources:
  - features/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-flags-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-pipelines/ConfigMap/feature-flags:
apiVersion: v1
data:
  await-sidecar-readiness: "true"
  disable-affinity-assistant: "false"
  disable-creds-init: "false"
  enable-api-fields: alpha
  enable-custom-tasks: "false"
  enable-provenance-in-status: "false"
  enable-tekton-oci-bundles: "false"
  require-git-ssh-secret-known-hosts: "false"
  resource-verification-mode: skip
  running-in-environment-with-injected-sidecars: "true"
  send-cloudevents-for-runs: "false"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: tekton-pipeline
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    gitops.jenkins-x.io/pipeline: namespaces
  name: feature-flags
  namespace: tekton-pipelines

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: featureset_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/featureset-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: banana-controller
    app.kubernetes.io/instance: featureset-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: banana-controller
  name: featureset-editor-role
  namespace: default
rules:
- apiGroups:
  - banana.mdlwr.se
  resources:
  - featuresets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - banana.mdlwr.se
  resources:
  - featuresets/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: featureset_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/featureset-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: banana-controller
    app.kubernetes.io/instance: featureset-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: banana-controller
  name: featureset-viewer-role
  namespace: default
rules:
- apiGroups:
  - banana.mdlwr.se
  resources:
  - featuresets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - banana.mdlwr.se
  resources:
  - featuresets/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle.configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle.configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle.configmap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-cm1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "false"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-config7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feature-toggle-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feature-toggle-config:
apiVersion: v1
data:
  FEATURE_DARK_MODE: "true"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: feature-toggle-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - env:
        - name: GET_HOSTS_FROM
          value: dns
        image: us-docker.pkg.dev/google-samples/containers/gke/gb-frontend:v5
        name: php-redis
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/frontend
policy disallow-default-namespace -> resource default/Deployment/frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fe-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/st-mnm-fe:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: st-mnm-fe
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: st-mnm-fe
  template:
    metadata:
      labels:
        app: st-mnm-fe
    spec:
      containers:
      - image: nasirnjs/stmnmfe:0.0.6
        name: st-mnm-fe
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/st-mnm-fe

skipped mutate policy add-safe-to-evict -> resource default/Deployment/st-mnm-fe
policy disallow-default-namespace -> resource default/Deployment/st-mnm-fe failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/st-mnm-fe failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fe-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/st-mnm-fe:
apiVersion: v1
kind: Service
metadata:
  name: st-mnm-fe
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: st-mnm-fe

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to pharmacy-app/Deployment/front-end:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: front-end
  name: front-end
  namespace: pharmacy-app
spec:
  replicas: 2
  selector:
    matchLabels:
      component: front-end
  template:
    metadata:
      labels:
        component: front-end
    spec:
      containers:
      - image: datnd2711/pharmacy-fe:v5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http-frontend
          initialDelaySeconds: 30
          periodSeconds: 10
        name: front-end
        ports:
        - containerPort: 80
          name: http-frontend
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http-frontend
          initialDelaySeconds: 15
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      imagePullSecrets:
      - name: my-dockerhub-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource pharmacy-app/Deployment/front-end

skipped mutate policy add-safe-to-evict -> resource pharmacy-app/Deployment/front-end
policy drop-all-capabilities -> resource pharmacy-app/Deployment/front-end failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource pharmacy-app/Deployment/front-end failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource pharmacy-app/Deployment/front-end failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource pharmacy-app/Deployment/front-end failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource pharmacy-app/Deployment/front-end failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: fedora-cloud-arm64-efi-dv-pvc-persistent_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fedora-cloud-arm64-efi-dv-pvc-persistent:
apiVersion: v1
kind: Service
metadata:
  name: fedora-cloud-arm64-efi-dv-pvc-persistent
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: nodeport
    nodePort: 32223
    port: 27223
    protocol: TCP
    targetPort: 22
  selector:
    app.kubernetes.io/name: VM_fedora-cloud-arm64-efi-dv-pvc-persistent
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fedora-cloud-arm64-efi-dv-pvc-persistent failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fedora-cloud-arm64-efi-dv-pvc-persistent2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fedora-cloud-arm64-efi-dv-pvc-persistent:
apiVersion: v1
kind: Service
metadata:
  name: fedora-cloud-arm64-efi-dv-pvc-persistent
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: nodeport
    nodePort: 32223
    port: 27223
    protocol: TCP
    targetPort: 22
  selector:
    app.kubernetes.io/name: VM_fedora-cloud-arm64-efi-dv-pvc-persistent
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fedora-cloud-arm64-efi-dv-pvc-persistent failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fedora-cloud-x86-efi-dv-pvc-persistent_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fedora-cloud-x86-efi-dv-pvc-persistent:
apiVersion: v1
kind: Service
metadata:
  name: fedora-cloud-x86-efi-dv-pvc-persistent
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: nodeport
    nodePort: 32222
    port: 27222
    protocol: TCP
    targetPort: 22
  selector:
    app.kubernetes.io/name: VM_fedora-cloud-x86-efi-dv-pvc-persistent
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fedora-cloud-x86-efi-dv-pvc-persistent failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fedora-cloud-x86-efi-dv-pvc-persistent2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fedora-cloud-x86-efi-dv-pvc-persistent:
apiVersion: v1
kind: Service
metadata:
  name: fedora-cloud-x86-efi-dv-pvc-persistent
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: nodeport
    nodePort: 32222
    port: 27222
    protocol: TCP
    targetPort: 22
  selector:
    app.kubernetes.io/name: VM_fedora-cloud-x86-efi-dv-pvc-persistent
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fedora-cloud-x86-efi-dv-pvc-persistent failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: feed_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/feed-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: feed-editor-role
  namespace: default
rules:
- apiGroups:
  - newsaggregator.teamdev.com
  resources:
  - feeds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - newsaggregator.teamdev.com
  resources:
  - feeds/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feed_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/feed-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: feed-viewer-role
  namespace: default
rules:
- apiGroups:
  - newsaggregator.teamdev.com
  resources:
  - feeds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - newsaggregator.teamdev.com
  resources:
  - feeds/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedback-db.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/feedback-db-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: feedback-db
  name: feedback-db-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /data/db
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedback-db_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/feedback-db-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: feedback-db-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedback-db_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/feedback-db:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: feedback-db
  name: feedback-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: feedback-db
  template:
    metadata:
      labels:
        app: feedback-db
    spec:
      containers:
      - image: mongo:7
        name: feedback-db
        ports:
        - containerPort: 27017
          name: mongodb
        volumeMounts:
        - mountPath: /data/db
          name: mongodb-persistent-storage
      volumes:
      - name: mongodb-persistent-storage
        persistentVolumeClaim:
          claimName: feedback-db-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/feedback-db

skipped mutate policy add-safe-to-evict -> resource default/Deployment/feedback-db
policy disallow-default-namespace -> resource default/Deployment/feedback-db failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/feedback-db failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/feedback-db failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/feedback-db failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/feedback-db failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/feedback-db failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/feedback-db failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/feedback-db failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: feedback-db_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/feedback-db-svc:
apiVersion: v1
kind: Service
metadata:
  name: feedback-db-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 27017
  selector:
    app: feedback-db

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedback-service-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/feedback-vmagent-cm:
apiVersion: v1
data:
  promscrape.yaml: |
    scrape_configs:
      - job_name: selmag_feedback_service
        static_configs:
          - targets: ["http://localhost:8080"]
            labels:
              application: selmag-feedback-service
        metrics_path: /actuator/prometheus
        oauth2:
          client_id: victoria-metrics
          client_secret: vTpeB59Sb2Qzh0HI4cXBlewm2ivY0dzD
          token_url: http://keycloak.selm.ag.192.168.49.2.nip.io/realms/selmag/protocol/openid-connect/token
          scopes:
            - metrics
          endpoint_params:
            grant_type: client_credentials
kind: ConfigMap
metadata:
  name: feedback-vmagent-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedback-service-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/selmag-feedback-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: selmag-feedback-service
  name: selmag-feedback-service-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: selmag-feedback-service
  template:
    metadata:
      labels:
        app: selmag-feedback-service
    spec:
      containers:
      - args:
        - --spring.config.import=/etc/opt/feedback-service/application-k8s.yml
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: k8s
        - name: LOKI
          value: http://loki-svc.selmag.svc.cluster.local:3100
        image: 192.168.49.1:5000/selmag/feedback-service:0.0.1
        name: selmag-feedback-service
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/opt/feedback-service
          name: service-config
      - args:
        - -promscrape.config=/etc/opt/vmagent/promscrape.yaml
        - -remoteWrite.url=http://vm-svc.selmag.svc.cluster.local:8428/api/v1/write
        - -remoteWrite.label=instance=$(NODE_NAME)
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: victoriametrics/vmagent:v1.93.12
        name: vmagent
        volumeMounts:
        - mountPath: /etc/opt/vmagent
          name: vmconfig
      volumes:
      - configMap:
          name: feedback-vmagent-cm
        name: vmconfig
      - configMap:
          name: feedback-service-config
        name: service-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/selmag-feedback-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/selmag-feedback-service-deployment
policy disallow-default-namespace -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/selmag-feedback-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: feedback-service-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/selmag-feedback-service-svc:
apiVersion: v1
kind: Service
metadata:
  name: selmag-feedback-service-svc
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
  selector:
    app: selmag-feedback-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedback-service-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/selmag-feedback-service-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: selmag-feedback-service-ingress
  namespace: default
spec:
  rules:
  - host: feedback.api.selm.ag.192.168.49.2.nip.io
    http:
      paths:
      - backend:
          service:
            name: selmag-feedback-service-svc
            port:
              name: http
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedservice-db-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/feedservice-db:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: feedservice-db
  name: feedservice-db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: feedservice-db
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
        org.springframework.boot.ignore: "true"
      labels:
        io.kompose.service: feedservice-db
    spec:
      containers:
      - args:
        - -c
        - max_connections=200
        env:
        - name: POSTGRES_DB
          value: feeddatabase
        - name: POSTGRES_PASSWORD
          value: mypassword
        - name: POSTGRES_USER
          value: myuser
        image: postgres:16
        name: feedservice-db
        ports:
        - containerPort: 5432
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/feedservice-db

skipped mutate policy add-safe-to-evict -> resource default/Deployment/feedservice-db
policy disallow-default-namespace -> resource default/Deployment/feedservice-db failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/feedservice-db failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/feedservice-db failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/feedservice-db failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/feedservice-db failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/feedservice-db failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/feedservice-db failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/feedservice-db failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: feedservice-db-tcp-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/feedservice-db:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: feedservice-db-tcp
  name: feedservice-db
  namespace: default
spec:
  ports:
  - name: "5436"
    port: 5436
    targetPort: 5432
  selector:
    io.kompose.service: feedservice-db
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: feedservice-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/feedservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
    kompose.hpa.cpu: "70"
    kompose.hpa.memory: "70"
    kompose.hpa.replicas.max: "12"
    kompose.hpa.replicas.min: "2"
    kompose.image-pull-policy: Always
    kompose.service.healthcheck.liveness.http_get_path: /actuator/health/liveness
    kompose.service.healthcheck.liveness.http_get_port: "8085"
    kompose.service.healthcheck.readiness.http_get_path: /actuator/health/readiness
    kompose.service.healthcheck.readiness.http_get_port: "8085"
    kompose.service.healthcheck.readiness.retries: "3"
    kompose.service.healthcheck.readiness.start_period: 8s
    kompose.service.healthcheck.readiness.timeout: 5s
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: feedservice
  name: feedservice
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: feedservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
        kompose.hpa.cpu: "70"
        kompose.hpa.memory: "70"
        kompose.hpa.replicas.max: "12"
        kompose.hpa.replicas.min: "2"
        kompose.image-pull-policy: Always
        kompose.service.healthcheck.liveness.http_get_path: /actuator/health/liveness
        kompose.service.healthcheck.liveness.http_get_port: "8085"
        kompose.service.healthcheck.readiness.http_get_path: /actuator/health/readiness
        kompose.service.healthcheck.readiness.http_get_port: "8085"
        kompose.service.healthcheck.readiness.retries: "3"
        kompose.service.healthcheck.readiness.start_period: 8s
        kompose.service.healthcheck.readiness.timeout: 5s
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: feedservice
    spec:
      containers:
      - env:
        - name: EUREKA_URI
          value: http://servicediscovery:8761/eureka
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ActiveProcessorCount=4 -XX:MaxDirectMemorySize=100M
        - name: POSTGRES_URI
          value: jdbc:postgresql://feedservice-db:5436/
        - name: RABBITMQ_HOST
          value: rabbitmq
        - name: REDIS_URI
          value: redis
        - name: ZIPKIN_URI
          value: http://zipkin:9411/
        image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/feedservice:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /actuator/health/liveness
            port: 8085
          initialDelaySeconds: 8
          timeoutSeconds: 10
        name: feedservice
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health/readiness
            port: 8085
          initialDelaySeconds: 8
          timeoutSeconds: 5
        resources:
          limits:
            memory: "1258291200"
          requests:
            cpu: 550m
            memory: "1258291200"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/feedservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/feedservice
policy disallow-default-namespace -> resource default/Deployment/feedservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/feedservice failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/feedservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/feedservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/feedservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/feedservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/feedservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: feedservice-horizontalpodautoscaler.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/feedservice:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: feedservice
  namespace: default
spec:
  maxReplicas: 12
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: feedservice

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fend.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/front-end:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: my-fend
  name: front-end
  namespace: default
spec:
  containers:
  - image: deepakumre/frontend-blog-web
    name: front-end
    ports:
    - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/front-end

skipped mutate policy add-safe-to-evict -> resource default/Pod/front-end
policy disallow-default-namespace -> resource default/Pod/front-end failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/front-end failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/front-end failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/front-end failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/front-end failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/front-end failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/front-end failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/front-end failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/front-end failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fend_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service1:
apiVersion: v1
kind: Service
metadata:
  name: my-service1
  namespace: default
spec:
  ports:
  - nodePort: 30011
    port: 3000
    targetPort: 3000
  selector:
    app: my-fend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/my-service1 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: ferretdb_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ferretdb-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: ferretdb-operator
    app.kubernetes.io/instance: ferretdb-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: ferretdb-operator
  name: ferretdb-editor-role
  namespace: default
rules:
- apiGroups:
  - ferretdb.ferretdb.com
  resources:
  - ferretdbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ferretdb.ferretdb.com
  resources:
  - ferretdbs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ferretdb_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ferretdb-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: ferretdb-operator
    app.kubernetes.io/instance: ferretdb-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: ferretdb-operator
  name: ferretdb-viewer-role
  namespace: default
rules:
- apiGroups:
  - ferretdb.ferretdb.com
  resources:
  - ferretdbs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ferretdb.ferretdb.com
  resources:
  - ferretdbs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-backend
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-backend
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
      labels:
        app: fertiscan-backend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
      containers:
      - env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://alloy.monitoring.svc.cluster.local:4318
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        - name: OTEL_METRICS_EXPORTER
          value: otlp
        - name: OTEL_LOGS_EXPORTER
          value: otlp
        - name: OTEL_PYTHON_LOG_CORRELATION
          value: "true"
        - name: OTEL_TRACES_SAMPLER
          value: always_on
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "1"
        - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
          value: "true"
        - name: OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST
          value: .*
        - name: OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE
          value: .*
        - name: OTEL_PYTHON_FASTAPI_EXCLUDED_URLS
          value: health
        - name: OTEL_SERVICE_NAME
          value: fertiscan-backend
        envFrom:
        - secretRef:
            name: fertiscan-backend-secrets
        image: ghcr.io/ai-cfia/fertiscan-backend:200-as-a-developer-i-would-like-to-test-instrumentation-with-local-environment-setup
        imagePullPolicy: Always
        name: fertiscan-backend
        ports:
        - containerPort: 5000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsGroup: 1000
          runAsNonRoot: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /cachedir_joblib
          name: tmp
      volumes:
      - emptyDir: {}
        name: tmp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-backend
policy disallow-default-namespace -> resource default/Deployment/fertiscan-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-backend-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-logs-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-logs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-uploads-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-uploads-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-backend-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-backend-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: fertiscan-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-backend-preview:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-backend-preview
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-backend-preview
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
      labels:
        app: fertiscan-backend-preview
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
      containers:
      - env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://alloy.monitoring.svc.cluster.local:4318
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_METRICS_EXPORTER
          value: otlp
        - name: OTEL_PYTHON_LOG_CORRELATION
          value: "true"
        - name: OTEL_TRACES_SAMPLER
          value: always_on
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "1"
        - name: OTEL_LOGS_EXPORTER
          value: otlp
        - name: API_BASE_PATH
          value: /api
        envFrom:
        - secretRef:
            name: fertiscan-backend-preview-secrets
        image: ghcr.io/ai-cfia/fertiscan-backend:248
        imagePullPolicy: Always
        name: fertiscan-backend-preview
        ports:
        - containerPort: 5000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsGroup: 1000
          runAsNonRoot: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /cachedir_joblib
          name: tmp
      volumes:
      - emptyDir: {}
        name: tmp
      - name: logs
        persistentVolumeClaim:
          claimName: fertiscan-preview-logs-pvc
      - name: uploads
        persistentVolumeClaim:
          claimName: fertiscan-preview-uploads-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-backend-preview
policy disallow-default-namespace -> resource default/Deployment/fertiscan-backend-preview failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-backend-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-preview-logs-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-preview-logs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-preview-uploads-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-preview-uploads-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-backend-preview-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-backend-preview-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: fertiscan-backend-preview

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-backend
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-backend
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
      labels:
        app: fertiscan-backend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
      containers:
      - env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://alloy.monitoring.svc.cluster.local:4318
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        - name: OTEL_METRICS_EXPORTER
          value: otlp
        - name: OTEL_LOGS_EXPORTER
          value: otlp
        - name: OTEL_PYTHON_LOG_CORRELATION
          value: "true"
        - name: OTEL_TRACES_SAMPLER
          value: always_on
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "1"
        - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
          value: "true"
        - name: OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST
          value: .*
        - name: OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE
          value: .*
        - name: OTEL_PYTHON_FASTAPI_EXCLUDED_URLS
          value: health
        - name: OTEL_SERVICE_NAME
          value: fertiscan-backend
        envFrom:
        - secretRef:
            name: fertiscan-backend-secrets
        image: ghcr.io/ai-cfia/fertiscan-backend:200-as-a-developer-i-would-like-to-test-instrumentation-with-local-environment-setup
        imagePullPolicy: Always
        name: fertiscan-backend
        ports:
        - containerPort: 5000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsGroup: 1000
          runAsNonRoot: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /cachedir_joblib
          name: tmp
      volumes:
      - emptyDir: {}
        name: tmp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-backend
policy disallow-default-namespace -> resource default/Deployment/fertiscan-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/fertiscan-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-backend-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-logs-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-logs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-uploads-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-uploads-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-backend-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-backend-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: fertiscan-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-backend-preview:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-backend-preview
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-backend-preview
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
      labels:
        app: fertiscan-backend-preview
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
      containers:
      - env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://alloy.monitoring.svc.cluster.local:4318
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_METRICS_EXPORTER
          value: otlp
        - name: OTEL_PYTHON_LOG_CORRELATION
          value: "true"
        - name: OTEL_TRACES_SAMPLER
          value: always_on
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "1"
        - name: OTEL_LOGS_EXPORTER
          value: otlp
        - name: API_BASE_PATH
          value: /api
        envFrom:
        - secretRef:
            name: fertiscan-backend-preview-secrets
        image: ghcr.io/ai-cfia/fertiscan-backend:248
        imagePullPolicy: Always
        name: fertiscan-backend-preview
        ports:
        - containerPort: 5000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsGroup: 1000
          runAsNonRoot: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /cachedir_joblib
          name: tmp
      volumes:
      - emptyDir: {}
        name: tmp
      - name: logs
        persistentVolumeClaim:
          claimName: fertiscan-preview-logs-pvc
      - name: uploads
        persistentVolumeClaim:
          claimName: fertiscan-preview-uploads-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-backend-preview
policy disallow-default-namespace -> resource default/Deployment/fertiscan-backend-preview failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/fertiscan-backend-preview failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-backend-deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-preview-logs-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-preview-logs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/fertiscan-preview-uploads-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fertiscan-preview-uploads-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-backend-deployment3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-backend-preview-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-backend-preview-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: fertiscan-backend-preview

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-pgsql-app-user:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-pgsql-app-user
  namespace: default
stringData:
  password: <APP_USER_PASSWORD>
  username: <APP_USER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-pgsql-superuser:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-pgsql-superuser
  namespace: default
stringData:
  password: <SUPERUSER_PASSWORD>
  username: <SUPERUSER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-preview-pgsql-app-user:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-preview-pgsql-app-user
  namespace: default
stringData:
  password: <APP_USER_PASSWORD>
  username: <APP_USER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-preview-pgsql-superuser:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-preview-pgsql-superuser
  namespace: default
stringData:
  password: <SUPERUSER_PASSWORD>
  username: <SUPERUSER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-pgsql-app-user:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-pgsql-app-user
  namespace: default
stringData:
  password: <APP_USER_PASSWORD>
  username: <APP_USER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-pgsql-superuser:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-pgsql-superuser
  namespace: default
stringData:
  password: <SUPERUSER_PASSWORD>
  username: <SUPERUSER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-preview-pgsql-app-user:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-preview-pgsql-app-user
  namespace: default
stringData:
  password: <APP_USER_PASSWORD>
  username: <APP_USER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-database-secret3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-preview-pgsql-superuser:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/database
    avp.kubernetes.io/secret-version: "2"
  name: fertiscan-preview-pgsql-superuser
  namespace: default
stringData:
  password: <SUPERUSER_PASSWORD>
  username: <SUPERUSER_USERNAME>
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-frontend-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-frontend
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-frontend
  template:
    metadata:
      labels:
        app: fertiscan-frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - fertiscan-frontend
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - secretRef:
            name: fertiscan-frontend-secrets
        image: ghcr.io/ai-cfia/fertiscan-frontend:304-adapt-alpha-v100-to-fastapi-backend-and-minor-fixes
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        name: fertiscan-frontend
        ports:
        - containerPort: 3000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend
policy disallow-default-namespace -> resource default/Deployment/fertiscan-frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: fertiscan-frontend-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PodDisruptionBudget/fertiscan-frontend-pdb:
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fertiscan-frontend-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fertiscan-frontend

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-frontend-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-frontend-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-frontend-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: fertiscan-frontend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-frontend-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-frontend-preview:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-frontend-preview
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-frontend-preview
  template:
    metadata:
      labels:
        app: fertiscan-frontend-preview
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - fertiscan-frontend-preview
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: NEXT_PUBLIC_DEBUG
          value: "true"
        - name: BACKEND_URL
          value: https://fertiscan-preview.inspection.alpha.canada.ca/api
        image: ghcr.io/ai-cfia/fertiscan-frontend:479
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        name: fertiscan-frontend-preview
        ports:
        - containerPort: 3000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend-preview

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend-preview
policy disallow-default-namespace -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: fertiscan-frontend-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PodDisruptionBudget/fertiscan-frontend-preview-pdb:
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fertiscan-frontend-preview-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fertiscan-frontend-preview

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-frontend-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-frontend-preview-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-frontend-preview-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: fertiscan-frontend-preview

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-frontend-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-frontend
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-frontend
  template:
    metadata:
      labels:
        app: fertiscan-frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - fertiscan-frontend
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - secretRef:
            name: fertiscan-frontend-secrets
        image: ghcr.io/ai-cfia/fertiscan-frontend:304-adapt-alpha-v100-to-fastapi-backend-and-minor-fixes
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        name: fertiscan-frontend
        ports:
        - containerPort: 3000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend
policy disallow-default-namespace -> resource default/Deployment/fertiscan-frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/fertiscan-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: fertiscan-frontend-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PodDisruptionBudget/fertiscan-frontend-pdb:
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fertiscan-frontend-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fertiscan-frontend

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-frontend-deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-frontend-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-frontend-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: fertiscan-frontend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-frontend-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fertiscan-frontend-preview:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fertiscan-frontend-preview
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: fertiscan-frontend-preview
  template:
    metadata:
      labels:
        app: fertiscan-frontend-preview
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - fertiscan-frontend-preview
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: NEXT_PUBLIC_DEBUG
          value: "true"
        - name: BACKEND_URL
          value: https://fertiscan-preview.inspection.alpha.canada.ca/api
        image: ghcr.io/ai-cfia/fertiscan-frontend:479
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        name: fertiscan-frontend-preview
        ports:
        - containerPort: 3000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend-preview

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fertiscan-frontend-preview
policy disallow-default-namespace -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/fertiscan-frontend-preview failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: fertiscan-frontend-deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PodDisruptionBudget/fertiscan-frontend-preview-pdb:
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fertiscan-frontend-preview-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fertiscan-frontend-preview

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: fertiscan-frontend-deployment3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fertiscan-frontend-preview-svc:
apiVersion: v1
kind: Service
metadata:
  name: fertiscan-frontend-preview-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: fertiscan-frontend-preview

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-backend-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-backend-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-backend-svc
            port:
              number: 5000
        path: /api(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan.inspection.alpha.canada.ca
    secretName: aciacfia-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-frontend-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
      - backend:
          service:
            name: fertiscan-backend-svc
            port:
              number: 5000
        path: /swagger(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan.inspection.alpha.canada.ca
    secretName: fertiscan-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-backend-preview-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-backend-preview-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan-preview.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-backend-preview-svc
            port:
              number: 5000
        path: /api(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan-preview.inspection.alpha.canada.ca
    secretName: aciacfia-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-frontend-preview-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-frontend-preview-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan-preview.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-frontend-preview-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
      - backend:
          service:
            name: fertiscan-backend-preview-svc
            port:
              number: 5000
        path: /swagger(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan-preview.inspection.alpha.canada.ca
    secretName: fertiscan-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-backend-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-backend-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-backend-svc
            port:
              number: 5000
        path: /api(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan.inspection.alpha.canada.ca
    secretName: aciacfia-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-frontend-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
      - backend:
          service:
            name: fertiscan-backend-svc
            port:
              number: 5000
        path: /swagger(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan.inspection.alpha.canada.ca
    secretName: fertiscan-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-backend-preview-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-backend-preview-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan-preview.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-backend-preview-svc
            port:
              number: 5000
        path: /api(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan-preview.inspection.alpha.canada.ca
    secretName: aciacfia-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-ingress3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fertiscan-frontend-preview-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: fertiscan-frontend-preview-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fertiscan-preview.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: fertiscan-frontend-preview-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
      - backend:
          service:
            name: fertiscan-backend-preview-svc
            port:
              number: 5000
        path: /swagger(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - fertiscan-preview.inspection.alpha.canada.ca
    secretName: fertiscan-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-backend-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/backend
    avp.kubernetes.io/secret-version: "32"
  name: fertiscan-backend-secrets
  namespace: default
stringData:
  ALLOWED_ORIGINS: <ALLOWED_ORIGINS>
  API_BASE_PATH: <API_BASE_PATH>
  AZURE_API_ENDPOINT: <AZURE_API_ENDPOINT>
  AZURE_API_KEY: <AZURE_API_KEY>
  AZURE_OPENAI_DEPLOYMENT: <AZURE_OPENAI_DEPLOYMENT>
  AZURE_OPENAI_ENDPOINT: <AZURE_OPENAI_ENDPOINT>
  AZURE_OPENAI_KEY: <AZURE_OPENAI_KEY>
  FERTISCAN_DB_URL: <FERTISCAN_DB_URL>
  FERTISCAN_SCHEMA: <FERTISCAN_SCHEMA>
  FERTISCAN_STORAGE_URL: <FERTISCAN_STORAGE_URL>
  PHOENIX_ENDPOINT: <PHOENIX_ENDPOINT>
  PROMPT_PATH: <PROMPT_PATH>
  SWAGGER_BASE_PATH: <SWAGGER_BASE_PATH>
  SWAGGER_PATH: <SWAGGER_PATH>
  UPLOAD_PATH: <UPLOAD_PATH>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-secrets_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-frontend-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/frontend
    avp.kubernetes.io/secret-version: "3"
  name: fertiscan-frontend-secrets
  namespace: default
stringData:
  API_URL: <API_URL>
  REACT_APP_ACTIVATE_USING_JSON: <REACT_APP_ACTIVATE_USING_JSON>
  REACT_APP_STATE_OBJECT_SIZE_LIMIT: <REACT_APP_STATE_OBJECT_SIZE_LIMIT>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-secrets1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-backend-preview-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/backend
    avp.kubernetes.io/secret-version: "35"
  name: fertiscan-backend-preview-secrets
  namespace: default
stringData:
  AZURE_API_KEY: <AZURE_API_KEY>
  AZURE_OPENAI_KEY: <AZURE_OPENAI_KEY>
  AZURE_STORAGE_ACCOUNT_KEY: <AZURE_STORAGE_ACCOUNT_KEY>
  AZURE_STORAGE_ACCOUNT_NAME: <AZURE_STORAGE_ACCOUNT_NAME>
  DB_HOST: <DB_HOST>
  DB_NAME: <DB_NAME>
  DB_PASSWORD: <DB_PASSWORD>
  DB_PORT: <DB_PORT>
  DB_USER: <DB_USER>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-secrets2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-backend-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/backend
    avp.kubernetes.io/secret-version: "32"
  name: fertiscan-backend-secrets
  namespace: default
stringData:
  ALLOWED_ORIGINS: <ALLOWED_ORIGINS>
  API_BASE_PATH: <API_BASE_PATH>
  AZURE_API_ENDPOINT: <AZURE_API_ENDPOINT>
  AZURE_API_KEY: <AZURE_API_KEY>
  AZURE_OPENAI_DEPLOYMENT: <AZURE_OPENAI_DEPLOYMENT>
  AZURE_OPENAI_ENDPOINT: <AZURE_OPENAI_ENDPOINT>
  AZURE_OPENAI_KEY: <AZURE_OPENAI_KEY>
  FERTISCAN_DB_URL: <FERTISCAN_DB_URL>
  FERTISCAN_SCHEMA: <FERTISCAN_SCHEMA>
  FERTISCAN_STORAGE_URL: <FERTISCAN_STORAGE_URL>
  PHOENIX_ENDPOINT: <PHOENIX_ENDPOINT>
  PROMPT_PATH: <PROMPT_PATH>
  SWAGGER_BASE_PATH: <SWAGGER_BASE_PATH>
  SWAGGER_PATH: <SWAGGER_PATH>
  UPLOAD_PATH: <UPLOAD_PATH>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-secrets2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-frontend-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/frontend
    avp.kubernetes.io/secret-version: "3"
  name: fertiscan-frontend-secrets
  namespace: default
stringData:
  API_URL: <API_URL>
  REACT_APP_ACTIVATE_USING_JSON: <REACT_APP_ACTIVATE_USING_JSON>
  REACT_APP_STATE_OBJECT_SIZE_LIMIT: <REACT_APP_STATE_OBJECT_SIZE_LIMIT>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fertiscan-secrets3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/fertiscan-backend-preview-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/fertiscan/backend
    avp.kubernetes.io/secret-version: "35"
  name: fertiscan-backend-preview-secrets
  namespace: default
stringData:
  AZURE_API_KEY: <AZURE_API_KEY>
  AZURE_OPENAI_KEY: <AZURE_OPENAI_KEY>
  AZURE_STORAGE_ACCOUNT_KEY: <AZURE_STORAGE_ACCOUNT_KEY>
  AZURE_STORAGE_ACCOUNT_NAME: <AZURE_STORAGE_ACCOUNT_NAME>
  DB_HOST: <DB_HOST>
  DB_NAME: <DB_NAME>
  DB_PASSWORD: <DB_PASSWORD>
  DB_PORT: <DB_PORT>
  DB_USER: <DB_USER>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-sample.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/frontend-service:
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: frontend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-sample_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/frontend-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: nginx:latest
        name: frontend
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/frontend-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/frontend-deployment
policy disallow-default-namespace -> resource default/Deployment/frontend-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/frontend-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/frontend-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/frontend-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/frontend-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/frontend-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/frontend-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/frontend-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/frontend-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fe-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to pharmacy-app/Service/front-end-service-active:
apiVersion: v1
kind: Service
metadata:
  name: front-end-service-active
  namespace: pharmacy-app
spec:
  ports:
  - name: http-fe
    port: 80
    protocol: TCP
    targetPort: http-frontend
  selector:
    component: front-end

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to pharmacy-app/Service/front-end-service-preview:
apiVersion: v1
kind: Service
metadata:
  name: front-end-service-preview
  namespace: pharmacy-app
spec:
  ports:
  - name: http-fe
    port: 80
    protocol: TCP
    targetPort: http-frontend
  selector:
    component: front-end

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to pharmacy-app/Service/front-end-service:
apiVersion: v1
kind: Service
metadata:
  name: front-end-service
  namespace: pharmacy-app
spec:
  ports:
  - name: http-fe
    port: 80
    protocol: TCP
    targetPort: http-frontend
  selector:
    component: front-end
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fe-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/frontend:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: guestbook
    tier: frontend
  name: frontend
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fetch-past.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/fetch-past:
apiVersion: batch/v1
kind: Job
metadata:
  name: fetch-past
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - bundle exec rails channels:create_all_videos
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        envFrom:
        - configMapRef:
            name: song-list-conf
        - secretRef:
            name: song-list-secret
        image: ghcr.io/piny940/song-list-backend:ubuntu-1.0.2
        name: ubuntu
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/fetch-past

skipped mutate policy add-safe-to-evict -> resource default/Job/fetch-past
policy disallow-default-namespace -> resource default/Job/fetch-past failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/fetch-past failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/fetch-past failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/fetch-past failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/fetch-past failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/fetch-past failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/fetch-past failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fetch-past1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/fetch-past:
apiVersion: batch/v1
kind: Job
metadata:
  name: fetch-past
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - bundle exec rails channels:create_all_videos
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        envFrom:
        - configMapRef:
            name: song-list-conf
        - secretRef:
            name: song-list-secret
        image: ghcr.io/piny940/song-list-backend:ubuntu-1.0.2
        name: ubuntu
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/fetch-past

skipped mutate policy add-safe-to-evict -> resource default/Job/fetch-past
policy disallow-default-namespace -> resource default/Job/fetch-past failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/fetch-past failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/fetch-past failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/fetch-past failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/fetch-past failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/fetch-past failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/fetch-past failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fibo-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fibo:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fibo
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fibo
  template:
    metadata:
      labels:
        app: fibo
    spec:
      containers:
      - image: tgthomson/fiboservice:latest
        name: fibo
        ports:
        - containerPort: 80
          name: fibo-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fibo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fibo
policy disallow-default-namespace -> resource default/Deployment/fibo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fibo failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fibo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fibo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fibo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fibo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fibo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fibo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fibo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fibo-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fibo:
apiVersion: v1
kind: Service
metadata:
  name: fibo
  namespace: default
spec:
  ports:
  - name: fibo-ports
    port: 8080
    targetPort: fibo-port
  selector:
    app: fibo
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fibo failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fib-service-spec.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/Deployment/open-feature-fib-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: open-feature-fib-service
  name: open-feature-fib-service
  namespace: open-feature-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-feature-fib-service
  template:
    metadata:
      annotations:
        openfeature.dev/enabled: "true"
        openfeature.dev/featureflagsource: end-to-end
      labels:
        app: open-feature-fib-service
    spec:
      containers:
      - args:
        - flagd
        env:
        - name: HARNESS_KEY
          valueFrom:
            secretKeyRef:
              key: harness-key
              name: vendor-keys
              optional: true
        - name: LD_KEY
          valueFrom:
            secretKeyRef:
              key: ld-key
              name: vendor-keys
              optional: true
        - name: SPLIT_KEY
          valueFrom:
            secretKeyRef:
              key: split-key
              name: vendor-keys
              optional: true
        - name: CLOUDBEES_APP_KEY
          valueFrom:
            secretKeyRef:
              key: cloudbees-key
              name: vendor-keys
              optional: true
        - name: FLAGSMITH_ENV_KEY
          valueFrom:
            secretKeyRef:
              key: flagsmith-key
              name: vendor-keys
              optional: true
        envFrom:
        - configMapRef:
            name: open-feature-fib-service-config
        image: ghcr.io/open-feature/playground-fib-service:v0.16.0
        name: fib-service
        ports:
        - containerPort: 30001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource open-feature-demo/Deployment/open-feature-fib-service

skipped mutate policy add-safe-to-evict -> resource open-feature-demo/Deployment/open-feature-fib-service
policy drop-all-capabilities -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource open-feature-demo/Deployment/open-feature-fib-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fib-service-spec_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/Service/open-feature-fibonacci-service:
apiVersion: v1
kind: Service
metadata:
  name: open-feature-fibonacci-service
  namespace: open-feature-demo
spec:
  ports:
  - port: 30000
    targetPort: 30001
  selector:
    app: open-feature-fib-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fib-service-spec_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/ConfigMap/open-feature-fib-service-config:
apiVersion: v1
data:
  FIB_SERVICE_PASS: ""
  FIB_SERVICE_USER: ""
  FLAGD_HOST: localhost
  FLAGD_PORT: "8013"
  FLAGD_TLS: "false"
  FLIPT_URL: http://open-feature-demo-flipt.open-feature-demo.svc.cluster.local:8080
  GO_FEATURE_FLAG_URL: http://open-feature-demo-goff-service.open-feature-demo.svc.cluster.local:1031
  NODE_ENV: production
  OTEL_COLLECTOR_URL: http://open-feature-demo-otel-collector.open-feature-demo.svc.cluster.local:4317
  OTEL_SERVICE_NAME: fibonacci-service
kind: ConfigMap
metadata:
  name: open-feature-fib-service-config
  namespace: open-feature-demo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fieldforge_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/fieldforge-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-fieldforge
    app.kubernetes.io/instance: fieldforge-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-fieldforge
  name: fieldforge-editor-role
  namespace: default
rules:
- apiGroups:
  - fieldforge.puiterwijk.org
  resources:
  - fieldforges
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fieldforge.puiterwijk.org
  resources:
  - fieldforges/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fieldforge_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/fieldforge-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-fieldforge
    app.kubernetes.io/instance: fieldforge-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-fieldforge
  name: fieldforge-viewer-role
  namespace: default
rules:
- apiGroups:
  - fieldforge.puiterwijk.org
  resources:
  - fieldforges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - fieldforge.puiterwijk.org
  resources:
  - fieldforges/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fieldref.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fieldref9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dapi-envars:
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
  namespace: default
spec:
  containers:
  - args:
    - while true; do echo -en '\n'; printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
      printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT; sleep 10; done;
    command:
    - sh
    - -c
    env:
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: registry.k8s.io/busybox
    name: test-container
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars

skipped mutate policy add-safe-to-evict -> resource default/Pod/dapi-envars
policy disallow-default-namespace -> resource default/Pod/dapi-envars failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dapi-envars failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dapi-envars failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dapi-envars failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dapi-envars failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dapi-envars failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dapi-envars failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dapi-envars failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dapi-envars failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fight_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/fight-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubemon
    app.kubernetes.io/instance: fight-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kubemon
  name: fight-editor-role
  namespace: default
rules:
- apiGroups:
  - kubemon.memetoasty.github.com
  resources:
  - fights
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubemon.memetoasty.github.com
  resources:
  - fights/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fight_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/fight-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubemon
    app.kubernetes.io/instance: fight-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kubemon
  name: fight-viewer-role
  namespace: default
rules:
- apiGroups:
  - kubemon.memetoasty.github.com
  resources:
  - fights
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubemon.memetoasty.github.com
  resources:
  - fights/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/samplepod:
apiVersion: v1
kind: Pod
metadata:
  name: samplepod
  namespace: default
spec:
  containers:
  - image: nginx
    name: c1
    readinessProbe:
      exec:
        command:
        - cat
        - /usr/share/nginx/html/index.html
      failureThreshold: 2
      initialDelaySeconds: 50
      periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/samplepod

skipped mutate policy add-safe-to-evict -> resource default/Pod/samplepod
policy disallow-default-namespace -> resource default/Pod/samplepod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/samplepod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/samplepod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/samplepod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/samplepod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/samplepod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/samplepod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/samplepod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: file2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)";i=$((i+1));sleep 1;done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: filebeat.cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/filebeat-config:
apiVersion: v1
data:
  conf.yaml: |
    filebeat.inputs:
    - type: log
      paths:
        - '/var/log/*.log'
    output:
      logstash:
        hosts: [ "logstash:5044" ]
kind: ConfigMap
metadata:
  labels:
    component: filebeat
  name: filebeat-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
        - drop_event.when:
            or:
            - equals:
                kubernetes.namespace: "kube-system"
            - equals:
                kubernetes.namespace: "kube-node-lease"
            - equals:
                kubernetes.namespace: "kube-public"
            - equals:
                kubernetes.namespace: "kafka"
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        image: docker.elastic.co/beats/filebeat:6.8.4
        name: filebeat
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: filebeat2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        image: docker.elastic.co/beats/filebeat:6.3.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Deployment/filebeat:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebeat
  namespace: elastic
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      containers:
      - image: docker.elastic.co/beats/filebeat:7.15.0
        name: filebeat
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-config
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/my-file.log
          name: my-filebeat
          subPath: my-file.log
      volumes:
      - configMap:
          name: filebeat-configmap
        name: filebeat-config
      - configMap:
          name: my-filebeat
        name: my-filebeat

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elastic/Deployment/filebeat

skipped mutate policy add-safe-to-evict -> resource elastic/Deployment/filebeat
policy drop-all-capabilities -> resource elastic/Deployment/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elastic/Deployment/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elastic/Deployment/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: filebeat6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Deployment/filebeat:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebeat
  namespace: elastic
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      containers:
      - image: docker.elastic.co/beats/filebeat:7.15.0
        name: filebeat
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-config
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/my-file.log
          name: my-filebeat
          subPath: my-file.log
      volumes:
      - configMap:
          name: filebeat-configmap
        name: filebeat-config
      - configMap:
          name: my-filebeat
        name: my-filebeat

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elastic/Deployment/filebeat

skipped mutate policy add-safe-to-evict -> resource elastic/Deployment/filebeat
policy drop-all-capabilities -> resource elastic/Deployment/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elastic/Deployment/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elastic/Deployment/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource elastic/Deployment/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: filebeat-agent.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        image: docker.elastic.co/beats/filebeat:6.8.4
        name: filebeat
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-agent1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-agent1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        image: docker.elastic.co/beats/filebeat:6.8.4
        name: filebeat
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-liberty-demo/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      paths:
        - /logs/messages*.log
      json.message_key: ibm_datetime
      json.keys_under_root: true
      json.add_error_key: true
    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: open-liberty-demo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ConfigMap/filebeat-configmap:
apiVersion: v1
data:
  filebeat.yml: "filebeat.inputs:\n- type: log\n  paths:\n    - /usr/share/filebeat/my-file.log\n
    \   \noutput.logstash:\n  hosts: ['logstash:5044']\n"
kind: ConfigMap
metadata:
  name: filebeat-configmap
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-config2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ConfigMap/filebeat-configmap:
apiVersion: v1
data:
  filebeat.yml: "filebeat.inputs:\n- type: log\n  paths:\n    - /usr/share/filebeat/my-file.log\n
    \   \noutput.logstash:\n  hosts: ['logstash:5044']\n"
kind: ConfigMap
metadata:
  name: filebeat-configmap
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        image: docker.elastic.co/beats/filebeat:6.3.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-ds1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        image: docker.elastic.co/beats/filebeat:6.3.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-ds2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        image: docker.elastic.co/beats/filebeat:6.3.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-ds3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds3_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        image: docker.elastic.co/beats/filebeat:6.3.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-ds4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds4_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-prospectors:
apiVersion: v1
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat-prospectors
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-ds4_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        image: docker.elastic.co/beats/filebeat:6.3.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-kubernetes.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Role/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Role/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-kubeadm-config
  namespace: elastic
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubeadm-config
  resources:
  - configmaps
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/RoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat
  namespace: elastic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/RoleBinding/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat-kubeadm-config
  namespace: elastic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat-kubeadm-config
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: "filebeat.inputs:\n- type: container\n  paths:\n    - /var/log/containers/*.log\n
    \ processors:\n    - add_kubernetes_metadata:\n        host: ${NODE_NAME}\n        matchers:\n
    \       - logs_path:\n            logs_path: \"/var/log/containers/\"\n\n# To
    enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment
    this:\n#filebeat.autodiscover:\n#  providers:\n#    - type: kubernetes\n#      node:
    ${NODE_NAME}\n#      hints.enabled: true\n#      hints.default_config:\n#        type:
    container\n#        paths:\n#          - /var/log/containers/*${data.kubernetes.container.id}.log\n\nprocessors:\n
    \ - add_cloud_metadata:\n  - add_host_metadata:\n\ncloud.id: ${ELASTIC_CLOUD_ID}\ncloud.auth:
    ${ELASTIC_CLOUD_AUTH}\n\noutput.elasticsearch:\n  hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n
    \ username: ${ELASTICSEARCH_USERNAME}\n  password: ${ELASTICSEARCH_PASSWORD}\n
    \ \n  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n  protocol: \"https\"\n  ssl.verification_mode: none\n\n  ## CUSTOM INDEX
    PATTERN\n  index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\nsetup.template:\n
    \ name: \"filebeat-aks-devops-prod\"\n  pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n\n#
    output.elasticsearch:\n#   hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n#
    \  username: ${ELASTICSEARCH_USERNAME}\n#   password: ${ELASTICSEARCH_PASSWORD}\n\n#
    \  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n#   protocol: \"https\"\n#   ssl.verification_mode: none\n\n#   ## CUSTOM
    INDEX PATTERN\n#   index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n#
    setup.template:\n#   name: \"filebeat-aks-devops-prod\"\n#   pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\""
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elastic-cluster-es-http.elastic.SVC
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: elastic-cluster-es-elastic-user
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:8.6.2
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elastic/DaemonSet/filebeat
policy drop-all-capabilities -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-kubernetes1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Role/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Role/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-kubeadm-config
  namespace: elastic
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubeadm-config
  resources:
  - configmaps
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/RoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat
  namespace: elastic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/RoleBinding/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat-kubeadm-config
  namespace: elastic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat-kubeadm-config
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: "filebeat.inputs:\n- type: container\n  paths:\n    - /var/log/containers/*.log\n
    \ processors:\n    - add_kubernetes_metadata:\n        host: ${NODE_NAME}\n        matchers:\n
    \       - logs_path:\n            logs_path: \"/var/log/containers/\"\n\n# To
    enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment
    this:\n#filebeat.autodiscover:\n#  providers:\n#    - type: kubernetes\n#      node:
    ${NODE_NAME}\n#      hints.enabled: true\n#      hints.default_config:\n#        type:
    container\n#        paths:\n#          - /var/log/containers/*${data.kubernetes.container.id}.log\n\nprocessors:\n
    \ - add_cloud_metadata:\n  - add_host_metadata:\n\ncloud.id: ${ELASTIC_CLOUD_ID}\ncloud.auth:
    ${ELASTIC_CLOUD_AUTH}\n\noutput.elasticsearch:\n  hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n
    \ username: ${ELASTICSEARCH_USERNAME}\n  password: ${ELASTICSEARCH_PASSWORD}\n
    \ \n  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n  protocol: \"https\"\n  ssl.verification_mode: none\n\n  ## CUSTOM INDEX
    PATTERN\n  index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\nsetup.template:\n
    \ name: \"filebeat-aks-devops-prod\"\n  pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n\n#
    output.elasticsearch:\n#   hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n#
    \  username: ${ELASTICSEARCH_USERNAME}\n#   password: ${ELASTICSEARCH_PASSWORD}\n\n#
    \  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n#   protocol: \"https\"\n#   ssl.verification_mode: none\n\n#   ## CUSTOM
    INDEX PATTERN\n#   index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n#
    setup.template:\n#   name: \"filebeat-aks-devops-prod\"\n#   pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\""
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elastic-cluster-es-http.elastic.SVC
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: elastic-cluster-es-elastic-user
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:8.6.2
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elastic/DaemonSet/filebeat
policy drop-all-capabilities -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-kubernetes2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true
          hints.default_config.enabled: false
          hints.default_config:
            type: container
            paths:
              - /var/log/containers/*${data.kubernetes.container.id}.log
            processors:
                - decode_json_fields:
                      fields: ["message"]
                      target: ""
                      overwrite_keys: true
    processors:
      - add_cloud_metadata:
      - add_host_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:7.12.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/filebeat
policy disallow-default-namespace -> resource default/DaemonSet/filebeat failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-kubernetes2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          templates:
            -   condition:
                  contains:
                    kubernetes.container.labels.collect_logs_with_filebeat: "true"
                config:
                  -   type: container
                      paths:
                        - "/var/log/containers/*-${data.kubernetes.container.id}.log"
                      json.keys_under_root: true
                      json.add_error_key: true
                      json.message_key: message
    processors:
      - add_cloud_metadata:
      - add_host_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:7.12.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-kubernetes3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Role/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Role/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-kubeadm-config
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubeadm-config
  resources:
  - configmaps
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/RoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/RoleBinding/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat-kubeadm-config
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat-kubeadm-config
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: "filebeat.inputs:\n- type: container\n  paths:\n    - /var/log/containers/*.log\n
    \ processors:\n    - add_kubernetes_metadata:\n        host: ${NODE_NAME}\n        matchers:\n
    \       - logs_path:\n            logs_path: \"/var/log/containers/\"\n\n# To
    enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment
    this:\n#filebeat.autodiscover:\n#  providers:\n#    - type: kubernetes\n#      node:
    ${NODE_NAME}\n#      hints.enabled: true\n#      hints.default_config:\n#        type:
    container\n#        paths:\n#          - /var/log/containers/*${data.kubernetes.container.id}.log\n\nprocessors:\n
    \ - add_cloud_metadata:\n  - add_host_metadata:\n\ncloud.id: ${ELASTIC_CLOUD_ID}\ncloud.auth:
    ${ELASTIC_CLOUD_AUTH}\n\noutput.elasticsearch:\n  hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n
    \ username: ${ELASTICSEARCH_USERNAME}\n  password: ${ELASTICSEARCH_PASSWORD}\n
    \ \n  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n  protocol: \"https\"\n  ssl.verification_mode: none\n\n  ## CUSTOM INDEX
    PATTERN\n  index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\nsetup.template:\n
    \ name: \"filebeat-aks-devops-prod\"\n  pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n\n#
    output.elasticsearch:\n#   hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n#
    \  username: ${ELASTICSEARCH_USERNAME}\n#   password: ${ELASTICSEARCH_PASSWORD}\n\n#
    \  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n#   protocol: \"https\"\n#   ssl.verification_mode: none\n\n#   ## CUSTOM
    INDEX PATTERN\n#   index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n#
    setup.template:\n#   name: \"filebeat-aks-devops-prod\"\n#   pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\""
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes4_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elastic-cluster-es-http.elastic.SVC
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: tC6p5O19C8hzjf1BN5c348rZ
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:8.6.2
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/filebeat
policy drop-all-capabilities -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-kubernetes5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Role/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/Role/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-kubeadm-config
  namespace: elastic
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubeadm-config
  resources:
  - configmaps
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/RoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat
  namespace: elastic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/RoleBinding/filebeat-kubeadm-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat-kubeadm-config
  namespace: elastic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat-kubeadm-config
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: "filebeat.inputs:\n- type: container\n  paths:\n    - /var/log/containers/*.log\n
    \ processors:\n    - add_kubernetes_metadata:\n        host: ${NODE_NAME}\n        matchers:\n
    \       - logs_path:\n            logs_path: \"/var/log/containers/\"\n\n# To
    enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment
    this:\n#filebeat.autodiscover:\n#  providers:\n#    - type: kubernetes\n#      node:
    ${NODE_NAME}\n#      hints.enabled: true\n#      hints.default_config:\n#        type:
    container\n#        paths:\n#          - /var/log/containers/*${data.kubernetes.container.id}.log\n\nprocessors:\n
    \ - add_cloud_metadata:\n  - add_host_metadata:\n\ncloud.id: ${ELASTIC_CLOUD_ID}\ncloud.auth:
    ${ELASTIC_CLOUD_AUTH}\n\noutput.elasticsearch:\n  hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n
    \ username: ${ELASTICSEARCH_USERNAME}\n  password: ${ELASTICSEARCH_PASSWORD}\n
    \ \n  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n  protocol: \"https\"\n  ssl.verification_mode: none\n\n  ## CUSTOM INDEX
    PATTERN\n  index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\nsetup.template:\n
    \ name: \"filebeat-aks-devops-prod\"\n  pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n\n#
    output.elasticsearch:\n#   hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']\n#
    \  username: ${ELASTICSEARCH_USERNAME}\n#   password: ${ELASTICSEARCH_PASSWORD}\n\n#
    \  ## ADD THESE TWO LINES IF FILEBEAT AGENTS FAIL TO SEND LOGS TO THE CLUSTER
    ##\n#   protocol: \"https\"\n#   ssl.verification_mode: none\n\n#   ## CUSTOM
    INDEX PATTERN\n#   index: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\"\n\n#
    setup.template:\n#   name: \"filebeat-aks-devops-prod\"\n#   pattern: \"filebeat-aks-devops-prod-%!{(MISSING)[agent.version]}\""
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-kubernetes5_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elastic-cluster-es-http.elastic.SVC
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: elastic-cluster-es-elastic-user
        - name: ELASTIC_CLOUD_ID
          value: null
        - name: ELASTIC_CLOUD_AUTH
          value: null
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:8.6.2
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elastic/DaemonSet/filebeat
policy drop-all-capabilities -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-logstash.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |-
    # To enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment this:
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true
          hints.default_config:
            type: container
            paths:
              - /var/log/containers/*${data.kubernetes.container.id}.log
    processors:
      - add_cloud_metadata:
      - add_host_metadata:

    output.logstash:
      hosts: '${LOGSTASH_URL}'
kind: ConfigMap
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat-config
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-logstash_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/DaemonSet/filebeat:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: filebeat
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: LOGSTASH_URL
          value: logstash-service:5044
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/beats/filebeat:7.11.0
        name: filebeat
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elastic/DaemonSet/filebeat
policy drop-all-capabilities -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource elastic/DaemonSet/filebeat failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: filebeat-logstash_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-logstash_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/filebeat:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-logstash_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic/ServiceAccount/filebeat:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: filebeat
  name: filebeat
  namespace: elastic

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-svc-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-liberty-demo/ServiceAccount/filebeat-svc-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat-svc-account
  namespace: open-liberty-demo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-test_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/filebeat-test:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: filebeat-test
  name: filebeat-test
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
  selector:
    k8s-app: filebeat-test

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-test_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |
    filebeat.prospectors:
    - input_type: log
      paths:
        - "/log/*"
        - "/log/usermange/common/*"
    output.elasticsearch:
      hosts: ["172.23.5.255:9200"]
      username: "elastic"
      password: "changeme"
      index: "filebeat-test"
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-test1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/filebeat-test:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: filebeat-test
  name: filebeat-test
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
  selector:
    run: filebeat-test

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filebeat-test1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/filebeat-config:
apiVersion: v1
data:
  filebeat.yml: |
    filebeat.prospectors:
    - input_type: log
      paths:
        - "/log/*"
        - "/log/usermange/common/*"
    output.elasticsearch:
      hosts: ["172.23.5.255:9200"]
    username: "elastic"
    password: "changeme"
    index: "filebeat-test"
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/file-configmap:
apiVersion: v1
data:
  app.config: "{ \n  \"settings\": \n  {\n    \"title\": \"Example Glossary\",\n    \"option\":
    \"123\"\n  }\n}"
  replace.sh: sed -i 's/123/456/g' app.config
kind: ConfigMap
metadata:
  labels:
    scope: demo
  name: file-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/file-configmap:
apiVersion: v1
data:
  app.config: "{ \n  \"settings\": \n  {\n    \"title\": \"Example Glossary\",\n    \"option\":
    \"123\"\n  }\n}"
  replace.sh: sed -i 's/123/456/g' app.config
kind: ConfigMap
metadata:
  labels:
    scope: demo
  name: file-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-or-create.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/volumes-file-or-create-pod:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: volumes-file-or-create-pod
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox
    name: busybox
    volumeMounts:
    - mountPath: /var/local/aaa
      name: volumes-file-or-create-dir
    - mountPath: /var/local/aaa/1.txt
      name: volumes-file-or-create-file
  volumes:
  - hostPath:
      path: /var/local/aaa
      type: DirectoryOrCreate
    name: volumes-file-or-create-dir
  - hostPath:
      path: /var/local/aaa/1.txt
      type: FileOrCreate
    name: volumes-file-or-create-file

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/volumes-file-or-create-pod
policy disallow-default-namespace -> resource default/Pod/volumes-file-or-create-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/volumes-file-or-create-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/volumes-file-or-create-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/volumes-file-or-create-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/volumes-file-or-create-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/volumes-file-or-create-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/volumes-file-or-create-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/volumes-file-or-create-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/volumes-file-or-create-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: filerealm-secret-roles.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/elasticsearch-dev-roles:
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-dev-roles
  namespace: default
stringData:
  users_roles: |-
    superuser:testUser
    kibana_system:kibanaSystem
    logstash_system:logstashSystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filerealm-secret-user.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/elasticsearch-dev-users:
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-dev-users
  namespace: default
stringData:
  users: |-
    testUser:$2a$10$24w0hAt5MK/T.eTs771bLedq3dmzcVqej1uJCBFUAbEzx0LuKb1BO
    kibanaSystem:$2a$10$24w0hAt5MK/T.eTs771bLedq3dmzcVqej1uJCBFUAbEzx0LuKb1BO
    logstashSystem:$2a$10$24w0hAt5MK/T.eTs771bLedq3dmzcVqej1uJCBFUAbEzx0LuKb1BO

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-sc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/file-sc:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: file-sc
  namespace: default
parameters:
  priority_io: high
  repl: "2"
  sharedv4: "true"
  sharedv4_failover_strategy: aggressive
  sharedv4_svc_type: ClusterIP
provisioner: pxd.portworx.com

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/file:
apiVersion: v1
kind: Secret
metadata:
  name: file
  namespace: default
stringData:
  config.yaml: |
    apiUrl: "https://my.api.com/api/v1"
    username: <user>
    password: <password>
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: Namespace
metadata:
  name: dragonfly-e2e
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dragonfly-e2e:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dragonfly-e2e
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dragonfly-e2e:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dragonfly-e2e
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dragonfly-e2e
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dragonfly-e2e
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-server_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dragonfly-e2e/Service/file-server:
apiVersion: v1
kind: Service
metadata:
  name: file-server
  namespace: dragonfly-e2e
spec:
  ports:
  - name: nginx
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: dragonfly
    component: file-server
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-server_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dragonfly-e2e/StatefulSet/file-server:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: file-server
  namespace: dragonfly-e2e
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dragonfly
      component: file-server
  serviceName: file-server
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dragonfly
        component: file-server
    spec:
      containers:
      - image: d7y.io/library/nginx:1.21.1-alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html/kind
          name: files
      volumes:
      - hostPath:
          path: /
        name: files

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dragonfly-e2e/StatefulSet/file-server
policy drop-all-capabilities -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dragonfly-e2e/StatefulSet/file-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: fileserver-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fileserver:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: fileserver
  name: fileserver
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: fileserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/fileserver-default: "true"
        io.kompose.service: fileserver
    spec:
      containers:
      - env:
        - name: BASEPATH
          value: /
        - name: BASIC_AUTH_ENABLED
          value: "true"
        - name: BASIC_AUTH_PASSWORD
          value: super_secret_password
        - name: BASIC_AUTH_REALM
          value: admin
        - name: BASIC_AUTH_USER
          value: admin
        image: peterberweiler/fileserver
        name: fileserver
        ports:
        - containerPort: 80
          hostPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /public
          name: fileserver-public
      restartPolicy: Always
      volumes:
      - name: fileserver-public
        nfs:
          path: /volume1/Plex
          readOnly: false
          server: 192.168.1.155

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fileserver

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fileserver
policy disallow-default-namespace -> resource default/Deployment/fileserver failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fileserver failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fileserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fileserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fileserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fileserver failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fileserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fileserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fileserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: file-server-no-content-length.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: Namespace
metadata:
  name: dragonfly-e2e
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dragonfly-e2e:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dragonfly-e2e
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dragonfly-e2e:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dragonfly-e2e
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dragonfly-e2e
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dragonfly-e2e
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-server-no-content-length_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dragonfly-e2e/Service/file-server-no-content-length:
apiVersion: v1
kind: Service
metadata:
  name: file-server-no-content-length
  namespace: dragonfly-e2e
spec:
  ports:
  - name: server
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: dragonfly
    component: file-server-no-content-length
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: file-server-no-content-length_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dragonfly-e2e/StatefulSet/file-server-no-content-length:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: file-server-no-content-length
  namespace: dragonfly-e2e
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dragonfly
      component: file-server-no-content-length
  serviceName: file-server-no-content-length
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dragonfly
        component: file-server-no-content-length
    spec:
      containers:
      - image: dragonflyoss/no-content-length:latest
        imagePullPolicy: IfNotPresent
        name: server
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /static/kind
          name: files
      volumes:
      - hostPath:
          path: /
        name: files

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length
policy disallow-latest-tag -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dragonfly-e2e/StatefulSet/file-server-no-content-length failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: fileserver-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gop-fileserver:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: gop-fileserver
  name: gop-fileserver
  namespace: default
spec:
  containers:
  - image: kodekloud/fileserver
    imagePullPolicy: IfNotPresent
    name: gop-fileserver
    volumeMounts:
    - mountPath: /web
      name: data-store
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  volumes:
  - name: data-store
    persistentVolumeClaim:
      claimName: data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-fileserver

skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-fileserver
policy disallow-default-namespace -> resource default/Pod/gop-fileserver failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gop-fileserver failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gop-fileserver failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gop-fileserver failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gop-fileserver failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/gop-fileserver failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gop-fileserver failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gop-fileserver failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gop-fileserver failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: file-server-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gop-file-server:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: gop-file-server
  name: gop-file-server
  namespace: default
spec:
  containers:
  - image: kodekloud/fileserver
    imagePullPolicy: IfNotPresent
    name: gop-fileserver
    volumeMounts:
    - mountPath: /web
      name: data-store
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  volumes:
  - name: data-store
    persistentVolumeClaim:
      claimName: data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-file-server

skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-file-server
policy disallow-default-namespace -> resource default/Pod/gop-file-server failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gop-file-server failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gop-file-server failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gop-file-server failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gop-file-server failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/gop-file-server failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gop-file-server failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gop-file-server failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gop-file-server failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fileserver-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gop-file-server:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: gop-file-server
  name: gop-file-server
  namespace: default
spec:
  containers:
  - image: kodekloud/fileserver
    imagePullPolicy: IfNotPresent
    name: gop-file-server
    volumeMounts:
    - mountPath: /web
      name: data-store
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  volumes:
  - name: data-store
    persistentVolumeClaim:
      claimName: data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-file-server

skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-file-server
policy disallow-default-namespace -> resource default/Pod/gop-file-server failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gop-file-server failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gop-file-server failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gop-file-server failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gop-file-server failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/gop-file-server failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gop-file-server failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gop-file-server failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gop-file-server failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fileserver-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gop-file-server:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: gop-file-pod
  name: gop-file-server
  namespace: default
spec:
  containers:
  - image: kodekloud/fileserver
    name: gop-file-container
    volumeMounts:
    - mountPath: /web
      name: data-store
  volumes:
  - name: data-store
    persistentVolumeClaim:
      claimName: data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-file-server

skipped mutate policy add-safe-to-evict -> resource default/Pod/gop-file-server
policy disallow-default-namespace -> resource default/Pod/gop-file-server failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gop-file-server failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gop-file-server failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gop-file-server failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gop-file-server failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/gop-file-server failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gop-file-server failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gop-file-server failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gop-file-server failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fileserver-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/data-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  hostPath:
    path: /web
    type: DirectoryOrCreate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/data-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  hostPath:
    path: /web
    type: DirectoryOrCreate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pv2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/data-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  hostPath:
    path: /web
    type: DirectoryOrCreate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pv3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/data-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  hostPath:
    path: /web
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: data-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: data-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: data-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  volumeName: data-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fileserver:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: fileserver
  name: fileserver
  namespace: default
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: fileserver

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gop-fs-service:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gop-fs-service
  name: gop-fs-service
  namespace: default
spec:
  ports:
  - name: 8080-8080
    nodePort: 31200
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: gop-fileserver
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/gop-fs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gop-fs-service:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gop-fs-service
  name: gop-fs-service
  namespace: default
spec:
  ports:
  - name: 8080-8080
    nodePort: 31200
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: gop-file-server
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/gop-fs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-svc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gop-fs-service:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gop-fs-service
  name: gop-fs-service
  namespace: default
spec:
  ports:
  - name: 8080-8080
    nodePort: 31200
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: gop-fileserver
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/gop-fs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fileserver-svc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gop-fs-service:
apiVersion: v1
kind: Service
metadata:
  name: gop-fs-service
  namespace: default
spec:
  ports:
  - nodePort: 31200
    port: 8080
    targetPort: 8080
  selector:
    app: gop-file-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/gop-fs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: filestorage.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/task-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: azurefile

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filestorage_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/task-pv-pod:
apiVersion: v1
kind: Pod
metadata:
  name: task-pv-pod
  namespace: default
spec:
  containers:
  - image: nginx
    name: task-pv-container
    ports:
    - containerPort: 80
      name: http-server
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: task-pv-storage
  volumes:
  - name: task-pv-storage
    persistentVolumeClaim:
      claimName: task-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/task-pv-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/task-pv-pod
policy disallow-default-namespace -> resource default/Pod/task-pv-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/task-pv-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/task-pv-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/task-pv-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/task-pv-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/task-pv-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/task-pv-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/task-pv-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/task-pv-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: filestorage_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/task-pv-pod-2:
apiVersion: v1
kind: Pod
metadata:
  name: task-pv-pod-2
  namespace: default
spec:
  containers:
  - image: nginx
    name: task-pv-container
    ports:
    - containerPort: 80
      name: http-server
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: task-pv-storage
  volumes:
  - name: task-pv-storage
    persistentVolumeClaim:
      claimName: task-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/task-pv-pod-2

skipped mutate policy add-safe-to-evict -> resource default/Pod/task-pv-pod-2
policy disallow-default-namespace -> resource default/Pod/task-pv-pod-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/task-pv-pod-2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/task-pv-pod-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/task-pv-pod-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/task-pv-pod-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/task-pv-pod-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/task-pv-pod-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/task-pv-pod-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/task-pv-pod-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: filesystem2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/ceph-fs:
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ceph-fs
  namespace: default
parameters:
  clusterID: rook-ceph
  csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
  csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
  csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
  csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
  csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
  csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
  fsName: ceph-filesystem
provisioner: rook-ceph.cephfs.csi.ceph.com
reclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fileupload-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fileupload-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fileupload-service
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fileupload-service
  template:
    metadata:
      labels:
        app: fileupload-service
    spec:
      containers:
      - env:
        - name: SERVICE_PORT
          value: "50054"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: bvquoc/fileupload:latest
        imagePullPolicy: Always
        name: fileupload-service
        ports:
        - containerPort: 50054
        - containerPort: 9090
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fileupload-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fileupload-service
policy disallow-default-namespace -> resource default/Deployment/fileupload-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/fileupload-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/fileupload-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fileupload-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fileupload-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fileupload-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fileupload-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fileupload-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fileupload-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fileupload-service:
apiVersion: v1
kind: Service
metadata:
  name: fileupload-service
  namespace: default
spec:
  ports:
  - name: grpc
    port: 50054
    protocol: TCP
    targetPort: 50054
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: fileupload-service
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fileupload-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fileupload-service_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/fileupload-service-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fileupload-service-hpa
  namespace: default
spec:
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 5
        type: Percent
        value: 100
      stabilizationWindowSeconds: 10
    scaleUp:
      policies:
      - periodSeconds: 2
        type: Percent
        value: 100
      stabilizationWindowSeconds: 0
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 20
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fileupload-service

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: filtered.configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/filtered-config:
apiVersion: v1
data:
  NEXT_PUBLIC_FIREBASE_API_KEY: AIzaSyCiIXA1H_AU7sRIQDD5JcOBYvynid9m32c
  NEXT_PUBLIC_FIREBASE_APP_ID: 1:67917237882:web:fb5ae4a94ed5c2401cb5c3
  NEXT_PUBLIC_NEWS_APIKEY: 1f5c02f2db064cb186a65c2fd9291609
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: filtered-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filtered.deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/filtered-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: filtered-web
  name: filtered-web
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: filtered-web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: filtered-web
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: filtered-config
        image: siddhantprateek/filtered
        name: filteted
        ports:
        - containerPort: 3000
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/filtered-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/filtered-web
policy disallow-default-namespace -> resource default/Deployment/filtered-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/filtered-web failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/filtered-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/filtered-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/filtered-web failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/filtered-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/filtered-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/filtered-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/filtered-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: filtered.svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/filtered-svc:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: filtered-svc
  name: filtered-svc
  namespace: default
spec:
  ports:
  - name: 3000-4001
    port: 3000
    protocol: TCP
    targetPort: 4001
  selector:
    app: filtered-svc
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/filtered-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: filtered-secret-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to filtered-ns-1/Secret/filtered-secret-1:
apiVersion: v1
kind: Secret
metadata:
  name: filtered-secret-1
  namespace: filtered-ns-1
type: helm.sh/release.v1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: filtered-secret-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to filtered-ns-2/Secret/filtered-secret-2:
apiVersion: v1
kind: Secret
metadata:
  name: filtered-secret-2
  namespace: filtered-ns-2
type: helm.sh/release.v1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finagle.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/px-finagle:
apiVersion: v1
kind: Namespace
metadata:
  name: px-finagle
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/px-finagle:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: px-finagle
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/px-finagle:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: px-finagle
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/px-finagle:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: px-finagle
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/px-finagle:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: px-finagle
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finagle_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to px-finagle/Service/finagle-server:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: finagle-server
  name: finagle-server
  namespace: px-finagle
spec:
  ports:
  - name: "9992"
    port: 9992
    targetPort: 9992
  selector:
    io.kompose.service: finagle-server
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finagle_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to px-finagle/Deployment/finagle-client:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: finagle-client
  name: finagle-client
  namespace: px-finagle
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: finagle-client
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: finagle-client
    spec:
      containers:
      - args:
        - client/run
        image: gcr.io/pixie-prod/demos/finagle/hello:1.0@sha256:85006a2eae6e86019d85e1e12915d9d21e4af85b80a24674dc2b7a2ef4e7dbff
        name: finagle-client
        resources: {}
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-client

skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-client
policy drop-all-capabilities -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: finagle_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to px-finagle/Deployment/finagle-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: finagle-server
  name: finagle-server
  namespace: px-finagle
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: finagle-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: finagle-server
    spec:
      containers:
      - image: gcr.io/pixie-prod/demos/finagle/hello:1.0@sha256:85006a2eae6e86019d85e1e12915d9d21e4af85b80a24674dc2b7a2ef4e7dbff
        name: finagle-server
        ports:
        - containerPort: 9992
        resources: {}
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-server

skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-server
policy drop-all-capabilities -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: finagle1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/px-finagle:
apiVersion: v1
kind: Namespace
metadata:
  name: px-finagle
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/px-finagle:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: px-finagle
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/px-finagle:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: px-finagle
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/px-finagle:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: px-finagle
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/px-finagle:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: px-finagle
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finagle1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to px-finagle/Service/finagle-server:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: finagle-server
  name: finagle-server
  namespace: px-finagle
spec:
  ports:
  - name: "9992"
    port: 9992
    targetPort: 9992
  selector:
    io.kompose.service: finagle-server
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finagle1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to px-finagle/Deployment/finagle-client:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: finagle-client
  name: finagle-client
  namespace: px-finagle
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: finagle-client
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: finagle-client
    spec:
      containers:
      - args:
        - client/run
        image: gcr.io/pixie-prod/demos/finagle/hello:1.0@sha256:85006a2eae6e86019d85e1e12915d9d21e4af85b80a24674dc2b7a2ef4e7dbff
        name: finagle-client
        resources: {}
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-client

skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-client
policy drop-all-capabilities -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource px-finagle/Deployment/finagle-client failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: finagle1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to px-finagle/Deployment/finagle-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: finagle-server
  name: finagle-server
  namespace: px-finagle
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: finagle-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: finagle-server
    spec:
      containers:
      - image: gcr.io/pixie-prod/demos/finagle/hello:1.0@sha256:85006a2eae6e86019d85e1e12915d9d21e4af85b80a24674dc2b7a2ef4e7dbff
        name: finagle-server
        ports:
        - containerPort: 9992
        resources: {}
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-server

skipped mutate policy add-safe-to-evict -> resource px-finagle/Deployment/finagle-server
policy drop-all-capabilities -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource px-finagle/Deployment/finagle-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: final-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/kasm-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kasm-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  hostPath:
    path: /opt
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: final-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/kasm-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kasm-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""
  volumeName: kasm-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: final-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/kasm-app-statefulset:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kasm-app-statefulset
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kasm-app
  serviceName: kasm-app-service
  template:
    metadata:
      labels:
        app: kasm-app
    spec:
      containers:
      - env:
        - name: KASM_PORT
          value: "4443"
        - name: DOCKER_HUB_USERNAME
          value: USER
        - name: DOCKER_HUB_PASSWORD
          value: PASS
        - name: DOCKER_MTU
          value: "1500"
        image: kasmdocker/kasm-public:public
        imagePullPolicy: Always
        name: kasm-app
        ports:
        - containerPort: 3000
        - containerPort: 4443
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /opt
          name: kasm-data
          subPath: kasm-opt-data
      volumes:
      - name: kasm-data
        persistentVolumeClaim:
          claimName: kasm-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/kasm-app-statefulset

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/kasm-app-statefulset
policy disallow-default-namespace -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/StatefulSet/kasm-app-statefulset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: final-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kasm-app-service:
apiVersion: v1
kind: Service
metadata:
  name: kasm-app-service
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 31003
    port: 80
    targetPort: 3000
  - name: https
    nodePort: 31004
    port: 4443
    targetPort: 4443
  selector:
    app: kasm-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/kasm-app-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: finance.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to finance/Deployment/finance-calculator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: finance-calculator
  name: finance-calculator
  namespace: finance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: finance-calculator
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: finance-calculator
    spec:
      containers:
      - args:
        - -c
        - python finance.py -ct cmp -p 600000 -t 30 -i 2.8 -m 12 -camort
        command:
        - /bin/sh
        image: nalfis/financecalculator
        imagePullPolicy: Always
        name: financecalculator
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource finance/Deployment/finance-calculator

skipped mutate policy add-safe-to-evict -> resource finance/Deployment/finance-calculator
policy disallow-latest-tag -> resource finance/Deployment/finance-calculator failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource finance/Deployment/finance-calculator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource finance/Deployment/finance-calculator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource finance/Deployment/finance-calculator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource finance/Deployment/finance-calculator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource finance/Deployment/finance-calculator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource finance/Deployment/finance-calculator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource finance/Deployment/finance-calculator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: finance_namespace_pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to finance/Pod/redis:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: finance-namespace
  name: redis
  namespace: finance
  spec:
    containers:
    - image: redis
      name: finance-namepsace-container
      ports:
      - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource finance/Pod/redis

skipped mutate policy add-safe-to-evict -> resource finance/Pod/redis
policy disallow-container-sock-mounts -> resource finance/Pod/redis failed:
1 - validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule validate-docker-sock-mount failed at path /spec/
2 - validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule validate-containerd-sock-mount failed at path /spec/
3 - validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule validate-crio-sock-mount failed at path /spec/
4 - validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule validate-dockerd-sock-mount failed at path /spec/

policy require-labels -> resource finance/Pod/redis failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource finance/Pod/redis failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/

policy require-ro-rootfs -> resource finance/Pod/redis failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource finance/Pod/redis failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/


pass: 1, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: finance-api-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/finance-api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finance-api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: finance-api
  template:
    metadata:
      labels:
        app: finance-api
      name: finance-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-finance-configmap
        image: pablohhnunes/finance_api:1.1.1
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /health
            port: 8085
          initialDelaySeconds: 20
          periodSeconds: 10
        name: finance-api
        ports:
        - containerPort: 8085
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /health/database
            port: 8085
          initialDelaySeconds: 3
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/finance-api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/finance-api-deployment
policy disallow-default-namespace -> resource default/Deployment/finance-api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/finance-api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/finance-api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/finance-api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/finance-api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Deployment/finance-api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/finance-api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: finance-api-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/finance-api-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: finance-api-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: finance-api-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: finance-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/db-finance-configmap:
apiVersion: v1
data:
  LANG: en_US.utf8
  PGUSER: postgres
  POSTGRES_DB: finance-db
  POSTGRES_PASSWORD: rootDB1234!
kind: ConfigMap
metadata:
  name: db-finance-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-configmap_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/app-finance-configmap:
apiVersion: v1
data:
  DATABASE_URL: postgresql://postgres:rootDB1234!@finance-api-db:5432/finance-db
kind: ConfigMap
metadata:
  name: app-finance-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-db-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/finance-db-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finance-db-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: finance-db
  template:
    metadata:
      labels:
        app: finance-db
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: db-finance-configmap
        image: postgres:latest
        name: postgresql
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - finance-db
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      restartPolicy: Always
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: local-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/finance-db-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/finance-db-deployment
policy disallow-default-namespace -> resource default/Deployment/finance-db-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-ro-rootfs -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/finance-db-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: finance-db-statefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/finance-db-statefulset:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: finance-db-statefulset
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: finance-db
  serviceName: finance-api-db
  template:
    metadata:
      labels:
        app: finance-db
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: db-finance-configmap
        image: postgres:latest
        name: postgresql
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - finance-db
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: local-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/finance-db-statefulset

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/finance-db-statefulset
policy disallow-default-namespace -> resource default/StatefulSet/finance-db-statefulset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-ro-rootfs -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/finance-db-statefulset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: finance-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: finance-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: finance-namespace7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/finance:
apiVersion: v1
kind: Namespace
metadata:
  name: finance
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: finance
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/finance:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: finance
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: finance
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/finance:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: finance
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fintech-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fintech-app-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: fintech-app-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: fintech-service
            port:
              number: 5000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/fintech-app-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fintech-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fintech-app-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: fintech-app-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: fintech-service
            port:
              number: 5000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/fintech-app-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fio.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/kbench:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kbench
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 33Gi
  storageClassName: local-path
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fio_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/kbench:
apiVersion: batch/v1
kind: Job
metadata:
  name: kbench
  namespace: default
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        kbench: fio
    spec:
      containers:
      - env:
        - name: MODE
          value: full
        - name: FILE_NAME
          value: /volume/test
        - name: SIZE
          value: 30G
        - name: CPU_IDLE_PROF
          value: disabled
        image: yasker/kbench:latest
        imagePullPolicy: Always
        name: kbench
      restartPolicy: Never
      volumes:
      - name: vol
        persistentVolumeClaim:
          claimName: kbench

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/kbench

skipped mutate policy add-safe-to-evict -> resource default/Job/kbench
policy disallow-default-namespace -> resource default/Job/kbench failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/kbench failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/kbench failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/kbench failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/kbench failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/kbench failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/kbench failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/kbench failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fio1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/fio:
apiVersion: v1
kind: Pod
metadata:
  name: fio
  namespace: default
spec:
  containers:
  - args:
    - sleep
    - "1000000"
    image: nixery.dev/shell/fio
    name: fio
    volumeMounts:
    - mountPath: /volume
      name: ms-volume
  nodeSelector:
    openebs.io/nodeid: control-2
  volumes:
  - name: ms-volume
    nfs:
      path: /mnt/user/home-cluster-nfs
      server: 192.168.1.27

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/fio

skipped mutate policy add-safe-to-evict -> resource default/Pod/fio
policy disallow-default-namespace -> resource default/Pod/fio failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/fio failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/fio failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/fio failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/fio failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/fio failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/fio failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/fio failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/fio failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: fio-arm64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-fio-arm64:
apiVersion: v1
kind: Pod
metadata:
  name: pod-fio-arm64
  namespace: default
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - arm64
  containers:
  - command:
    - bash
    - -c
    - |
      echo "############# Setting up the tools #############"; apt update && apt install vim curl git jq apache2-utils -y; if [[ "${BUILD_OR_INSTALL}" =~ "build" ]]; then
        echo "############# Building fio from sources #############";
        echo "############# Installing tools needed to build fio #############";
        apt install make gcc g++ git libaio-dev libaio1 zlib1g-dev -y;
        echo "############# Cloning fio sources #############";
        cd; git clone https://github.com/axboe/fio.git;
        echo "############# Building fio #############";
        cd fio/; ./configure --build-static && make && make install;
      elif [[ "${BUILD_OR_INSTALL}" =~ "install" ]]; then
        echo "############# Installing fio #############";
        apt install fio -y;
      else
        echo "ERROR: BUILD_OR_INSTALL: ${BUILD_OR_INSTALL} not supported";
        exit 1;
      fi; echo "############# Uname -a #############"; uname -a; echo "############# Testing fio is working (fio --version) #############"; fio --version; if [[ "${BUILD_OR_INSTALL}" =~ "build" ]]; then
        echo "############# Command top copy it to your machine #############";
        echo "kubectl cp -n $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace) ${HOSTNAME}:/usr/local/bin/fio ./fio-linux-arm64";
      fi; echo "############# Done. Sleeping for a day #############"; sleep 1d
    env:
    - name: BUILD_OR_INSTALL
      value: build
    image: ubuntu:23.10
    name: ubuntu

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fio-arm64

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fio-arm64
policy disallow-default-namespace -> resource default/Pod/pod-fio-arm64 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-fio-arm64 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-fio-arm64 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-fio-arm64 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-fio-arm64 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-fio-arm64 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-fio-arm64 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-fio-arm64 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: fio-x86_64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-fio-x86-64:
apiVersion: v1
kind: Pod
metadata:
  name: pod-fio-x86-64
  namespace: default
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
  containers:
  - command:
    - bash
    - -c
    - |
      echo "############# Setting up the tools #############"; apt update && apt install vim curl git jq apache2-utils -y; if [[ "${BUILD_OR_INSTALL}" =~ "build" ]]; then
        echo "############# Building fio from sources #############";
        echo "############# Installing tools needed to build fio #############";
        apt install make gcc g++ git libaio-dev libaio1 zlib1g-dev -y;
        echo "############# Cloning fio sources #############";
        cd; git clone https://github.com/axboe/fio.git;
        echo "############# Building fio #############";
        cd fio/; ./configure --build-static && make && make install;
      elif [[ "${BUILD_OR_INSTALL}" =~ "install" ]]; then
        echo "############# Installing fio #############";
        apt install fio -y;
      else
        echo "ERROR: BUILD_OR_INSTALL: ${BUILD_OR_INSTALL} not supported";
        exit 1;
      fi; echo "############# Uname -a #############"; uname -a; echo "############# Testing fio is working (fio --version) #############"; fio --version; if [[ "${BUILD_OR_INSTALL}" =~ "build" ]]; then
        echo "############# Command top copy it to your machine #############";
        echo "kubectl cp -n $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace) ${HOSTNAME}:/usr/local/bin/fio ./fio-linux-x86_64";
      fi; echo "############# Done. Sleeping for a day #############"; sleep 1d
    env:
    - name: BUILD_OR_INSTALL
      value: build
    image: ubuntu:23.10
    name: ubuntu

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fio-x86-64

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-fio-x86-64
policy disallow-default-namespace -> resource default/Pod/pod-fio-x86-64 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-fio-x86-64 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-fio-x86-64 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-fio-x86-64 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-fio-x86-64 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-fio-x86-64 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-fio-x86-64 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-fio-x86-64 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: firefox-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to selenium/Deployment/selenium-node-firefox:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: selenium-node-firefox
  name: selenium-node-firefox
  namespace: selenium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selenium-node-firefox
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: selenium-node-firefox
    spec:
      containers:
      - env:
        - name: SE_EVENT_BUS_HOST
          value: selenium-hub-svc
        - name: SE_EVENT_BUS_SUBSCRIBE_PORT
          value: "4443"
        - name: SE_EVENT_BUS_PUBLISH_PORT
          value: "4442"
        image: selenium/node-firefox:4.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl --request POST 'localhost:5555/se/grid/node/drain' --header 'X-REGISTRATION-SECRET;';
                tail --pid=$(pgrep -f '[n]ode --bind-host false --config /opt/selenium/config.toml')
                -f /dev/null; sleep 30s
        name: selenium-node-firefox
        ports:
        - containerPort: 5555
        resources:
          limits:
            cpu: ".5"
            memory: 1000Mi
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
      terminationGracePeriodSeconds: 3600
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource selenium/Deployment/selenium-node-firefox
policy drop-all-capabilities -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: firefox-deploy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to selenium/Deployment/selenium-node-firefox:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: selenium-node-firefox
  name: selenium-node-firefox
  namespace: selenium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selenium-node-firefox
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: selenium-node-firefox
    spec:
      containers:
      - env:
        - name: SE_EVENT_BUS_HOST
          value: selenium-hub-svc
        - name: SE_EVENT_BUS_SUBSCRIBE_PORT
          value: "4443"
        - name: SE_EVENT_BUS_PUBLISH_PORT
          value: "4442"
        image: selenium/node-firefox:4.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl --request POST 'localhost:5555/se/grid/node/drain' --header 'X-REGISTRATION-SECRET;';
                tail --pid=$(pgrep -f '[n]ode --bind-host false --config /opt/selenium/config.toml')
                -f /dev/null; sleep 30s
        name: selenium-node-firefox
        ports:
        - containerPort: 5555
        resources:
          limits:
            cpu: ".5"
            memory: 1000Mi
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
      terminationGracePeriodSeconds: 3600
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource selenium/Deployment/selenium-node-firefox
policy drop-all-capabilities -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource selenium/Deployment/selenium-node-firefox failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: firewall_firewall_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/firewall-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kraut
    app.kubernetes.io/instance: firewall-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kraut
  name: firewall-editor-role
  namespace: default
rules:
- apiGroups:
  - firewall.kraut.nicklasfrahm.dev
  resources:
  - firewalls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - firewall.kraut.nicklasfrahm.dev
  resources:
  - firewalls/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firewall_firewall_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/firewall-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kraut
    app.kubernetes.io/instance: firewall-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kraut
  name: firewall-viewer-role
  namespace: default
rules:
- apiGroups:
  - firewall.kraut.nicklasfrahm.dev
  resources:
  - firewalls
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - firewall.kraut.nicklasfrahm.dev
  resources:
  - firewalls/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firmwareschema_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/firmwareschema-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: firmwareschema-editor-role
  namespace: default
rules:
- apiGroups:
  - metal3.io
  resources:
  - firmwareschemas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal3.io
  resources:
  - firmwareschemas/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firmwareschema_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/firmwareschema-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: firmwareschema-viewer-role
  namespace: default
rules:
- apiGroups:
  - metal3.io
  resources:
  - firmwareschemas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metal3.io
  resources:
  - firmwareschemas/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first.job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/first-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: first-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - echo "Hello World!" && sleep 3600
        image: busybox:1.28
        name: hello
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/first-job

skipped mutate policy add-safe-to-evict -> resource default/Job/first-job
policy disallow-default-namespace -> resource default/Job/first-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/first-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/first-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/first-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/first-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/first-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/first-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: first.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-first-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-first-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-first
  template:
    metadata:
      labels:
        app: flask-first
    spec:
      containers:
      - env:
        - name: MESSAGE
          value: This is the first service
        image: epap011/flask-env-var
        name: flask-first
        resources:
          limits:
            cpu: 200m
            memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-first-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-first-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-first-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-first-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-first-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-first-service
  namespace: default
spec:
  ports:
  - port: 8080
  selector:
    app: flask-first
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - image: nginx:1.14.2
        name: myapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-deployment
policy disallow-default-namespace -> resource default/Deployment/my-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first_node.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx
    tier: front-end
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nginx failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first_pod_creation.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-new-pod:
apiVersion: v1
kind: Pod
metadata:
  name: my-new-pod
  namespace: default
spec:
  containers:
  - image: nginx:1.14.2
    name: nginx
    ports:
    - containerPort: 80
  - image: redis:6.2.5
    name: redis

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-new-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-new-pod
policy disallow-default-namespace -> resource default/Pod/my-new-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/my-new-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-new-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-new-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/my-new-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-new-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-new-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-new-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first_service_creation.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9376
  selector:
    app: MyApp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    run: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    run: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: firstdeployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/firstdeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: firstdeployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - image: nginx
        name: myweb
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/firstdeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/firstdeployment
policy disallow-default-namespace -> resource default/Deployment/firstdeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/firstdeployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/firstdeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/firstdeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/firstdeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/firstdeployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/firstdeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/firstdeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/firstdeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/udemy-k8s-aws-deployment-webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: udemy-k8s-aws-deployment-webapp
  name: udemy-k8s-aws-deployment-webapp
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      label-app: deployment-pod-webapp
      label-release: 0-5
  template:
    metadata:
      labels:
        label-app: deployment-pod-webapp
        label-release: 0-5
      name: udemy-k8s-aws-deployment-template-webapp
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
        imagePullPolicy: IfNotPresent
        name: deployment-pod-webapp
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/udemy-k8s-aws-deployment-webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/udemy-k8s-aws-deployment-webapp
policy disallow-default-namespace -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/udemy-k8s-aws-deployment-webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: udemy-k8s-aws-deployment-webapp
  name: udemy-k8s-aws-deployment-webapp
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      label-app: deployment-pod-webapp
      label-release: 0-5
  template:
    metadata:
      labels:
        label-app: deployment-pod-webapp
        label-release: 0-5
      name: udemy-k8s-aws-deployment-template-webapp
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
        imagePullPolicy: IfNotPresent
        name: deployment-pod-webapp
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/udemy-k8s-aws-deployment-webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/udemy-k8s-aws-deployment-webapp
policy disallow-default-namespace -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/udemy-k8s-aws-deployment-webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-pod
  template:
    metadata:
      labels:
        app: nginx-pod
      name: nginx-pod
    spec:
      containers:
      - image: nginx:1
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-dep:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-dep
  name: nginx-dep
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: nginx-dep
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx-dep
      name: nginx-dep
    spec:
      containers:
      - image: nginx:1.24-alpine
        imagePullPolicy: IfNotPresent
        name: nginx-dep
        ports:
        - containerPort: 80
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-dep

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-dep
policy disallow-default-namespace -> resource default/Deployment/nginx-dep failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-dep failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-dep failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-dep failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-dep failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-dep failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-dep failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-dep failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ng-debug:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ng-debug
  name: ng-debug
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: ng-debug
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ng-debug
      name: ng-debug
    spec:
      containers:
      - image: osmanyay/ng-debug:v1.0.0
        imagePullPolicy: IfNotPresent
        name: ng-debug
        ports:
        - containerPort: 80
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ng-debug

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ng-debug
policy disallow-default-namespace -> resource default/Deployment/ng-debug failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ng-debug failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ng-debug failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ng-debug failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ng-debug failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ng-debug failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ng-debug failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ng-debug failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-microservice.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    version: release0
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-microservice_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-release0-5:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    version: release0-5
  name: webapp-release0-5
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release0-5

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release0-5
policy disallow-default-namespace -> resource default/Pod/webapp-release0-5 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp-release0-5 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-release0-5 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-release0-5 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-release0-5 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp-release0-5 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-release0-5 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-release0-5 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-microservice_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/webapp:
apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: default
spec:
  ports:
  - name: webapp-http
    nodePort: 30080
    port: 80
  selector:
    app: webapp
    version: release0
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/webapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-opaque-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/giropops-secret:
apiVersion: v1
data:
  password: Z2lyb3BvcHM=
  username: SmVmZXJzb25fbGluZG8=
kind: Secret
metadata:
  name: giropops-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first-persistentVolume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/first-persistentVolume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: first-persistentVolume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  gcePersistentDisk:
    pdName: pv-disk
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first-persistentVolumeClaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/first-persistentVolumeClaim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: first-persistentVolumeClaim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firstpod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myapp
  name: myapp
  namespace: default
spec:
  containers:
  - image: jassyboy/roadmapdevops:V4
    name: myapp
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: firstpod_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/myapp:
apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 80
    targetPort: 80
  selector:
    name: myapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/myapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: firstpod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myapp
  name: myapp
  namespace: default
spec:
  containers:
  - image: jassyboy/roadmapdevops:V4
    name: myapp
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: "0"
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: firstpod1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/myapp:
apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 80
    targetPort: 80
  selector:
    name: myapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/myapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-pod1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-release-0-5:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: 0-5
  name: webapp-release-0-5
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5
policy disallow-default-namespace -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-release-0-5 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod:
apiVersion: v1
kind: Pod
metadata:
  name: first-pod
  namespace: default
spec:
  containers:
  - image: nginx:stable
    name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod
policy disallow-default-namespace -> resource default/Pod/first-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/first-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to first-k8s/Pod/first-pod2:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: first-app
    env: dev
  name: first-pod2
  namespace: first-k8s
spec:
  containers:
  - image: nginx
    name: nginx
    ports:
    - containerPort: 4555
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource first-k8s/Pod/first-pod2

skipped mutate policy add-safe-to-evict -> resource first-k8s/Pod/first-pod2
policy disallow-latest-tag -> resource first-k8s/Pod/first-pod2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource first-k8s/Pod/first-pod2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource first-k8s/Pod/first-pod2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource first-k8s/Pod/first-pod2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource first-k8s/Pod/first-pod2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource first-k8s/Pod/first-pod2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource first-k8s/Pod/first-pod2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource first-k8s/Pod/first-pod2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-arm64
    name: webapp
    resources:
      limits:
        cpu: 500m
        memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
  name: webapp
  namespace: default
spec:
  containers:
    image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: web-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: first-pod14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: "0"
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-release-0-5:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: 0-5
  name: webapp-release-0-5
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5
policy disallow-default-namespace -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-release-0-5 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod-declarativo:
apiVersion: v1
kind: Pod
metadata:
  name: first-pod-declarativo
  namespace: default
spec:
  containers:
  - image: nginx:stable
    name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-declarativo

skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-declarativo
policy disallow-default-namespace -> resource default/Pod/first-pod-declarativo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/first-pod-declarativo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod-declarativo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod-declarativo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod-declarativo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod-declarativo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod-declarativo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod-declarativo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-Pod17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myapp
  name: myapp
  namespace: default
spec:
  containers:
  - image: nginx
    name: myapp-conatiner
    ports:
    - containerPort: 80
      protocol: TCP
  - image: tomcat
    name: myapp-conatiner2
    ports:
    - containerPort: 8080
      protocol: TCP
  - image: http
    name: myapp-conatiner3
    ports:
    - containerPort: 80
      protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-pod18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: "0"
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: firstpod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myfirstpod:
apiVersion: v1
kind: Pod
metadata:
  name: myfirstpod
  namespace: default
spec:
  containers:
  - image: mysql
    name: db
  - image: nginx
    name: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myfirstpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myfirstpod
policy disallow-default-namespace -> resource default/Pod/myfirstpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myfirstpod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myfirstpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myfirstpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myfirstpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/myfirstpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/myfirstpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myfirstpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myfirstpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: firstpod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-pod:
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  namespace: default
spec:
  containers:
  - image: nginx
    name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod
policy disallow-default-namespace -> resource default/Pod/my-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/my-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/my-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/my-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: "0"
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-release-0-5:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: 0-5
  name: webapp-release-0-5
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5
policy disallow-default-namespace -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-release-0-5 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod:
apiVersion: v1
kind: Pod
metadata:
  name: first-pod
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod
policy disallow-default-namespace -> resource default/Pod/first-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/first-pod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/first-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Firstpod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myapp
  name: myapp
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - sleep 3600
    image: nginx
    name: myapp
    ports:
    - containerPort: 8080
    resources:
      limits:
        cpu: 500m
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: firstpod5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/prodtwo:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: prodtwo
  name: prodtwo
  namespace: default
spec:
  containers:
  - image: lovelearnlinux/webserver:v1
    name: boxone
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/prodtwo

skipped mutate policy add-safe-to-evict -> resource default/Pod/prodtwo
policy disallow-default-namespace -> resource default/Pod/prodtwo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/prodtwo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/prodtwo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/prodtwo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/prodtwo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/prodtwo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/prodtwo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/prodtwo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: "0"
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-release-0-5:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: 0-5
  name: webapp-release-0-5
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5
policy disallow-default-namespace -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-release-0-5 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-arm64
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: "0"
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-arm64
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-release-0-5:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: webapp
    release: 0-5
  name: webapp-release-0-5
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5-arm64
    name: webapp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-release-0-5
policy disallow-default-namespace -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-release-0-5 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-release-0-5 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-release-0-5 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-pod9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod-declareted:
apiVersion: v1
kind: Pod
metadata:
  name: first-pod-declareted
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: ngix-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-declareted

skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-declareted
policy disallow-default-namespace -> resource default/Pod/first-pod-declareted failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/first-pod-declareted failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/first-pod-declareted failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod-declareted failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod-declareted failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod-declareted failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod-declareted failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod-declareted failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod-declareted failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: firstpodlabel.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/firstpodlabel:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: fp
    release: stable
    team: green
  name: firstpodlabel
  namespace: default
spec:
  containers:
  - image: nginx
    name: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/firstpodlabel

skipped mutate policy add-safe-to-evict -> resource default/Pod/firstpodlabel
policy disallow-default-namespace -> resource default/Pod/firstpodlabel failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/firstpodlabel failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/firstpodlabel failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/firstpodlabel failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/firstpodlabel failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/firstpodlabel failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/firstpodlabel failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/firstpodlabel failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/firstpodlabel failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-pod-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod-pv:
apiVersion: v1
kind: Pod
metadata:
  name: first-pod-pv
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: nginx-container
    volumeMounts:
    - mountPath: /volume-inside-container
      name: first-pv
  volumes:
  - name: first-pv
    persistentVolumeClaim:
      claimName: first-persistentVolumeClaim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-pv

skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-pv
policy disallow-default-namespace -> resource default/Pod/first-pod-pv failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/first-pod-pv failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/first-pod-pv failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod-pv failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod-pv failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod-pv failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod-pv failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod-pv failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod-pv failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-pod-storageClass-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod-storageClass-pvc:
apiVersion: v1
kind: Pod
metadata:
  name: first-pod-storageClass-pvc
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: nginx-container
    volumeMounts:
    - mountPath: /volume-inside-container
      name: first-sc
  volumes:
  - name: first-sc
    persistentVolumeClaim:
      claimName: first-storageClass-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-storageClass-pvc

skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-storageClass-pvc
policy disallow-default-namespace -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod-storageClass-pvc failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: first-pod-volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/first-pod-volume:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: first-pod-volume
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: nginx-container
    volumeMounts:
    - mountPath: /volume-inside-container
      name: first-volume
  - image: jenkins/jenkins:alpine
    name: jenkins-container
    volumeMounts:
    - mountPath: /volume-inside-container
      name: first-volume
  volumes:
  - hostPath:
      path: /Users/gabrielalopes/Dev/github/kubernetes/volume
      type: Directory
    name: first-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/first-pod-volume
policy disallow-default-namespace -> resource default/Pod/first-pod-volume failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/first-pod-volume failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/first-pod-volume failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/first-pod-volume failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/first-pod-volume failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/first-pod-volume failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/first-pod-volume failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/first-pod-volume failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/first-pod-volume failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: first-replicaset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/udemy-k8s-aws-replicaset-webapp:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: udemy-k8s-aws-replicaset-webapp
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      label-app: rs-pod-webapp
      label-release: 0-5
  template:
    metadata:
      labels:
        label-app: rs-pod-webapp
        label-release: 0-5
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
        imagePullPolicy: IfNotPresent
        name: rs-pod-webapp
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp
policy drop-all-capabilities -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: first-replicaset1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/udemy-k8s-aws-replicaset-webapp:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: udemy-k8s-aws-replicaset-webapp
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      label-app: rs-pod-webapp
      label-release: 0-5
  template:
    metadata:
      labels:
        label-app: rs-pod-webapp
        label-release: 0-5
    spec:
      containers:
      - image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5
        imagePullPolicy: IfNotPresent
        name: rs-pod-webapp
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp
policy drop-all-capabilities -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/udemy-k8s-aws-replicaset-webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: firstservice.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/firstservice:
apiVersion: v1
kind: Service
metadata:
  name: firstservice
  namespace: default
spec:
  ports:
  - nodePort: 30100
    port: 80
    targetPort: 80
  selector:
    app: web
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/firstservice failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ng-debug-service:
apiVersion: v1
kind: Service
metadata:
  name: ng-debug-service
  namespace: default
spec:
  ports:
  - name: ng-debug-port
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: ng-debug
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/first-service:
apiVersion: v1
kind: Service
metadata:
  name: first-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: first-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firstService1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/myweb-cs:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myweb-cs
  name: myweb-cs
  namespace: default
spec:
  ports:
  - name: 80-32000
    port: 32000
    protocol: TCP
    targetPort: 80
  selector:
    app: myweb
  type: ClusterIP
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fleetman-webapp:
apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
  selector:
    app: webapp
    release: "0"
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fleetman-webapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-storageClass.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/first-storageClass:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: first-storageClass
  namespace: default
parameters:
  fstype: ext4
  replication: none
  type: pd-standard
provisioner: kubernetes.io/gce-pc

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first-storageClass-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/first-storageClass-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: first-storageClass-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
    storageClassName: first-storageClass

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firstuser_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/firstuser-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: quay-api-operator
  name: firstuser-editor-role
  namespace: default
rules:
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - firstusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - firstusers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: firstuser_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/firstuser-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: quay-api-operator
  name: firstuser-viewer-role
  namespace: default
rules:
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - firstusers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - firstusers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: first-web-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    imagePullPolicy: IfNotPresent
    name: webapp
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-web-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: richardchesterwood/k8s-fleetman-webapp-angular:release0
    imagePullPolicy: IfNotPresent
    name: webapp
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: first-webapp-service-release-0.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/udemy-k8s-aws-webapp:
apiVersion: v1
kind: Service
metadata:
  name: udemy-k8s-aws-webapp
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
  selector:
    label-app: webapp
    label-release: "0"
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/udemy-k8s-aws-webapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-webapp-service-release-01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/udemy-k8s-aws-webapp:
apiVersion: v1
kind: Service
metadata:
  name: udemy-k8s-aws-webapp
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
  selector:
    label-app: webapp
    label-release: "0"
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/udemy-k8s-aws-webapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-webapp-service-release-0-5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/udemy-k8s-aws-webapp:
apiVersion: v1
kind: Service
metadata:
  name: udemy-k8s-aws-webapp
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
  selector:
    label-app: webapp
    label-release: 0-5
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/udemy-k8s-aws-webapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: first-webapp-service-release-0-51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/udemy-k8s-aws-webapp:
apiVersion: v1
kind: Service
metadata:
  name: udemy-k8s-aws-webapp
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
  selector:
    label-app: webapp
    label-release: 0-5
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/udemy-k8s-aws-webapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: fitproBackend.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/php-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php-backend
  template:
    metadata:
      labels:
        app: php-backend
    spec:
      containers:
      - image: 735341528488.dkr.ecr.us-east-1.amazonaws.com/fitpro-backend:956a40c
        imagePullPolicy: Always
        name: php-backend
        ports:
        - containerPort: 9501
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - mountPath: /usr/src/app/.env
          name: env-config
          subPath: .env
        - mountPath: /usr/src/app/sendgrid.env
          name: sendgrid-config
          subPath: sendgrid.env
      volumes:
      - configMap:
          name: php-backend-config
        name: env-config
      - configMap:
          name: sendgrid-config
        name: sendgrid-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/php-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/php-backend
policy disallow-default-namespace -> resource default/Deployment/php-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/php-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/php-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/php-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/php-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/php-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/php-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fitproBackend_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/php-backend-service:
apiVersion: v1
kind: Service
metadata:
  name: php-backend-service
  namespace: default
spec:
  ports:
  - port: 9501
    protocol: TCP
    targetPort: 9501
  selector:
    app: php-backend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fitproFrontend.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fitpro-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fitpro-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fitpro-app
  template:
    metadata:
      labels:
        app: fitpro-app
    spec:
      containers:
      - image: 735341528488.dkr.ecr.us-east-1.amazonaws.com/fitpro-frontend:3b06d8f
        imagePullPolicy: Always
        name: fitpro-app
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fitpro-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fitpro-app
policy disallow-default-namespace -> resource default/Deployment/fitpro-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fitpro-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fitpro-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fitpro-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/fitpro-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fitpro-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fitpro-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: fitproFrontend_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fitpro-app:
apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: fitpro.smadi0x86.me
  name: fitpro-app
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: fitpro-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fitproFrontend_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/fitpro-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
  name: fitpro-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: fitpro.smadi0x86.me
    http:
      paths:
      - backend:
          service:
            name: php-backend-service
            port:
              number: 9501
        path: /api/
        pathType: Prefix
      - backend:
          service:
            name: fitpro-app
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - fitpro.smadi0x86.me
    secretName: fitpro-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fix-access-data-api.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to hackfest/NetworkPolicy/data-api-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: data-api-policy
  namespace: hackfest
spec:
  ingress:
  - from:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          app: flights-api
  podSelector:
    matchLabels:
      app: data-api

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fix-access-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to hackfest/NetworkPolicy/data-api-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: data-api-policy
  namespace: hackfest
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          purpose: production
    - podSelector:
        matchLabels:
          app: flights-api
    - podSelector:
        matchLabels:
          app: weather-api
    - podSelector:
        matchLabels:
          app: quakes-api
  podSelector:
    matchLabels:
      app: data-api

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-07-25T16:39:21Z"
  labels:
    version: v1
    zone: prod
  name: nginx
  namespace: default
  resourceVersion: "12986"
  uid: 305c3342-b624-4236-81bb-82e6009f3a2f
spec:
  containers:
  - image: nginx
    imagePullPolicy: Always
    name: nginx
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-wfmxl
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-wfmxl
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-07-25T16:39:21Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-07-25T16:44:56Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-07-25T16:44:56Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-07-25T16:39:21Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://53b0920e35ff6f557f2fce0b3abe7bbe707f5f6bcbfc4fccd58c5c64e0875dd4
    image: nginx:latest
    imageID: docker-pullable://nginx@sha256:08bc36ad52474e528cc1ea3426b5e3f4bad8a130318e3140d6cfe29c8892c7ef
    lastState: {}
    name: nginx
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-07-25T16:44:55Z"
  hostIP: 192.168.59.100
  phase: Running
  podIP: 10.244.0.5
  podIPs:
  - ip: 10.244.0.5
  qosClass: BestEffort
  startTime: "2023-07-25T16:39:21Z"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nginx failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flag_output.golden.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/istiod:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istiod
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istiod
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: pilot
  strategy:
    rollingUpdate:
      maxSurge: 100%!
(MISSING)      maxUnavailable: 25%!
(MISSING)  template:
    metadata:
      annotations:
        ambient.istio.io/redirection: disabled
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: istiod
        install.operator.istio.io/owning-resource: unknown
        istio: pilot
        istio.io/rev: default
        operator.istio.io/component: Pilot
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - discovery
        - --monitoringAddr=:15014
        - --log_output_level=default:info
        - --domain
        - cluster.local
        - --keepaliveMaxServerConnectionAge
        - 30m
        env:
        - name: REVISION
          value: default
        - name: JWT_POLICY
          value: third-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: KUBECONFIG
          value: /var/run/secrets/remote/config
        - name: PILOT_TRACE_SAMPLING
          value: "1"
        - name: PILOT_ENABLE_ANALYSIS
          value: "false"
        - name: CLUSTER_ID
          value: Kubernetes
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: PLATFORM
          value: ""
        image: gcr.io/istio-testing/pilot:latest
        name: discovery
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 15010
          protocol: TCP
        - containerPort: 15017
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 3
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: istio-token
          readOnly: true
        - mountPath: /var/run/secrets/istio-dns
          name: local-certs
        - mountPath: /etc/cacerts
          name: cacerts
          readOnly: true
        - mountPath: /var/run/secrets/remote
          name: istio-kubeconfig
          readOnly: true
        - mountPath: /var/run/secrets/istiod/tls
          name: istio-csr-dns-cert
          readOnly: true
        - mountPath: /var/run/secrets/istiod/ca
          name: istio-csr-ca-configmap
          readOnly: true
      serviceAccountName: istiod
      volumes:
      - emptyDir:
          medium: Memory
        name: local-certs
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
      - name: cacerts
        secret:
          optional: true
          secretName: cacerts
      - name: istio-kubeconfig
        secret:
          optional: true
          secretName: istio-kubeconfig
      - name: istio-csr-dns-cert
        secret:
          optional: true
          secretName: istiod-tls
      - configMap:
          defaultMode: 420
          name: istio-ca-root-cert
          optional: true
        name: istio-csr-ca-configmap

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/istiod
policy disallow-latest-tag -> resource istio-system/Deployment/istiod failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource istio-system/Deployment/istiod failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/istiod failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/istiod failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource istio-system/Deployment/istiod failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: flag_values_enable_egressgateway.golden.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/istio-egressgateway:
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: istio-egressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: egressgateway
    istio.io/rev: default
    operator.istio.io/component: EgressGateways
    release: istio
  name: istio-egressgateway
  namespace: istio-system
spec:
  ports:
  - name: http2
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: istio-egressgateway
    istio: egressgateway
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flags.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/FeatureFlag/app-flags:
apiVersion: core.openfeature.dev/v1beta1
batteryTargeting:
  if:
  - '>=':
    - var: batteryPercentage
    - 50
  - green
  - if:
    - '>=':
      - var: batteryPercentage
      - 25
    - yellow
    - if:
      - '>':
        - var: batteryPercentage
        - 0
      - red
      - grey
connectionTargeting:
  if:
  - ==:
    - var: connectionType
    - 4g
  - rocket
  - if:
    - ==:
      - var: connectionType
      - 3g
    - rabbit
    - if:
      - ==:
        - var: connectionType
        - 2g
      - turtle
      - if:
        - ==:
          - var: connectionType
          - slow-2g
        - snail
        - none
emptyTargeting: {}
giveawayTargeting:
  fractional:
  - - red
    - 90
  - - green
    - 10
kind: FeatureFlag
languageTargeting:
  if:
  - in:
    - fr
    - var: language
  - fr
  - if:
    - in:
      - en
      - var: language
    - en
    - if:
      - in:
        - es
        - var: language
      - es
      - if:
        - in:
          - pt
          - var: language
        - pt
        - if:
          - in:
            - de
            - var: language
          - de
          - if:
            - in:
              - it
              - var: language
            - it
            - if:
              - in:
                - nl
                - var: language
              - nl
              - globe
metadata:
  labels:
    app: open-feature-kubecon
  name: app-flags
  namespace: default
osTargeting:
  if:
  - in:
    - Android
    - var: userAgent
  - bot
  - if:
    - in:
      - Mac
      - var: userAgent
    - apple
    - if:
      - in:
        - Win
        - var: userAgent
      - window
      - if:
        - in:
          - Linux
          - var: userAgent
        - penguin
        - if:
          - in:
            - iPhone
            - var: userAgent
          - apple
          - mind-blown
pixelTargeting:
  if:
  - '>=':
    - '*':
      - var: windowHeight
      - var: windowWidth
    - 4000000
  - indigo
  - if:
    - '>=':
      - '*':
        - var: windowHeight
        - var: windowWidth
      - 3200000
    - blue
    - if:
      - '>=':
        - '*':
          - var: windowHeight
          - var: windowWidth
        - 2400000
      - green
      - if:
        - '>=':
          - '*':
            - var: windowHeight
            - var: windowWidth
          - 1800000
        - yellow
        - if:
          - '>=':
            - '*':
              - var: windowHeight
              - var: windowWidth
            - 0
          - orange
randomTargeting:
  fractional:
  - - clubs
    - 25
  - - spades
    - 25
  - - diamonds
    - 25
  - - hearts
    - 25
spec:
  flagSpec:
    flags:
      emoji:
        defaultVariant: none
        state: ENABLED
        targeting: {}
        variants:
          angel: "\U0001F607"
          apple: "\U0001F34E"
          battery: "\U0001F50B"
          boom: "\U0001F4A5"
          bot: "\U0001F916"
          cat: "\U0001F638"
          clock: ⏰
          clubs: ♣️
          cry: "\U0001F62D"
          de: "\U0001F1E9\U0001F1EA"
          ded: "\U0001F480"
          devil: "\U0001F608"
          diamonds: ♦️
          en: "\U0001F1EC\U0001F1E7"
          es: "\U0001F1EA\U0001F1F8"
          flush: "\U0001F633"
          fox: "\U0001F98A"
          fr: "\U0001F1EB\U0001F1F7"
          globe: "\U0001F30E"
          grin: "\U0001F600"
          hearts: ♥️
          hot-face: "\U0001F975"
          it: "\U0001F1EE\U0001F1F9"
          joy: "\U0001F602"
          mind-blown: "\U0001F92F"
          nl: "\U0001F1F3\U0001F1F1"
          none: ""
          not-stonks: "\U0001F4C9"
          penguin: "\U0001F427"
          pt: "\U0001F1F5\U0001F1F9"
          rabbit: "\U0001F407"
          rocket: "\U0001F680"
          shades: "\U0001F60E"
          snail: "\U0001F40C"
          spades: ♠️
          stonks: "\U0001F4C8"
          turtle: "\U0001F422"
          window: "\U0001FA9F"
          xd: "\U0001F606"
      hex-color:
        defaultVariant: grey
        state: ENABLED
        targeting: {}
        variants:
          blue: 00a
          green: 0a0
          grey: aaa
          indigo: 4b0082
          orange: ff6e00
          red: a00
          yellow: aa0
timedTargeting:
  if:
  - '>=':
    - var: $flagd.timestamp
    - 1710343959
  - boom
  - clock

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flame-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/flame-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: flame-claim0
  name: flame-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flame-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flame:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: flame
  name: flame
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flame
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: flame
    spec:
      containers:
      - env:
        - name: PASSWORD
          value: 123456Eg
        image: pawelmalak/flame:latest
        name: flame
        ports:
        - containerPort: 5005
        resources: {}
        volumeMounts:
        - mountPath: /app/data
          name: flame-claim0
      restartPolicy: Always
      volumes:
      - name: flame-claim0
        persistentVolumeClaim:
          claimName: flame-claim0
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flame

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flame
policy disallow-default-namespace -> resource default/Deployment/flame failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flame failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flame failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flame failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flame failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flame failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/flame failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flame failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flame failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flame-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flame:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: flame
  name: flame
  namespace: default
spec:
  ports:
  - name: "5005"
    port: 5005
    targetPort: 5005
  selector:
    io.kompose.service: flame
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flanel.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/kube-flannel:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    k8s-app: flannel
    pod-security.kubernetes.io/enforce: privileged
  name: kube-flannel
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/kube-flannel:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: kube-flannel
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/kube-flannel:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: kube-flannel
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kube-flannel:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: kube-flannel
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kube-flannel:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: kube-flannel
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flanel_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-flannel/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: flannel
  name: flannel
  namespace: kube-flannel

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flanel_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/flannel:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: flannel
  name: flannel
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flanel_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/flannel:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: flannel
  name: flannel
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flannel
subjects:
- kind: ServiceAccount
  name: flannel
  namespace: kube-flannel

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flanel_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-flannel/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "cbr0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "EnableNFTables": false,
      "Backend": {
        "Type": "vxlan"
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    k8s-app: flannel
    tier: node
  name: kube-flannel-cfg
  namespace: kube-flannel

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flanel_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-flannel/DaemonSet/kube-flannel-ds:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    k8s-app: flannel
    tier: node
  name: kube-flannel-ds
  namespace: kube-flannel
spec:
  selector:
    matchLabels:
      app: flannel
      k8s-app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        k8s-app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: EVENT_QUEUE_DEPTH
          value: "5000"
        image: ghcr.io/flannel-io/flannel:v0.26.4
        name: kube-flannel
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /run/xtables.lock
          name: xtables-lock
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /flannel
        - /opt/cni/bin/flannel
        command:
        - cp
        image: ghcr.io/flannel-io/flannel-cni-plugin:v1.6.2-flannel1
        name: install-cni-plugin
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-plugin
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: ghcr.io/flannel-io/flannel:v0.26.4
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      priorityClassName: system-node-critical
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /opt/cni/bin
        name: cni-plugin
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-flannel/DaemonSet/kube-flannel-ds
policy drop-all-capabilities -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "vxlan0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "Backend": {
        "Type": "vxlan",
        "VNI" : 4096,
        "Port": 4789
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-cfg
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-amd64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-amd64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-amd64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-ppc64le:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-ppc64le
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - ppc64le
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel1_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-s390x:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-s390x
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - s390x
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-s390x
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "vxlan0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "Backend": {
        "Type": "vxlan",
        "VNI" : 4096,
        "Port": 4789
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-cfg
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel3_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-amd64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-amd64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-amd64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel3_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel3_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel3_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-ppc64le:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-ppc64le
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - ppc64le
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel3_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-s390x:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-s390x
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - s390x
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-s390x
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel5_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "vxlan0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "Backend": {
        "Type": "vxlan",
        "VNI" : 4096,
        "Port": 4789
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-cfg
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel5_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-amd64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-amd64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-amd64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel5_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel5_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel5_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-ppc64le:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-ppc64le
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - ppc64le
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel5_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-s390x:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-s390x
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - s390x
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-s390x
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/flannel:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flannel
  namespace: default
rules:
- apiGroups:
  - extensions
  resourceNames:
  - psp.flannel.unprivileged
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/flannel:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flannel
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flannel
subjects:
- kind: ServiceAccount
  name: flannel
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel6_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel6_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "cbr0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "Backend": {
        "Type": "vxlan"
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-cfg
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel6_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.cn-beijing.aliyuncs.com/qingfeng666/flannel:v0.13.0
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: registry.cn-beijing.aliyuncs.com/qingfeng666/flannel:v0.13.0
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      priorityClassName: system-node-critical
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel7_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel7_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "vxlan0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "Backend": {
        "Type": "vxlan",
        "VNI" : 4096,
        "Port": 4789
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-cfg
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel7_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-amd64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-amd64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-amd64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-amd64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-amd64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel7_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm64:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm64
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm64
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm64
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm64 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel7_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-arm:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-arm
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-arm
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-arm
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-arm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel7_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-ppc64le:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-ppc64le
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - ppc64le
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-ppc64le
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-ppc64le failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel7_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/kube-flannel-ds-s390x:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    tier: node
  name: kube-flannel-ds-s390x
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - s390x
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: kube-flannel
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: quay.io/coreos/flannel:v0.12.0-s390x
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/kube-flannel-ds-s390x
policy drop-all-capabilities -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/kube-flannel-ds-s390x failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flannel8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/kube-flannel:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: privileged
  name: kube-flannel
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/kube-flannel:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: kube-flannel
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/kube-flannel:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: kube-flannel
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kube-flannel:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: kube-flannel
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kube-flannel:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: kube-flannel
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-flannel/ServiceAccount/flannel:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-flannel

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/flannel:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flannel
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - clustercidrs
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel8_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/flannel:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flannel
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flannel
subjects:
- kind: ServiceAccount
  name: flannel
  namespace: kube-flannel

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel8_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-flannel/ConfigMap/kube-flannel-cfg:
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "cbr0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.10.0.0/16",
      "Backend": {
        "Type": "vxlan"
      }
    }
kind: ConfigMap
metadata:
  name: kube-flannel-cfg
  namespace: kube-flannel

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flannel8_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-flannel/DaemonSet/kube-flannel-ds:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
  name: kube-flannel-ds
  namespace: kube-flannel
spec:
  selector:
    matchLabels:
      app: flannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: flannel
    spec:
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: EVENT_QUEUE_DEPTH
          value: "5000"
        image: 10.173.181.26/flannel/flannel:v0.25.1
        name: kube-flannel
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: 10.173.181.26/flannel/flannel:v0.25.1
        name: install-cni
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
      serviceAccountName: flannel
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
        name: run
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg
        name: flannel-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-flannel/DaemonSet/kube-flannel-ds
policy drop-all-capabilities -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-flannel/DaemonSet/kube-flannel-ds failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: flaresolverr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flaresolverr:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaresolverr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaresolverr
  template:
    metadata:
      labels:
        app: flaresolverr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Los_Angeles
        - name: PUID
          value: "1024"
        - name: PGID
          value: "100"
        - name: LOG_LEVEL
          value: info
        - name: PROMETHEUS_PORT
          value: "9000"
        image: flaresolverr/flaresolverr:v3.3.21
        name: flaresolverr
        ports:
        - containerPort: 8191
          name: http
          protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flaresolverr

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flaresolverr
policy disallow-default-namespace -> resource default/Deployment/flaresolverr failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flaresolverr failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flaresolverr failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flaresolverr failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flaresolverr failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flaresolverr failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flaresolverr failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flaresolverr failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flaresolverr1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flaresolverr:
apiVersion: v1
kind: Service
metadata:
  name: flaresolverr
  namespace: default
spec:
  ports:
  - name: flaresolverr-http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: flaresolverr
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flaresolverr failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flaresolverr3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flaresolverr/Deployment/flaresolverr:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaresolverr
  namespace: flaresolverr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaresolverr
  template:
    metadata:
      labels:
        app: flaresolverr
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: info
        - name: LOG_HTML
          value: "false"
        - name: CAPTCHA_SOLVER
          value: none
        - name: PROMETHEUS_ENABLED
          value: "false"
        image: ghcr.io/flaresolverr/flaresolverr:v3.3.21
        name: flaresolverr
        ports:
        - containerPort: 8191
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource flaresolverr/Deployment/flaresolverr

skipped mutate policy add-safe-to-evict -> resource flaresolverr/Deployment/flaresolverr
policy drop-all-capabilities -> resource flaresolverr/Deployment/flaresolverr failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource flaresolverr/Deployment/flaresolverr failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource flaresolverr/Deployment/flaresolverr failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource flaresolverr/Deployment/flaresolverr failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource flaresolverr/Deployment/flaresolverr failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource flaresolverr/Deployment/flaresolverr failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flaresolverr3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flaresolverr/Service/flaresolverr:
apiVersion: v1
kind: Service
metadata:
  name: flaresolverr
  namespace: flaresolverr
spec:
  ports:
  - port: 8191
    targetPort: 8191
  selector:
    app: flaresolverr

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flarum.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/flarum:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: flarum
  name: flarum
  namespace: default
spec:
  containers:
  - image: registry.cn-hangzhou.aliyuncs.com/xybzljc/my_flarum:v1
    imagePullPolicy: Never
    name: flarum
    ports:
    - containerPort: 8001
      hostPort: 8001
      name: http
      protocol: TCP
    resources: {}
  dnsPolicy: ClusterFirst
  hostNetwork: true
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/flarum

skipped mutate policy add-safe-to-evict -> resource default/Pod/flarum
policy disallow-default-namespace -> resource default/Pod/flarum failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/flarum failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/flarum failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/flarum failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/flarum failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/flarum failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/flarum failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/flarum failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-basic/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: ingress-basic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: registryaliciaawa.azurecr.io/flask-app:latest
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-basic/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource ingress-basic/Deployment/flask-app
policy disallow-latest-tag -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    app: flask-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask_1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-v1-tutorial:
apiVersion: v1
kind: Service
metadata:
  name: flask-v1-tutorial
  namespace: default
spec:
  ports:
  - name: flask-v1
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-v1-tutorial
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-v1-tutorial failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask_1_79089b71.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-v1-tutorial:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    downscaler/uptime: Mon-Fri 07:00-19:00 US/Eastern
  labels:
    app: flask-v1
  name: flask-v1-tutorial
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-v1-tutorial
  template:
    metadata:
      labels:
        app: flask-v1-tutorial
    spec:
      containers:
      - image: jhinds/flask-tutorial:0.0.0
        imagePullPolicy: Always
        name: flask-v1-tutorial
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-v1-tutorial

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-v1-tutorial
policy disallow-default-namespace -> resource default/Deployment/flask-v1-tutorial failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-v1-tutorial failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-v2-tutorial:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    downscaler/uptime: Mon-Fri 07:00-19:00 US/Pacific
  labels:
    app: flask-v2
  name: flask-v2-tutorial
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-v2-tutorial
  template:
    metadata:
      labels:
        app: flask-v2-tutorial
    spec:
      containers:
      - image: jhinds/flask-tutorial:0.0.0
        imagePullPolicy: Always
        name: flask-v2-tutorial
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-v2-tutorial

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-v2-tutorial
policy disallow-default-namespace -> resource default/Deployment/flask-v2-tutorial failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-v2-tutorial failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask_2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-v2-tutorial:
apiVersion: v1
kind: Service
metadata:
  name: flask-v2-tutorial
  namespace: default
spec:
  ports:
  - name: flask-v2
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-v2-tutorial
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-v2-tutorial failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-v3-tutorial:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    downscaler/uptime: Sat-Sun 06:00-07:00 US/Central
  labels:
    app: flask-v3
  name: flask-v3-tutorial
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-v3-tutorial
  template:
    metadata:
      labels:
        app: flask-v3-tutorial
    spec:
      containers:
      - image: jhinds/flask-tutorial:0.0.0
        imagePullPolicy: Always
        name: flask-v3-tutorial
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-v3-tutorial

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-v3-tutorial
policy disallow-default-namespace -> resource default/Deployment/flask-v3-tutorial failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-v3-tutorial failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask_3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-v3-tutorial:
apiVersion: v1
kind: Service
metadata:
  name: flask-v3-tutorial
  namespace: default
spec:
  ports:
  - name: flask-v3
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-v3-tutorial
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-v3-tutorial failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask_app-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f C:\Users\hao\Desktop\存放\project-root\docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: flask-app
  name: flask-app
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: flask-app
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask_app-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: flask-app
  name: flask-app
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    io.kompose.service: flask-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/assign2flask:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: assign2flask
  name: assign2flask
  namespace: default
spec:
  minReadySeconds: 5
  replicas: 3
  selector:
    matchLabels:
      app: assign2flask
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: assign2flask
    spec:
      containers:
      - image: changpeng3336/assign2:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /about
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
        name: assign2flask
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/assign2flask

skipped mutate policy add-safe-to-evict -> resource default/Deployment/assign2flask
policy disallow-default-namespace -> resource default/Deployment/assign2flask failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/assign2flask failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/assign2flask failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/assign2flask failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask_deployment_minikube.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/assign2flask:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: assign2flask
  name: assign2flask
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assign2flask
  template:
    metadata:
      labels:
        app: assign2flask
    spec:
      containers:
      - image: changpeng3336/assign2:latest
        imagePullPolicy: Always
        name: assign2flask
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/assign2flask

skipped mutate policy add-safe-to-evict -> resource default/Deployment/assign2flask
policy disallow-default-namespace -> resource default/Deployment/assign2flask failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/assign2flask failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/assign2flask failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/assign2flask failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/assign2flask failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask_kube.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-test-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-test-service
  namespace: default
spec:
  ports:
  - port: 6000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-test-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask_kube_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-test-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-test-app
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: flask-test-app
  template:
    metadata:
      labels:
        app: flask-test-app
    spec:
      containers:
      - image: docker.io/paeljojy/minikube-flask-app
        imagePullPolicy: IfNotPresent
        name: flask-test-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-test-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-test-app
policy disallow-default-namespace -> resource default/Deployment/flask-test-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-test-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-test-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-test-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-test-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-test-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-test-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-test-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-test-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-loadbalancer:
apiVersion: v1
kind: Service
metadata:
  name: flask-loadbalancer
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: assign2flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        - name: MONGO_PORT
          value: "27017"
        image: karenwang97/as3-app:v5
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: kodekloud/flask-session-app:1
        name: flask-app
        ports:
        - containerPort: 8080
          name: http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-app
  name: flask-app-service
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/test-flask-svc:
apiVersion: v1
kind: Service
metadata:
  name: test-flask-svc
  namespace: default
spec:
  ports:
  - port: 6000
    protocol: TCP
    targetPort: 5000
  selector:
    app: test-flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-flask-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-flask-app
  template:
    metadata:
      labels:
        app: test-flask-app
    spec:
      containers:
      - image: sumonpaul/testflask
        name: test-flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-flask-app
policy disallow-default-namespace -> resource default/Deployment/test-flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/test-flask-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/test-flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/test-flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/test-flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/test-flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/test-flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/test-flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/test-flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: gabrielao/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: todo-flask-app
        imagePullPolicy: IfNotPresent
        name: flask
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-4:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app-4
  name: flask-app-4
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app-4
  template:
    metadata:
      labels:
        app: flask-app-4
    spec:
      containers:
      - image: kodekloud/flask-session-app:1
        name: flask-app-4
        ports:
        - containerPort: 8080
          name: http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-4

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-4
policy disallow-default-namespace -> resource default/Deployment/flask-app-4 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-4 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-4 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-4 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-4 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-4 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-4 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-4 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-4-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-app-4
  name: flask-app-4-service
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-app-4
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-app-4-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-basic/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: ingress-basic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: registryaliciaawa.azurecr.io/flask-app:latest
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-basic/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource ingress-basic/Deployment/flask-app
policy disallow-latest-tag -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress-basic/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    app: flask-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        - name: MONGO_PORT
          value: "27017"
        image: karenwang97/as3-app:v5
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: todo-flask-app
        imagePullPolicy: IfNotPresent
        name: flask
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: matheusbattisti/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: jefersonvm/flask-kub-projeto:v0.2
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: williamcorrea2712/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: matheusbattisti/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: default
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flaskApp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to hello/Service/flask-hello:
apiVersion: v1
kind: Service
metadata:
  name: flask-hello
  namespace: hello
spec:
  ports:
  - name: http
    port: 8090
    protocol: TCP
    targetPort: 8080
  selector:
    app: flask-hello
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb
        - name: MONGO_PORT
          value: "27017"
        image: daniel1426/cloud-starter:healthmonitor
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flaskApp_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to hello/Deployment/flask-hello:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-hello
  namespace: hello
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-hello
  template:
    metadata:
      labels:
        app: flask-hello
    spec:
      containers:
      - image: ilovefran/flask-hello:1.0
        name: flask-hello
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource hello/Deployment/flask-hello

skipped mutate policy add-safe-to-evict -> resource hello/Deployment/flask-hello
policy drop-all-capabilities -> resource hello/Deployment/flask-hello failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource hello/Deployment/flask-hello failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource hello/Deployment/flask-hello failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource hello/Deployment/flask-hello failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource hello/Deployment/flask-hello failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource hello/Deployment/flask-hello failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource hello/Deployment/flask-hello failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: tahsin42/flask-app
        name: flask-app
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-app1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    targetPort: 8080
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-app2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: your-flask-app-image:tag
        name: flask-app
        ports:
        - containerPort: 5000
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: flask-app
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-app2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/:
apiVersion: v1
kind: Service
matadata:
  name: flask-app
metadata:
  namespace: default
spec:
  ports:
  - port: 5500
    protocol: TCP
    targetPort: 5500
  selector:
    app: flask
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask
  name: flask-deployment
  namespace: default
spec:
  replicas: 10
  selector:
    matchLabels:
      app: flask
  strategy:
    rollingUpdate:
      maxSurge: 20%!
(MISSING)      maxUnavailable: 20%!
(MISSING)  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - env:
        - name: YOUR_NAME
          value: alex
        image: xanderire/duo-deloy-flask:latest
        imagePullPolicy: Always
        name: flask-container
        ports:
        - containerPort: 5500

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flaskapp-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flaskapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaskapp
  template:
    metadata:
      labels:
        app: flaskapp
    spec:
      containers:
      - env:
        - name: FLASKAPP_PORT
          value: "5000"
        - name: DATABASE_URI
          value: mysql+pymysql://root:$(MYSQL_ROOT_PASSWORD)@mysql:3306/recruit
        envFrom:
        - secretRef:
            name: mysql-secret
        image: yoniyonatab/recruit:1.0.7
        name: flaskapp
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flaskapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flaskapp
policy disallow-default-namespace -> resource default/Deployment/flaskapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flaskapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flaskapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flaskapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flaskapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flaskapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flaskapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flaskapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f C:\Users\hao\Desktop\存放\project-root\docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: flask-app
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flask-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f C:\Users\hao\Desktop\存放\project-root\docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-root-default: "true"
        io.kompose.service: flask-app
    spec:
      containers:
      - image: myflaskapp
        imagePullPolicy: Never
        name: flask-app
        ports:
        - containerPort: 5000
          hostPort: 5000
          protocol: TCP
        volumeMounts:
        - mountPath: /demo
          name: config-volume
      volumes:
      - configMap:
          name: myconfigmap
        name: config-volume
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flaskapp-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flaskapp:
apiVersion: v1
kind: Service
metadata:
  name: flaskapp
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flaskapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flaskapp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-app-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb
        - name: MONGO_PORT
          value: "27017"
        image: karmanya1804/todoapp:v2
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 3000
        name: flask-app
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            httpHeaders: null
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: harshdusanegl/flask-app:latest
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: default
spec:
  ports:
  - nodePort: 30003
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: flask-app
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flask-app
  template:
    metadata:
      labels:
        app: flask-app
        io.kompose.network/final-project-1-default: "true"
        io.kompose.service: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_URI
          value: mongodb+srv://ilaysb:Ilaysb12@cluster0.f1l3dro.mongodb.net/testDB
        image: ilaysb/final-project-1-flask_app:latest
        name: flask-app
        ports:
        - containerPort: 5000
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/flask-app-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-app-ingress
  namespace: default
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - host: your.host.domain
    http:
      paths:
      - backend:
          service:
            name: flask-lb
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - your.host.domain
    secretName: flask-app-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app-k8s.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: samuel1797/desafio-devops:1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 75
          periodSeconds: 60
          timeoutSeconds: 10
        name: flask-app
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 75
          periodSeconds: 60
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /health
            port: 8000
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-k8s_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-app
  name: flask-app
  namespace: default
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app-LoadBalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/load-balancer-flask-app:
apiVersion: v1
kind: Service
metadata:
  name: load-balancer-flask-app
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flaskapp-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/flaskapp-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: flaskapp
  name: flaskapp-pod
  namespace: default
spec:
  containers:
  - image: nginx:1.25.3-alpine
    name: proxy-container
    ports:
    - containerPort: 80
      protocol: TCP
    volumeMounts:
    - mountPath: /etc/nginx
      name: nginx-proxy-config
  - image: dbgurum/py_flask:2.0
    name: flaskapp-container
    ports:
    - containerPort: 9000
      protocol: TCP
  volumes:
  - configMap:
      name: nginx-conf
    name: nginx-proxy-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/flaskapp-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/flaskapp-pod
policy disallow-default-namespace -> resource default/Pod/flaskapp-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/flaskapp-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/flaskapp-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/flaskapp-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/flaskapp-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/flaskapp-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/flaskapp-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/flaskapp-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to /Pod/:
  containers: null
  name: flask-app-pod
    - name: flask-app-container
      image: weimenglee/my-flask-app:latest
      ports: null
        - containerPort: 5000
apiVersion: v1
kind: Pod
metadata: null
spec: null

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource /Pod/

skipped mutate policy add-safe-to-evict -> resource /Pod/
policy disallow-container-sock-mounts -> resource /Pod/ failed:
1 - validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule validate-docker-sock-mount failed at path /spec/
2 - validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule validate-containerd-sock-mount failed at path /spec/
3 - validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule validate-crio-sock-mount failed at path /spec/
4 - validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource /Pod/ failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/

policy require-labels -> resource /Pod/ failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/

policy require-requests-limits -> resource /Pod/ failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/

policy require-ro-rootfs -> resource /Pod/ failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource /Pod/ failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flaskapp-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/flaskapp-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: flaskapp
  name: flaskapp-pod
  namespace: default
spec:
  containers:
  - image: nginx:1.25.3-alpine
    name: proxy-container
    ports:
    - containerPort: 80
      protocol: TCP
    volumeMounts:
    - mountPath: /etc/nginx
      name: nginx-proxy-config
  - image: dbgurum/py_flask:2.0
    name: flaskapp-container
    ports:
    - containerPort: 9000
      protocol: TCP
  volumes:
  - configMap:
      name: nginx-conf
    name: nginx-proxy-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/flaskapp-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/flaskapp-pod
policy disallow-default-namespace -> resource default/Pod/flaskapp-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/flaskapp-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/flaskapp-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/flaskapp-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/flaskapp-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/flaskapp-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/flaskapp-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/flaskapp-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-rc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flask-app-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: flask-app
  name: flask-app-rc
  namespace: default
spec:
  replicas: 4
  selector:
    app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-db-service
        - name: MONGO_PORT
          value: "27017"
        image: tr2452/my_todo_app:v1
        name: flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc
policy drop-all-capabilities -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-rc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flask-app-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: flask-app-rc
  namespace: default
spec:
  replicas: 4
  selector:
    app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        - name: MONGO_PORT
          value: "27017"
        image: karenwang97/as3-app:v5
        name: flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc
policy drop-all-capabilities -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-rc1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app-rc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flask-app-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: flask-app
  name: flask-app-rc
  namespace: default
spec:
  replicas: 4
  selector:
    app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-db-service
        - name: MONGO_PORT
          value: "27017"
        image: tr2452/my_todo_app:v1
        name: flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc
policy drop-all-capabilities -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-rc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flask-app-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: flask-app-rc
  namespace: default
spec:
  replicas: 4
  selector:
    app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        - name: MONGO_PORT
          value: "27017"
        image: karenwang97/as3-app:v5
        name: flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc
policy drop-all-capabilities -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-rc3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-app-rc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flask-app-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: flask-app
  name: flask-app-rc
  namespace: default
spec:
  replicas: 4
  selector:
    app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-db-service
        - name: MONGO_PORT
          value: "27017"
        image: tr2452/my_todo_app:v1
        name: flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc
policy drop-all-capabilities -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-rc5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flaskapp-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: flaskapp-rc
  namespace: default
spec:
  replicas: 6
  selector:
    app: flaskapp
  template:
    metadata:
      labels:
        app: flaskapp
    spec:
      containers:
      - image: karmanya1804/todoapp:v2
        name: flaskapp
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flaskapp-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flaskapp-rc
policy drop-all-capabilities -> resource default/ReplicationController/flaskapp-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flaskapp-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flaskapp-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flaskapp-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flaskapp-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flaskapp-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-app-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: default
spec:
  ports:
  - nodePort: 30007
    port: 3000
    targetPort: 3000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-autoscaling.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/flask-app-hpa-deployment:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flask-app-hpa-deployment
  namespace: default
spec:
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 5
    scaleUp:
      stabilizationWindowSeconds: 1
  maxReplicas: 4
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-app-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: flask-autoscaling1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/flask-app-hpa-deployment:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flask-app-hpa-deployment
  namespace: default
spec:
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 3
    scaleUp:
      stabilizationWindowSeconds: 3
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 60
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-app-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: flask-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/flask-config:
apiVersion: v1
data:
  DEBUG: "False"
  PORT: "8080"
  REDIS_HOST: cache.full-stack.svc.cluster.local
kind: ConfigMap
metadata:
  name: flask-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/flask-config:
apiVersion: v1
data:
  HOST: postgres
  POSTGRES_DB: test
  POSTGRES_USER: postgres
kind: ConfigMap
metadata:
  labels:
    app: flask
  name: flask-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: FLASK_ENV
          value: development
        - name: FLASK_APP
          value: app.py
        - name: MONGO_HOST
          value: mongo
        - name: MONGO_PORT
          value: "27017"
        image: aourbro1/assignment3-v2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: FLASK_ENV
          value: development
        - name: FLASK_APP
          value: app.py
        - name: MONGO_HOST
          value: mongo
        - name: MONGO_PORT
          value: "27017"
        image: aourbro1/assignment3-v2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deploy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - image: trabelsii/flask-on-kube
        name: flask
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        - name: MONGO_PORT
          value: "27017"
        image: wdas/ccbd-flask-app:2.4.1
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 2
          periodSeconds: 2
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 2
          periodSeconds: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask
  name: flask-app-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - image: acrrgesgiamallahchemlal.azurecr.io/samples/myapp:latest
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: app-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MYSQL_HOST
          value: mysql-service
        - name: MYSQL_USER
          value: root
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: database
              name: mysql-config
        image: rahulkumarpaswan/flask_app:1.3
        name: flask-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/app-service:
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/app-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-redis
  template:
    metadata:
      labels:
        app: flask-redis
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: REDIS_HOST
          value: cache
        - name: REDIS_PASSWORD
          value: SuperS3cret
        image: ghcr.io/badri/flask-redis:1.0
        name: flask
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis
policy disallow-default-namespace -> resource default/Deployment/flask-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/todo-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: todo-app
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb-service
        - name: MONGO_PORT
          value: "27017"
        - name: PORT
          value: "8888"
        - name: FLASK_HOST
          value: 0.0.0.0
        image: hsapte99/todo_app-flask-app:v2
        name: flask-container
        ports:
        - containerPort: 8888
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8888
        initialDelaySeconds: 15
        periodSeconds: 5
        timeoutSeconds: 2
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8888
        initialDelaySeconds: 15
        periodSeconds: 5
        timeoutSeconds: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app
policy disallow-default-namespace -> resource default/Deployment/todo-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/todo-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/todo-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/todo-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/todo-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/todo-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: acresgi<votre_nom>.azurecr.io/flask-app
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_ROOT_PASSWORD
              name: nagp-secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_ROOT_USERNAME
              name: nagp-secret
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: database_host
              name: nagp-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: db_name
              name: nagp-config
        image: agarwaljaishree/nagp_flaskapp:latest
        imagePullPolicy: Always
        name: flask-app-container
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 250m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: common-secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_USERNAME
              name: common-secret
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: database_host
              name: common-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: db_name
              name: common-config
        image: ketansomani/nagp_flask:1.0
        imagePullPolicy: Always
        name: flask-app-container
        resources:
          limits:
            cpu: 600m
          requests:
            cpu: 300m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask
  name: flask
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: flask-secret
        envFrom:
        - configMapRef:
            name: flask-config
        image: ofekbarel11/coffeproject:latest
        name: flask
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask
policy disallow-default-namespace -> resource default/Deployment/flask failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaskr
  template:
    metadata:
      labels:
        app: flaskr
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb-service
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: pass
        - name: FLASK_ENV
          value: production
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: github-secret
        - name: GITHUB_REPO_NAME
          valueFrom:
            secretKeyRef:
              key: repo_name
              name: github-secret
        - name: GITHUB_BRANCH_NAME
          valueFrom:
            secretKeyRef:
              key: branch_name
              name: github-secret
        image: voxten/python-docker-web:latest
        name: flask
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flaskr
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask
  name: flask
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - command:
        - sh
        - -c
        - flask db upgrade --url postgresql://mudasir:12345@postgres-service:5432/demo_db
          && gunicorn --bind 0.0.0.0:4000 app:app
        image: my-flask-app
        imagePullPolicy: Never
        name: flask
        ports:
        - containerPort: 4000
      initContainers:
      - command:
        - sh
        - -c
        - until nslookup postgres-service; do echo waiting for postgres; sleep 2;
          done;
        image: busybox
        name: wait-for-postgres

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask
policy disallow-default-namespace -> resource default/Deployment/flask failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        - name: MONGO_PORT
          value: "27017"
        image: wdas/ccbd-flask-app:2.4.1
        livenessProbe:
          httpGet:
            path: /live
            port: 5000
          initialDelaySeconds: 2
          periodSeconds: 2
        name: flask-app
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 2
          periodSeconds: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask
  name: flask-app-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - image: acrrgesgiamallahchemlal.azurecr.io/samples/myapp:latest
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_URI
          value: mongodb://mongodb-service:27017
        image: osbm/ain3003-flask-application:v2
        name: flask-container
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-1
  namespace: default
spec:
  template:
    spec:
      containers:
      - image: andreishvedau/flask-hello-world:v1.2
        name: app-1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-1
policy disallow-default-namespace -> resource default/Deployment/app-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/app-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - env:
        - name: MONGO_URI
          value: mongodb://mongo:27017/testdb
        image: the127terminal/ocrapp:latest
        name: flask-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongo-service
        image: td2478/todo-flask:v4
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        name: todo-flask
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - image: m4r6in/python:1.0.0
        name: flask
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 80
  selector:
    app: flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/flask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: flask-ingress
  namespace: default
spec:
  rules:
  - host: localhost
    http:
      paths:
      - backend:
          service:
            name: flask-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - image: m4r6in/python:1.0.0
        name: flask
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-deployment9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 80
  selector:
    app: flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-deployment9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/flask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: flask-ingress
  namespace: default
spec:
  rules:
  - host: localhost
    http:
      paths:
      - backend:
          service:
            name: flask-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-expose.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-expose1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: FlaskGunicorn.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-gunicorn-service-v2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-gunicorn-service-v2
  name: flask-gunicorn-service-v2
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: flask-gunicorn-service-v2
  template:
    metadata:
      labels:
        app: flask-gunicorn-service-v2
    spec:
      containers:
      - env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: dockeronur/flask-app-gunicorn:color
        name: flask-gunicorn-service-v2
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-gunicorn-service-v2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-gunicorn-service-v2
policy disallow-default-namespace -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-gunicorn-service-v2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: FlaskGunicorn_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-gunicorn-service-v2:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-gunicorn-service-v2
  name: flask-gunicorn-service-v2
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask-gunicorn-service-v2
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-hello.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/python-flask-hello-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-flask-hello-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-flask-hello
  template:
    metadata:
      labels:
        app: python-flask-hello
    spec:
      containers:
      - image: mrbarker/python-flask-hello
        name: python-flask-hello-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/python-flask-hello-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/python-flask-hello-deployment
policy disallow-default-namespace -> resource default/Deployment/python-flask-hello-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/python-flask-hello-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-hello_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/python-flask-hello-service:
apiVersion: v1
kind: Service
metadata:
  name: python-flask-hello-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: python-flask-hello
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/flask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-ingress
  namespace: default
spec:
  rules:
  - host: localhost
    http:
      paths:
      - backend:
          service:
            name: my-flask-service
            port:
              number: 8080
        path: /
        pathType: Prefix
      - backend:
          service:
            name: my-second-service
            port:
              number: 8081
        path: /second
        pathType: Prefix
      - backend:
          service:
            name: postgresql
            port:
              number: 5432
        path: /database
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/flask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: flask-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: nagp.flaskapp.com
    http:
      paths:
      - backend:
          service:
            name: flask-app-nodeport
            port:
              number: 80
        path: /v1(/|$)(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/flask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: flask-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: nagp.flaskapp.com
    http:
      paths:
      - backend:
          service:
            name: flask-app-nodeport
            port:
              number: 80
        path: /v1(/|$)(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-mongo-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongodb-service:
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongodb
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-mysql-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/flask-mysql-pod:
apiVersion: v1
kind: Pod
metadata:
  name: flask-mysql-pod
  namespace: default
spec:
  containers:
  - image: gcr.io/<YOUR_PROJECT_ID>/todo-backend
    name: todo-backend
    ports:
    - containerPort: 5000
  - env:
    - name: MYSQL_ROOT_PASSWORD
      value: password
    image: mysql:5.7
    name: mysql
    ports:
    - containerPort: 3306
    volumeMounts:
    - mountPath: /docker-entrypoint-initdb.d
      name: mysql-init-volume
  volumes:
  - configMap:
      name: mysql-init-db-config
    name: mysql-init-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/flask-mysql-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/flask-mysql-pod
policy disallow-default-namespace -> resource default/Pod/flask-mysql-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/flask-mysql-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/flask-mysql-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/flask-mysql-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/flask-mysql-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/flask-mysql-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/flask-mysql-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/flask-mysql-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/flask-mysql-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-mysql-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-mysql-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-mysql-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: flask-mysql-pod
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-nodeport.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-nodeport
  namespace: default
spec:
  ports:
  - nodePort: 32000
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-app-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-nodeport-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-nodeport
  namespace: default
spec:
  ports:
  - nodePort: 31000
    port: 80
    protocol: TCP
    targetPort: 2000
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-app-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-project.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-project_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: matheusbattisti/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-project1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-project1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: matheusbattisti/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-project2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-project2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: kelvisonvieira/python-pro:6
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-project3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-project3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: williamcorrea2712/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-project4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-project4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-depoyment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-depoyment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: matheusbattisti/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-depoyment
policy disallow-default-namespace -> resource default/Deployment/flask-app-depoyment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-depoyment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-project5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-project5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: gabrielao/flask-kub-projeto:5
        name: flask

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-rc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/flask-app-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: flask-app-rc
  namespace: default
spec:
  replicas: 3
  selector:
    app: flask-rc-app
  template:
    metadata:
      labels:
        app: flask-rc-app
    spec:
      containers:
      - image: 637423495437.dkr.ecr.us-west-2.amazonaws.com/todo-flask-app:v2
        name: flask
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/flask-app-rc
policy drop-all-capabilities -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/flask-app-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: flask-redis-deployment-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-redis
  template:
    metadata:
      labels:
        app: flask-redis
    spec:
      containers:
      - env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: flask-config
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: flask-config
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: flask-config
        - name: REDIS_PASSWORD
          value: SuperS3cret
        image: ghcr.io/badri/flask-redis:1.0
        name: flask
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis
policy disallow-default-namespace -> resource default/Deployment/flask-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-redis-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/flask-redis:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: flask
  name: flask-redis
  namespace: default
spec:
  containers:
  - image: clarusway/flask-redis
    name: app
    ports:
    - containerPort: 5000
  - image: redis:alpine
    name: redis
    ports:
    - containerPort: 6379

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/flask-redis

skipped mutate policy add-safe-to-evict -> resource default/Pod/flask-redis
policy disallow-default-namespace -> resource default/Pod/flask-redis failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/flask-redis failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/flask-redis failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/flask-redis failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/flask-redis failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/flask-redis failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/flask-redis failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/flask-redis failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/flask-redis failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-redis-pod_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-redis-svc:
apiVersion: v1
kind: Service
metadata:
  name: flask-redis-svc
  namespace: default
spec:
  ports:
  - nodePort: 30002
    port: 5000
    targetPort: 5000
  selector:
    app: flask
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-redis-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-redis-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/flask-redis:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: flask
  name: flask-redis
  namespace: default
spec:
  containers:
  - image: clarusway/flask-redis
    name: app
    ports:
    - containerPort: 5000
  - image: redis:alpine
    name: redis
    ports:
    - containerPort: 6379

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/flask-redis

skipped mutate policy add-safe-to-evict -> resource default/Pod/flask-redis
policy disallow-default-namespace -> resource default/Pod/flask-redis failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/flask-redis failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/flask-redis failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/flask-redis failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/flask-redis failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/flask-redis failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/flask-redis failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/flask-redis failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/flask-redis failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-redis-pod1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-redis-svc:
apiVersion: v1
kind: Service
metadata:
  name: flask-redis-svc
  namespace: default
spec:
  ports:
  - nodePort: 30002
    port: 5000
    targetPort: 5000
  selector:
    app: flask
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-redis-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-redis-private-image.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-redis-pvt:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-redis-pvt
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-redis
  template:
    metadata:
      labels:
        app: flask-redis
    spec:
      containers:
      - env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: flask-config
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: flask-config
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: flask-config
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REDIS_PASSWORD
              name: redis-credentials
        image: ghcr.io/badri/flask-redis:1.0
        imagePullPolicy: Always
        name: flask
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: ghcr-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis-pvt

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis-pvt
policy disallow-default-namespace -> resource default/Deployment/flask-redis-pvt failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-redis-pvt failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-redis-with-init.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-redis-init:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-redis-init
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-redis-init
  template:
    metadata:
      labels:
        app: flask-redis-init
    spec:
      containers:
      - env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: flask-config
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: flask-config
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: flask-config
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REDIS_PASSWORD
              name: redis-credentials
        image: ghcr.io/badri/flask-redis:1.0
        name: flask
        ports:
        - containerPort: 8080
      initContainers:
      - command:
        - /bin/sh
        - -c
        - apk add --no-cache netcat-openbsd && /usr/local/bin/check-redis.sh
        env:
        - name: REDIS_HOST
          value: cache.full-stack.svc.cluster.local
        image: alpine
        name: check-redis
        volumeMounts:
        - mountPath: /usr/local/bin/check-redis.sh
          name: redis-check-script
          subPath: check-redis.sh
      volumes:
      - configMap:
          defaultMode: 493
          name: redis-check
        name: redis-check-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis-init

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis-init
policy disallow-default-namespace -> resource default/Deployment/flask-redis-init failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-redis-init failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-redis-init failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-redis-init failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-redis-init failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-redis-init failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-redis-init failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-redis-init failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-redis-init failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: flask-redis-with-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-redis
  template:
    metadata:
      labels:
        app: flask-redis
    spec:
      containers:
      - env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: flask-config
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: flask-config
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: flask-config
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REDIS_PASSWORD
              name: redis-credentials
        image: ghcr.io/badri/flask-redis:1.0
        name: flask
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-redis
policy disallow-default-namespace -> resource default/Deployment/flask-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/flask-secret-key:
apiVersion: v1
data:
  secret: Zmxhc2stc2VjcmV0
kind: Secret
metadata:
  name: flask-secret-key
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-secrets1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/flask-secret:
apiVersion: v1
data:
  POSTGRES_PASSWORD: cG9zdGdyZXM=
kind: Secret
metadata:
  name: flask-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-serv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-server-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-server-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-server-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-server
  template:
    metadata:
      labels:
        app: flask-server
    spec:
      containers:
      - env:
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: my-secret
        - name: USER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: my-secret
        - name: MYSQL_DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: MYSQL_DATABASE
              name: my-config-map
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: MYSQL_HOST
              name: my-config-map
        image: ancaco12/mock-server-flask:v6
        name: flask-server
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
          requests:
            cpu: "0.1"
            memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-server-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-server-deployment
policy disallow-default-namespace -> resource default/Deployment/flask-server-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/flask-server-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-server-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-server-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/flask-server-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-server-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-server-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: flask-server-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-server-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-server-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-server
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-loadbalancer:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-loadbalancer
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 2000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - env:
        - name: CONTAINER_API_URL
          value: http://sentiment-service:5000
        image: your-acr.azurecr.io/flaskweb:latest
        name: flask
        ports:
        - containerPort: 5001
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 256Mi
      nodeSelector:
        agentpool: pooler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-service
policy disallow-default-namespace -> resource default/Deployment/flask-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/flask-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: flask-service13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-lb:
apiVersion: v1
kind: Service
metadata:
  name: flask-lb
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5001
  selector:
    app: flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4000
  selector:
    app: flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: flask
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask:
apiVersion: v1
kind: Service
metadata:
  name: flask
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-redis:
apiVersion: v1
kind: Service
metadata:
  name: flask-redis
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 8080
    targetPort: 8080
  selector:
    app: flask-redis
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/flask-redis failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: flask-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: default
spec:
  ports:
  - port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: todo-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: flask-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fleetman-api-gateway.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fleetman-api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: fleetman-api-gateway

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fleetman-api-gateway1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fleetman-api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: fleetman-api-gateway

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: fleetman-api-gateway1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/fleetman-api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleetman-api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleetman-api-gateway
  template:
    metadata:
      labels:
        app: fleetman-api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: supinfo4kube/api-gateway:1.0.0
        name: fleetman-api-gateway
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/fleetman-api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/fleetman-api-gateway
policy disallow-default-namespace -> resource default/Deployment/fleetman-api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/fleetman-api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

