##### FILE: cr10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kluster-cr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kluster-cr
  namespace: default
rules:
- apiGroups:
  - shresth72.dev
  resources:
  - klusters
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - shresth72.dev
  resources:
  - kluster/status
  verbs:
  - update
- apiGroups:
  - shresth72.dev
  resources:
  - klusters
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/thongdepzai-cloud-gitops-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: thongdepzai-cloud-gitops-controller
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/notify-controller-cr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: notify-controller-cr
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to awx/Secret/pulp-admin-password:
apiVersion: v1
kind: Secret
metadata:
  name: pulp-admin-password
  namespace: awx
stringData:
  password: admin

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kluster-cr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kluster-cr
  namespace: default
rules:
- apiGroups:
  - viveksingh.dev
  resources:
  - klusters
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  verbs:
  - create
  - get
- apiGroups:
  - viveksingh.dev
  resources:
  - klusters/status
  verbs:
  - update
- apiGroups:
  - viveksingh.dev
  resources:
  - klusters
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crasher-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/crasher:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crasher
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crasher
  template:
    metadata:
      labels:
        app: crasher
    spec:
      containers:
      - image: bookofkubernetes/crasher:stable
        name: crasher

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/crasher

skipped mutate policy add-safe-to-evict -> resource default/Deployment/crasher
policy disallow-default-namespace -> resource default/Deployment/crasher failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/crasher failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/crasher failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/crasher failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/crasher failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/crasher failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/crasher failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/crasher failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crashing-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/crashing:
apiVersion: v1
kind: Pod
metadata:
  name: crashing
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - for NUM in `seq 1 1 100`; do date; sleep 1; done
    image: alpine:3.4
    name: crashing
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/crashing

skipped mutate policy add-safe-to-evict -> resource default/Pod/crashing
policy disallow-default-namespace -> resource default/Pod/crashing failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/crashing failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/crashing failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/crashing failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/crashing failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/crashing failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/crashing failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/crashing failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crashing-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/crashing:
apiVersion: v1
kind: Pod
metadata:
  name: crashing
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - for NUM in `seq 1 1 100`; do date; sleep 1; done
    image: alpine:3.4
    name: crashing
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/crashing

skipped mutate policy add-safe-to-evict -> resource default/Pod/crashing
policy disallow-default-namespace -> resource default/Pod/crashing failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/crashing failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/crashing failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/crashing failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/crashing failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/crashing failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/crashing failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/crashing failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crashloopbackoff.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/crashloop-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crashloop-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crashloop
  template:
    metadata:
      labels:
        app: crashloop
    spec:
      containers:
      - args:
        - while true; do echo 'Simulating a crash'; sleep 2; exit 1; done
        command:
        - /bin/sh
        - -c
        image: ubuntu:20.04
        name: my-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/crashloop-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/crashloop-deployment
policy disallow-default-namespace -> resource default/Deployment/crashloop-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/crashloop-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: CrashLoopBackoff_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nodeapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: nodeapp
  name: nodeapp
  namespace: default
spec:
  containers:
  - image: alpine
    name: nodeapp
    ports:
    - containerPort: 8080
    resources:
      limits:
        cpu: 500m
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nodeapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/nodeapp
policy disallow-default-namespace -> resource default/Pod/nodeapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nodeapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nodeapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nodeapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nodeapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nodeapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/nodeapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nodeapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nodeapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: crashloopbackoff-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/crashloopbackoff:
apiVersion: v1
kind: Pod
metadata:
  name: crashloopbackoff
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - exit 1
    image: alpine:3.4
    name: crashloopbackoff

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/crashloopbackoff

skipped mutate policy add-safe-to-evict -> resource default/Pod/crashloopbackoff
policy disallow-default-namespace -> resource default/Pod/crashloopbackoff failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/crashloopbackoff failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/crashloopbackoff failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/crashloopbackoff failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/crashloopbackoff failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/crashloopbackoff failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/crashloopbackoff failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/crashloopbackoff failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crashloopbackoff-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/crashloopbackoff:
apiVersion: v1
kind: Pod
metadata:
  name: crashloopbackoff
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - exit 1
    image: alpine:3.4
    name: crashloopbackoff

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/crashloopbackoff

skipped mutate policy add-safe-to-evict -> resource default/Pod/crashloopbackoff
policy disallow-default-namespace -> resource default/Pod/crashloopbackoff failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/crashloopbackoff failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/crashloopbackoff failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/crashloopbackoff failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/crashloopbackoff failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/crashloopbackoff failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/crashloopbackoff failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/crashloopbackoff failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crawler1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/crawler:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: crawler
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          labels:
            app: crawler
        spec:
          containers:
          - command:
            - bash
            - -c
            - execute_crawler
            env:
            - name: GRPC_SERVER_ADDRESS
              value: dns:db-handler:50051
            image: hyeneung/rss-crawler:1.0
            name: crawler
            volumeMounts:
            - mountPath: /usr/src/app/
              name: crawler-volume
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /run/desktop/mnt/host/c/Users/hyeneung/k8s-app-data/crawler
              type: DirectoryOrCreate
            name: crawler-volume
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/crawler
policy drop-all-capabilities -> resource default/CronJob/crawler failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/crawler failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/crawler failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/crawler failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/crawler failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/crawler failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: crawler-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love, hate, joy, sadness, anger, disgust, fear, surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT_1: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB: /cache/db/
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love, hate, joy, sadness, anger, disgust, fear, surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB: /cache/db/
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT_1: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-configmap9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-crawler-configmap:
apiVersion: v1
data:
  CRAWLER_DB_PATH: /cache/db
  CRAWLER_KEYWORDS: love,hate,joy,sadness,anger,disgust,fear,surprise
  CRAWLER_PORT: "8080"
  CRAWLER_PORT_2: "8081"
  CRAWLER_PORT_3: "8082"
kind: ConfigMap
metadata:
  name: synergychat-crawler-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          value: "8081"
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          value: "8082"
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: evandolatowski/synergychat-crawler:latest
        name: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: crawler-deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          value: $(CRAWLER_PORT_2)
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          value: $(CRAWLER_PORT_3)
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-app-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-app-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-app-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: crawler-deployment23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - env:
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        image: bootdotdev/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - env:
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          value: "8081"
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          value: "8082"
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - env:
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-crawler
policy disallow-default-namespace -> resource default/Deployment/synergychat-crawler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_1
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        - name: CRAWLER_KEYWORDS
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_KEYWORDS
              name: synergychat-crawler-configmap
        - name: CRAWLER_DB_PATH
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_DB_PATH
              name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-crawler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-crawler
  name: synergychat-crawler
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-crawler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: synergychat-crawler
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-1
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_2
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-2
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      - env:
        - name: CRAWLER_PORT
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_PORT_3
              name: synergychat-crawler-configmap
        envFrom:
        - configMapRef:
            name: synergychat-crawler-configmap
        image: lanecwagner/synergychat-crawler:latest
        name: synergychat-crawler-3
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - emptyDir: {}
        name: cache-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-crawler
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-crawler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: crawler-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: default
spec:
  ports:
  - name: clawler-service
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-web

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/synergychat-crawler:
apiVersion: v1
kind: Service
metadata:
  name: synergychat-crawler
  namespace: crawler
spec:
  ports:
  - name: synergychat-crawler
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: default
spec:
  ports:
  - name: clawler-service
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/synergychat-crawler:
apiVersion: v1
kind: Service
metadata:
  name: synergychat-crawler
  namespace: crawler
spec:
  ports:
  - name: synergychat-crawler
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crawler-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Service/crawler-service:
apiVersion: v1
kind: Service
metadata:
  name: crawler-service
  namespace: crawler
spec:
  ports:
  - name: crawler-service
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-crawler
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kluster-crb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kluster-crb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kluster-cr
subjects:
- kind: ServiceAccount
  name: kluster-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb_github-actions.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/github-actions:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-actions
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-actions
subjects:
- kind: ServiceAccount
  name: sa-github-actions
  namespace: github-actions

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb_github-actions1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/github-actions:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-actions
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-actions
subjects:
- kind: ServiceAccount
  name: sa-github-actions
  namespace: github-actions

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-ns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-ns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-nodes-cri:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-nodes-cri
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kluster-crb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kluster-crb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kluster-cr
subjects:
- kind: ServiceAccount
  name: kluster-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/headlamp-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: headlamp-admin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: headlamp-admin
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/thongdepzai-cloud-gitops-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: thongdepzai-cloud-gitops-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: thongdepzai-cloud-gitops-controller
subjects:
- kind: ServiceAccount
  name: thongdepzai-cloud-gitops-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/notify-controller-crb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: notify-controller-crb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: notify-controller-cr
subjects:
- kind: ServiceAccount
  name: notify-controller-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-nodes-cri:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-nodes-cri
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-ns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-ns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-nodes-cri:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-nodes-cri
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-ns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-ns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-nodes-cri:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-nodes-cri
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-ns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-ns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-nodes-cri:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-nodes-cri
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kyverno:background-controller:label-ns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:label-ns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes/proxy
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - escalate
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - bind
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - '*'
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad18_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - '*'
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes/proxy
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - bind
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - escalate
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad21_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - bind
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad22_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - '*'
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad23_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - '*'
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - '*'
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - '*'
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes/proxy
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - bind
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - escalate
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - bind
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - '*'
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - '*'
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:anonymous

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: ServiceAccount
  name: system:unauthenticated
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:masters
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:anonymous

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: ServiceAccount
  name: system:unauthenticated
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:masters
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:anonymous

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: ServiceAccount
  name: system:unauthenticated
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:masters
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:anonymous

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: ServiceAccount
  name: system:unauthenticated
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:masters
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:anonymous

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: ServiceAccount
  name: system:unauthenticated
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/badcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: badcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:masters
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated:oauth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated:oauth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated:oauth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated:oauth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated:oauth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-roleref4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners-crb-bad02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners-crb-bad02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-sub-update.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-sub-update1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-sub-update2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-sub-update3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-bad-sub-update4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/self-provisioners:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: self-provisioners
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: self-provisioner
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: group-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-good01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-good01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:openshift:scc:privileged:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:openshift:scc:privileged
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: test-kyverno
  namespace: test-kyverno

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: foo-reader
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: secret-reader

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: foo-reader
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: system.foo
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-good01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-good01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:openshift:scc:privileged:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:openshift:scc:privileged
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: test-kyverno
  namespace: test-kyverno

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: foo-reader
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: secret-reader

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: foo-reader
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good15_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: system.foo
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-good01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-good01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:openshift:scc:privileged:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:openshift:scc:privileged
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: test-kyverno
  namespace: test-kyverno

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: foo-reader
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: secret-reader

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: foo-reader
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: system.foo
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: foo-reader
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: secret-reader

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: foo-reader
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: system.foo
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-good01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-good01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:openshift:scc:privileged:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:openshift:scc:privileged
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: test-kyverno
  namespace: test-kyverno

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: foo-reader
subjects:
- kind: ServiceAccount
  name: manager
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: secret-reader

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb02
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: foo-reader
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/goodcrb03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: goodcrb03
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager
subjects:
- kind: ServiceAccount
  name: system.foo
  namespace: foo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/clusterrolebinding-good01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrolebinding-good01
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crb-good9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:openshift:scc:privileged:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:openshift:scc:privileged
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: test-kyverno
  namespace: test-kyverno

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kafka/RoleBinding/strimzi-cluster-operator-watched:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-watched
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-watched
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kafka/ServiceAccount/strimzi-cluster-operator:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-cluster-operator-global:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-global
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kafka/RoleBinding/strimzi-cluster-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-namespaced
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/strimzi-cluster-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-global
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kafka/RoleBinding/strimzi-cluster-operator-entity-operator-delegation:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-entity-operator-delegation
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-entity-operator
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-kafka-client:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-kafka-client
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-cluster-operator-leader-election:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-leader-election
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - strimzi-cluster-operator
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - delete
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-kafka-broker:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-kafka-broker
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/strimzi-cluster-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: strimzi-cluster-operator
      strimzi.io/kind: cluster-operator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        name: strimzi-cluster-operator
        strimzi.io/kind: cluster-operator
    spec:
      containers:
      - args:
        - /opt/strimzi/bin/cluster_operator_run.sh
        env:
        - name: STRIMZI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
          value: "120000"
        - name: STRIMZI_OPERATION_TIMEOUT_MS
          value: "300000"
        - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
          value: quay.io/strimzi/kafka:0.42.0-kafka-3.7.1
        - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
          value: quay.io/strimzi/kafka:0.42.0-kafka-3.7.1
        - name: STRIMZI_KAFKA_IMAGES
          value: |
            3.6.0=quay.io/strimzi/kafka:0.42.0-kafka-3.6.0
            3.6.1=quay.io/strimzi/kafka:0.42.0-kafka-3.6.1
            3.6.2=quay.io/strimzi/kafka:0.42.0-kafka-3.6.2
            3.7.0=quay.io/strimzi/kafka:0.42.0-kafka-3.7.0
            3.7.1=quay.io/strimzi/kafka:0.42.0-kafka-3.7.1
        - name: STRIMZI_KAFKA_CONNECT_IMAGES
          value: |
            3.6.0=quay.io/strimzi/kafka:0.42.0-kafka-3.6.0
            3.6.1=quay.io/strimzi/kafka:0.42.0-kafka-3.6.1
            3.6.2=quay.io/strimzi/kafka:0.42.0-kafka-3.6.2
            3.7.0=quay.io/strimzi/kafka:0.42.0-kafka-3.7.0
            3.7.1=quay.io/strimzi/kafka:0.42.0-kafka-3.7.1
        - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
          value: |
            3.6.0=quay.io/strimzi/kafka:0.42.0-kafka-3.6.0
            3.6.1=quay.io/strimzi/kafka:0.42.0-kafka-3.6.1
            3.6.2=quay.io/strimzi/kafka:0.42.0-kafka-3.6.2
            3.7.0=quay.io/strimzi/kafka:0.42.0-kafka-3.7.0
            3.7.1=quay.io/strimzi/kafka:0.42.0-kafka-3.7.1
        - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
          value: |
            3.6.0=quay.io/strimzi/kafka:0.42.0-kafka-3.6.0
            3.6.1=quay.io/strimzi/kafka:0.42.0-kafka-3.6.1
            3.6.2=quay.io/strimzi/kafka:0.42.0-kafka-3.6.2
            3.7.0=quay.io/strimzi/kafka:0.42.0-kafka-3.7.0
            3.7.1=quay.io/strimzi/kafka:0.42.0-kafka-3.7.1
        - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
          value: quay.io/strimzi/operator:0.42.0
        - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
          value: quay.io/strimzi/operator:0.42.0
        - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
          value: quay.io/strimzi/operator:0.42.0
        - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
          value: quay.io/strimzi/kafka-bridge:0.29.0
        - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
          value: quay.io/strimzi/kaniko-executor:0.42.0
        - name: STRIMZI_DEFAULT_MAVEN_BUILDER
          value: quay.io/strimzi/maven-builder:0.42.0
        - name: STRIMZI_OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: STRIMZI_FEATURE_GATES
          value: ""
        - name: STRIMZI_LEADER_ELECTION_ENABLED
          value: "true"
        - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
          value: strimzi-cluster-operator
        - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: STRIMZI_LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: quay.io/strimzi/operator:0.42.0
        livenessProbe:
          httpGet:
            path: /healthy
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        name: strimzi-cluster-operator
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        resources:
          limits:
            cpu: 1000m
            memory: 384Mi
          requests:
            cpu: 200m
            memory: 384Mi
        volumeMounts:
        - mountPath: /tmp
          name: strimzi-tmp
        - mountPath: /opt/strimzi/custom-config/
          name: co-config-volume
      serviceAccountName: strimzi-cluster-operator
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1Mi
        name: strimzi-tmp
      - configMap:
          name: strimzi-cluster-operator
        name: co-config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/strimzi-cluster-operator
policy disallow-default-namespace -> resource default/Deployment/strimzi-cluster-operator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/strimzi-cluster-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/strimzi-cluster-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/strimzi-cluster-operator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/strimzi-cluster-operator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/strimzi-cluster-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: crd55_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-cluster-operator-watched:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-watched
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - watch
  - list
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkas
  - kafkanodepools
  - kafkaconnects
  - kafkaconnectors
  - kafkamirrormakers
  - kafkabridges
  - kafkamirrormaker2s
  - kafkarebalances
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkas/status
  - kafkanodepools/status
  - kafkaconnects/status
  - kafkaconnectors/status
  - kafkamirrormakers/status
  - kafkabridges/status
  - kafkamirrormaker2s/status
  - kafkarebalances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.strimzi.io
  resources:
  - strimzipodsets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - core.strimzi.io
  resources:
  - strimzipodsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkarebalances
  verbs:
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kafka/ConfigMap/strimzi-cluster-operator:
apiVersion: v1
data:
  log4j2.properties: |
    name = COConfig
    monitorInterval = 30

    appender.console.type = Console
    appender.console.name = STDOUT
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %!d(MISSING){yyyy-MM-dd HH:mm:ss} %!p(MISSING) %!c(MISSING){1}:%!L(MISSING) - %!m(MISSING)%!n(MISSING)

    rootLogger.level = ${env:STRIMZI_LOG_LEVEL:-INFO}
    rootLogger.appenderRefs = stdout
    rootLogger.appenderRef.console.ref = STDOUT

    # Kafka AdminClient logging is a bit noisy at INFO level
    logger.kafka.name = org.apache.kafka
    logger.kafka.level = WARN

    # Zookeeper is very verbose even on INFO level -> We set it to WARN by default
    logger.zookeepertrustmanager.name = org.apache.zookeeper
    logger.zookeepertrustmanager.level = WARN

    # Keeps separate level for Netty logging -> to not be changed by the root logger
    logger.netty.name = io.netty
    logger.netty.level = INFO
kind: ConfigMap
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/strimzi-cluster-operator-kafka-broker-delegation:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-kafka-broker-delegation
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-kafka-broker
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kafka/RoleBinding/strimzi-cluster-operator-leader-election:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-leader-election
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-leader-election
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-entity-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-entity-operator
  namespace: default
rules:
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkatopics
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkausers
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkatopics/status
  - kafkausers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/strimzi-cluster-operator-namespaced:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-namespaced
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - serviceaccounts
  - configmaps
  - services
  - endpoints
  - secrets
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments/scale
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/instantiate
  - builds
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - get
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd55_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/strimzi-cluster-operator-kafka-client-delegation:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-kafka-client-delegation
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-kafka-client
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-geo-tourist.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crdb-geo-tourist-lb:
apiVersion: v1
kind: Service
metadata:
  name: crdb-geo-tourist-lb
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 18080
  selector:
    app: crdb-geo-tourist
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-geo-tourist_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/crdb-geo-tourist:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crdb-geo-tourist
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crdb-geo-tourist
  template:
    metadata:
      labels:
        app: crdb-geo-tourist
    spec:
      containers:
      - env:
        - name: DB_URL
          value: postgres://demouser:demopasswd@cockroachdb-public:26257/defaultdb
        - name: USE_GEOHASH
          value: "True"
        image: mgoddard/iam-geo-tourist-x86:1.3
        imagePullPolicy: Always
        name: crdb-geo-tourist
        ports:
        - containerPort: 18080
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/crdb-geo-tourist

skipped mutate policy add-safe-to-evict -> resource default/Deployment/crdb-geo-tourist
policy disallow-default-namespace -> resource default/Deployment/crdb-geo-tourist failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/crdb-geo-tourist failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crdb-operator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to database/ServiceAccount/cockroach-operator-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cockroach-operator
  name: cockroach-operator-sa
  namespace: database

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-operator_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cockroach-operator-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cockroach-operator-role
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/scale
  verbs:
  - get
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - get
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - list
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - deletecollection
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - crdb.cockroachlabs.com
  resources:
  - crdbclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crdb.cockroachlabs.com
  resources:
  - crdbclusters/finalizers
  verbs:
  - update
- apiGroups:
  - crdb.cockroachlabs.com
  resources:
  - crdbclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets/status
  verbs:
  - get
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-operator_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/cockroach-operator-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cockroach-operator-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cockroach-operator-role
subjects:
- kind: ServiceAccount
  name: cockroach-operator-sa
  namespace: database

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-operator_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to database/Service/cockroach-operator-webhook-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: cockroach-operator
  name: cockroach-operator-webhook-service
  namespace: database
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app: cockroach-operator

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-operator_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/MutatingWebhookConfiguration/cockroach-operator-mutating-webhook-configuration:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: cockroach-operator-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: cockroach-operator-webhook-service
      namespace: database
      path: /mutate-crdb-cockroachlabs-com-v1alpha1-crdbcluster
  failurePolicy: Fail
  name: mcrdbcluster.kb.io
  rules:
  - apiGroups:
    - crdb.cockroachlabs.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - crdbclusters
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crdb-operator_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/cockroach-operator-validating-webhook-configuration:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: cockroach-operator-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: cockroach-operator-webhook-service
      namespace: database
      path: /validate-crdb-cockroachlabs-com-v1alpha1-crdbcluster
  failurePolicy: Fail
  name: vcrdbcluster.kb.io
  rules:
  - apiGroups:
    - crdb.cockroachlabs.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - crdbclusters
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd-cluster-roles.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/prometheus-crd-view:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: prometheus-crd-view
  namespace: default
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagerconfigs
  - prometheuses
  - prometheusrules
  - servicemonitors
  - podmonitors
  - probes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd-cluster-roles_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/prometheus-crd-edit:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: prometheus-crd-edit
  namespace: default
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagerconfigs
  - prometheuses
  - prometheusrules
  - servicemonitors
  - podmonitors
  - probes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd-cluster-roles1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/prometheus-crd-view:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: prometheus-crd-view
  namespace: default
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagerconfigs
  - prometheuses
  - prometheusrules
  - servicemonitors
  - podmonitors
  - probes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd-cluster-roles1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/prometheus-crd-edit:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: prometheus-crd-edit
  namespace: default
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagerconfigs
  - prometheuses
  - prometheusrules
  - servicemonitors
  - podmonitors
  - probes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd-cluster-roles2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/prometheus-crd-view:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: prometheus-crd-view
  namespace: default
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagerconfigs
  - prometheuses
  - prometheusrules
  - servicemonitors
  - podmonitors
  - probes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crd-cluster-roles2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/prometheus-crd-edit:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: prometheus-crd-edit
  namespace: default
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagerconfigs
  - prometheuses
  - prometheusrules
  - servicemonitors
  - podmonitors
  - probes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-defenition.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/myapp-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: myapp
    type: back-end
  name: myapp-rc
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: myapp
        type: back-end
      name: myapp-pod
      spec:
        containers:
        - image: nginx
          name: nginx-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/myapp-rc

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/myapp-rc
policy disallow-container-sock-mounts -> resource default/ReplicationController/myapp-rc failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/spec/

policy require-labels -> resource default/ReplicationController/myapp-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/myapp-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/

policy require-ro-rootfs -> resource default/ReplicationController/myapp-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/

policy restrict-image-registries -> resource default/ReplicationController/myapp-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/


pass: 0, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: Create Persistent Volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/kube-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: kube-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/datas
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_DaemonSet.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/nginx-daemonset:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nginx
  name: nginx-daemonset
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/nginx-daemonset

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/nginx-daemonset
policy disallow-default-namespace -> resource default/DaemonSet/nginx-daemonset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/nginx-daemonset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create_Deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - image: my-image:latest
        name: my-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_cups.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cups/PersistentVolume/cups-data-disk:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: cups
  name: cups-data-disk
  namespace: cups
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  claimRef:
    name: cups-data-claim
    namespace: cups
  hostPath:
    path: /exports/cups
  storageClassName: microk8s-hostpath

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_cups_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cups/PersistentVolumeClaim/cups-data-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: cups
  name: cups-data-claim
  namespace: cups
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: cups-data-disk

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_cups_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cups/Deployment/cups:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cups
  name: cups
  namespace: cups
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cups
  template:
    metadata:
      labels:
        app: cups
    spec:
      containers:
      - image: ghcr.io/kdeenkhoorn/cups:latest
        imagePullPolicy: Always
        name: cups
        ports:
        - containerPort: 631
          name: ipp-port
          protocol: TCP
        - containerPort: 5353
          name: mdns-port
          protocol: UDP
        volumeMounts:
        - mountPath: /etc/cups
          name: cups-data
      hostNetwork: true
      restartPolicy: Always
      volumes:
      - name: cups-data
        persistentVolumeClaim:
          claimName: cups-data-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cups/Deployment/cups

skipped mutate policy add-safe-to-evict -> resource cups/Deployment/cups
policy disallow-latest-tag -> resource cups/Deployment/cups failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource cups/Deployment/cups failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cups/Deployment/cups failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cups/Deployment/cups failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cups/Deployment/cups failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource cups/Deployment/cups failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource cups/Deployment/cups failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cups/Deployment/cups failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_cups_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cups/Ingress/cups-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: int-kdedesign-nl
    spec.ingressClassName: public
  labels:
    app: cups
  name: cups-ingress
  namespace: cups
spec:
  rules:
  - host: cups.int.kdedesign.nl
    http:
      paths:
      - backend:
          service:
            name: cups-service
            port:
              name: cups-http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - cups.int.kdedesign.nl
    secretName: cups-tls-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_cups_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cups/Service/cups-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cups
  name: cups-service
  namespace: cups
spec:
  ports:
  - name: cups-http
    port: 631
    protocol: TCP
    targetPort: ipp-port
  selector:
    app: cups

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_dev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-dev/Deployment/cacheservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cacheservice
  namespace: alegla-backend-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: CacheService
  template:
    metadata:
      labels:
        app: CacheService
    spec:
      containers:
      - env:
        - name: cacheDirectory
          value: /cache/storage/
        - name: scheduledDeleteOldData
          value: 0 */5 * ? * *
        - name: lifeTimeOfData
          value: "300000"
        image: aledocker1997/cacheservice:dev
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 150m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 60Mi
        volumeMounts:
        - mountPath: /cache/storage/
          name: local-persistent-storage
      nodeSelector:
        node: "2"
      volumes:
      - name: local-persistent-storage
        persistentVolumeClaim:
          claimName: cache-pvc-dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alegla-backend-dev/Deployment/cacheservice

skipped mutate policy add-safe-to-evict -> resource alegla-backend-dev/Deployment/cacheservice
policy drop-all-capabilities -> resource alegla-backend-dev/Deployment/cacheservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alegla-backend-dev/Deployment/cacheservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alegla-backend-dev/Deployment/cacheservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource alegla-backend-dev/Deployment/cacheservice failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alegla-backend-dev/Deployment/cacheservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alegla-backend-dev/Deployment/cacheservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_dev1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-dev/Deployment/kubespring:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubespring
  namespace: alegla-backend-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: KubeSpring
  template:
    metadata:
      labels:
        app: KubeSpring
    spec:
      containers:
      - env:
        - name: directoryFiles
          value: /opt/Kubernetes/
        image: aledocker1997/kubernetesdemo:develop
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 150m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 60Mi
        volumeMounts:
        - mountPath: /opt/Kubernetes
          name: local-persistent-storage
      volumes:
      - name: local-persistent-storage
        persistentVolumeClaim:
          claimName: local-pvc-dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alegla-backend-dev/Deployment/kubespring

skipped mutate policy add-safe-to-evict -> resource alegla-backend-dev/Deployment/kubespring
policy drop-all-capabilities -> resource alegla-backend-dev/Deployment/kubespring failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alegla-backend-dev/Deployment/kubespring failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alegla-backend-dev/Deployment/kubespring failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource alegla-backend-dev/Deployment/kubespring failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alegla-backend-dev/Deployment/kubespring failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alegla-backend-dev/Deployment/kubespring failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_dev2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-frontend-dev/Deployment/burgershop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: burgershop
  namespace: alegla-frontend-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: BurgerShop
  template:
    metadata:
      labels:
        app: BurgerShop
    spec:
      containers:
      - image: aledocker1997/burgershop:develop
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 120m
            memory: 100Mi
          requests:
            cpu: 80m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alegla-frontend-dev/Deployment/burgershop

skipped mutate policy add-safe-to-evict -> resource alegla-frontend-dev/Deployment/burgershop
policy drop-all-capabilities -> resource alegla-frontend-dev/Deployment/burgershop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alegla-frontend-dev/Deployment/burgershop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alegla-frontend-dev/Deployment/burgershop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource alegla-frontend-dev/Deployment/burgershop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alegla-frontend-dev/Deployment/burgershop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alegla-frontend-dev/Deployment/burgershop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_minidlna.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minidlna/PersistentVolume/minidlna-data-disk:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: minidlna
  name: minidlna-data-disk
  namespace: minidlna
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  claimRef:
    name: minidlna-data-claim
    namespace: minidlna
  hostPath:
    path: /exports/minidlna
  storageClassName: microk8s-hostpath

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_minidlna_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minidlna/PersistentVolumeClaim/minidlna-data-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minidlna
  name: minidlna-data-claim
  namespace: minidlna
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: minidlna-data-disk

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_minidlna_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minidlna/ConfigMap/minidlna-config-map:
apiVersion: v1
data:
  minidlna.conf: |
    media_dir=A,/opt/media
    db_dir=/opt/db
    log_dir=/opt/log
    log_level=general,artwork,database,inotify,scanner,metadata,http,ssdp,tivo=warn
    root_container=M
    port=8200
    friendly_name=Muziekarchief
    serial=654321
    model_number=1
    inotify=yes
    album_art_names=Cover.jpg/cover.jpg/AlbumArtSmall.jpg/albumartsmall.jpg
    album_art_names=AlbumArt.jpg/albumart.jpg/Album.jpg/album.jpg
    album_art_names=Folder.jpg/folder.jpg/Thumb.jpg/thumb.jpg
    album_art_names=Folder.jpeg/folder.jpeg/Thumb.jpeg/thumb.jpeg
    user=minidlna
    group=minidlna
kind: ConfigMap
metadata:
  labels:
    app: minidlna
  name: minidlna-config-map
  namespace: minidlna

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_deployment_minidlna_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minidlna/Deployment/minidlna:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minidlna
  name: minidlna
  namespace: minidlna
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minidlna
  template:
    metadata:
      labels:
        app: minidlna
    spec:
      containers:
      - image: ghcr.io/kdeenkhoorn/minidlna:latest
        imagePullPolicy: Always
        name: minidlna
        ports:
        - containerPort: 1900
          name: upnp-port
          protocol: UDP
        - containerPort: 8200
          name: http-port
          protocol: TCP
        volumeMounts:
        - mountPath: /opt
          name: minidlna-data
        - mountPath: /etc/minidlna.conf
          name: minidlna-config
          readOnly: true
          subPath: minidlna.conf
      hostNetwork: true
      restartPolicy: Always
      volumes:
      - name: minidlna-data
        persistentVolumeClaim:
          claimName: minidlna-data-claim
      - configMap:
          name: minidlna-config-map
        name: minidlna-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minidlna/Deployment/minidlna

skipped mutate policy add-safe-to-evict -> resource minidlna/Deployment/minidlna
policy disallow-latest-tag -> resource minidlna/Deployment/minidlna failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minidlna/Deployment/minidlna failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minidlna/Deployment/minidlna failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minidlna/Deployment/minidlna failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minidlna/Deployment/minidlna failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minidlna/Deployment/minidlna failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minidlna/Deployment/minidlna failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minidlna/Deployment/minidlna failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_prod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-prod/Deployment/cacheservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cacheservice
  namespace: alegla-backend-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: CacheService
  template:
    metadata:
      labels:
        app: CacheService
    spec:
      containers:
      - env:
        - name: cacheDirectory
          value: /cache/storage/
        - name: scheduledDeleteOldData
          value: 0 */5 * ? * *
        - name: lifeTimeOfData
          value: "300000"
        image: aledocker1997/cacheservice:prod
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 150m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 60Mi
        volumeMounts:
        - mountPath: /cache/storage/
          name: local-persistent-storage
      nodeSelector:
        node: "1"
      volumes:
      - name: local-persistent-storage
        persistentVolumeClaim:
          claimName: cache-pvc-prod

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alegla-backend-prod/Deployment/cacheservice

skipped mutate policy add-safe-to-evict -> resource alegla-backend-prod/Deployment/cacheservice
policy drop-all-capabilities -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_prod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-prod/Deployment/cacheservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cacheservice
  namespace: alegla-backend-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: CacheService
  template:
    metadata:
      labels:
        app: CacheService
    spec:
      containers:
      - env:
        - name: cacheDirectory
          value: /cache/storage/
        - name: scheduledDeleteOldData
          value: 0 */5 * ? * *
        - name: lifeTimeOfData
          value: "300000"
        image: aledocker1997/cacheservice:prod
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 150m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 60Mi
        volumeMounts:
        - mountPath: /cache/storage/
          name: local-persistent-storage
      nodeSelector:
        node: "1"
      volumes:
      - name: local-persistent-storage
        persistentVolumeClaim:
          claimName: cache-pvc-prod

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alegla-backend-prod/Deployment/cacheservice

skipped mutate policy add-safe-to-evict -> resource alegla-backend-prod/Deployment/cacheservice
policy drop-all-capabilities -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alegla-backend-prod/Deployment/cacheservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create_deployment_prod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-frontend-prod/Deployment/burgershop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: burgershop
  namespace: alegla-frontend-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: BurgerShop
  template:
    metadata:
      labels:
        app: BurgerShop
    spec:
      containers:
      - image: aledocker1997/burgershop:prod
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 120m
            memory: 100Mi
          requests:
            cpu: 80m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alegla-frontend-prod/Deployment/burgershop

skipped mutate policy add-safe-to-evict -> resource alegla-frontend-prod/Deployment/burgershop
policy drop-all-capabilities -> resource alegla-frontend-prod/Deployment/burgershop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alegla-frontend-prod/Deployment/burgershop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alegla-frontend-prod/Deployment/burgershop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource alegla-frontend-prod/Deployment/burgershop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alegla-frontend-prod/Deployment/burgershop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alegla-frontend-prod/Deployment/burgershop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create_deployments.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-1
  namespace: default
spec:
  selector:
    matchLabels:
      app: simple-nodejs-pod
  template:
    metadata:
      labels:
        app: simple-nodejs-pod
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 300m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create_deployments_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_deployments1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-1
  namespace: default
spec:
  selector:
    matchLabels:
      app: simple-nodejs-pod
  template:
    metadata:
      labels:
        app: simple-nodejs-pod
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 300m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create_deployments1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_loadbalancer_dev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-dev/Service/cacheservice:
apiVersion: v1
kind: Service
metadata:
  name: cacheservice
  namespace: alegla-backend-dev
spec:
  externalIPs:
  - <ip_masternode>
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8080
  selector:
    app: CacheService
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource alegla-backend-dev/Service/cacheservice failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_loadbalancer_dev1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-dev/Service/cacheservice:
apiVersion: v1
kind: Service
metadata:
  name: cacheservice
  namespace: alegla-backend-dev
spec:
  externalIPs:
  - <ip_masternode>
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8080
  selector:
    app: CacheService
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource alegla-backend-dev/Service/cacheservice failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_loadbalancer_prod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-prod/Service/cacheservice:
apiVersion: v1
kind: Service
metadata:
  name: cacheservice
  namespace: alegla-backend-prod
spec:
  externalIPs:
  - <ip_masternode>
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: CacheService
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource alegla-backend-prod/Service/cacheservice failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_loadbalancer_prod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-prod/Service/cacheservice:
apiVersion: v1
kind: Service
metadata:
  name: cacheservice
  namespace: alegla-backend-prod
spec:
  externalIPs:
  - <ip_masternode>
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: CacheService
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource alegla-backend-prod/Service/cacheservice failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/my-first-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: my-first-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/my-first-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: my-first-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/my-first-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: my-first-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/my-first-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: my-first-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/my-first-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: my-first-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_namespace1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alegla-backend-prod:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/node-selector: env=prod
  name: alegla-backend-prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alegla-backend-prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alegla-backend-prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alegla-backend-prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alegla-backend-prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alegla-backend-prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alegla-backend-prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alegla-backend-prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alegla-backend-prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod-app-cls-1:
apiVersion: v1
kind: Namespace
metadata:
  name: prod-app-cls-1
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod-app-cls-1:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod-app-cls-1
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod-app-cls-1:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod-app-cls-1
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod-app-cls-1:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod-app-cls-1
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod-app-cls-1:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod-app-cls-1
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_persistent_volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/cache-pv-prod:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cache-pv-prod
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  local:
    path: /opt/Kubernetes/data/dev/tmp
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8sworker1
          - k8sworker2
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_persistent_volume_claim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-prod/PersistentVolumeClaim/cache-pvc-prod:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cache-pvc-prod
  namespace: alegla-backend-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: cache-pv-prod

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_persistent_volume_claim1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-dev/PersistentVolumeClaim/local-pvc-dev:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-pvc-dev
  namespace: alegla-backend-dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: local-pv-dev

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_persistent_volume1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/local-pv-dev:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv-dev
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  local:
    path: /opt/Kubernetes/data/dev/tmp
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8sworker1
          - k8sworker2
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_PersistentVolume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/nfs-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  nfs:
    path: /path/to/nfs/share
    server: nfs-server.example.com
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_PersistentVolumeClaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/nfs-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod_name:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: my-app
    name: my-name
  name: pod_name
  namespace: default
spec:
  containers:
  - image: my-image:latest
    name: my-container
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod_name

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod_name
policy disallow-default-namespace -> resource default/Pod/pod_name failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod_name failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod_name failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod_name failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod_name failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod_name failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod_name failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod_name failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod_name failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create_pod_for_pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx-pod:
apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
  namespace: default
spec:
  containers:
  - image: nginx
    name: nginx
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: nfs-volume
  volumes:
  - name: nfs-volume
    persistentVolumeClaim:
      claimName: nfs-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx-pod
policy disallow-default-namespace -> resource default/Pod/nginx-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nginx-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nginx-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nginx-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create_ReplicaSet.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/my-app:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-app
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - image: my-image:latest
        name: my-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/my-app

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/my-app
policy disallow-latest-tag -> resource default/ReplicaSet/my-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/my-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/my-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/my-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/my-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/my-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/my-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: create_resource_quota_namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alegla-backend-prod/ResourceQuota/resources:
apiVersion: v1
kind: ResourceQuota
metadata:
  name: resources
  namespace: alegla-backend-prod
spec:
  hard:
    limits.cpu: "8"
    limits.memory: 8Gi
    requests.cpu: "4"
    requests.memory: 6Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Secret/admin-user-sa-token:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: admin-user
  name: admin-user-sa-token
  namespace: kube-system
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_role_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapps/Role/app-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
  namespace: webapps
rules:
- apiGroups:
  - ""
  - apps
  - autoscaling
  - batch
  - extensions
  - policy
  - rbac.authorization.k8s.io
  resources:
  - pods
  - componentstatuses
  - configmaps
  - daemonsets
  - deployments
  - events
  - endpoints
  - horizontalpodautoscalers
  - ingress
  - jobs
  - limitranges
  - namespaces
  - nodes
  - pods
  - persistentvolumes
  - persistentvolumeclaims
  - resourcequotas
  - replicasets
  - replicationcontrollers
  - serviceaccounts
  - services
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mysecretname:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: jenkins
  name: mysecretname
  namespace: default
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service_name:
apiVersion: v1
kind: Service
metadata:
  name: service_name
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
  selector:
    app: my-app
    name: my-name
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service_name failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create_service_acount.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_storage_class.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/local-storage:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  namespace: default
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create_update_secrets_types1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingAdmissionPolicy/secrets-store-sync-controller-create-update-policy:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  name: secrets-store-sync-controller-create-update-policy
  namespace: default
spec:
  failurePolicy: Fail
  matchConditions:
  - expression: request.userInfo.username == 'system:serviceaccount:'+params.data.controllerNamespace+':'+params.data.controllerName
    name: user-is-secrets-store-sync-controller
  matchConstraints:
    resourceRules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - secrets
  paramKind:
    apiVersion: v1
    kind: ConfigMap
  validations:
  - expression: variables.allowedSecretTypes == true && variables.hasOneSecretSyncOwner
      == true
    message: Only secrets with types defined in the admission-policies-secrets-store-sync-controller-allow-config
      configmap are allowed
    messageExpression: string(params.data.controllerName)  + ' has failed to ' +  string(request.operation)
      + ' secret with ' + string(object.type) + ' type ' + 'in the ' + string(request.namespace)
      + ' namespace. The controller can only create or update secrets in the allowed
      types list with a single secretsync owner.'
    reason: Forbidden
  variables:
  - expression: has(object.metadata.ownerReferences) && (size(object.metadata.ownerReferences)
      == 1 && object.metadata.ownerReferences.all(o, o.kind == 'SecretSync' && o.apiVersion.startsWith('secret-sync.x-k8s.io/')
      && o.name == object.metadata.name))
    name: hasOneSecretSyncOwner
  - expression: 'params.data.exists_one(x, params.data[x] == object.type) ? true :
      false'
    name: allowedSecretTypes

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/topic-creator:
apiVersion: v1
kind: Pod
metadata:
  name: topic-creator
  namespace: default
spec:
  containers:
  - args:
    - |
      kafka-topics \
      --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092,kafka-1.kafka.confluent.svc.cluster.local:9092 \
      --create --topic cfktopic1 \
      --partitions 2 --replication-factor 2
    command:
    - /bin/sh
    - -c
    image: confluentinc/cp-kafka:latest
    name: topic-creator
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator

skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator
policy disallow-default-namespace -> resource default/Pod/topic-creator failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/topic-creator failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/topic-creator failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/topic-creator failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/topic-creator failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/topic-creator failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/topic-creator failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/topic-creator failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/topic-creator failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/topic-creator:
apiVersion: v1
kind: Pod
metadata:
  name: topic-creator
  namespace: default
spec:
  containers:
  - args:
    - |
      kafka-topics \
      --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092,kafka-1.kafka.confluent.svc.cluster.local:9092 \
      --create --topic cfktopic1 \
      --partitions 2 --replication-factor 2
    command:
    - /bin/sh
    - -c
    image: confluentinc/cp-kafka:latest
    name: topic-creator
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator

skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator
policy disallow-default-namespace -> resource default/Pod/topic-creator failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/topic-creator failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/topic-creator failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/topic-creator failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/topic-creator failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/topic-creator failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/topic-creator failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/topic-creator failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/topic-creator failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/topic-creator:
apiVersion: v1
kind: Pod
metadata:
  name: topic-creator
  namespace: default
spec:
  containers:
  - args:
    - |
      kafka-topics \
      --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092,kafka-1.kafka.confluent.svc.cluster.local:9092 \
      --create --topic cfktopic1 \
      --partitions 2 --replication-factor 2
    command:
    - /bin/sh
    - -c
    image: confluentinc/cp-kafka:latest
    name: topic-creator
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator

skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator
policy disallow-default-namespace -> resource default/Pod/topic-creator failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/topic-creator failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/topic-creator failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/topic-creator failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/topic-creator failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/topic-creator failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/topic-creator failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/topic-creator failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/topic-creator failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/topic-creator:
apiVersion: v1
kind: Pod
metadata:
  name: topic-creator
  namespace: default
spec:
  containers:
  - args:
    - |
      kafka-topics \
      --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092,kafka-1.kafka.confluent.svc.cluster.local:9092 \
      --create --topic cfktopic1 \
      --partitions 2 --replication-factor 2
    command:
    - /bin/sh
    - -c
    image: confluentinc/cp-kafka:latest
    name: topic-creator
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator

skipped mutate policy add-safe-to-evict -> resource default/Pod/topic-creator
policy disallow-default-namespace -> resource default/Pod/topic-creator failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/topic-creator failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/topic-creator failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/topic-creator failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/topic-creator failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/topic-creator failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/topic-creator failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/topic-creator failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/topic-creator failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: createalb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: |-
      {
          "Type": "redirect",
          "RedirectConfig": {
              "Protocol": "HTTPS",
              "Port": "443",
              "Host": "#{host}",
              "Path": "/#{path}",
              "Query": "#{query}",
              "StatusCode": "HTTP_301"
          }
      }
    alb.ingress.kubernetes.io/certificate-arn: acm_ssl_arn
    alb.ingress.kubernetes.io/group.name: app
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: public_subnet_one,public_subnet_two
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  name: ingress
  namespace: default
spec:
  rules:
  - host: app.example.com
    http:
      paths:
      - backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
        path: /
        pathType: Prefix
      - backend:
          service:
            name: example
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-all-setlists.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-all-setlists:
apiVersion: batch/v1
kind: Job
metadata:
  name: create-all-setlists
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - bundle exec rails videos:create_all_setlists
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        envFrom:
        - configMapRef:
            name: song-list-conf
        - secretRef:
            name: song-list-secret
        image: song-list-backend
        name: app
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-all-setlists

skipped mutate policy add-safe-to-evict -> resource default/Job/create-all-setlists
policy disallow-default-namespace -> resource default/Job/create-all-setlists failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-all-setlists failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-all-setlists failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-all-setlists failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-all-setlists failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/create-all-setlists failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/create-all-setlists failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-all-setlists failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create-all-setlists1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-all-setlists:
apiVersion: batch/v1
kind: Job
metadata:
  name: create-all-setlists
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - bundle exec rails videos:create_all_setlists
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: default.song-list.postgres-cluster.credentials.postgresql.acid.zalan.do
        envFrom:
        - configMapRef:
            name: song-list-conf
        - secretRef:
            name: song-list-secret
        image: song-list-backend
        name: app
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-all-setlists

skipped mutate policy add-safe-to-evict -> resource default/Job/create-all-setlists
policy disallow-default-namespace -> resource default/Job/create-all-setlists failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-all-setlists failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-all-setlists failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-all-setlists failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-all-setlists failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/create-all-setlists failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/create-all-setlists failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-all-setlists failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create-api-explorer-sa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to echoservice/ServiceAccount/api-explorer:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-explorer
  namespace: echoservice

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-api-explorer-sa_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to echoservice/Role/api-explorer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: api-explorer-role
  name: api-explorer-role
  namespace: echoservice
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-api-explorer-sa_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to echoservice/RoleBinding/api-explorer-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api-explorer-role-binding
  namespace: echoservice
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-explorer-role
subjects:
- kind: ServiceAccount
  name: api-explorer
  namespace: echoservice

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-aws-credentials.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infrastructure/Secret/aws-credentials:
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: ${aws_access_key_id_encoded}
  AWS_DEFAULT_REGION: ${aws_default_region_encoded}
  AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key_encoded}
kind: Secret
metadata:
  name: aws-credentials
  namespace: infrastructure
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-aws-credentials_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/aws-credentials:
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: ${aws_access_key_id_encoded}
  AWS_DEFAULT_REGION: ${aws_default_region_encoded}
  AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key_encoded}
kind: Secret
metadata:
  name: aws-credentials
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-aws-credentials_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cert-manager/Secret/aws-credentials:
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: ${aws_access_key_id_encoded}
  AWS_DEFAULT_REGION: ${aws_default_region_encoded}
  AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key_encoded}
kind: Secret
metadata:
  name: aws-credentials
  namespace: cert-manager
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-aws-credentials1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Secret/aws-credentials:
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: ${aws_access_key_id_encoded}
  AWS_ACCOUNT_ID: ${aws_account_id_encoded}
  AWS_DEFAULT_REGION: ${aws_default_region_encoded}
  AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key_encoded}
kind: Secret
metadata:
  name: aws-credentials
  namespace: jenkins
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-awsdns-updater.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infrastructure/ServiceAccount/aws-route53-update-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-route53-update-service-account
  namespace: infrastructure

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-awsdns-updater_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/get-certificates-cluster-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: get-certificates-cluster-role
  namespace: default
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
  - update
  - patch
  - list
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - update
  - patch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-awsdns-updater_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/get-certificates-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: get-certificates-role-binding
  namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: get-certificates-cluster-role
subjects:
- kind: ServiceAccount
  name: aws-route53-update-service-account
  namespace: infrastructure

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-awsdns-updater_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infrastructure/Pod/awsdns:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: awsdns
  name: awsdns
  namespace: infrastructure
spec:
  containers:
  - env:
    - name: RUN_INTERVAL
      value: "30"
    - name: KUBE_HOST_IP
      value: ${kube_host_ip}
    envFrom:
    - secretRef:
        name: aws-credentials
    image: localhost:32000/awsdns
    imagePullPolicy: Always
    name: awsdns
  serviceAccountName: aws-route53-update-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource infrastructure/Pod/awsdns

skipped mutate policy add-safe-to-evict -> resource infrastructure/Pod/awsdns
policy drop-all-capabilities -> resource infrastructure/Pod/awsdns failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource infrastructure/Pod/awsdns failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource infrastructure/Pod/awsdns failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource infrastructure/Pod/awsdns failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource infrastructure/Pod/awsdns failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource infrastructure/Pod/awsdns failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource infrastructure/Pod/awsdns failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: create-client.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-client-argocd:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    patch: keycloakcredentials
  name: create-client-argocd
  namespace: default
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - /opt/script/create-client.sh
        command:
        - bash
        image: dwdraju/alpine-curl-jq
        name: bash
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 32Mi
        volumeMounts:
        - mountPath: /opt/script/
          name: client-script
      initContainers:
      - command:
        - sh
        - -c
        - |
          set -x;
          echo "Waiting for master realm to become ready..."
          while [ $(curl -sw '%!{(MISSING)http_code}' "http://keycloak.platform/realms/master" -o /dev/null) -ne 200 ]; do
            sleep 15;
          done;

          echo "$SVC_HOST:$SVC_PORT connection OK ✓"
        image: dwdraju/alpine-curl-jq
        imagePullPolicy: IfNotPresent
        name: svcchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Never
      volumes:
      - configMap:
          name: client-script
        name: client-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-argocd

skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-argocd
policy disallow-default-namespace -> resource default/Job/create-client-argocd failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-client-argocd failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-client-argocd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-client-argocd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-client-argocd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Job/create-client-argocd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-client-argocd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: create-client1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-client-crossplane:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    patch: keycloakcredentials
  name: create-client-crossplane
  namespace: default
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - /opt/script/create-client.sh
        command:
        - bash
        image: dwdraju/alpine-curl-jq
        name: bash
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 32Mi
        volumeMounts:
        - mountPath: /opt/script/
          name: client-script
      initContainers:
      - command:
        - sh
        - -c
        - |
          set -x;
          echo "Waiting for master realm to become ready..."
          while [ $(curl -sw '%!{(MISSING)http_code}' "http://keycloak.platform/realms/master" -o /dev/null) -ne 200 ]; do
            sleep 15;
          done;

          echo "$SVC_HOST:$SVC_PORT connection OK ✓"
        image: dwdraju/alpine-curl-jq
        imagePullPolicy: IfNotPresent
        name: svcchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Never
      volumes:
      - configMap:
          name: client-script
        name: client-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-crossplane

skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-crossplane
policy disallow-default-namespace -> resource default/Job/create-client-crossplane failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-client-crossplane failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-client-crossplane failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-client-crossplane failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-client-crossplane failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Job/create-client-crossplane failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-client-crossplane failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: create-client2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-client-oauth2proxy:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    patch: keycloakcredentials
  name: create-client-oauth2proxy
  namespace: default
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - /opt/script/create-client.sh
        command:
        - bash
        image: dwdraju/alpine-curl-jq
        name: bash
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 32Mi
        volumeMounts:
        - mountPath: /opt/script/
          name: client-script
      initContainers:
      - command:
        - sh
        - -c
        - |
          set -x;
          echo "Waiting for master realm to become ready..."
          while [ $(curl -sw '%!{(MISSING)http_code}' "http://keycloak.platform/realms/master" -o /dev/null) -ne 200 ]; do
            sleep 15;
          done;

          echo "$SVC_HOST:$SVC_PORT connection OK ✓"
        image: dwdraju/alpine-curl-jq
        imagePullPolicy: IfNotPresent
        name: svcchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Never
      volumes:
      - configMap:
          name: client-script
        name: client-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-oauth2proxy

skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-oauth2proxy
policy disallow-default-namespace -> resource default/Job/create-client-oauth2proxy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-client-oauth2proxy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-client-oauth2proxy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-client-oauth2proxy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-client-oauth2proxy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Job/create-client-oauth2proxy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-client-oauth2proxy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: create-client3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-client-backstage:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    await: service
    patch: keycloakcredentials
  name: create-client-backstage
  namespace: default
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - /opt/script/create-client.sh
        command:
        - bash
        image: dwdraju/alpine-curl-jq
        name: bash
        volumeMounts:
        - mountPath: /opt/script/
          name: client-script
      initContainers:
      - command:
        - sh
        - -c
        - |
          set -x;
          echo "Waiting for master realm to become ready..."
          while [ $(curl -sw '%!{(MISSING)http_code}' "http://keycloak.platform/realms/master" -o /dev/null) -ne 200 ]; do
            sleep 15;
          done;

          echo "$SVC_HOST:$SVC_PORT connection OK ✓"
        image: dwdraju/alpine-curl-jq
        imagePullPolicy: IfNotPresent
        name: svcchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Never
      volumes:
      - configMap:
          name: client-script
        name: client-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-backstage

skipped mutate policy add-safe-to-evict -> resource default/Job/create-client-backstage
policy disallow-default-namespace -> resource default/Job/create-client-backstage failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-client-backstage failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-client-backstage failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-client-backstage failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-client-backstage failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/create-client-backstage failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/create-client-backstage failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-client-backstage failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: createClusterRole-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-clusterrolebinding:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "1"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
  name: create-clusterrolebinding
  namespace: default
spec:
  activeDeadlineSeconds: 60
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - |
          kubectl create clusterrolebinding permissive-binding \
            --clusterrole=cluster-admin \
            --serviceaccount=controller-system:controller-controller-manager || echo "Failed to create the clusterrolebinding."
        image: bitnami/kubectl:latest
        name: create-clusterrolebinding
      restartPolicy: OnFailure
      serviceAccountName: controller-controller-manager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-clusterrolebinding

skipped mutate policy add-safe-to-evict -> resource default/Job/create-clusterrolebinding
policy disallow-default-namespace -> resource default/Job/create-clusterrolebinding failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-clusterrolebinding failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: created.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydep3:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mydep3
  name: mydep3
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mydep3
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mydep3
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydep3

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydep3
policy disallow-default-namespace -> resource default/Deployment/mydep3 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydep3 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydep3 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydep3 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydep3 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydep3 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/mydep3 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydep3 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydep3 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-dashboard-ui.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/kubernetes-dashboard:
apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/kubernetes-dashboard:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: kubernetes-dashboard
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/kubernetes-dashboard:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: kubernetes-dashboard
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kubernetes-dashboard:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: kubernetes-dashboard
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kubernetes-dashboard:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: kubernetes-dashboard
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/kubernetes-dashboard:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Deployment/kubernetes-dashboard:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      containers:
      - args:
        - --auto-generate-certificates
        - --namespace=kubernetes-dashboard
        - --enable-skip-login
        image: kubernetesui/dashboard:v2.7.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: kubernetes-dashboard
        ports:
        - containerPort: 8443
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /certs
          name: kubernetes-dashboard-certs
        - mountPath: /tmp
          name: tmp-volume
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard-certs
      - emptyDir: {}
        name: tmp-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard
policy drop-all-capabilities -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: create-dashboard-ui_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Service/dashboard-metrics-scraper:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    k8s-app: dashboard-metrics-scraper

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Deployment/dashboard-metrics-scraper:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: dashboard-metrics-scraper
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: dashboard-metrics-scraper
    spec:
      containers:
      - image: kubernetesui/metrics-scraper:v1.0.8
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: dashboard-metrics-scraper
        ports:
        - containerPort: 8000
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - emptyDir: {}
        name: tmp-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper
policy drop-all-capabilities -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: create-dashboard-ui_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Service/kubernetes-dashboard:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    k8s-app: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Secret/kubernetes-dashboard-certs:
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Secret/kubernetes-dashboard-csrf:
apiVersion: v1
data:
  csrf: ""
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: kubernetes-dashboard
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Secret/kubernetes-dashboard-key-holder:
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-key-holder
  namespace: kubernetes-dashboard
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ConfigMap/kubernetes-dashboard-settings:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Role/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-key-holder
  - kubernetes-dashboard-certs
  - kubernetes-dashboard-csrf
  resources:
  - secrets
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-settings
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resourceNames:
  - heapster
  - dashboard-metrics-scraper
  resources:
  - services
  verbs:
  - proxy
- apiGroups:
  - ""
  resourceNames:
  - heapster
  - 'http:heapster:'
  - 'https:heapster:'
  - dashboard-metrics-scraper
  - http:dashboard-metrics-scraper
  resources:
  - services/proxy
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-dashboard-ui_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/RoleBinding/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-db-fast.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/sqlserver:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    component: sqlserver
  name: sqlserver
  namespace: default
spec:
  selector:
    matchLabels:
      component: sqlserver
  serviceName: sqlserver
  template:
    metadata:
      labels:
        component: sqlserver
    spec:
      containers:
      - args:
        - /dbconfig/attach.sh && /opt/mssql/bin/sqlservr && tail -f /dev/null
        command:
        - /bin/bash
        - -c
        env:
        - name: MSSQL_SA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MSSQL_SA_PASSWORD
              name: sqlserver-secret
        - name: ACCEPT_EULA
          value: true
        image: datnd2711/sqlserver:prod-0.72
        name: sqlserver
        ports:
        - containerPort: 1433
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /var/opt/mssql/data
          name: sqlserver-data
      imagePullSecrets:
      - name: my-dockerhub-secret
      volumes:
      - name: sqlserver-secret
        secret:
          secretName: sqlserver-secret
  volumeClaimTemplates:
  - metadata:
      name: sqlserver-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
      storageClassName: nfs-delete

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/sqlserver

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/sqlserver
policy disallow-default-namespace -> resource default/StatefulSet/sqlserver failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/sqlserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/sqlserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/sqlserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/StatefulSet/sqlserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/sqlserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/sqlserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: create-db-fast_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/sqlserver-secret:
apiVersion: v1
data:
  MSSQL_SA_PASSWORD: RGF0TGFpZDIzNDU1NUBYeQ==
kind: Secret
metadata:
  name: sqlserver-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: createDeployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/k8s-gke-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
  name: k8s-gke-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/k8s-csci5409-417923/k8s-docker-repo/cont1:latest
        name: container1
        ports:
        - containerPort: 6000
        volumeMounts:
        - mountPath: /Uchenna_PV_dir
          name: data
      - image: us-central1-docker.pkg.dev/k8s-csci5409-417923/k8s-docker-repo/cont2:latest
        name: container2
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /Uchenna_PV_dir
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: k8s-gke-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/k8s-gke-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/k8s-gke-deployment
policy disallow-default-namespace -> resource default/Deployment/k8s-gke-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/k8s-gke-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: createDeployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/k8s-gke-service:
apiVersion: v1
kind: Service
metadata:
  name: k8s-gke-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 6000
  selector:
    app: my-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: createDeployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: myapp
    tier: frontend
  name: mydeployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
      - image: akash271291/node-web-app:1.1.1
        imagePullPolicy: Never
        name: mynode
        ports:
        - containerPort: 3040

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeployment
policy disallow-default-namespace -> resource default/Deployment/mydeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: createDeployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: myapp
    tier: frontend
  name: mydeployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
      - image: vishuddhasamarasekara/calculator-image:1.0
        name: mynode
        ports:
        - containerPort: 3040

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeployment
policy disallow-default-namespace -> resource default/Deployment/mydeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mydeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-1
  namespace: default
spec:
  selector:
    matchLabels:
      app: simple-nodejs-pod-1
  template:
    metadata:
      labels:
        app: simple-nodejs-pod-1
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          value: SERVICE_1_KATALIS
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 400m
            memory: 156Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-2
  namespace: default
spec:
  selector:
    matchLabels:
      app: simple-nodejs-pod-2
  template:
    metadata:
      labels:
        app: simple-nodejs-pod-2
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          value: SERVICE_2_WIDIA
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 400m
            memory: 156Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-2
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-1
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: simple-nodejs-pod
  template:
    metadata:
      labels:
        app: simple-nodejs-pod
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 400m
            memory: 156Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-deployments2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-1
  namespace: default
spec:
  selector:
    matchLabels:
      app: simple-nodejs-pod-1
  template:
    metadata:
      labels:
        app: simple-nodejs-pod-1
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          value: SERVICE_1_KATALIS
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 400m
            memory: 156Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-2
  namespace: default
spec:
  selector:
    matchLabels:
      app: simple-nodejs-pod-2
  template:
    metadata:
      labels:
        app: simple-nodejs-pod-2
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          value: SERVICE_2_WIDIA
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 400m
            memory: 156Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-2
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/simple-nodejs-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-nodejs-deployment-1
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: simple-nodejs-pod
  template:
    metadata:
      labels:
        app: simple-nodejs-pod
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "3000"
        - name: SVC_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: faawidia/simple-nodejs-microservice:latest
        name: simple-nodejs-container
        resources:
          limits:
            cpu: 400m
            memory: 156Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/simple-nodejs-deployment-1
policy disallow-default-namespace -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/simple-nodejs-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-deployments3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/my-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: my-ingress
  namespace: default
spec:
  rules:
  - host: fajrulaulia.com
    http:
      paths:
      - backend:
          service:
            name: simple-nodejs-service-1
            port:
              number: 1000
        path: /v1(/|$)(.*)
        pathType: Prefix
      - backend:
          service:
            name: simple-nodejs-service-2
            port:
              number: 2000
        path: /v2(/|$)(.*)
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/my-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: my-ingress
  namespace: default
spec:
  rules:
  - host: fajrulaulia.com
    http:
      paths:
      - backend:
          service:
            name: simple-nodejs-service-1
            port:
              number: 1000
        path: /v1(/|$)(.*)
        pathType: Prefix
      - backend:
          service:
            name: simple-nodejs-service-2
            port:
              number: 2000
        path: /v2(/|$)(.*)
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to irsa/Role/certgen-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: certgen-role
  namespace: irsa
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-job_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to irsa/RoleBinding/certgen-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: certgen-role-binding
  namespace: irsa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: certgen-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: irsa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-job_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to irsa/Job/certgen-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: certgen-job
  namespace: irsa
spec:
  template:
    metadata:
      name: certgen-pod
    spec:
      containers:
      - args:
        - create
        - --host=pod-identity-webhook,pod-identity-webhook.irsa,pod-identity-webhook.irsa.svc,pod-identity-webhook.irsa.svc.local
        - --namespace=irsa
        - --secret-name=pod-identity-webhook-cert
        - --cert-name=tls.crt
        - --key-name=tls.key
        image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.3.0
        name: certgen-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource irsa/Job/certgen-job

skipped mutate policy add-safe-to-evict -> resource irsa/Job/certgen-job
policy drop-all-capabilities -> resource irsa/Job/certgen-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource irsa/Job/certgen-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource irsa/Job/certgen-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource irsa/Job/certgen-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource irsa/Job/certgen-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource irsa/Job/certgen-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to irsa/Role/certgen-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: certgen-role
  namespace: irsa
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-job1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to irsa/RoleBinding/certgen-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: certgen-role-binding
  namespace: irsa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: certgen-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: irsa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-job1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to irsa/Job/certgen-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: certgen-job
  namespace: irsa
spec:
  template:
    metadata:
      name: certgen-pod
    spec:
      containers:
      - args:
        - create
        - --host=pod-identity-webhook,pod-identity-webhook.irsa,pod-identity-webhook.irsa.svc,pod-identity-webhook.irsa.svc.local
        - --namespace=irsa
        - --secret-name=pod-identity-webhook-cert
        - --cert-name=tls.crt
        - --key-name=tls.key
        image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.3.0
        name: certgen-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource irsa/Job/certgen-job

skipped mutate policy add-safe-to-evict -> resource irsa/Job/certgen-job
policy drop-all-capabilities -> resource irsa/Job/certgen-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource irsa/Job/certgen-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource irsa/Job/certgen-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource irsa/Job/certgen-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource irsa/Job/certgen-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource irsa/Job/certgen-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create-k8s-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iwayq-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iwayq-app
  name: iwayq-deploy
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: iwayq-app
  template:
    metadata:
      labels:
        app: iwayq-app
    spec:
      containers:
      - image: iwayqdockertest/iwayq:1.0
        name: iwayq-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iwayq-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iwayq-deploy
policy disallow-default-namespace -> resource default/Deployment/iwayq-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create-k8s-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iwayq-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iwayq-app
  name: iwayq-deploy
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: iwayq-app
  template:
    metadata:
      labels:
        app: iwayq-app
    spec:
      containers:
      - image: iwayqdockertest/iwayq:1.0
        name: iwayq-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iwayq-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iwayq-deploy
policy disallow-default-namespace -> resource default/Deployment/iwayq-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iwayq-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create-keycloak-db.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/create-keycloak-db:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    await: service
  name: create-keycloak-db
  namespace: default
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
      - args:
        - |
          psql -h postgres.platform -p 5432 -U pgadminuser -c "CREATE USER keycloak WITH PASSWORD '$KEYCLOAK_PASSWORD';" -c "CREATE DATABASE keycloak OWNER keycloak;"
        command:
        - sh
        - -c
        env:
        - name: PGPASSWORD
          value: pgpw_TP28zugpVyXxs3E4OMZd
        - name: KEYCLOAK_PASSWORD
          value: kcpw_tJLMDHwUqcfgO20TqQcO
        image: postgres:latest
        name: psql
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/create-keycloak-db

skipped mutate policy add-safe-to-evict -> resource default/Job/create-keycloak-db
policy disallow-default-namespace -> resource default/Job/create-keycloak-db failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/create-keycloak-db failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/create-keycloak-db failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/create-keycloak-db failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/create-keycloak-db failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/create-keycloak-db failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/create-keycloak-db failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/create-keycloak-db failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: create-namespaces.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dev:
apiVersion: v1
kind: Namespace
metadata:
  name: dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-namespaces_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/uat:
apiVersion: v1
kind: Namespace
metadata:
  name: uat
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/uat:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: uat
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/uat:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: uat
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/uat:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: uat
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/uat:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: uat
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-namespaces_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-ns2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mynamespace:
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: mynamespace
  namespace: default
spec: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mynamespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mynamespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mynamespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mynamespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mynamespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mynamespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mynamespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mynamespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-ns3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-ns4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: createPods.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/mypod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    tier: frontend
  name: mypod
  namespace: default
spec:
  containers:
  - image: akash271291/node-web-app:1.1.1
    imagePullPolicy: Never
    name: nodewebapp
    ports:
    - containerPort: 3040
  dnsPolicy: ClusterFirst
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/mypod

skipped mutate policy add-safe-to-evict -> resource default/Pod/mypod
policy disallow-default-namespace -> resource default/Pod/mypod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/mypod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/mypod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/mypod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/mypod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/mypod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/mypod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/mypod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: createPods1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/mypod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    tier: frontend
  name: mypod
  namespace: default
spec:
  containers:
  - image: vishuddhasamarasekara/calculator-image:1.0
    name: nodewebapp
    ports:
    - containerPort: 3040

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/mypod

skipped mutate policy add-safe-to-evict -> resource default/Pod/mypod
policy disallow-default-namespace -> resource default/Pod/mypod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/mypod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/mypod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/mypod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/mypod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/mypod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/mypod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/mypod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: createReplicaSet.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/myreplicaset:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels:
    app: myapp
    tier: frontend
  name: myreplicaset
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
      - image: akash271291/node-web-app:1.1.1
        name: mynode
        ports:
        - containerPort: 3040

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/myreplicaset

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/myreplicaset
policy drop-all-capabilities -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: createReplicaSet1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/myreplicaset:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels:
    app: myapp
    tier: frontend
  name: myreplicaset
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
      - image: vishuddhasamarasekara/calculator-image:1.0
        name: mynode
        ports:
        - containerPort: 3040

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/myreplicaset

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/myreplicaset
policy drop-all-capabilities -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/myreplicaset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: create-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/pod-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-rolebinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/read-pods:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: jane

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: createService.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/example-service:
apiVersion: v1
kind: Service
metadata:
  name: example-service
  namespace: default
spec:
  clusterIP: 10.99.132.220
  externalTrafficPolicy: Cluster
  ports:
  - name: myport
    port: 8037
    protocol: TCP
    targetPort: 3040
  selector:
    tier: frontend
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: createService1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/example-service:
apiVersion: v1
kind: Service
metadata:
  name: example-service
  namespace: default
spec:
  clusterIP: 10.99.132.220
  externalTrafficPolicy: Cluster
  ports:
  - name: myport
    port: 8037
    protocol: TCP
    targetPort: 3040
  selector:
    tier: frontend
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: createserviceaccount.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/mynewserviceaccount:
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  name: mynewserviceaccount
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-service-deployments.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/faawidia-deployments-grpc:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faawidia-deployments-grpc
  namespace: default
spec:
  selector:
    matchLabels:
      name: faawidia-grpc-pod
  template:
    metadata:
      labels:
        name: faawidia-grpc-pod
    spec:
      containers:
      - image: faawidia/webservice-grpc
        name: faawidia-grpc-container
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-grpc

skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-grpc
policy disallow-default-namespace -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-service-deployments_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/faawidia-deployments-rest:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faawidia-deployments-rest
  namespace: default
spec:
  selector:
    matchLabels:
      name: faawidia-api-pods
  template:
    metadata:
      labels:
        name: faawidia-api-pods
    spec:
      containers:
      - env:
        - name: WEBSERVICE
          value: grpc-fajrulappsevice.default.svc.cluster.local:8080
        image: faawidia/webapi-rest
        name: faawidia-api-container
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-rest

skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-rest
policy disallow-default-namespace -> resource default/Deployment/faawidia-deployments-rest failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-service-deployments_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rest-fajrulappsevice:
apiVersion: v1
kind: Service
metadata:
  name: rest-fajrulappsevice
  namespace: default
spec:
  ports:
  - port: 8432
    targetPort: 8432
  selector:
    name: faawidia-api-pods
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/rest-fajrulappsevice failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-service-deployments_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/grpc-fajrulappsevice:
apiVersion: v1
kind: Service
metadata:
  name: grpc-fajrulappsevice
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: faawidia-grpc-pod
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-service-deployments1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/faawidia-deployments-grpc:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faawidia-deployments-grpc
  namespace: default
spec:
  selector:
    matchLabels:
      name: faawidia-grpc-pod
  template:
    metadata:
      labels:
        name: faawidia-grpc-pod
    spec:
      containers:
      - image: faawidia/webservice-grpc
        name: faawidia-grpc-container
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-grpc

skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-grpc
policy disallow-default-namespace -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/faawidia-deployments-grpc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-service-deployments1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/faawidia-deployments-rest:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faawidia-deployments-rest
  namespace: default
spec:
  selector:
    matchLabels:
      name: faawidia-api-pods
  template:
    metadata:
      labels:
        name: faawidia-api-pods
    spec:
      containers:
      - env:
        - name: WEBSERVICE
          value: grpc-fajrulappsevice.default.svc.cluster.local:8080
        image: faawidia/webapi-rest
        name: faawidia-api-container
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-rest

skipped mutate policy add-safe-to-evict -> resource default/Deployment/faawidia-deployments-rest
policy disallow-default-namespace -> resource default/Deployment/faawidia-deployments-rest failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/faawidia-deployments-rest failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: create-service-deployments1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rest-fajrulappsevice:
apiVersion: v1
kind: Service
metadata:
  name: rest-fajrulappsevice
  namespace: default
spec:
  ports:
  - port: 8432
    targetPort: 8432
  selector:
    name: faawidia-api-pods
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/rest-fajrulappsevice failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-service-deployments1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/grpc-fajrulappsevice:
apiVersion: v1
kind: Service
metadata:
  name: grpc-fajrulappsevice
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: faawidia-grpc-pod
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-services.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service-1:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service-1
  namespace: default
spec:
  ports:
  - port: 1000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod-1
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service-1 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-services_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service-2:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service-2
  namespace: default
spec:
  ports:
  - port: 2000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod-2
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service-2 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-services1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service-1:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service-1
  namespace: default
spec:
  ports:
  - port: 1000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod-1
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service-1 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-services1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/simple-nodejs-service-2:
apiVersion: v1
kind: Service
metadata:
  name: simple-nodejs-service-2
  namespace: default
spec:
  ports:
  - port: 2000
    targetPort: 3000
  selector:
    app: simple-nodejs-pod-2
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/simple-nodejs-service-2 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: create-storage-class.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/kube-nfs:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: kube-nfs
  namespace: default
mountOptions:
- auto
- nofail
- nolock
- intr
- tcp
parameters:
  mountPermissions: "0777"
  server: ${nfs_server_ip}
  share: /srv/kube-lv
provisioner: nfs.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-storage-class_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/nfs-nfs:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-nfs
  namespace: default
mountOptions:
- auto
- nofail
- nolock
- intr
- tcp
parameters:
  mountPermissions: "0777"
  server: ${nfs_server_ip}
  share: /srv/nfs-lv
provisioner: nfs.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-user.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: create-user_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credential-goalsetter-keycloak.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Secret/credential-goalsetter-keycloak:
apiVersion: v1
data:
  ADMIN_PASSWORD: <base64 encoded password>
  ADMIN_USERNAME: <base64 encoded username>
kind: Secret
metadata:
  labels:
    app: keycloak
    keycloak: goalsetter-keycloak
  name: credential-goalsetter-keycloak
  namespace: goalsetter
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credential-goalsetter-keycloak1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Secret/credential-goalsetter-keycloak:
apiVersion: v1
data:
  ADMIN_PASSWORD: <base64 encoded password>
  ADMIN_USERNAME: <base64 encoded username>
kind: Secret
metadata:
  labels:
    app: keycloak
    keycloak: goalsetter-keycloak
  name: credential-goalsetter-keycloak
  namespace: goalsetter
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credentials_patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to system/Deployment/controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  template:
    spec:
      containers:
      - name: manager
        volumeMounts:
        - mountPath: /opt/metal3/auth/ironic
          name: ironic-credentials
          readOnly: true
      volumes:
      - name: ironic-credentials
        secret:
          secretName: ironic-credentials

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager

skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager
policy disallow-helm-tiller -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource system/Deployment/controller-manager failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource system/Deployment/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: credentials3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/pipeline-credentials:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tekton.dev/git-0: https://github.com
  name: pipeline-credentials
  namespace: default
stringData:
  password: CHANGE_ME
  username: CHANGE_ME
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credentials5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/credentials:
apiVersion: v1
kind: Secret
metadata:
  name: credentials
  namespace: default
stringData:
  adminUser.email: admin@example.com
  adminUser.firstname: airflow
  adminUser.lastname: airflow
  adminUser.password: admin
  adminUser.username: admin
  appSecretKey: airflow-airflow
  connections.celeryBrokerUrl: redis://redis:6379/0
  connections.celeryResultBackend: db+postgresql://airflow:airflow@postgres/airflow
  connections.sqlalchemyDatabaseUri: postgresql://airflow:airflow@postgres/airflow
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credentials6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/backup-credentials:
apiVersion: v1
kind: Secret
metadata:
  name: backup-credentials
  namespace: default
stringData:
  password: minio123
  username: minio
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credentials6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/backup-repo:
apiVersion: v1
kind: Secret
metadata:
  name: backup-repo
  namespace: default
stringData:
  password: p@ssw0rd
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: credsample.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to edns-operator/Secret/awscred:
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: <KEYID>
  AWS_SECRET_ACCESS_KEY: <KEY>
kind: Secret
metadata:
  name: awscred
  namespace: edns-operator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good13_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good13_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good13_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr05:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr05
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good14_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good17_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good18_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good18_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good18_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr05:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr05
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good19_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good22_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good23_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good23_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good23_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr05:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr05
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good24_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr05:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr05
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good8_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good8_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr05:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr05
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr03
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-good9_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/goodcr04:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: goodcr04
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crisalid-bus-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/crisalid-bus:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: crisalid-bus
  name: crisalid-bus
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crisalid-bus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: crisalid-bus
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              key: amqp_password
              name: crisalid-bus-secret
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              key: amqp_user
              name: crisalid-bus-secret
        image: rabbitmq:3-management
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - -q
            - ping
          failureThreshold: 30
          periodSeconds: 1
          timeoutSeconds: 3
        name: crisalid-bus
        ports:
        - containerPort: 5672
        - containerPort: 15672
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 1000m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: crisalid-bus-data
        - mountPath: /var/log/rabbitmq
          name: crisalid-bus-logs
      restartPolicy: Always
      volumes:
      - name: crisalid-bus-data
        persistentVolumeClaim:
          claimName: crisalid-bus-pvc-data
      - name: crisalid-bus-logs
        persistentVolumeClaim:
          claimName: crisalid-bus-pvc-logs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/crisalid-bus

skipped mutate policy add-safe-to-evict -> resource default/Deployment/crisalid-bus
policy disallow-default-namespace -> resource default/Deployment/crisalid-bus failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/crisalid-bus failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/crisalid-bus failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/crisalid-bus failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/crisalid-bus failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/crisalid-bus failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: crisalid-bus-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/crisalid-bus-pvc-data:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: crisalid-bus
  name: crisalid-bus-pvc-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crisalid-bus-pvc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/crisalid-bus-pvc-logs:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: crisalid-bus
  name: crisalid-bus-pvc-logs
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crisalid-bus-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/crisalid-bus-secret:
apiVersion: v1
data:
  amqp_password: ${AMQP_PASSWORD}
  amqp_user: ${AMQP_USER}
kind: Secret
metadata:
  name: crisalid-bus-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crisalid-bus-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/crisalid-bus:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: crisalid-bus
  name: crisalid-bus
  namespace: default
spec:
  ports:
  - name: amqp-port
    port: 5672
    targetPort: 5672
  - name: amqp-management-port
    port: 15672
    targetPort: 15672
  selector:
    app: crisalid-bus
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crisalid-training-data-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/crisalid-training-data-config:
apiVersion: v1
data:
  AMQP_HOST: ${AMQP_HOST}
  AMQP_PORT: ${AMQP_PORT}
  AMQP_PREFETCH_COUNT: "1"
  APP_ENV: ${APP_ENV}
  DATA_DIR: ${TRAINING_DATA_BUCKET_PATH}
  ES_HOST: ${CTD_ES_INSTANCE_NAME}-master
  ES_PORT: ${CTD_ES_PORT}
  ES_SCHEME: https
kind: ConfigMap
metadata:
  labels:
    app: crisalid-training-data
  name: crisalid-training-data-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crisalid-training-data-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/crisalid-training-data:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: crisalid-training-data
  name: crisalid-training-data
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crisalid-training-data
  strategy: {}
  template:
    metadata:
      labels:
        app: crisalid-training-data
    spec:
      containers:
      - env:
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: amqp_password
              name: crisalid-bus-secret
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              key: amqp_user
              name: crisalid-bus-secret
        - name: ES_USER
          valueFrom:
            secretKeyRef:
              key: es_user
              name: crisalid-training-data-secret
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: es_password
              name: crisalid-training-data-secret
        envFrom:
        - configMapRef:
            name: crisalid-training-data-config
        image: ${CTD_DOCKER_IMAGE_NAME}:${CTD_DOCKER_IMAGE_TAG}
        imagePullPolicy: Always
        name: crisalid-training-data
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 5000m
            memory: 6Gi
          requests:
            cpu: 2000m
            memory: 2Gi
      restartPolicy: Always
      serviceAccountName: k8s-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/crisalid-training-data

skipped mutate policy add-safe-to-evict -> resource default/Deployment/crisalid-training-data
policy disallow-default-namespace -> resource default/Deployment/crisalid-training-data failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/crisalid-training-data failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/crisalid-training-data failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/crisalid-training-data failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/crisalid-training-data failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/crisalid-training-data failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/crisalid-training-data failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: crisalid-training-data-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/crisalid-training-data-secret:
apiVersion: v1
data:
  es_password: ${CTD_ES_PASSWORD}
  es_user: ${CTD_ES_USER}
kind: Secret
metadata:
  name: crisalid-training-data-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: critical-priority.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cadvisor/DaemonSet/cadvisor:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cadvisor
  namespace: cadvisor
spec:
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      priorityClassName: system-node-critical
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cadvisor/DaemonSet/cadvisor

skipped mutate policy add-safe-to-evict -> resource cadvisor/DaemonSet/cadvisor
policy require-labels -> resource cadvisor/DaemonSet/cadvisor failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource cadvisor/DaemonSet/cadvisor failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource cadvisor/DaemonSet/cadvisor failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource cadvisor/DaemonSet/cadvisor failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 5, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: crm-service-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bookstore-ns/Deployment/crm-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: crm-service
  name: crm-service-deployment
  namespace: bookstore-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crm-service
  template:
    metadata:
      labels:
        app: crm-service
    spec:
      containers:
      - image: bigfatmaddy007/crmimage:latest
        name: crm-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource bookstore-ns/Deployment/crm-service-deployment

skipped mutate policy add-safe-to-evict -> resource bookstore-ns/Deployment/crm-service-deployment
policy disallow-latest-tag -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource bookstore-ns/Deployment/crm-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: crolb-user.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/csr-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csr-manager
  namespace: default
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - update
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/svc:blocksvcuser:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: svc:blocksvcuser
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csr-manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: inspect-csr-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/csr-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csr-manager
  namespace: default
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - update
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/svc:blocksvcuser:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: svc:blocksvcuser
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csr-manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: inspect-csr-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/csr-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csr-manager
  namespace: default
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - update
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/svc:blocksvcuser:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: svc:blocksvcuser
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csr-manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: inspect-csr-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/csr-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csr-manager
  namespace: default
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - update
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/svc:blocksvcuser:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: svc:blocksvcuser
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csr-manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: inspect-csr-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/csr-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csr-manager
  namespace: default
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - update
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolb-user4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/svc:blocksvcuser:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: svc:blocksvcuser
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csr-manager
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: inspect-csr-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crole.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/user-mount:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: user-mount
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: crolebinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/user-mount:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: user-mount
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: user-mount
subjects:
- kind: User
  name: user-mount

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cron1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - echo Hello World!
            image: busybox
            name: hw
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - import time; print('starting'); time.sleep(30); print('done')
            command:
            - python
            image: python:rc-slim
            name: long-job
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job
policy drop-all-capabilities -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - import time; print('starting'); time.sleep(30); print('done')
            command:
            - python
            image: python:rc-slim
            name: long-job
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job
policy drop-all-capabilities -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - echo Hello World!
            image: busybox
            name: hw
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - import time; print('starting'); time.sleep(30); print('done')
            command:
            - python
            image: python:rc-slim
            name: long-job
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job
policy drop-all-capabilities -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - import time; print('starting'); time.sleep(30); print('done')
            command:
            - python
            image: python:rc-slim
            name: long-job
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job
policy drop-all-capabilities -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - import time; print('starting'); time.sleep(30); print('done')
            command:
            - python
            image: python:rc-slim
            name: long-job
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job
policy drop-all-capabilities -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron-9to5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/scale-up-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scale-up-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - |
              kubectl scale --replicas=10 deployment/ngx-admin-deployment
            image: bitnami/kubectl:latest
            name: scale-up-container
          restartPolicy: OnFailure
  schedule: 0 6 * * 1-5
  startingDeadlineSeconds: 3600

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-up-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-up-job
policy disallow-latest-tag -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-9to5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/scale-down-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scale-down-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - kubectl
            - scale
            - --replicas=2
            - deployment/ngx-admin-deployment
            image: bitnami/kubectl:latest
            name: scale-down-container
          restartPolicy: OnFailure
  schedule: 0 17 * * 1-5
  startingDeadlineSeconds: 3600

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-down-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-down-job
policy disallow-latest-tag -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-9to51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/scale-up-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scale-up-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - |
              kubectl scale --replicas=10 deployment/ngx-admin-deployment
            image: bitnami/kubectl:latest
            name: scale-up-container
          restartPolicy: OnFailure
  schedule: 0 6 * * 1-5
  startingDeadlineSeconds: 3600

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-up-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-up-job
policy disallow-latest-tag -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/scale-up-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-9to51_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/scale-down-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scale-down-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - kubectl
            - scale
            - --replicas=2
            - deployment/ngx-admin-deployment
            image: bitnami/kubectl:latest
            name: scale-down-container
          restartPolicy: OnFailure
  schedule: 0 17 * * 1-5
  startingDeadlineSeconds: 3600

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-down-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/scale-down-job
policy disallow-latest-tag -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/scale-down-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronbackup_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cronbackup-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: gobackup-operator
    app.kubernetes.io/instance: cronbackup-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: gobackup-operator
  name: cronbackup-editor-role
  namespace: default
rules:
- apiGroups:
  - gobackup.io
  resources:
  - cronbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gobackup.io
  resources:
  - cronbackups/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronbackup_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cronbackup-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: gobackup-operator
    app.kubernetes.io/instance: cronbackup-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: gobackup-operator
  name: cronbackup-viewer-role
  namespace: default
rules:
- apiGroups:
  - gobackup.io
  resources:
  - cronbackups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gobackup.io
  resources:
  - cronbackups/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronbroadcastjob_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cronbroadcastjob-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: tugboat
    app.kubernetes.io/instance: cronbroadcastjob-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: tugboat
  name: cronbroadcastjob-editor-role
  namespace: default
rules:
- apiGroups:
  - apps.tugboat.cloudrasayan.com
  resources:
  - cronbroadcastjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.tugboat.cloudrasayan.com
  resources:
  - cronbroadcastjobs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronbroadcastjob_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cronbroadcastjob-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: tugboat
    app.kubernetes.io/instance: cronbroadcastjob-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: tugboat
  name: cronbroadcastjob-viewer-role
  namespace: default
rules:
- apiGroups:
  - apps.tugboat.cloudrasayan.com
  resources:
  - cronbroadcastjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps.tugboat.cloudrasayan.com
  resources:
  - cronbroadcastjobs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronhpa_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cronhpa-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-cronhpa-controller
    app.kubernetes.io/instance: cronhpa-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-cronhpa-controller
  name: cronhpa-editor-role
  namespace: default
rules:
- apiGroups:
  - autoscaling.zhengyansheng.com
  resources:
  - cronhpas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling.zhengyansheng.com
  resources:
  - cronhpas/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronhpa_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cronhpa-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-cronhpa-controller
    app.kubernetes.io/instance: cronhpa-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-cronhpa-controller
  name: cronhpa-viewer-role
  namespace: default
rules:
- apiGroups:
  - autoscaling.zhengyansheng.com
  resources:
  - cronhpas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.zhengyansheng.com
  resources:
  - cronhpas/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: CronJob.echo-date-better.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 04--cronjob/CronJob/echo-date-better:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: echo-date-better
  namespace: 04--cronjob
spec:
  jobTemplate:
    spec:
      activeDeadlineSeconds: 100
      backoffLimit: 1
      completions: 1
      parallelism: 1
      template:
        metadata:
          labels:
            app: echo-date
        spec:
          containers:
          - command:
            - date
            image: cgr.dev/chainguard/busybox:latest
            name: echo
            resources:
              limits:
                memory: 50Mi
              requests:
                cpu: 250m
                memory: 50Mi
            securityContext:
              allowPrivilegeEscalation: false
              privileged: false
              runAsGroup: 1001
              runAsNonRoot: true
              runAsUser: 1001
          restartPolicy: Never
          securityContext:
            seccompProfile:
              type: RuntimeDefault
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource 04--cronjob/CronJob/echo-date-better

skipped mutate policy add-safe-to-evict -> resource 04--cronjob/CronJob/echo-date-better
policy disallow-latest-tag -> resource 04--cronjob/CronJob/echo-date-better failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource 04--cronjob/CronJob/echo-date-better failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource 04--cronjob/CronJob/echo-date-better failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource 04--cronjob/CronJob/echo-date-better failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource 04--cronjob/CronJob/echo-date-better failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource 04--cronjob/CronJob/echo-date-better failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: CronJob.echo-date-minimal.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/echo-date-minimal:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: echo-date-minimal
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          containers:
          - command:
            - date
            image: busybox:1.36.1
            name: echo
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/echo-date-minimal

skipped mutate policy add-safe-to-evict -> resource default/CronJob/echo-date-minimal
policy drop-all-capabilities -> resource default/CronJob/echo-date-minimal failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/echo-date-minimal failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/echo-date-minimal failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/echo-date-minimal failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/echo-date-minimal failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/echo-date-minimal failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sync-protect-web-cert:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sync-protect-web-cert
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - /app/sync.sh
            env:
            - name: REMOTE_HOST
              value: 10.0.10.10
            - name: REMOTE_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: protect-host
            - name: REMOTE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: protect-host
            image: ubuntu:latest
            name: cert-sync-container
            securityContext:
              runAsGroup: 0
              runAsUser: 0
            volumeMounts:
            - mountPath: /app
              name: script-volume
            - mountPath: /var/run/ssl
              name: cert-volume
          restartPolicy: OnFailure
          volumes:
          - configMap:
              defaultMode: 511
              name: protect-sync-script
            name: script-volume
          - name: cert-volume
            secret:
              secretName: protect-cert
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sync-protect-web-cert

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sync-protect-web-cert
policy disallow-latest-tag -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job.yaml.verified.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/my-cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command: []
            image: my-image
            imagePullPolicy: IfNotPresent
            name: my-container
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-cron-job
policy disallow-latest-tag -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/my-cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/magic-spreadsheet-notifier:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: magic-spreadsheet-notifier
  namespace: default
spec:
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      template:
        spec:
          containers:
          - env:
            - name: FIREBASE_JSON
              valueFrom:
                secretKeyRef:
                  key: firebase-json
                  name: magic-spreadsheet-notifier-secret
            - name: FIREBASE_PROJECT_ID
              valueFrom:
                configMapKeyRef:
                  key: FIREBASE_PROJECT_ID
                  name: magic-spreadsheet-notifier-conf
            - name: MAGIC_SPREADSHEET_WAIT_TIME
              valueFrom:
                configMapKeyRef:
                  key: MAGIC_SPREADSHEET_WAIT_TIME
                  name: magic-spreadsheet-notifier-conf
            - name: SLACK_API_TOKEN
              valueFrom:
                secretKeyRef:
                  key: slack-api-token
                  name: magic-spreadsheet-notifier-secret
            - name: FIRESTORE_COLLECTION_PATH
              valueFrom:
                configMapKeyRef:
                  key: FIRESTORE_COLLECTION_PATH
                  name: magic-spreadsheet-notifier-conf
            - name: MAGIC_SPREADSHEET_URL
              valueFrom:
                configMapKeyRef:
                  key: MAGIC_SPREADSHEET_URL
                  name: magic-spreadsheet-notifier-conf
            image: magic-spreadsheet-notifier
            name: magic-spreadsheet-notifier
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 259200
  schedule: 16 18 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier

skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier
policy disallow-latest-tag -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      completions: 2
      parallelism: 2
      template:
        spec:
          containers:
          - command:
            - expr
            - "4"
            - '-'
            - "1"
            image: ubuntu
            name: ubuntu
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-job
policy disallow-latest-tag -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sync-protect-web-cert:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sync-protect-web-cert
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - /app/sync.sh
            env:
            - name: REMOTE_HOST
              value: 10.0.10.10
            - name: REMOTE_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: protect-host
            - name: REMOTE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: protect-host
            image: ubuntu:latest
            name: cert-sync-container
            securityContext:
              runAsGroup: 0
              runAsUser: 0
            volumeMounts:
            - mountPath: /app
              name: script-volume
            - mountPath: /var/run/ssl
              name: cert-volume
          restartPolicy: OnFailure
          volumes:
          - configMap:
              defaultMode: 511
              name: protect-sync-script
            name: script-volume
          - name: cert-volume
            secret:
              secretName: protect-cert
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sync-protect-web-cert

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sync-protect-web-cert
policy disallow-latest-tag -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/sync-protect-web-cert failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-demo:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-demo
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            cronjob-name: cron-demo
        spec:
          containers:
          - args:
            - python
            - -c
            - from datetime import datetime; print(f'[{datetime.now()}] CronJob demo
              here...remember to stretch')
            image: g1g1/py-kube:0.3
            name: cron-demo
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-demo

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-demo
policy drop-all-capabilities -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob100.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/CronJob/elasticsearch-curator:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    k8s-app: elasticsearch-logging
  name: elasticsearch-curator
  namespace: kube-system
spec:
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            k8s-app: elasticsearch-logging
          name: elasticsearch-curator
        spec:
          containers:
          - args:
            - sh
            - -c
            - pip install elasticsearch-curator && curator_cli --host elasticsearch-logging
              delete_indices --filter_list '[{"filtertype":"age","source":"creation_date","direction":"older","unit":"days","unit_count":7},{"filtertype":"pattern","kind":"prefix","value":"logstash"}]'
              || true
            image: python:3.6-alpine
            name: ingestor
          restartPolicy: Never
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/CronJob/elasticsearch-curator

skipped mutate policy add-safe-to-evict -> resource kube-system/CronJob/elasticsearch-curator
policy drop-all-capabilities -> resource kube-system/CronJob/elasticsearch-curator failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/CronJob/elasticsearch-curator failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/CronJob/elasticsearch-curator failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/CronJob/elasticsearch-curator failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kube-system/CronJob/elasticsearch-curator failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/CronJob/elasticsearch-curator failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: CronJob101.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to twistlock/CronJob/defender-updater:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: defender-updater
  namespace: twistlock
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - /scripts/DefenderUpdater.sh
            env:
            - name: AK
              valueFrom:
                secretKeyRef:
                  key: AK
                  name: prisma-secrets
            - name: SK
              valueFrom:
                secretKeyRef:
                  key: SK
                  name: prisma-secrets
            image: bsantacruz/alpine-kubectl:2.1
            name: updater
            volumeMounts:
            - mountPath: /scripts
              name: script
              readOnly: false
          restartPolicy: OnFailure
          serviceAccountName: defender-updater-sa
          volumes:
          - configMap:
              name: defender-updater-script-configmap
            name: script
  schedule: 0 18 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource twistlock/CronJob/defender-updater

skipped mutate policy add-safe-to-evict -> resource twistlock/CronJob/defender-updater
policy drop-all-capabilities -> resource twistlock/CronJob/defender-updater failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource twistlock/CronJob/defender-updater failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource twistlock/CronJob/defender-updater failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource twistlock/CronJob/defender-updater failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource twistlock/CronJob/defender-updater failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource twistlock/CronJob/defender-updater failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob102.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob103.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob105.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob106.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob107.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob108.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob109.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/my-app-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-app-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: your-registry-name.azurecr.io/my-app:latest
            name: my-app
            resources:
              requests:
                cpu: "12"
                memory: 48Gi
            volumeMounts:
            - mountPath: /data
              name: my-volume
          nodeSelector:
            kubernetes.io/os: windows
          restartPolicy: OnFailure
          volumes:
          - name: my-volume
            persistentVolumeClaim:
              claimName: azurefile
  schedule: 0 11 * * 1,3-5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-app-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-app-cronjob
policy disallow-latest-tag -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/my-app-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/test-cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test-cron-job
  namespace: default
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "5"
            image: busybox
            name: sleeper
          restartPolicy: OnFailure
  schedule: '* * * * *'
  startingDeadlineSeconds: 300
  successfulJobsHistoryLimit: 5
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/test-cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/test-cron-job
policy disallow-latest-tag -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/test-cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronJob11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/adservice-warmup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: adservice-warmup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: AD_SERVICE_HOST
              value: adservice
            - name: AD_SERVICE_PORT
              value: "9555"
            image: amiraniv/cron-job:v1.0
            name: adservice-warmup
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/adservice-warmup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/adservice-warmup
policy drop-all-capabilities -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob112.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob113.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob114.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/postgres16-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres16-backup
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - copy
            - ceph:postgres16
            - cloudflare:kantai-postgres16
            env:
            - name: RCLONE_VERBOSE
              value: "1"
            - name: RCLONE_CONFIG_CLOUDFLARE_TYPE
              value: s3
            - name: RCLONE_CONFIG_CLOUDFLARE_PROVIDER
              value: Cloudflare
            - name: RCLONE_CONFIG_CLOUDFLARE_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: ACCESS_KEY_ID
                  name: postgres16-backup-secret
            - name: RCLONE_CONFIG_CLOUDFLARE_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: SECRET_ACCESS_KEY
                  name: postgres16-backup-secret
            - name: RCLONE_CONFIG_CLOUDFLARE_REGION
              value: auto
            - name: RCLONE_CONFIG_CLOUDFLARE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: ENDPOINT
                  name: postgres16-backup-secret
            - name: RCLONE_CONFIG_CLOUDFLARE_ACL
              value: private
            - name: RCLONE_CONFIG_CLOUDFLARE_NO_CHECK_BUCKET
              value: "true"
            - name: RCLONE_CONFIG_CEPH_TYPE
              value: s3
            - name: RCLONE_CONFIG_CEPH_PROVIDER
              value: Ceph
            - name: RCLONE_CONFIG_CEPH_ENV_AUTH
              value: "false"
            - name: RCLONE_CONFIG_CEPH_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: postgres16-obc
            - name: RCLONE_CONFIG_CEPH_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: postgres16-obc
            - name: RCLONE_CONFIG_CEPH_ENDPOINT
              value: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc.cluster.local:80
            image: docker.io/rclone/rclone:1.69.1@sha256:600f51856285df1ae5d91c8bb2682cbbe31bf109ebeeef9ecead6ca8c0ff6138
            imagePullPolicy: IfNotPresent
            name: rclone
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              seccompProfile:
                type: RuntimeDefault
            workingDir: /data
          restartPolicy: OnFailure
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
  schedule: 0 2 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/postgres16-backup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/postgres16-backup
policy drop-cap-net-raw -> resource default/CronJob/postgres16-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/postgres16-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/postgres16-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/postgres16-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 9, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob115.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/smarttest-short-kantai1:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: smarttest-short-kantai1
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - image: ghcr.io/jfroy/smarttest:latest@sha256:4899ee625f7aeb5d80bce775e9ed4ea1b273744c64bb93fbd74ff8a0bbbeb7c6
            imagePullPolicy: IfNotPresent
            name: smarttest
            securityContext:
              privileged: true
              runAsUser: 0
            volumeMounts:
            - mountPath: /dev
              name: dev
          nodeSelector:
            kubernetes.io/hostname: kantai1
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /dev
              type: Directory
            name: dev
  schedule: 0 4 * * 6

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/smarttest-short-kantai1
policy drop-all-capabilities -> resource default/CronJob/smarttest-short-kantai1 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/smarttest-short-kantai1 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/smarttest-short-kantai1 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/smarttest-short-kantai1 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/smarttest-short-kantai1 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/smarttest-short-kantai1 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob115_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/smarttest-long-kantai1:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: smarttest-long-kantai1
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - args:
            - -test=long
            image: ghcr.io/jfroy/smarttest:latest@sha256:4899ee625f7aeb5d80bce775e9ed4ea1b273744c64bb93fbd74ff8a0bbbeb7c6
            imagePullPolicy: IfNotPresent
            name: smarttest
            securityContext:
              privileged: true
              runAsUser: 0
            volumeMounts:
            - mountPath: /dev
              name: dev
          nodeSelector:
            kubernetes.io/hostname: kantai1
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /dev
              type: Directory
            name: dev
  schedule: 0 0 1 1,4,7,10 *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/smarttest-long-kantai1
policy drop-all-capabilities -> resource default/CronJob/smarttest-long-kantai1 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/smarttest-long-kantai1 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/smarttest-long-kantai1 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/smarttest-long-kantai1 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/smarttest-long-kantai1 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/smarttest-long-kantai1 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob115_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/zfs-scrub-kantai1:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: zfs-scrub-kantai1
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - chroot /host /usr/local/sbin/zpool scrub -w reservoir
            image: alpine:3.21.3
            imagePullPolicy: IfNotPresent
            name: scrub
            securityContext:
              privileged: true
              runAsUser: 0
            volumeMounts:
            - mountPath: /host
              name: host
          nodeSelector:
            kubernetes.io/hostname: kantai1
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /
              type: Directory
            name: host
  schedule: 0 2 1 * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/zfs-scrub-kantai1
policy drop-all-capabilities -> resource default/CronJob/zfs-scrub-kantai1 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/zfs-scrub-kantai1 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/zfs-scrub-kantai1 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/zfs-scrub-kantai1 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/zfs-scrub-kantai1 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/zfs-scrub-kantai1 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob116.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/smarttest-short-kantai3:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: smarttest-short-kantai3
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - image: ghcr.io/jfroy/smarttest:latest@sha256:4899ee625f7aeb5d80bce775e9ed4ea1b273744c64bb93fbd74ff8a0bbbeb7c6
            imagePullPolicy: IfNotPresent
            name: smarttest
            securityContext:
              privileged: true
              runAsUser: 0
            volumeMounts:
            - mountPath: /dev
              name: dev
          nodeSelector:
            kubernetes.io/hostname: kantai3
          restartPolicy: OnFailure
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - hostPath:
              path: /dev
              type: Directory
            name: dev
  schedule: 0 4 * * 6

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/smarttest-short-kantai3
policy drop-all-capabilities -> resource default/CronJob/smarttest-short-kantai3 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/smarttest-short-kantai3 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/smarttest-short-kantai3 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/smarttest-short-kantai3 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/smarttest-short-kantai3 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/smarttest-short-kantai3 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob116_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/smarttest-long-kantai3:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: smarttest-long-kantai3
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - args:
            - -test=long
            image: ghcr.io/jfroy/smarttest:latest@sha256:4899ee625f7aeb5d80bce775e9ed4ea1b273744c64bb93fbd74ff8a0bbbeb7c6
            imagePullPolicy: IfNotPresent
            name: smarttest
            securityContext:
              privileged: true
              runAsUser: 0
            volumeMounts:
            - mountPath: /dev
              name: dev
          nodeSelector:
            kubernetes.io/hostname: kantai3
          restartPolicy: OnFailure
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - hostPath:
              path: /dev
              type: Directory
            name: dev
  schedule: 0 0 1 1,4,7,10 *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/smarttest-long-kantai3
policy drop-all-capabilities -> resource default/CronJob/smarttest-long-kantai3 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/smarttest-long-kantai3 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/smarttest-long-kantai3 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/smarttest-long-kantai3 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/smarttest-long-kantai3 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/smarttest-long-kantai3 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob116_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/zfs-scrub-kantai3:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: zfs-scrub-kantai3
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - chroot /host /usr/local/sbin/zpool scrub -w bouteille citerne
            image: alpine:3.21.3
            imagePullPolicy: IfNotPresent
            name: scrub
            securityContext:
              privileged: true
              runAsUser: 0
            volumeMounts:
            - mountPath: /host
              name: host
          nodeSelector:
            kubernetes.io/hostname: kantai3
          restartPolicy: OnFailure
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - hostPath:
              path: /
              type: Directory
            name: host
  schedule: 0 2 1 * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/zfs-scrub-kantai3
policy drop-all-capabilities -> resource default/CronJob/zfs-scrub-kantai3 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/zfs-scrub-kantai3 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/zfs-scrub-kantai3 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/zfs-scrub-kantai3 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/zfs-scrub-kantai3 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/zfs-scrub-kantai3 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob117.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/talos-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: talos-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
          containers:
          - command:
            - /talos-backup
            env:
            - name: AWS_REGION
              value: WNAM
            - name: BUCKET
              value: kantai-talos-backup
            - name: CLUSTER_NAME
              value: kantai
            envFrom:
            - secretRef:
                name: talos-backup-secret
            image: ghcr.io/siderolabs/talos-backup:v0.1.0-beta.3
            imagePullPolicy: IfNotPresent
            name: talos-backup
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsGroup: 1000
              runAsNonRoot: true
              runAsUser: 1000
            volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/run/secrets/talos.dev
              name: talos-secrets
            workingDir: /tmp
          restartPolicy: OnFailure
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - emptyDir: {}
            name: tmp
          - name: talos-secrets
            secret:
              secretName: talos-backup-serviceaccount
  schedule: 0 1 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/talos-backup
policy drop-cap-net-raw -> resource default/CronJob/talos-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/talos-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/talos-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/talos-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/talos-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: cronjob118.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vault/CronJob/vault-bdrtoken-gen:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: vault-bdrtoken-gen
  namespace: vault
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - --kubernetes-auth-role=vault-bdrtoken-gen
            - --batch-token-role=failover-handler
            - --bucket-url=gs://vault-bdrtoken
            env:
            - name: VAULT_ADDR
              value: ${VAULT_ADDR}
            - name: TZ
              value: Asia/Tokyo
            - name: VAULT_CACERT
              value: /vault/userconfig/vault-tls/ca.crt
            - name: VAULT_CLIENT_CERT
              value: /vault/userconfig/vault-tls/tls.crt
            - name: VAULT_CLIENT_KEY
              value: /vault/userconfig/vault-tls/tls.key
            image: knanao/vault-bdrtoken-gen:v0.1.0
            imagePullPolicy: IfNotPresent
            name: vault-bdrtoken-gen
            volumeMounts:
            - mountPath: /vault/userconfig/vault-tls
              name: vault-tls
              readOnly: true
          restartPolicy: OnFailure
          serviceAccountName: vault-bdrtoken-gen
          volumes:
          - name: vault-tls
            secret:
              defaultMode: 420
              secretName: ${VAULT_TLS_SECRET_NAME}
  schedule: 0 1-23/7 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource vault/CronJob/vault-bdrtoken-gen

skipped mutate policy add-safe-to-evict -> resource vault/CronJob/vault-bdrtoken-gen
policy drop-all-capabilities -> resource vault/CronJob/vault-bdrtoken-gen failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource vault/CronJob/vault-bdrtoken-gen failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource vault/CronJob/vault-bdrtoken-gen failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource vault/CronJob/vault-bdrtoken-gen failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource vault/CronJob/vault-bdrtoken-gen failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource vault/CronJob/vault-bdrtoken-gen failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob118_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vault/ServiceAccount/vault-bdrtoken-gen:
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: vault-bdrtoken-gen@${PROJECT_ID}.iam.gserviceaccount.com
  name: vault-bdrtoken-gen
  namespace: vault

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cron-job12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mongodb/CronJob/mongodb-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup
  namespace: mongodb
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |
              set -e

              echo "getting secrets from admin user..."
              CREDS_JSON=$(kubectl get secret $REPLICA_SET_NAME-$ADMIN_USER-admin --namespace mongodb -o json)

              echo "collect username..."
              USERNAME=$(echo $CREDS_JSON | grep -o '"username": "[^"]*' | grep -o '[^"]*$' | base64 --decode)

              echo "collect password..."
              PASSWORD=$(echo $CREDS_JSON | grep -o '"password": "[^"]*' | grep -o '[^"]*$' | base64 --decode)

              echo "collect replica set..."
              CONN_REPLICA_SET=$(echo $CREDS_JSON | grep -o '"connectionString.standardSrv": "[^"]*' | grep -o '[^"]*$' | base64 --decode)

              echo "getting first pod..."
              FIRST_POD=$(kubectl get pods -l "app=$REPLICA_SET_NAME-svc" -n mongodb -o jsonpath='{.items[*].metadata.name}' | awk '{print $1}')
              if [ -z "$FIRST_POD" ]; then
                echo "Error: No pod found with label app=$REPLICA_SET_NAME-svc"
                exit 1
              fi

              echo "getting host..."
              TARGET_TYPE="HIDDEN"
              TARGET_HOST=$(kubectl exec -n mongodb $FIRST_POD -c mongodb-enterprise-database -- bash -c "$MONGOSH_PATH --tls --tlsCAFile $SSL_PATH --eval 'rs.config().members.filter(member => member.tags.nodeType == \"$TARGET_TYPE\")[0].name' ${CONN_REPLICA_SET}" | grep "$REPLICA_SET_NAME-svc")
              if [ -z "$TARGET_HOST" ]; then
                echo "Error: Failed to get target host"
                exit 1
              fi

              TARGET_POD=$(echo $TARGET_HOST |awk -F'.' '{print $1}')
              if [ -z "$TARGET_POD" ]; then
                echo "Error: Failed to extract target pod name"
                exit 1
              fi

              CONN_HOST="mongodb://$USERNAME:$PASSWORD@$TARGET_HOST/admin?ssl=true"

              unlock_db() {
                echo "Unlocking the database..."
                kubectl exec -it -n mongodb $TARGET_POD -c mongodb-enterprise-database -- bash -c "$MONGOSH_PATH --tls --tlsCAFile $SSL_PATH --eval 'db.fsyncUnlock()' ${CONN_HOST}"
              }

              trap unlock_db EXIT

              echo "Locking the database..."
              kubectl exec -it -n mongodb $TARGET_POD -c mongodb-enterprise-database -- bash -c "$MONGOSH_PATH --tls --tlsCAFile $SSL_PATH --eval 'db.fsyncLock()' ${CONN_HOST}"

              echo "Creating snapshot..."

              PVC_NAME="data-$TARGET_POD"
              TIMESTAMP=$(date +%!Y(MISSING)%!m(MISSING)%!d(MISSING)%!H(MISSING)%!M(MISSING)%!S(MISSING))
              SNAPSHOT_NAME="mongodb-data-snapshot-$TIMESTAMP"

              kubectl apply -f - <<EOF
              apiVersion: snapshot.storage.k8s.io/v1
              kind: VolumeSnapshot
              metadata:
                name: $SNAPSHOT_NAME
                namespace: mongodb
              spec:
                volumeSnapshotClassName: csi-hostpath-snapclass
                source:
                  persistentVolumeClaimName: $PVC_NAME
              EOF

              echo "Waiting for snapshot to be ready..."
              for i in {1..30}; do
                SNAPSHOT_STATUS=$(kubectl get volumesnapshot $SNAPSHOT_NAME -n mongodb -o jsonpath='{.status.readyToUse}')
                if [ "$SNAPSHOT_STATUS" == "true" ]; then
                  echo "Snapshot created and ready to use."
                  break
                fi
                echo "Snapshot not ready yet. Checking again in 10 seconds..."
                sleep 10
              done

              if [ "$SNAPSHOT_STATUS" != "true" ]; then
                echo "Snapshot creation failed or timed out."
                exit 1
              fi

              echo "Backup process completed successfully."
            env:
            - name: MONGOSH_PATH
              value: /var/lib/mongodb-mms-automation/mongosh-linux-x86_64-2.2.4/bin/mongosh
            - name: SSL_PATH
              value: /mongodb-automation/tls/ca/ca-pem
            - name: REPLICA_SET_NAME
              value: rs-0
            - name: ADMIN_USER
              value: admin
            image: bitnami/kubectl:latest
            name: mongodb-backup
          restartPolicy: OnFailure
  schedule: 0 2 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource mongodb/CronJob/mongodb-backup

skipped mutate policy add-safe-to-evict -> resource mongodb/CronJob/mongodb-backup
policy disallow-latest-tag -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource mongodb/CronJob/mongodb-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob120.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob122.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/mongodb-backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup-cronjob
  namespace: default
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - mongodump --uri "mongodb://test1:${MONGO_PASSWORD}@mongo-0.mongo.default.svc.cluster.local:27017,mongo-1.mongo.default.svc.cluster.local:27017,mongo-2.mongo.default.svc.cluster.local:27017/?replicaSet=rs0&readPreference=secondaryPreferred&authSource=admin&ssl=false"
              -o /usr/share/mongodump/$(date +"%!d(MISSING)%!m(MISSING)%!Y(MISSING)-%!H(MISSING)%!M(MISSING)%!S(MISSING)")
            command:
            - /bin/sh
            - -c
            env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mongodb-secret
            image: mongo
            name: mongodb
            volumeMounts:
            - mountPath: /usr/share/mongodump/
              name: mongodump
          restartPolicy: Never
          volumes:
          - name: mongodump
            persistentVolumeClaim:
              claimName: mongodump
      ttlSecondsAfterFinished: 60
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/mongodb-backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/mongodb-backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob123.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/greeting:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: greeting
  namespace: default
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: argocd-cronjob-example
        spec:
          containers:
          - args:
            - This is template.
            command:
            - echo
            image: alpine:latest
            name: main
          restartPolicy: Never
  schedule: ""
  startingDeadlineSeconds: 200
  successfulJobsHistoryLimit: 3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/greeting

skipped mutate policy add-safe-to-evict -> resource default/CronJob/greeting
policy disallow-latest-tag -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/greeting failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob126.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/talos-s3-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: talos-s3-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - /talos-backup
            envFrom:
            - secretRef:
                name: talos-s3-secret
            image: ghcr.io/siderolabs/talos-backup:v0.1.0-alpha.0-4-g81092b2
            imagePullPolicy: Always
            name: talos-backup
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsGroup: 1000
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/run/secrets/talos.dev
              name: talos-secrets
            workingDir: /tmp
          restartPolicy: OnFailure
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - emptyDir: {}
            name: tmp
          - name: talos-secrets
            secret:
              secretName: talos-s3-backup
  schedule: 10 0/6 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/talos-s3-backup
policy drop-cap-net-raw -> resource default/CronJob/talos-s3-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/talos-s3-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/talos-s3-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/talos-s3-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/talos-s3-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: cronjob127.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes Cluster
            image: docker.io/busybox
            name: hello
          imagePullSecrets:
          - name: regcred
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob128.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob129.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cron-jobs/CronJob/faker-etl:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: faker-etl
  namespace: cron-jobs
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: 192.168.5.100/faker-etl:0.0.1
            name: faker-etl
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
  schedule: '*/30 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cron-jobs/CronJob/faker-etl

skipped mutate policy add-safe-to-evict -> resource cron-jobs/CronJob/faker-etl
policy drop-cap-net-raw -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource cron-jobs/CronJob/faker-etl failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sleepy:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
  namespace: default
spec:
  jobTemplate:
    spec:
      activeDeadlineSeconds: 10
      template:
        spec:
          containers:
          - args:
            - "30"
            command:
            - /bin/sleep
            image: busybox
            name: sleepy
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy
policy disallow-latest-tag -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob130.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-ecr-token-updater/CronJob/ecr-registry-helper:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-registry-helper
  namespace: k8s-ecr-token-updater
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - "ECR_TOKEN=\"$(aws ecr get-login-password --region ${AWS_REGION})\"\n#
              除外するnamespaceリスト\nEXCLUDE_NAMESPACES=\"default tigera-operator tidb-admin
              reloader observation monitoring longhorn-system kube-system kube-public
              kube-node-lease k8s-ecr-token-updater k8s-dashboard external-secrets
              calico-system calico-apiserver\"\n\necho \"Starting ECR credential update
              for all namespaces...\"\nfor NAMESPACE_NAME in $(kubectl get namespaces
              -o jsonpath='{.items[*].metadata.name}')\ndo\n  # 除外リストにあるnamespaceはスキップ\n
              \ if echo \"$EXCLUDE_NAMESPACES\" | grep -qw \"$NAMESPACE_NAME\"; then\n
              \   echo \"Skipping system namespace: $NAMESPACE_NAME\"\n    continue\n
              \ fi\n  \n  echo \"Updating ECR credentials for namespace: $NAMESPACE_NAME\"\n
              \ kubectl delete secret --ignore-not-found $DOCKER_SECRET_NAME -n $NAMESPACE_NAME\n
              \ kubectl create secret docker-registry $DOCKER_SECRET_NAME --docker-server=https://${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
              --docker-username=AWS --docker-password=${ECR_TOKEN} --namespace=$NAMESPACE_NAME\ndone\necho
              \"Secret was successfully updated for all namespaces at $(date)\""
            envFrom:
            - secretRef:
                name: aws-credentials
            - configMapRef:
                name: ecr-registry-helper-cm
            image: omarxs/awskctl:v1.0
            imagePullPolicy: IfNotPresent
            name: ecr-registry-helper
          restartPolicy: Never
          serviceAccountName: sa-default
  schedule: 0 */10 * * *
  successfulJobsHistoryLimit: 2
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper

skipped mutate policy add-safe-to-evict -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper
policy drop-all-capabilities -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource k8s-ecr-token-updater/CronJob/ecr-registry-helper failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob133.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-ns/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: k8s-ns
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource k8s-ns/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource k8s-ns/CronJob/hello
policy drop-all-capabilities -> resource k8s-ns/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource k8s-ns/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource k8s-ns/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource k8s-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource k8s-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource k8s-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob134.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/mycronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mycronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: mycronjob
        spec:
          containers:
          - command:
            - sh
            - -c
            - echo The app is running! && sleep 60 && echo Completed
            image: busybox
            name: main
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/mycronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/mycronjob
policy disallow-latest-tag -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob136.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sleepy:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - "5"
            command:
            - /bin/sleep
            image: busybox
            name: resting
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy
policy disallow-latest-tag -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob138.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-pw
            image: dpuertamartos/project_cronjob
            name: cronjob
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/cronjob

skipped mutate policy add-safe-to-evict -> resource project/CronJob/cronjob
policy disallow-latest-tag -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob140.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sleepy:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - "5"
            command:
            - /bin/sleep
            image: busybox
            name: resting
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy
policy disallow-latest-tag -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob141.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/report:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: report
  name: report
  namespace: default
spec:
  jobTemplate:
    metadata:
      labels:
        app: report
      name: report
    spec:
      template:
        metadata:
          labels:
            app: report
          name: report
        spec:
          containers:
          - env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  key: url
                  name: lego4j-credentials
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: lego4j-credentials
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  key: pass
                  name: lego4j-credentials
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: user
                  name: s3-credentials
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: pass
                  name: s3-credentials
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: s3-credentials
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  key: region
                  name: s3-credentials
            image: indyteo/lego-inventory-report
            imagePullPolicy: IfNotPresent
            name: report
          restartPolicy: Never
  schedule: '@daily'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/report

skipped mutate policy add-safe-to-evict -> resource default/CronJob/report
policy disallow-latest-tag -> resource default/CronJob/report failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/report failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/report failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/report failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/report failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/report failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/report failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob143.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to station/CronJob/ecr-login-refresh:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-login-refresh
  namespace: station
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - cp /home/user/ecr-login-refresh-script.sh /tmp && chmod +x /tmp/ecr-login-refresh-script.sh
              && sh /tmp/ecr-login-refresh-script.sh
            command:
            - /bin/sh
            - -c
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: aws-credentials
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: aws-credentials
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  key: AWS_REGION
                  name: aws-credentials
            - name: AWS_ACCOUNT
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCOUNT
                  name: aws-credentials
            image: gtsopour/awscli-kubectl
            name: ecr-login-refresh
            volumeMounts:
            - mountPath: /home/user
              name: script-volume
          restartPolicy: OnFailure
          volumes:
          - configMap:
              name: ecr-login-script
            name: script-volume
  schedule: 0 */6 * * *
  successfulJobsHistoryLimit: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource station/CronJob/ecr-login-refresh

skipped mutate policy add-safe-to-evict -> resource station/CronJob/ecr-login-refresh
policy disallow-latest-tag -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource station/CronJob/ecr-login-refresh failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob145.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/CronJob/terminate-ec2:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: terminate-ec2
  namespace: argocd
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: AWS_ACCESS_KEY_ID
              value: ""
            - name: AWS_SECRET_ACCESS_KEY
              value: ""
            - name: AWS_DEFAULT_REGION
              value: eu-west-2
            image: saluteslim/bash:1.2
            name: terminate-ec2-instances
          restartPolicy: OnFailure
          serviceAccountName: ec2-terminator-sa
  schedule: '*/4 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argocd/CronJob/terminate-ec2

skipped mutate policy add-safe-to-evict -> resource argocd/CronJob/terminate-ec2
policy drop-all-capabilities -> resource argocd/CronJob/terminate-ec2 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource argocd/CronJob/terminate-ec2 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argocd/CronJob/terminate-ec2 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource argocd/CronJob/terminate-ec2 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource argocd/CronJob/terminate-ec2 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource argocd/CronJob/terminate-ec2 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob145_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/ServiceAccount/ec2-terminator-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ec2-terminator-sa
  namespace: argocd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob147.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/date-printer:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: date-printer
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date
            image: busybox
            name: date-printer
            resources:
              requests:
                cpu: "1"
                memory: 1Gi
          restartPolicy: OnFailure
  schedule: '*/5 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/date-printer

skipped mutate policy add-safe-to-evict -> resource default/CronJob/date-printer
policy disallow-latest-tag -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/date-printer failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob150.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/alpine-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: alpine-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - 'echo ''Hello from Alpine! The time is: $(date)'''
            image: alpine:latest
            name: alpine
          restartPolicy: OnFailure
  schedule: '*/1 * 1 * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/alpine-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/alpine-cronjob
policy disallow-latest-tag -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/alpine-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob151.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/CronJob/sweeper:
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: null
  name: sweeper
  namespace: kube-system
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: sweeper
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                    - default
                weight: 1
          containers:
          - args:
            - sweeper
            envFrom:
            - configMapRef:
                name: sweeper
            image: IMAGE_NAME
            imagePullPolicy: Always
            name: sweeper
            resources: {}
            securityContext:
              readOnlyRootFilesystem: true
          restartPolicy: Never
          serviceAccountName: sweeper
  schedule: '*/60 * * * *'
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/CronJob/sweeper

skipped mutate policy add-safe-to-evict -> resource kube-system/CronJob/sweeper
policy disallow-latest-tag -> resource kube-system/CronJob/sweeper failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource kube-system/CronJob/sweeper failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/CronJob/sweeper failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/CronJob/sweeper failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource kube-system/CronJob/sweeper failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource kube-system/CronJob/sweeper failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob154.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/oom-sample:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    m3.com/use-broom: "true"
  name: oom-sample
  namespace: default
spec:
  jobTemplate:
    spec:
      activeDeadlineSeconds: 60
      backoffLimit: 1
      template:
        spec:
          containers:
          - args:
            - |
              echo PID=$$
              for i in {0..999}
              do
                eval a$i'=$(head --bytes 5000000 /dev/zero | cat -v)'
                echo $((i++));
              done
            command:
            - /bin/bash
            - -c
            image: ubuntu:latest
            name: oom-container
            resources:
              limits:
                memory: 100Mi
              requests:
                memory: 50Mi
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/oom-sample

skipped mutate policy add-safe-to-evict -> resource default/CronJob/oom-sample
policy disallow-latest-tag -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/requests/cpu/

policy require-ro-rootfs -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/oom-sample failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: CronJob155.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/random-generator:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: random-generator
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - java
            - RandomRunner
            - /numbers.txt
            - "10000"
            image: k8spatterns/random-generator:1.0
            name: random-generator
          restartPolicy: OnFailure
  schedule: '*/10 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/random-generator

skipped mutate policy add-safe-to-evict -> resource default/CronJob/random-generator
policy drop-all-capabilities -> resource default/CronJob/random-generator failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/random-generator failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/random-generator failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/random-generator failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/random-generator failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/random-generator failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob157.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/mongodb-backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup-cronjob
  namespace: default
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - mongodump --uri "mongodb://test1:${MONGO_PASSWORD}@mongo-0.mongo.default.svc.cluster.local:27017,mongo-1.mongo.default.svc.cluster.local:27017,mongo-2.mongo.default.svc.cluster.local:27017/?replicaSet=rs0&readPreference=secondaryPreferred&authSource=admin&ssl=false"
              -o /usr/share/mongodump/$(date +"%!d(MISSING)%!m(MISSING)%!Y(MISSING)-%!H(MISSING)%!M(MISSING)%!S(MISSING)")
            command:
            - /bin/sh
            - -c
            env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mongodb-secret
            image: mongo
            name: mongodb
            volumeMounts:
            - mountPath: /usr/share/mongodump/
              name: mongodump
          restartPolicy: Never
          volumes:
          - name: mongodump
            persistentVolumeClaim:
              claimName: mongodump
      ttlSecondsAfterFinished: 60
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/mongodb-backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/mongodb-backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/mongodb-backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob158.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/magic-spreadsheet-notifier:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: magic-spreadsheet-notifier
  namespace: default
spec:
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      template:
        spec:
          containers:
          - env:
            - name: FIREBASE_JSON
              valueFrom:
                secretKeyRef:
                  key: firebase-json
                  name: magic-spreadsheet-notifier-secret
            - name: FIREBASE_PROJECT_ID
              valueFrom:
                configMapKeyRef:
                  key: FIREBASE_PROJECT_ID
                  name: magic-spreadsheet-notifier-conf
            - name: MAGIC_SPREADSHEET_WAIT_TIME
              valueFrom:
                configMapKeyRef:
                  key: MAGIC_SPREADSHEET_WAIT_TIME
                  name: magic-spreadsheet-notifier-conf
            - name: SLACK_API_TOKEN
              valueFrom:
                secretKeyRef:
                  key: slack-api-token
                  name: magic-spreadsheet-notifier-secret
            - name: FIRESTORE_COLLECTION_PATH
              valueFrom:
                configMapKeyRef:
                  key: FIRESTORE_COLLECTION_PATH
                  name: magic-spreadsheet-notifier-conf
            - name: MAGIC_SPREADSHEET_URL
              valueFrom:
                configMapKeyRef:
                  key: MAGIC_SPREADSHEET_URL
                  name: magic-spreadsheet-notifier-conf
            image: magic-spreadsheet-notifier
            name: magic-spreadsheet-notifier
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 259200
  schedule: 16 18 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier

skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier
policy disallow-latest-tag -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob160.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob161.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: backup
            imagePullPolicy: IfNotPresent
            name: backup
            volumeMounts:
            - mountPath: app/folder/
              name: data-volume
            - mountPath: app/credentials/
              name: credentials
          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-pvc
          - name: credentials
            secret:
              secretName: google-token
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: CronJob162.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: my-backup-service:latest
            name: backup-container
          restartPolicy: OnFailure
  schedule: 0 */12 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: CronJob163.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: my-backup-service:latest
            name: backup-container
          restartPolicy: OnFailure
  schedule: 0 */12 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: CronJob164.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/gdrive-backup-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gdrive-backup-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: gdrive-upload-backup
            imagePullPolicy: IfNotPresent
            name: gdrive-backup
            volumeMounts:
            - mountPath: /app
              name: backup-data
            - mountPath: /app/Credentials
              name: credentials
          restartPolicy: OnFailure
          volumes:
          - name: backup-data
            persistentVolumeClaim:
              claimName: backup-pvc
          - name: credentials
            secret:
              secretName: google-token
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/gdrive-backup-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/gdrive-backup-job
policy disallow-latest-tag -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/gdrive-backup-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob165.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vault/CronJob/vault-gcp-sakey-gen:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: vault-gcp-sakey-gen
  namespace: vault
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - --kubernetes-auth-role=vault-gcp-sakey-gen
            - --bucket=vault-gcp-sakey
            env:
            - name: VAULT_ADDR
              value: https://vault:8200
            - name: TZ
              value: Asia/Tokyo
            - name: VAULT_CACERT
              value: /vault/userconfig/vault-tls/ca.crt
            - name: VAULT_CLIENT_CERT
              value: /vault/userconfig/vault-tls/tls.crt
            - name: VAULT_CLIENT_KEY
              value: /vault/userconfig/vault-tls/tls.key
            image: knanao/vault-gcp-sakey-gen@v0.1.0
            imagePullPolicy: IfNotPresent
            name: vault-gcp-sakey-gen
            volumeMounts:
            - mountPath: /vault/userconfig/vault-tls
              name: vault-tls
              readOnly: true
          restartPolicy: OnFailure
          serviceAccountName: vault-gcp-sakey-gen
          volumes:
          - name: vault-tls
            secret:
              defaultMode: 420
              secretName: vault-tls
  schedule: 0 9 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource vault/CronJob/vault-gcp-sakey-gen

skipped mutate policy add-safe-to-evict -> resource vault/CronJob/vault-gcp-sakey-gen
policy disallow-latest-tag -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource vault/CronJob/vault-gcp-sakey-gen failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob165_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vault/ServiceAccount/vault-gcp-sakey-gen:
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: vault-gcp-sakey-gen@{PROJECT_ID}.iam.gserviceaccount.com
  name: vault-gcp-sakey-gen
  namespace: vault

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob166.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to learning/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: learning
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource learning/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource learning/CronJob/hello
policy drop-all-capabilities -> resource learning/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource learning/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource learning/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource learning/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource learning/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource learning/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronJob168.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-fileserver:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-fileserver
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - env:
            - name: ONEDRIVE_UPLOADONLY
              value: "1"
            - name: ONEDRIVE_NOREMOTEDELETE
              value: "1"
            - name: ONEDRIVE_UID
              value: "1100"
            - name: ONEDRIVE_GID
              value: "1100"
            image: driveone/onedrive:fedora
            name: upload
            volumeMounts:
            - mountPath: /cache
              name: cache-volume
            - mountPath: /onedrive/data
              name: cache-volume
            - mountPath: /onedrive/conf
              name: config
          initContainers:
          - args:
            - -c
            - mkdir /cache/data && mkdir /cache/backup
            command:
            - /bin/sh
            image: fedora
            name: create directories
            volumeMounts:
            - mountPath: /cache
              name: cache-volume
          - args:
            - -c
            - cp -r /data/backup /cache/data/
            command:
            - /bin/sh
            image: fedora
            name: copy data
            volumeMounts:
            - mountPath: /data
              name: data
              readOnly: true
            - mountPath: /cache
              name: cache-volume
          - args:
            - -c
            - tar -cvzf /cache/backup/backup-$(date '+%!F(MISSING)_%!H(MISSING):%!M(MISSING):%!S(MISSING)').tar.gz /cache/data
            command:
            - /bin/sh
            image: fedora
            name: archive
            volumeMounts:
            - mountPath: /cache
              name: cache-volume
          - args:
            - -c
            - echo ${PASS} | gpg --batch --yes --passphrase-fd 0 -c /cache/backup/backup-*.tar.gz
              && rm -f /cache/backup/backup-*.tar.gz
            command:
            - /bin/sh
            env:
            - name: PASS
              valueFrom:
                secretKeyRef:
                  key: encrypt-key
                  name: onedrive-backup-encryption-keys
            image: fedora
            name: encrypt archive
            volumeMounts:
            - mountPath: /cache
              name: cache-volume
          restartPolicy: Never
          volumes:
          - name: data
            nfs:
              path: /var/storage
              readOnly: true
              server: nfs.007337.xyz
          - name: config
            nfs:
              path: /var/storage/onedrive-backup/conf
              server: nfs.007337.xyz
          - emptyDir:
              sizeLimit: 10Gi
            name: cache-volume
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-fileserver
policy disallow-latest-tag -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-fileserver failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cronjob169.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/magic-spreadsheet-notifier:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: magic-spreadsheet-notifier
  namespace: default
spec:
  schedule: 0 0 31 2 *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier

skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier
policy disallow-container-sock-mounts -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-cronjob-validate-docker-sock-mount failed at path /spec/jobTemplate/
2 - autogen-cronjob-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-cronjob-validate-containerd-sock-mount failed at path /spec/jobTemplate/
3 - autogen-cronjob-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-cronjob-validate-crio-sock-mount failed at path /spec/jobTemplate/
4 - autogen-cronjob-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-cronjob-validate-dockerd-sock-mount failed at path /spec/jobTemplate/

policy require-labels -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/

policy require-requests-limits -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/

policy require-ro-rootfs -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/

policy restrict-image-registries -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/


pass: 0, fail: 8, warn: 0, error: 0, skip: 3 

##### FILE: cronjob171.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - python
            - backup_script.py
            image: hemanthh/backup-service:latest
            name: backup-container
            volumeMounts:
            - mountPath: /data
              name: data-volume
          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-pvc
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: CronJob173.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/s3-download-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: s3-download-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - args:
            - aws s3 sync s3://s3bucket-temp-kodecraft/test_folder/ /hostpath/data
              --region ap-southeast-1; echo "Download complete"
            command:
            - sh
            - -c
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: aws-credentials
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: aws-credentials
            image: amazon/aws-cli:latest
            name: s3-downloader
            volumeMounts:
            - mountPath: /hostpath/data
              name: hostpath
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /hostpath/data
              type: Directory
            name: hostpath
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/s3-download-cronjob
policy disallow-latest-tag -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/s3-download-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cronjob174.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/mi-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mi-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: imagen_practica_sie_kubernetes
            imagePullPolicy: Never
            name: python-task-container
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/mi-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/mi-cronjob
policy disallow-latest-tag -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/mi-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob175.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-cron
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - echo
            - Hello from the CronJob
            image: busybox
            name: busybox
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron
policy disallow-latest-tag -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronJob176.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'
  startingDeadlineSeconds: 15
  successfulJobsHistoryLimit: 3
  suspend: false
  timeZone: Asia/Kuala_Lumpur

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob177.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to services/CronJob/cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/name: cron-job
  name: cron-job
  namespace: services
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: cron-job
        spec:
          containers:
          - args:
            - "180"
            command:
            - /bin/sleep
            image: busybox
            imagePullPolicy: IfNotPresent
            name: cron-job
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource services/CronJob/cron-job

skipped mutate policy add-safe-to-evict -> resource services/CronJob/cron-job
policy disallow-latest-tag -> resource services/CronJob/cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource services/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource services/CronJob/cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource services/CronJob/cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource services/CronJob/cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource services/CronJob/cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob178.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/restarter:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/name: restarter
  name: restarter
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: restarter
        spec:
          containers:
          - args:
            - delete
            - pod
            - --all
            - --namespace
            - snyk-monitor
            image: docker.io/bitnami/kubectl:1.22.7
            imagePullPolicy: IfNotPresent
            name: restarter
          restartPolicy: OnFailure
          serviceAccountName: restarter
  schedule: 0 10 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/restarter

skipped mutate policy add-safe-to-evict -> resource default/CronJob/restarter
policy drop-all-capabilities -> resource default/CronJob/restarter failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/restarter failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/CronJob/restarter failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/restarter failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/restarter failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob179.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-cron
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - echo
            - Hello from the CronJob
            image: busybox
            name: busybox
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron
policy disallow-latest-tag -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob-demo:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-demo
  namespace: default
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 3
      parallelism: 1
      template:
        metadata:
          name: job-demo
        spec:
          containers:
          - image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-succeeded
            name: job-demo
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 10
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-demo

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-demo
policy drop-all-capabilities -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob180.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/my-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: backup
            name: backup-container
          restartPolicy: OnFailure
  schedule: '*/5 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-cronjob
policy disallow-latest-tag -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob181.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to postgres-backup/CronJob/postgres-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: postgres-backup
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: DB_HOST
              value: db-postgresql
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postgres.db-postgresql.credentials.postgresql.acid.zalan.do
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres.db-postgresql.credentials.postgresql.acid.zalan.do
            image: 10.0.2.4:5000/postgres-backup:v1.1
            name: postgres-backup
            volumeMounts:
            - mountPath: /backups
              name: backup-volume
          restartPolicy: OnFailure
          volumes:
          - name: backup-volume
            persistentVolumeClaim:
              claimName: worker-01-postgresql-backup
  schedule: 0 1 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource postgres-backup/CronJob/postgres-backup

skipped mutate policy add-safe-to-evict -> resource postgres-backup/CronJob/postgres-backup
policy drop-all-capabilities -> resource postgres-backup/CronJob/postgres-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource postgres-backup/CronJob/postgres-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource postgres-backup/CronJob/postgres-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource postgres-backup/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource postgres-backup/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource postgres-backup/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: CronJob182.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cluster-security/CronJob/kube-hunter:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kube-hunter
  namespace: cluster-security
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: kube-hunter
        spec:
          containers:
          - args:
            - --pod
            command:
            - kube-hunter
            image: aquasec/kube-hunter:latest
            name: kube-hunter
          restartPolicy: Never
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cluster-security/CronJob/kube-hunter

skipped mutate policy add-safe-to-evict -> resource cluster-security/CronJob/kube-hunter
policy disallow-latest-tag -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cluster-security/CronJob/kube-hunter failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: CronJob183.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: rahulrrao/file-uploader:latest
            imagePullPolicy: Always
            name: backup-container
            volumeMounts:
            - mountPath: /app/backup
              name: data-volume
              readOnly: false
          restartPolicy: Never
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: backup-pvc
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob184.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: backup
            imagePullPolicy: IfNotPresent
            name: backup
            volumeMounts:
            - mountPath: app/folder/
              name: data-volume
            - mountPath: app/credentials/
              name: credentials
          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-pvc
          - name: credentials
            secret:
              secretName: google-token
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob185.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/ccminiproject:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ccminiproject
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: farhaane4/project
            imagePullPolicy: IfNotPresent
            name: ccminiproject
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/ccminiproject

skipped mutate policy add-safe-to-evict -> resource default/CronJob/ccminiproject
policy disallow-latest-tag -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/ccminiproject failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob186.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob-exam:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-exam
  namespace: default
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            name: hello
          restartPolicy: Never
  schedule: '* * * * *'
  startingDeadlineSeconds: 300

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-exam

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-exam
policy drop-all-capabilities -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob187.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/date:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: date
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - date
            image: ubuntu:22.04
            name: date
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/date

skipped mutate policy add-safe-to-evict -> resource default/CronJob/date
policy drop-all-capabilities -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/date failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob188.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/print-message-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: print-message-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - echo "This cronjob is running every minute"
            command:
            - /bin/sh
            - -c
            image: busybox:1.32.0
            name: print-message-container
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/print-message-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/print-message-cronjob
policy drop-all-capabilities -> resource default/CronJob/print-message-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/print-message-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/print-message-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/print-message-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/print-message-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/print-message-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob189.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/helloworld:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: helloworld
  namespace: default
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 10
  jobTemplate:
    metadata:
      labels:
        cronjob: helloworld
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            cronjob: helloworld
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster; sleep 10; date; random_number=$((RANDOM
              %! (MISSING)+ 1)); if [ $random_number -eq 3 ]; then exit 1; else exit 0; fi
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: helloworld
          restartPolicy: Never
  schedule: '*/2 * * * *'
  successfulJobsHistoryLimit: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/helloworld

skipped mutate policy add-safe-to-evict -> resource default/CronJob/helloworld
policy drop-all-capabilities -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/next-century:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: next-century
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: TZ
              value: America/Los_Angeles
            - name: SMTP_SERVER
              value: email-smtp.us-west-2.amazonaws.com
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: smtp
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: smtp
            - name: SMTP_PORT
              value: "587"
            envFrom:
            - secretRef:
                name: bill-generation-secrets
            image: ghcr.io/seaview-cottages/nextcentury-payhoa:main
            imagePullPolicy: Always
            name: generate-bill
            resources:
              limits:
                cpu: 500m
                memory: 256Mi
              requests:
                cpu: 500m
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsGroup: 65534
              runAsUser: 65534
          restartPolicy: OnFailure
  schedule: 0 10 2 * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/next-century

skipped mutate policy add-safe-to-evict -> resource default/CronJob/next-century
policy drop-all-capabilities -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy restrict-image-registries -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 9, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob191.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cronjob/CronJob/pingpong:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: pingpong
  name: pingpong
  namespace: cronjob
spec:
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: pingpong
        spec:
          containers:
          - command:
            - sh
            - -c
            - |
              echo [`date`] ping!
              sleep 10
              echo [`date`] pong!
            image: ubuntu:23.10
            name: pingpong
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'
  successfulJobsHistoryLimit: 5
  suspend: true
  timeZone: Asia/Tokyo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cronjob/CronJob/pingpong

skipped mutate policy add-safe-to-evict -> resource cronjob/CronJob/pingpong
policy drop-all-capabilities -> resource cronjob/CronJob/pingpong failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cronjob/CronJob/pingpong failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cronjob/CronJob/pingpong failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cronjob/CronJob/pingpong failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cronjob/CronJob/pingpong failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cronjob/CronJob/pingpong failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob192.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: backup
            imagePullPolicy: Never
            name: backup
            volumeMounts:
            - mountPath: app/folder/
              name: data-volume
            - mountPath: app/credentials/
              name: credentials
          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-pvc
          - name: credentials
            secret:
              secretName: google-token
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob193.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dash0-operator-jvm-spring-boot-test-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            prometheus.io/port: "1305"
            prometheus.io/scrape: "true"
        spec:
          containers:
          - env:
            - name: PORT
              value: "1305"
            - name: DASH0_DEBUG
              value: "true"
            - name: TRIGGER_SELF_AND_EXIT
              value: "true"
            image: dash0-operator-jvm-spring-boot-test-app:latest
            imagePullPolicy: Never
            name: dash0-operator-jvm-spring-boot-test-cronjob-app
            ports:
            - containerPort: 1305
            readinessProbe:
              httpGet:
                path: /ready
                port: 1305
              initialDelaySeconds: 1
              periodSeconds: 1
            resources:
              limits:
                cpu: 500m
                ephemeral-storage: 500Mi
                memory: 256Mi
              requests:
                cpu: 200m
                ephemeral-storage: 500Mi
                memory: 128Mi
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob
policy disallow-latest-tag -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-ro-rootfs -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/dash0-operator-jvm-spring-boot-test-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob194.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dash0-operator-nodejs-20-express-test-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dash0-operator-nodejs-20-express-test-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            prometheus.io/port: "1205"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/instance: express
            app.kubernetes.io/name: test-cronjob
            app.kubernetes.io/part-of: dash0-operator-test
            app.kubernetes.io/version: 1.0.0
        spec:
          containers:
          - env:
            - name: PORT
              value: "1205"
            - name: DASH0_DEBUG
              value: "true"
            - name: TRIGGER_SELF_AND_EXIT
              value: "true"
            image: dash0-operator-nodejs-20-express-test-app:latest
            imagePullPolicy: Never
            name: dash0-operator-nodejs-20-express-test-cronjob-app
            ports:
            - containerPort: 1205
            readinessProbe:
              httpGet:
                path: /ready
                port: 1205
              initialDelaySeconds: 1
              periodSeconds: 1
            resources:
              limits:
                cpu: 500m
                ephemeral-storage: 500Mi
                memory: 128Mi
              requests:
                cpu: 100m
                ephemeral-storage: 500Mi
                memory: 64Mi
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob
policy disallow-latest-tag -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-ro-rootfs -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/dash0-operator-nodejs-20-express-test-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob198.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rclone-cronjob/CronJob/rclone-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rclone-cronjob
  namespace: rclone-cronjob
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: rclone-cronjob
            instance: rclone-cronjob
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - "rclone ${RCLONE_OPTS} --log-level ${RCLONE_LOG_LEVEL} ${RCLONE_METHOD}
              \\\n :${SOURCE_TYPE},provider=${SOURCE_PROVIDER},access_key_id=${SOURCE_ACCESS_KEY},secret_access_key=${SOURCE_SECRET_KEY},endpoint=${SOURCE_ENDPOINT},bucket_acl=private:${SOURCE_BUCKET}/
              \\\n :${DESTINATION_TYPE},provider=${DESTINATION_PROVIDER},access_key_id=${DESTINATION_ACCESS_KEY},secret_access_key=${DESTINATION_SECRET_KEY},endpoint=${DESTINATION_ENDPOINT},bucket_acl=private:${DESTINATION_BUCKET}/
              \n"
            env:
            - name: SOURCE_TYPE
              valueFrom:
                configMapKeyRef:
                  key: SOURCE_TYPE
                  name: rclone-config
            - name: SOURCE_PROVIDER
              valueFrom:
                configMapKeyRef:
                  key: SOURCE_PROVIDER
                  name: rclone-config
            - name: SOURCE_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: SOURCE_BUCKET
                  name: rclone-config
            - name: SOURCE_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: SOURCE_ENDPOINT
                  name: rclone-config
            - name: DESTINATION_TYPE
              valueFrom:
                configMapKeyRef:
                  key: DESTINATION_TYPE
                  name: rclone-config
            - name: DESTINATION_PROVIDER
              valueFrom:
                configMapKeyRef:
                  key: DESTINATION_PROVIDER
                  name: rclone-config
            - name: DESTINATION_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: DESTINATION_BUCKET
                  name: rclone-config
            - name: DESTINATION_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: DESTINATION_ENDPOINT
                  name: rclone-config
            - name: RCLONE_OPTS
              valueFrom:
                configMapKeyRef:
                  key: RCLONE_OPTS
                  name: rclone-config
            - name: RCLONE_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: RCLONE_LOG_LEVEL
                  name: rclone-config
            - name: RCLONE_METHOD
              valueFrom:
                configMapKeyRef:
                  key: RCLONE_METHOD
                  name: rclone-config
            - name: SOURCE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: source_access_key
                  name: rclone-secret
            - name: SOURCE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: source_secret_key
                  name: rclone-secret
            - name: DESTINATION_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: destination_access_key
                  name: rclone-secret
            - name: DESTINATION_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: destination_secret_key
                  name: rclone-secret
            image: rclone/rclone:latest
            imagePullPolicy: Always
            name: rclone-cronjob
            resources:
              limits:
                cpu: 800m
                memory: 800Mi
              requests:
                cpu: 200m
                memory: 200Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsGroup: 1000
              runAsNonRoot: true
              runAsUser: 10000
          restartPolicy: OnFailure
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
  schedule: '*/5 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource rclone-cronjob/CronJob/rclone-cronjob

skipped mutate policy add-safe-to-evict -> resource rclone-cronjob/CronJob/rclone-cronjob
policy disallow-latest-tag -> resource rclone-cronjob/CronJob/rclone-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource rclone-cronjob/CronJob/rclone-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource rclone-cronjob/CronJob/rclone-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource rclone-cronjob/CronJob/rclone-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 9, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob199.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/email:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: email
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -ec
            - curl 'http://appjava-service-clusterip:8080/email'
            image: curlimages/curl:7.72.0
            imagePullPolicy: Always
            name: email
          restartPolicy: Never
  schedule: '*/1 * * * *'
  successfulJobsHistoryLimit: 1
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/email

skipped mutate policy add-safe-to-evict -> resource default/CronJob/email
policy drop-all-capabilities -> resource default/CronJob/email failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/email failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/email failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/email failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/email failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/email failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/magic-spreadsheet-notifier:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: magic-spreadsheet-notifier
  namespace: default
spec:
  schedule: 0 0 31 2 *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier

skipped mutate policy add-safe-to-evict -> resource default/CronJob/magic-spreadsheet-notifier
policy disallow-container-sock-mounts -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-cronjob-validate-docker-sock-mount failed at path /spec/jobTemplate/
2 - autogen-cronjob-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-cronjob-validate-containerd-sock-mount failed at path /spec/jobTemplate/
3 - autogen-cronjob-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-cronjob-validate-crio-sock-mount failed at path /spec/jobTemplate/
4 - autogen-cronjob-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-cronjob-validate-dockerd-sock-mount failed at path /spec/jobTemplate/

policy require-labels -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/

policy require-requests-limits -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/

policy require-ro-rootfs -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/

policy restrict-image-registries -> resource default/CronJob/magic-spreadsheet-notifier failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/


pass: 0, fail: 8, warn: 0, error: 0, skip: 3 

##### FILE: cron-job2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/random-string-generator:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: random-string-generator
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - |
              echo "Random String: $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 10)"
              echo "Pod Name: $(hostname)"
            image: busybox
            name: container-random-string-generator
          restartPolicy: OnFailure
  schedule: '*/5 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/random-string-generator

skipped mutate policy add-safe-to-evict -> resource default/CronJob/random-string-generator
policy disallow-latest-tag -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/random-string-generator failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob200.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob201.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - "i=0 \n while [ $i -lt 10 ]\ndo \n /bin/echo hola en linea $i\n let
              i=$i+1 \n sleep 1; done"
            command:
            - /bin/bash
            - -c
            image: ubuntu:latest
            name: test
          restartPolicy: Never
  schedule: '* * * * *'
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob202.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/my-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: hussenali/node-get-matrices-03:v1
            name: cron-container
            resources:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 250m
                memory: 64Mi
            volumeMounts:
            - mountPath: /data
              name: data-pvc03
          restartPolicy: OnFailure
          volumes:
          - name: data-pvc03
            persistentVolumeClaim:
              claimName: data-pvc03
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/my-cronjob
policy drop-all-capabilities -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/my-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob207.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dummy-cj:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dummy-cj
  namespace: default
spec:
  jobTemplate:
    metadata:
      name: dummy-job
    spec:
      template:
        metadata:
          labels:
            app: job
          name: dummy-pod
        spec:
          containers:
          - args:
            - sleep
            - 30s
            image: alpine
            name: cronjob-ctr
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dummy-cj

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dummy-cj
policy disallow-latest-tag -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob208.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dummy-namespace/CronJob/dummy-cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dummy-cron-job
  namespace: dummy-namespace
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: docker.io/alpine
            name: dummy
            resources:
              env:
              - name: DUMMY_KEY_1
                value: dummy_value_1
              - name: DUMMY_KEY_2
                value: dummy_value_2
              - name: DUMMY_KEY_3
                value: dummy_value_3
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 64Mi
            volumeMounts:
            - mountPath: /dummy
              name: dummy-volume
          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-pvc
  schedule: '*/5 * * * *'
  successfulJobsHistoryLimit: 3
  suspend: false
  timezone: Etc/UTC

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dummy-namespace/CronJob/dummy-cron-job

skipped mutate policy add-safe-to-evict -> resource dummy-namespace/CronJob/dummy-cron-job
policy disallow-latest-tag -> resource dummy-namespace/CronJob/dummy-cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dummy-namespace/CronJob/dummy-cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dummy-namespace/CronJob/dummy-cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dummy-namespace/CronJob/dummy-cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource dummy-namespace/CronJob/dummy-cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dummy-namespace/CronJob/dummy-cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob209.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-cron
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - echo
            - Hello from the CronJob
            image: busybox
            name: busybox
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron
policy disallow-latest-tag -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/call-index-html:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: call-index-html
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - curl
            - http://service1/k8s/index2.html
            image: curlimages/curl:latest
            name: curl-container
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/call-index-html

skipped mutate policy add-safe-to-evict -> resource default/CronJob/call-index-html
policy disallow-latest-tag -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to new-ns/CronJob/call-index-html:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: call-index-html
  namespace: new-ns
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - curl
            - http://service2.default.svc.cluster.local:8080/k8s/index2.html
            image: curlimages/curl:latest
            name: curl-container
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource new-ns/CronJob/call-index-html

skipped mutate policy add-safe-to-evict -> resource new-ns/CronJob/call-index-html
policy disallow-latest-tag -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource new-ns/CronJob/call-index-html failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob210.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cj-countdown2:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cj-countdown2
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - bin/sh
            - -c
            - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done
            image: alpine
            name: cj-counter
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'
  successfulJobsHistoryLimit: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cj-countdown2

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cj-countdown2
policy disallow-latest-tag -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cj-countdown2 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob212.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-ns/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: test-ns
  uid: "123"
spec:
  jobTemplate:
    metadata:
      annotations:
        my: annotation
      labels:
        my: label
    spec:
      template:
        metadata:
          annotations:
            pod: annotation
          labels:
            pod: label
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
            resources: {}
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 100
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test-ns/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource test-ns/CronJob/hello
policy drop-all-capabilities -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob213.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/lookout-v2-db-pruner:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels: null
  name: lookout-v2-db-pruner
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels: null
      name: lookout-v2-db-pruner
    spec:
      backoffLimit: 6
      template:
        metadata:
          labels: null
          name: lookout-v2-db-pruner
        spec:
          containers:
          - args:
            - --pruneDatabase
            - --config
            - /config/application_config.yaml
            env: null
            image: dynamic_parameters:dynamic_parameters
            imagePullPolicy: IfNotPresent
            name: lookout-v2
            resources: null
            securityContext:
              allowPrivilegeEscalation: false
            volumeMounts:
            - mountPath: /config/application_config.yaml
              name: user-config
              readOnly: true
              subPath: dynamic_parameters
          restartPolicy: Never
          securityContext:
            runAsGroup: 2000
            runAsUser: 1000
          serviceAccountName: dynamic_parameters
          volumes:
          - name: user-config
            secret:
              secretName: dynamic_parameters
  schedule: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/lookout-v2-db-pruner

skipped mutate policy add-safe-to-evict -> resource default/CronJob/lookout-v2-db-pruner
policy drop-all-capabilities -> resource default/CronJob/lookout-v2-db-pruner failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/lookout-v2-db-pruner failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/lookout-v2-db-pruner failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/lookout-v2-db-pruner failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/lookout-v2-db-pruner failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/lookout-v2-db-pruner failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      activeDeadlineSeconds: 100
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob225.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob226.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/example-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: example-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: example
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/example-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/example-cronjob
policy disallow-latest-tag -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/example-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob227.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 60
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob228.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/postgres-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - |
              # Backup PostgreSQL database using pg_dump
              pg_dump -h postgres -U postgres -d todo > /tmp/backup.sql

              # Upload backup to Google Cloud Storage
              gsutil cp /tmp/backup.sql gs://devops-backups-bucket/$(date +\%!F(MISSING))-backup.sql
            env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/gcp-service-account-key/key.json
            image: google/cloud-sdk:latest
            name: backup
            volumeMounts:
            - mountPath: /secrets/gcp-service-account-key
              name: gcp-credentials
              readOnly: true
          restartPolicy: OnFailure
          volumes:
          - name: gcp-credentials
            secret:
              secretName: gcp-service-account-key
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/postgres-backup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/postgres-backup
policy disallow-latest-tag -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/postgres-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/kping:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kping
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - curl https://www.google.com
            image: dolphm/network-tools
            name: ping-no-delay
          - command:
            - /bin/sh
            - -c
            - sleep 30; curl https://www.google.com
            image: dolphm/network-tools
            name: ping-30-sec-delay
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/kping

skipped mutate policy add-safe-to-evict -> resource default/CronJob/kping
policy disallow-latest-tag -> resource default/CronJob/kping failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/kping failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/kping failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/kping failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/kping failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/kping failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/kping failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob230.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to postgres/CronJob/backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup
  namespace: postgres
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - args:
            - /usr/bin/pg_back -c /var/pg_back.conf
            command:
            - /bin/sh
            - -c
            image: jgkawell/pg_back:latest
            imagePullPolicy: IfNotPresent
            name: backup
            volumeMounts:
            - mountPath: /var
              name: config
              readOnly: true
          restartPolicy: Never
          volumes:
          - name: config
            secret:
              secretName: backup-config
  schedule: 0 1 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource postgres/CronJob/backup

skipped mutate policy add-safe-to-evict -> resource postgres/CronJob/backup
policy disallow-latest-tag -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource postgres/CronJob/backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob231.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: backup
            imagePullPolicy: IfNotPresent
            name: backup
            volumeMounts:
            - mountPath: app/folder/
              name: data-volume
            - mountPath: app/credentials/
              name: credentials
          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-pvc
          - name: credentials
            secret:
              secretName: google-token
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-cronjob
policy disallow-latest-tag -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob235.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/panampunna-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: panampunna-app
  name: panampunna-cronjob
  namespace: default
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: panampunna-app
        spec:
          containers:
          - args:
            - /bin/bash
            - -c
            - echo 'Hello, Kubernetes CronJob!'
            image: vimaldevops/panampunna-kerala:king-ktest
            name: panampunna-cronjob-container
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 300
  schedule: '*/6 * * * *'
  successfulJobsHistoryLimit: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/panampunna-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/panampunna-cronjob
policy drop-all-capabilities -> resource default/CronJob/panampunna-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/panampunna-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/panampunna-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/panampunna-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/panampunna-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/panampunna-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob236.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-world-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-world-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: hello-world
        spec:
          containers:
          - image: vimaldevops/panampunna-kerala:king-June10
            name: hello-world
          restartPolicy: OnFailure
  schedule: '*/5 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-world-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-world-cronjob
policy drop-all-capabilities -> resource default/CronJob/hello-world-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-world-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-world-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/hello-world-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-world-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-world-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob237.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/test-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test-cron
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - echo
            - Hello test!!!
            image: busybox
            name: busybox
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/test-cron

skipped mutate policy add-safe-to-evict -> resource default/CronJob/test-cron
policy disallow-latest-tag -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/test-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob239.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/busybox-print-date:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: busybox-print-date
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/busybox-print-date

skipped mutate policy add-safe-to-evict -> resource default/CronJob/busybox-print-date
policy drop-all-capabilities -> resource default/CronJob/busybox-print-date failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/busybox-print-date failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/busybox-print-date failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/busybox-print-date failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/busybox-print-date failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/busybox-print-date failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob241.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project-namespace/CronJob/hourly-todo:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hourly-todo
  namespace: project-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-vars
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_HOST
                  name: postgres-vars
            image: ktatu/hourly-todo:2.1
            name: hourly-todo
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project-namespace/CronJob/hourly-todo

skipped mutate policy add-safe-to-evict -> resource project-namespace/CronJob/hourly-todo
policy drop-all-capabilities -> resource project-namespace/CronJob/hourly-todo failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project-namespace/CronJob/hourly-todo failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project-namespace/CronJob/hourly-todo failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project-namespace/CronJob/hourly-todo failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project-namespace/CronJob/hourly-todo failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project-namespace/CronJob/hourly-todo failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob242.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/acme-certs-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: acme-certs-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - envFrom:
            - configMapRef:
                name: environment-variables
            image: ghcr.io/pajikos/acme-certs-job:latest
            imagePullPolicy: Always
            name: acme-certs-job
            volumeMounts:
            - mountPath: /app/lego-files
              name: lego-files
            - mountPath: /app/domains.config
              name: domains-config
              subPath: domains.config
          restartPolicy: OnFailure
          serviceAccountName: acme-certs-sa
          volumes:
          - name: lego-files
            persistentVolumeClaim:
              claimName: lego-files-pvc
          - configMap:
              name: domains-config
            name: domains-config
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/acme-certs-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/acme-certs-job
policy disallow-latest-tag -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronJob26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/adservice-warmup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: adservice-warmup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: AD_SERVICE_HOST
              value: adservice
            - name: AD_SERVICE_PORT
              value: "9555"
            image: amiraniv/cron-job:v1.0
            name: adservice-warmup
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/adservice-warmup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/adservice-warmup
policy drop-all-capabilities -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/adservice-warmup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sleepy:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
  namespace: default
spec:
  jobTemplate:
    spec:
      activeDeadlineSeconds: 10
      template:
        spec:
          containers:
          - args:
            - "30"
            command:
            - /bin/sleep
            image: busybox
            name: sleepy
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy
policy disallow-latest-tag -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob-demo:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-demo
  namespace: default
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 3
      parallelism: 1
      template:
        metadata:
          name: job-demo
        spec:
          containers:
          - image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-succeeded
            name: job-demo
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 10
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-demo

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-demo
policy drop-all-capabilities -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to renovate/CronJob/renovate:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: renovate
  namespace: renovate
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - mischavandenburg/homelab
            envFrom:
            - secretRef:
                name: renovate-container-env
            - configMapRef:
                name: renovate-configmap
            image: renovate/renovate:latest
            name: renovate
          restartPolicy: Never
  schedule: '@hourly'
  successfulJobsHistoryLimit: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource renovate/CronJob/renovate

skipped mutate policy add-safe-to-evict -> resource renovate/CronJob/renovate
policy disallow-latest-tag -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource renovate/CronJob/renovate failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/updater:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: updater
  namespace: default
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:latest
            imagePullPolicy: IfNotPresent
            name: updater
          restartPolicy: Never
  schedule: 0 10 * * *
  successfulJobsHistoryLimit: 3
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/updater

skipped mutate policy add-safe-to-evict -> resource default/CronJob/updater
policy disallow-latest-tag -> resource default/CronJob/updater failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/updater failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/updater failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/updater failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/updater failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/updater failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/updater failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/mycronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mycronjob
  namespace: default
spec:
  jobTemplate:
    metadata:
      name: myjob
    spec:
      template:
        metadata:
          name: mypod
        spec:
          activeDeadlineSeconds: 5
          containers:
          - command:
            - sleep
            - 10s
            image: alpine
            name: mycon
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/mycronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/mycronjob
policy disallow-latest-tag -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/mycronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/sleepy:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - "3"
            command:
            - /bin/sleep
            image: busybox
            name: resting
          restartPolicy: Never
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy

skipped mutate policy add-safe-to-evict -> resource default/CronJob/sleepy
policy disallow-latest-tag -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/sleepy failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hellok8s:
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: null
  name: hellok8s
  namespace: default
spec:
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: hellok8s
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - echo "hello k8s"; sleep 2;
            image: busybox:latest
            name: hellok8s
            resources: {}
          restartPolicy: Never
      ttlSecondsAfterFinished: 5
  schedule: '*/1 * * * *'
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hellok8s

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hellok8s
policy disallow-latest-tag -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hellok8s failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-101/CronJob/golang-api-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: golang-api-cron
  namespace: kubernetes-101
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello world
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: busybox
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-101/CronJob/golang-api-cron

skipped mutate policy add-safe-to-evict -> resource kubernetes-101/CronJob/golang-api-cron
policy drop-all-capabilities -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/next-century:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: next-century
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: TZ
              value: America/Los_Angeles
            - name: SMTP_SERVER
              value: email-smtp.us-west-2.amazonaws.com
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: smtp
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: smtp
            - name: SMTP_PORT
              value: "587"
            envFrom:
            - secretRef:
                name: bill-generation-secrets
            image: ghcr.io/seaview-cottages/nextcentury-payhoa:main
            imagePullPolicy: Always
            name: generate-bill
            resources:
              limits:
                cpu: 500m
                memory: 256Mi
              requests:
                cpu: 500m
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsGroup: 65534
              runAsUser: 65534
          restartPolicy: OnFailure
  schedule: 0 10 2 * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/next-century

skipped mutate policy add-safe-to-evict -> resource default/CronJob/next-century
policy drop-all-capabilities -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy restrict-image-registries -> resource default/CronJob/next-century failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 9, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-101/CronJob/golang-api-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: golang-api-cron
  namespace: kubernetes-101
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello world
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: busybox
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-101/CronJob/golang-api-cron

skipped mutate policy add-safe-to-evict -> resource kubernetes-101/CronJob/golang-api-cron
policy drop-all-capabilities -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kubernetes-101/CronJob/golang-api-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/testcron:
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: null
  name: testcron
  namespace: default
spec:
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: testcron
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - command:
            - sh
            - -c
            - echo 'hello eval $(date)'
            image: busybox
            name: testcron
            resources: {}
          restartPolicy: OnFailure
  schedule: '* * * * *'
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/testcron

skipped mutate policy add-safe-to-evict -> resource default/CronJob/testcron
policy disallow-latest-tag -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/testcron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/es-data-deleter:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: es-data-deleter
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - /usr/local/bin/es-data-deleter.sh
            image: nexus.cyangate.com/alpinelinux/curl:latest
            imagePullPolicy: IfNotPresent
            name: es-data-deleter
            volumeMounts:
            - mountPath: /usr/local/bin/es-data-deleter.sh
              name: es-data-deleter-shell-script
              subPath: es-data-deleter.sh
          imagePullSecrets:
          - name: nexuscyangate
          restartPolicy: OnFailure
          volumes:
          - configMap:
              defaultMode: 329
              name: es-data-deleter-shell-script
            name: es-data-deleter-shell-script
      ttlSecondsAfterFinished: 10
  schedule: 0 12 * * *
  timeZone: Europe/Istanbul

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/es-data-deleter

skipped mutate policy add-safe-to-evict -> resource default/CronJob/es-data-deleter
policy disallow-latest-tag -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/es-data-deleter failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/s3-file-uploader:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: s3-file-uploader
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - find /logs -type d -name archived -exec aws s3 mv --recursive {} s3://yourbucket/{}
              \;
            image: CHANGAME
            imagePullPolicy: IfNotPresent
            name: s3-file-uploader
            volumeMounts:
            - mountPath: /logs
              name: logs
            - mountPath: /root/.aws/config
              name: aws-cli-config
              subPath: config
            - mountPath: /root/.aws/credentials
              name: aws-cli-credentials
              subPath: credentials
          imagePullSecrets:
          - name: CHANGAME
          restartPolicy: OnFailure
          volumes:
          - name: logs
            persistentVolumeClaim:
              claimName: logs
          - configMap:
              name: aws-cli-config
            name: aws-cli-config
          - name: aws-cli-credentials
            secret:
              secretName: aws-cli-credentials
      ttlSecondsAfterFinished: 10
  schedule: '*/30 * * * *'
  timeZone: Europe/Istanbul

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/s3-file-uploader

skipped mutate policy add-safe-to-evict -> resource default/CronJob/s3-file-uploader
policy disallow-latest-tag -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/s3-file-uploader failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 1000
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/glasskube-autoupdate:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: glasskube-autoupdate
  namespace: default
spec:
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - auto-update
            - --skip-update-check
            image: ghcr.io/glasskube/glasskube
            name: glasskube
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
          serviceAccountName: glasskube-autoupdate
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/glasskube-autoupdate

skipped mutate policy add-safe-to-evict -> resource default/CronJob/glasskube-autoupdate
policy disallow-latest-tag -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/glasskube-autoupdate failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to system/CronJob/webhook-cert:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: webhook-cert
  namespace: system
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /cert-manager
            image: controller:latest
            name: manager
            resources:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 10m
                memory: 64Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
          restartPolicy: OnFailure
          serviceAccountName: webhook-cert
          terminationGracePeriodSeconds: 3
  schedule: 0 0 1 * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource system/CronJob/webhook-cert

skipped mutate policy add-safe-to-evict -> resource system/CronJob/webhook-cert
policy disallow-latest-tag -> resource system/CronJob/webhook-cert failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource system/CronJob/webhook-cert failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource system/CronJob/webhook-cert failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource system/CronJob/webhook-cert failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource system/CronJob/webhook-cert failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/pause-services-unused-gpus:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: pause-services-unused-gpus
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - pip install -q prometheus-api-client && python /gitops/pause-services-unused-gpus/pause-services-unused-gpus.py
            image: inseefrlab/onyxia-python-minimal:py3.12.2
            imagePullPolicy: IfNotPresent
            name: pause-services-unused-gpus
            volumeMounts:
            - mountPath: /gitops
              name: gitops
          initContainers:
          - command:
            - /bin/sh
            - -c
            - git clone https://github.com/InseeFrLab/onyxia-ops.git /gitops
            image: inseefrlab/onyxia-base:latest
            imagePullPolicy: IfNotPresent
            name: init
            volumeMounts:
            - mountPath: /gitops
              name: gitops
          restartPolicy: Never
          serviceAccountName: pause-services-unused-gpus
          volumes:
          - emptyDir: {}
            name: gitops
  schedule: 0 */2 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/pause-services-unused-gpus
policy disallow-latest-tag -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/pause-services-unused-gpus failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cronjob57.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/prepull:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: prepull
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - cd /catalog/utils && chmod +x prepull_images.sh && ./prepull_images.sh
            image: inseefrlab/onyxia-python-minimal:py3.11.10
            imagePullPolicy: IfNotPresent
            name: prepull
            volumeMounts:
            - mountPath: /catalog
              name: catalog
          initContainers:
          - command:
            - /bin/sh
            - -c
            - git clone https://github.com/InseeFrLab/helm-charts-interactive-services.git
              /catalog
            image: inseefrlab/onyxia-python-minimal:py3.11.10
            imagePullPolicy: IfNotPresent
            name: init
            volumeMounts:
            - mountPath: /catalog
              name: catalog
          restartPolicy: Never
          serviceAccountName: prepull
          volumes:
          - emptyDir: {}
            name: catalog
  schedule: 0 4 * * 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/prepull
policy drop-all-capabilities -> resource default/CronJob/prepull failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/prepull failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/prepull failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/prepull failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/prepull failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/prepull failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob58.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/restart-atm9:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: restart-atm9
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob58_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/restart-atm9:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: restart-atm9
  namespace: default
rules:
- apiGroups:
  - apps
  - extensions
  resourceNames:
  - atm9
  resources:
  - deployments
  verbs:
  - get
  - patch
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob58_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/restart-atm9:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: restart-atm9
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: restart-atm9
subjects:
- kind: ServiceAccount
  name: restart-atm9

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob58_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/restart-atm9:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: restart-atm9
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 1
      template:
        spec:
          containers:
          - command:
            - bash
            - -c
            - kubectl rollout restart deployment/atm9 && kubectl rollout status deployment/atm9
            image: bitnami/kubectl
            name: kubectl
          restartPolicy: Never
          serviceAccountName: restart-atm9
  schedule: 0 4,16 * * *
  timeZone: America/New_York

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/restart-atm9

skipped mutate policy add-safe-to-evict -> resource default/CronJob/restart-atm9
policy disallow-latest-tag -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/restart-atm9 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob59.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/restart-seaopolis:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: restart-seaopolis
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob59_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/restart-seaopolis:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: restart-seaopolis
  namespace: default
rules:
- apiGroups:
  - apps
  - extensions
  resourceNames:
  - seaopolis
  resources:
  - deployments
  verbs:
  - get
  - patch
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob59_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/restart-seaopolis:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: restart-seaopolis
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: restart-seaopolis
subjects:
- kind: ServiceAccount
  name: restart-seaopolis

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob59_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/restart-seaopolis:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: restart-seaopolis
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 1
      template:
        spec:
          containers:
          - command:
            - bash
            - -c
            - kubectl rollout restart deployment/seaopolis && kubectl rollout status
              deployment/seaopolis
            image: bitnami/kubectl
            name: kubectl
          restartPolicy: Never
          serviceAccountName: restart-seaopolis
  schedule: 0 4,16 * * *
  timeZone: America/New_York

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/restart-seaopolis

skipped mutate policy add-safe-to-evict -> resource default/CronJob/restart-seaopolis
policy disallow-latest-tag -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/restart-seaopolis failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/date:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: date
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; sleep 30
            image: busybox
            name: dateperminute
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/date

skipped mutate policy add-safe-to-evict -> resource default/CronJob/date
policy disallow-latest-tag -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/date failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/probability-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: probability-cronjob
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 6
      completions: 3
      parallelism: 3
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              # Function to generate a random number between 1 and 100
              random_number() {
                echo $((RANDOM %! (MISSING)+ 1))
              }
              # Function to generate an error with a given probability
              generate_random_error() {
                local probability=$1
                local rand=$(random_number)
                if [ "$rand" -le "$probability" ]; then
                  echo "Error!"
                  exit 1 # Exit with error code 1
                else
                  echo "Success!"
                  exit 0 # Exit with success code 0
                fi
              }
              # Set the desired probability of error (change this value to your desired percentage)
              probability_of_error=25 # probability of error
              generate_random_error $probability_of_error
            image: pnowy/toolbox:1.0.0
            name: toolbox
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/probability-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/probability-cronjob
policy drop-all-capabilities -> resource default/CronJob/probability-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/probability-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/probability-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/probability-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/probability-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/probability-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob65.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cj-countdown:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cj-countdown
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - bin/sh
            - -c
            - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done
            image: alpine
            name: cj-counter
          restartPolicy: OnFailure
  schedule: 35 22 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cj-countdown

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cj-countdown
policy disallow-latest-tag -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cj-countdown failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob69.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/cronjob-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: cronjob-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/cronjob-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: cronjob-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/cronjob-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: cronjob-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/cronjob-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: cronjob-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/cronjob-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: cronjob-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob69_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cronjob-namespace/CronJob/cronjob-app:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-app
  namespace: cronjob-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: app
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cronjob-namespace/CronJob/cronjob-app

skipped mutate policy add-safe-to-evict -> resource cronjob-namespace/CronJob/cronjob-app
policy drop-all-capabilities -> resource cronjob-namespace/CronJob/cronjob-app failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cronjob-namespace/CronJob/cronjob-app failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cronjob-namespace/CronJob/cronjob-app failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource cronjob-namespace/CronJob/cronjob-app failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cronjob-namespace/CronJob/cronjob-app failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cronjob-namespace/CronJob/cronjob-app failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      activeDeadlineSeconds: 100
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox
            name: hello
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy disallow-latest-tag -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/date:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: date
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; sleep 30
            image: busybox
            name: dateperminute
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/date

skipped mutate policy add-safe-to-evict -> resource default/CronJob/date
policy disallow-latest-tag -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/date failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/date failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/date failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob72.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/codelabs-archives-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: codelabs-archives-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - image: pedrochaparroupb/directory-rclone-backup-utility:0.1.0
            name: codelabs-archives-backup
            volumeMounts:
            - mountPath: /var/codelabs/archives
              name: codelabs-archives-volume
            - mountPath: /var/codelabs/backups/archives
              name: codelabs-archives-backup-volume
            - mountPath: /.config/rclone.conf
              name: codelabs-archives-backup-rclone-config
              readOnly: true
          restartPolicy: Never
          volumes:
          - name: codelabs-archives-volume
            persistentVolumeClaim:
              claimName: codelabs-static-files-pvc
          - name: codelabs-archives-backup-volume
            persistentVolumeClaim:
              claimName: codelabs-archives-backup-pvc
          - hostPath:
              path: /etc/rclone/rclone.conf
              type: File
            name: codelabs-archives-backup-rclone-config
  schedule: 0 0 * * 1,3,5
  timeZone: America/Bogota

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/codelabs-archives-backup
policy drop-all-capabilities -> resource default/CronJob/codelabs-archives-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/codelabs-archives-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/codelabs-archives-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/codelabs-archives-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/codelabs-archives-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/codelabs-archives-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob73.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/codelabs-postgres-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: codelabs-postgres-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - envFrom:
            - secretRef:
                name: codelabs-postgres-backup-secret
            image: pedrochaparroupb/postgres-rclone-backup-utility:0.2.1
            name: codelabs-postgres-backup
            volumeMounts:
            - mountPath: /var/backups/db
              name: codelabs-postgres-backup-volume
            - mountPath: /etc/gpg/backups
              name: codelabs-postgres-backup-gpg-key
              readOnly: true
            - mountPath: /.config/rclone.conf
              name: codelabs-postgres-backup-rclone-config
              readOnly: true
          restartPolicy: Never
          volumes:
          - name: codelabs-postgres-backup-volume
            persistentVolumeClaim:
              claimName: codelabs-postgres-backup-pvc
          - hostPath:
              path: /etc/rclone/rclone.conf
              type: File
            name: codelabs-postgres-backup-rclone-config
          - hostPath:
              path: /etc/gpg
              type: Directory
            name: codelabs-postgres-backup-gpg-key
  schedule: 0 0 * * 1,3,5
  timeZone: America/Bogota

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/codelabs-postgres-backup
policy drop-all-capabilities -> resource default/CronJob/codelabs-postgres-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/codelabs-postgres-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/codelabs-postgres-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/codelabs-postgres-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/codelabs-postgres-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/codelabs-postgres-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: cronjob74.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cleanup-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-job
  namespace: default
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/rm
            - -f
            - /tmp/*
            image: busybox
            imagePullPolicy: IfNotPresent
            name: cleanup-job
          restartPolicy: OnFailure
  schedule: 0 2 * * *
  startingDeadlineSeconds: 60
  successfulJobsHistoryLimit: 10
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cleanup-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cleanup-job
policy disallow-latest-tag -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cleanup-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronJob75.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-log:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    kiamol: ch08
  name: todo-log
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - ls
            - -l
            - /var/log/nginx/
            image: postgres:11.6-alpine
            name: log
            volumeMounts:
            - mountPath: /var/log/nginx/
              name: backup
          restartPolicy: Never
          volumes:
          - name: backup
            persistentVolumeClaim:
              claimName: todo-db-backup-pvc
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-log

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-log
policy drop-all-capabilities -> resource default/CronJob/todo-log failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-log failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-log failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-log failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-log failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-log failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob76.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cronjob:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cronjob
  name: cronjob
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cronjob
  template:
    metadata:
      labels:
        app: cronjob
    spec:
      containers:
      - env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: postgres-user
              name: postgres-secret
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: postgres-db
              name: postgres-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: postgres-secret
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: postgres-url
              name: postgres-config
        - name: CACHE_HOST
          valueFrom:
            configMapKeyRef:
              key: host
              name: redis-config
        - name: CACHE_PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: redis-config
        image: chunhao1811/hero_api-cron:latest
        name: cronjob
        ports:
        - containerPort: 3001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cronjob

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cronjob
policy disallow-default-namespace -> resource default/Deployment/cronjob failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cronjob failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cronjob failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cronjob failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cronjob failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cronjob failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cronjob failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cronjob failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cronjob failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cronjob76_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cronjob:
apiVersion: v1
kind: Service
metadata:
  name: cronjob
  namespace: default
spec:
  ports:
  - port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: cronjob

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob77.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/helloworld:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: helloworld
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello  Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/helloworld

skipped mutate policy add-safe-to-evict -> resource default/CronJob/helloworld
policy drop-all-capabilities -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/helloworld failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob78.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dummy-cj:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dummy-cj
  namespace: default
spec:
  jobTemplate:
    metadata:
      name: dummy-job
    spec:
      template:
        metadata:
          labels:
            app: job
          name: dummy-pod
        spec:
          containers:
          - args:
            - sleep
            - 30s
            image: alpine
            name: dummy-ctr
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dummy-cj

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dummy-cj
policy disallow-latest-tag -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/dummy-cj failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/kping:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kping
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - curl https://www.google.com
            image: dolphm/network-tools
            name: ping-no-delay
          - command:
            - /bin/sh
            - -c
            - sleep 30; curl https://www.google.com
            image: dolphm/network-tools
            name: ping-30-sec-delay
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/kping

skipped mutate policy add-safe-to-evict -> resource default/CronJob/kping
policy disallow-latest-tag -> resource default/CronJob/kping failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/kping failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/kping failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/kping failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/kping failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/kping failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/kping failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cron-demo:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-demo
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            cronjob-name: cron-demo
        spec:
          containers:
          - args:
            - python
            - -c
            - from datetime import datetime; print(f'[{datetime.now()}] CronJob demo
              here...remember to stretch')
            image: g1g1/py-kube:0.3
            name: cron-demo
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-demo

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cron-demo
policy drop-all-capabilities -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cron-demo failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: CronJob80.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/secret-generator:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: secret-generator
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - "/bin/bash <<'EOF'\ncd /tmp\n\nuuid() {\n  RND_PASS=$(head /dev/urandom
              | tr -dc A-Za-z0-9 | head -c 32)\n  RND_PASS_ENCODED=$(echo -n \"$RND_PASS\"
              | base64)\n  echo $RND_PASS_ENCODED\n}\n\nkubectl get secret rotating-secret-password
              -n default -oyaml > secret.yaml\nkey_list=(\"MY_PASSWORD_1\" \"MY_PASSWORD_2\"
              \"MY_PASSWORD_3\" \"MY_PASSWORD_4\")\nfor password_key in \"${key_list[@]}\";
              do\n  sed -i \"s/$password_key: .*/$password_key: $(uuid)/g\" secret.yaml\ndone\n\nif
              [ $? -eq 0 ]; then\n  echo \"------ Applying New Secret -------\"\n
              \ kubectl apply -f secret.yaml\n  echo \"----------------------------------\"\n
              \ exit 0\nelse\n  echo \"[ERROR] Failed to update secret file using
              'sed'.\"\n  exit 1\nfi\n\nexit $? \nEOF\n"
            image: bitnami/kubectl:latest
            name: secret-generator
          restartPolicy: OnFailure
          serviceAccountName: service-account-cronjob
          ttlSecondsAfterFinished: 0
  schedule: '*/20 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/secret-generator

skipped mutate policy add-safe-to-evict -> resource default/CronJob/secret-generator
policy disallow-latest-tag -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/secret-generator failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob82.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - tail -f /dev/null
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello
policy drop-all-capabilities -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob83.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/intervalsicu-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: intervalsicu-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: INTERVALS_API_KEY
              valueFrom:
                secretKeyRef:
                  key: INTERVALS_API_KEY
                  name: intervalsicu-secrets
            - name: INTERVALS_USER_ID
              valueFrom:
                secretKeyRef:
                  key: INTERVALS_USER_ID
                  name: intervalsicu-secrets
            - name: GOTIFY_TOKEN
              valueFrom:
                secretKeyRef:
                  key: GOTIFY_TOKEN
                  name: intervalsicu-secrets
            - name: GOTIFY_URL
              value: https://gotify.ninebasetwo.net/
            - name: TIME_ZONE
              value: America/Toronto
            image: ghcr.io/thomascardin/intervalsicu:v1.0.4
            name: jobscrapper
          restartPolicy: OnFailure
  schedule: 0 7 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/intervalsicu-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/intervalsicu-cronjob
policy drop-all-capabilities -> resource default/CronJob/intervalsicu-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/intervalsicu-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/intervalsicu-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/intervalsicu-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/intervalsicu-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/intervalsicu-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob84.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/jobscrapper-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: jobscrapper-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: DISCORD_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  key: DISCORD_WEBHOOK_URL
                  name: jobscrapper-secrets
            - name: JOBS_SCRAPPER_LIST
              value: golang,sre,devops,cloud
            - name: JOBS_SCRAPPER_LOCATION
              value: Montreal, QC, CA
            - name: JOBS_SCRAPPER_COUNTRY
              value: Canada
            image: ghcr.io/thomascardin/jobscrapper:v1.0.3
            name: jobscrapper
          restartPolicy: OnFailure
  schedule: 0 7 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/jobscrapper-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/jobscrapper-cronjob
policy drop-all-capabilities -> resource default/CronJob/jobscrapper-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/jobscrapper-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/jobscrapper-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/jobscrapper-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/jobscrapper-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/jobscrapper-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob86.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/purge-mongodb-users:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: purge-mongodb-users
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sh
            - -c
            - mongo mongodb://demo-crm-service-headless.default.svc.cluster.local:27017/?replicaSet=MainRepSet
              -u root -p $(MONGODB_PASSWORD) --authenticationDatabase=admin --eval
              'db.dropDatabase()'
            env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-root-password
                  name: mysecret
            image: mongo:latest
            name: mongodb-purge
          restartPolicy: OnFailure
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/purge-mongodb-users

skipped mutate policy add-safe-to-evict -> resource default/CronJob/purge-mongodb-users
policy disallow-latest-tag -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob87.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/purge-mongodb-users:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: purge-mongodb-users
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sh
            - -c
            - mongo mongodb://demo-crm-service-headless.default.svc.cluster.local:27017/?replicaSet=MainRepSet
              -u root -p $(MONGODB_PASSWORD) --authenticationDatabase=admin --eval
              'db.dropDatabase()'
            env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-root-password
                  name: mysecret
            image: mongo:latest
            name: mongodb-purge
          restartPolicy: OnFailure
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/purge-mongodb-users

skipped mutate policy add-safe-to-evict -> resource default/CronJob/purge-mongodb-users
policy disallow-latest-tag -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/purge-mongodb-users failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob88.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-cron
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - echo
            - Hello from the CronJob
            image: busybox
            name: busybox
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cron
policy disallow-latest-tag -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob89.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-ns/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: test-ns
  uid: "123"
spec:
  jobTemplate:
    metadata:
      annotations:
        my: annotation
      labels:
        my: label
    spec:
      template:
        metadata:
          annotations:
            pod: annotation
          labels:
            pod: label
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
            resources: {}
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 100
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test-ns/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource test-ns/CronJob/hello
policy drop-all-capabilities -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test-ns/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron-job9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/batch-job-every-fifteen-minutes:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: batch-job-every-fifteen-minutes
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: periodic-batch-job
        spec:
          containers:
          - image: edwin/batch-job:v1
            name: main
          restartPolicy: OnFailure
  schedule: 0,15,39,43 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/batch-job-every-fifteen-minutes

skipped mutate policy add-safe-to-evict -> resource default/CronJob/batch-job-every-fifteen-minutes
policy drop-all-capabilities -> resource default/CronJob/batch-job-every-fifteen-minutes failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/batch-job-every-fifteen-minutes failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/batch-job-every-fifteen-minutes failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/batch-job-every-fifteen-minutes failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/batch-job-every-fifteen-minutes failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/batch-job-every-fifteen-minutes failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob91.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob-demo:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-demo
  namespace: default
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 3
      parallelism: 1
      template:
        metadata:
          name: job-demo
        spec:
          containers:
          - image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-succeeded
            name: job-demo
          restartPolicy: OnFailure
      ttlSecondsAfterFinished: 10
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-demo

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-demo
policy drop-all-capabilities -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob-demo failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob92.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-project/CronJob/note-adder:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: note-adder
  namespace: kubernetes-project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - 'curl -X POST -H "Content-Type: application/json" -d ''{"note":"Read
              random article: https://en.wikipedia.org/wiki/Special:Random"}'' http://backend-service:2345/add'
            image: lapalmerjack/cronjob:201
            imagePullPolicy: IfNotPresent
            name: note-adder
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-project/CronJob/note-adder

skipped mutate policy add-safe-to-evict -> resource kubernetes-project/CronJob/note-adder
policy drop-all-capabilities -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob93.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-project/CronJob/note-adder:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: note-adder
  namespace: kubernetes-project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - 'curl -X POST -H "Content-Type: application/json" -d ''{"note":"Read
              random article: https://en.wikipedia.org/wiki/Special:Random"}'' http://backend-service:2345/add'
            image: lapalmerjack/cronjob:201
            imagePullPolicy: IfNotPresent
            name: note-adder
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-project/CronJob/note-adder

skipped mutate policy add-safe-to-evict -> resource kubernetes-project/CronJob/note-adder
policy drop-all-capabilities -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kubernetes-project/CronJob/note-adder failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob94.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/note-adder:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: note-adder
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - 'curl -X POST -H "Content-Type: application/json" -d ''{"note":"Read
              random article: https://en.wikipedia.org/wiki/Special:Random"}'' http://backend-service:2345/add'
            image: lapalmerjack/cronjob:201
            imagePullPolicy: IfNotPresent
            name: note-adder
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/note-adder

skipped mutate policy add-safe-to-evict -> resource default/CronJob/note-adder
policy drop-all-capabilities -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob95.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/note-adder:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: note-adder
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - 'curl -X POST -H "Content-Type: application/json" -d ''{"note":"Read
              random article: https://en.wikipedia.org/wiki/Special:Random"}'' http://backend-service:2345/add'
            image: lapalmerjack/cronjob:201
            imagePullPolicy: IfNotPresent
            name: note-adder
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/note-adder

skipped mutate policy add-safe-to-evict -> resource default/CronJob/note-adder
policy drop-all-capabilities -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/note-adder failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob96.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-backup-banco.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/backup-banco:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-banco
  namespace: default
spec:
  jobTemplate:
    metadata:
      name: 4labs
    spec:
      template:
        metadata: null
        spec:
          containers:
          - command:
            - bash
            - -c
            - mysqldump --user="${DB_USER}" --password="${DB_PASS}" --host="${DB_HOST}"
              "$@" "${DB_NAME}" > "/app/db/${DB_NAME}-$(date '+%!d(MISSING)-%!m(MISSING)-%!Y(MISSING)')".sql;
            env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: frontend-configmaps
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: frontend-configmaps
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: frontend-configmaps
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  key: DB_PASS
                  name: frontend-secrets
            image: mysql:5.7
            imagePullPolicy: IfNotPresent
            name: backup-banco
            resources:
              limits:
                cpu: "0.2"
                memory: 100Mi
              requests:
                cpu: "0.1"
                memory: 32Mi
            volumeMounts:
            - mountPath: /app
              name: frontend-claim-nfs
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30
          volumes:
          - name: frontend-claim-nfs
            persistentVolumeClaim:
              claimName: frontend-claim-nfs
  schedule: '*/1 * * * *'
  successfulJobsHistoryLimit: 3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-banco

skipped mutate policy add-safe-to-evict -> resource default/CronJob/backup-banco
policy drop-all-capabilities -> resource default/CronJob/backup-banco failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/backup-banco failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/backup-banco failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/backup-banco failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/backup-banco failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-backup-mongodb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-mongo/CronJob/cronjob-backup-mongodb:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-backup-mongodb
  namespace: backup-mongo
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - envFrom:
            - secretRef:
                name: backup-mongodb-secrets
            image: jinjimosd/mongo-backup-s3:1.0.5
            imagePullPolicy: IfNotPresent
            name: cronjob-backup
            volumeMounts:
            - mountPath: /backup
              name: mongo-backup-pvc
          restartPolicy: Never
          volumes:
          - name: mongo-backup-pvc
            persistentVolumeClaim:
              claimName: mongo-backup-pvc
  schedule: 05 16 * * *
  successfulJobsHistoryLimit: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-mongo/CronJob/cronjob-backup-mongodb

skipped mutate policy add-safe-to-evict -> resource backup-mongo/CronJob/cronjob-backup-mongodb
policy drop-all-capabilities -> resource backup-mongo/CronJob/cronjob-backup-mongodb failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-mongo/CronJob/cronjob-backup-mongodb failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-mongo/CronJob/cronjob-backup-mongodb failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource backup-mongo/CronJob/cronjob-backup-mongodb failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource backup-mongo/CronJob/cronjob-backup-mongodb failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-mongo/CronJob/cronjob-backup-mongodb failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-bad-update.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          serviceAccountName: serviceaccount02
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-bad-update1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          serviceAccountName: serviceaccount02
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-bad-update2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          serviceAccountName: serviceaccount02
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-bad-update3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          serviceAccountName: serviceaccount02
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-bad-update4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          serviceAccountName: serviceaccount02
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-cleanup.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-cleanup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-cleanup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - "i=0 \n while [ $i -lt 10 ]\ndo \n /bin/echo hola en linea $i\n let
              i=$i+1 \n sleep 1; done"
            command:
            - /bin/bash
            - -c
            image: ubuntu:latest
            name: test
          restartPolicy: Never
      ttlSecondsAfterFinished: 10
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cleanup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-cleanup
policy disallow-latest-tag -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-cleanup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-codecommit.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-backup/ServiceAccount/kube-backup:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-backup
  namespace: kube-backup

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-concurrency.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/hello-concurrency:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-concurrency
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes Cluster; sleep 6000
            image: docker.io/busybox
            name: hello
          imagePullSecrets:
          - name: regcred
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'
  startingDeadlineSeconds: 600

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-concurrency

skipped mutate policy add-safe-to-evict -> resource default/CronJob/hello-concurrency
policy disallow-latest-tag -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/hello-concurrency failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-configmaps.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/cronjob-configmaps:
apiVersion: v1
data:
  pvc.yaml: |-
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: original-pvc
    spec:
      storageClassName: gp3
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
  recreate.sh: |-
    kubectl delete -f /apps/test-deployment.yaml
    kubectl delete pod kubecost-data-mover-pod
    kubectl delete pvc original-pvc-kc-disk-scaler
    kubectl apply -f /apps/test-deployment.yaml
  resize.sh: |-
    curl "http://disk-autoscaler-svc:9730/diskAutoScaler/run" \
      -d namespace=kubecost \
      -d deployment=busybox-deployment \
      -d pvClaim=original-pvc \
      -d resizeTo=1Gi -G
  test-deployment.yaml: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: busybox-deployment
    spec:
      selector:
        matchLabels:
          app: busybox
      replicas: 1
      template:
        metadata:
          labels:
            app: busybox
        spec:
          initContainers:
          - name: init
            image: busybox
            command: ['sh', '-c', 'date > /app/folder/date.txt']
            volumeMounts:
            - mountPath: /app/folder
              name: volume
          containers:
          - name: busybox
            image: busybox
            command:
            - sleep
            - "infinity"
            volumeMounts:
            - mountPath: /app/folder
              name: volume
          volumes:
          - name: volume
            persistentVolumeClaim:
              claimName: original-pvc
kind: ConfigMap
metadata:
  name: cronjob-configmaps
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronJob-dailyread.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todolist-daily:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todolist-daily
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: 4925k/todolist-daily
            imagePullPolicy: Always
            name: todolist-daily
          restartPolicy: OnFailure
  schedule: 0 9 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todolist-daily

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todolist-daily
policy disallow-latest-tag -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todolist-daily failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-db-backup.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-db-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-db-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  key: GOOGLE-TOKEN
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-db-backup:3.07
            imagePullPolicy: Always
            name: todo-db-backup
          restartPolicy: Never
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-db-backup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-db-backup
policy drop-all-capabilities -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-db-backup1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-db-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-db-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  key: GOOGLE-TOKEN
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-db-backup:3.07
            imagePullPolicy: Always
            name: todo-db-backup
          restartPolicy: Never
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-db-backup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-db-backup
policy drop-all-capabilities -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-db-backup2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-db-backup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-db-backup
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  key: GOOGLE-TOKEN
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: IMAGE/CRONJOB-DB-BACKUP
            imagePullPolicy: Always
            name: todo-db-backup
          restartPolicy: Never
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-db-backup

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-db-backup
policy disallow-latest-tag -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-db-backup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-definition1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reporting-cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reporting-cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      completions: 3
      parallelism: 3
      template:
        spec:
          containers:
          - image: reporting-tool
            name: reporting-tool
          restartPolicy: Never
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reporting-cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reporting-cron-job
policy disallow-latest-tag -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job-definition1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reporting-cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: null
  name: reporting-cron-job
  namespace: default
spec:
  jobTemplate:
    metadata:
      creationTimestamp: null
      name: reporting-cron-job
    spec:
      completion: 3
      parallelism: 3
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - image: ubuntu
            name: reporting-tool
            resources: {}
          restartPolicy: OnFailure
  schedule: '* /1 * * * *'
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reporting-cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reporting-cron-job
policy disallow-latest-tag -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reporting-cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-job-definition2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/demo-cron-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: demo-cron-job
  namespace: default
spec:
  jobTemplate:
    spec:
      backoffLimit: 100
      completions: 3
      parallelism: 3
      template:
        spec:
          containers:
          - image: ubuntu
            name: demo-cron-job-container
          restartPolicy: Never
  schedule: 0 0 0 * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/demo-cron-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/demo-cron-job
policy disallow-latest-tag -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/demo-cron-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-exam3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob-exam:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-exam
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - echo Hello; sleep 10; echo Bye
            image: busybox
            name: hello
          restartPolicy: Never
  schedule: '* * * * *'
  startingDeadlineSeconds: 500

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-exam

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob-exam
policy disallow-latest-tag -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob-exam failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-fail.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/foo:
apiVersion: v1
kind: Namespace
metadata:
  name: foo
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/foo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: foo
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/foo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: foo
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/foo:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: foo
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/foo:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: foo
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-fail_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to foo/CronJob/batch-job-every-minutes:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: batch-job-every-minutes
  namespace: foo
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - non-existing-command
            image: busybox
            name: hello
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource foo/CronJob/batch-job-every-minutes

skipped mutate policy add-safe-to-evict -> resource foo/CronJob/batch-job-every-minutes
policy disallow-latest-tag -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-good-update.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/


pass: 4, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-good-update1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/


pass: 4, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-good-update2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/


pass: 4, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-good-update3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/


pass: 4, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-good-update4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/


pass: 4, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: CronJob-hubble-generate-certs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/CronJob/hubble-generate-certs:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/name: hubble-generate-certs
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-generate-certs
  name: hubble-generate-certs
  namespace: kube-system
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            k8s-app: hubble-generate-certs
        spec:
          automountServiceAccountToken: true
          containers:
          - args:
            - --ca-generate=true
            - --ca-reuse-secret
            - --ca-secret-namespace=kube-system
            - --ca-secret-name=cilium-ca
            - --ca-common-name=Cilium CA
            command:
            - /usr/bin/cilium-certgen
            env:
            - name: CILIUM_CERTGEN_CONFIG
              value: |
                certs:
                - name: hubble-server-certs
                  namespace: kube-system
                  commonName: "*.default.hubble-grpc.cilium.io"
                  hosts:
                  - "*.default.hubble-grpc.cilium.io"
                  usage:
                  - signing
                  - key encipherment
                  - server auth
                  - client auth
                  validity: 8760h
                - name: hubble-relay-client-certs
                  namespace: kube-system
                  commonName: "*.hubble-relay.cilium.io"
                  hosts:
                  - "*.hubble-relay.cilium.io"
                  usage:
                  - signing
                  - key encipherment
                  - client auth
                  validity: 8760h
            image: quay.io/cilium/certgen:v0.2.1@sha256:ab6b1928e9c5f424f6b0f51c68065b9fd85e2f8d3e5f21fbd1a3cb27e6fb9321
            imagePullPolicy: IfNotPresent
            name: certgen
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
          hostNetwork: false
          restartPolicy: OnFailure
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccount: hubble-generate-certs
          serviceAccountName: hubble-generate-certs
      ttlSecondsAfterFinished: 1800
  schedule: 0 0 1 */4 *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/CronJob/hubble-generate-certs

skipped mutate policy add-safe-to-evict -> resource kube-system/CronJob/hubble-generate-certs
policy drop-cap-net-raw -> resource kube-system/CronJob/hubble-generate-certs failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/CronJob/hubble-generate-certs failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/CronJob/hubble-generate-certs failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kube-system/CronJob/hubble-generate-certs failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/CronJob/hubble-generate-certs failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-mutated.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          priorityClassName: non-production
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-mutated1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          priorityClassName: non-production
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-mutated2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          priorityClassName: non-production
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-mutated3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          priorityClassName: non-production
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-mutated4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to add-pod-priorityclassname/CronJob/hello:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello
  namespace: add-pod-priorityclassname
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: somejunkimagegoeshere
            name: hello
          priorityClassName: non-production
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello

skipped mutate policy add-safe-to-evict -> resource add-pod-priorityclassname/CronJob/hello
policy disallow-latest-tag -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource add-pod-priorityclassname/CronJob/hello failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-nodejs6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/nodejs-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    name: nodejs-cronjob
  name: nodejs-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: nodejs-cronjob
          name: nodejs-cronjob
        spec:
          containers:
          - image: khannedy/nodejs-job
            name: nodejs-cronjob
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/nodejs-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/nodejs-cronjob
policy disallow-latest-tag -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/acme-certs-job:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: acme-certs-job
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
          - name: lego-files
            persistentVolumeClaim:
              claimName: lego-files-pvc-lh

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/acme-certs-job

skipped mutate policy add-safe-to-evict -> resource default/CronJob/acme-certs-job
policy require-labels -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/

policy require-ro-rootfs -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/

policy restrict-image-registries -> resource default/CronJob/acme-certs-job failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/


pass: 4, fail: 4, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02
          initContainers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox-init
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02-init
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 50
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 50
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/CronJob/cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: backup-velero-yes
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            backup.velero.io/backup-volumes: task-pv-storage
          labels:
            app: busybox
        spec:
          containers:
          - image: busybox:1.35
            name: container01
            volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: task-pv-storage
          restartPolicy: Never
          volumes:
          - name: task-pv-storage
            persistentVolumeClaim:
              claimName: mypvc
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob
policy drop-all-capabilities -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02
          initContainers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox-init
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02-init
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 50
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/CronJob/cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: backup-velero-yes
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            backup.velero.io/backup-volumes: task-pv-storage
          labels:
            app: busybox
        spec:
          containers:
          - image: busybox:1.35
            name: container01
            volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: task-pv-storage
          restartPolicy: Never
          volumes:
          - name: task-pv-storage
            persistentVolumeClaim:
              claimName: mypvc
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob
policy drop-all-capabilities -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/CronJob/cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: backup-velero-yes
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            backup.velero.io/backup-volumes: task-pv-storage
          labels:
            app: busybox
        spec:
          containers:
          - image: busybox:1.35
            name: container01
            volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: task-pv-storage
          restartPolicy: Never
          volumes:
          - name: task-pv-storage
            persistentVolumeClaim:
              claimName: mypvc
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob
policy drop-all-capabilities -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02
          initContainers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox-init
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02-init
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 50
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/CronJob/cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: backup-velero-yes
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            backup.velero.io/backup-volumes: task-pv-storage
          labels:
            app: busybox
        spec:
          containers:
          - image: busybox:1.35
            name: container01
            volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: task-pv-storage
          restartPolicy: Never
          volumes:
          - name: task-pv-storage
            persistentVolumeClaim:
              claimName: mypvc
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob
policy drop-all-capabilities -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02
          initContainers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox-init
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02-init
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 50
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-velero-yes/CronJob/cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: backup-velero-yes
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            backup.velero.io/backup-volumes: task-pv-storage
          labels:
            app: busybox
        spec:
          containers:
          - image: busybox:1.35
            name: container01
            volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: task-pv-storage
          restartPolicy: Never
          volumes:
          - name: task-pv-storage
            persistentVolumeClaim:
              claimName: mypvc
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob

skipped mutate policy add-safe-to-evict -> resource backup-velero-yes/CronJob/cronjob
policy drop-all-capabilities -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backup-velero-yes/CronJob/cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-patched9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02
          initContainers:
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox-init
          - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            image: busybox:1.35
            name: busybox02-init
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cronjob01
policy drop-all-capabilities -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:cronjob:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:cronjob
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:cronjob:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cronjob
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cronjob
subjects:
- kind: ServiceAccount
  name: default
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-recreate-demo-environment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/recreate-demo-environment:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: recreate-demo-environment
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - bash
            - /apps/recreate.sh
            image: alpine/k8s:1.29.2
            imagePullPolicy: IfNotPresent
            name: recreate-environments
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /apps
              name: apps
          restartPolicy: Never
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: demo-service-account
          volumes:
          - configMap:
              name: cronjob-configmaps
            name: apps
          - emptyDir: {}
            name: docs
  schedule: 0,10,20,30,40,50 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/recreate-demo-environment
policy drop-cap-net-raw -> resource default/CronJob/recreate-demo-environment failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/recreate-demo-environment failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/recreate-demo-environment failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/recreate-demo-environment failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: cronjob-resize-demo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/resize-to-save-costs:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: resize-to-save-costs
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - bash
            - /apps/resize.sh
            image: alpine/k8s:1.29.2
            imagePullPolicy: IfNotPresent
            name: resize-curl
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /apps
              name: apps
          restartPolicy: Never
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: demo-service-account
          volumes:
          - configMap:
              name: cronjob-configmaps
            name: apps
          - emptyDir: {}
            name: docs
  schedule: 5,15,25,35,45,55 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/resize-to-save-costs
policy drop-cap-net-raw -> resource default/CronJob/resize-to-save-costs failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/resize-to-save-costs failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/resize-to-save-costs failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/resize-to-save-costs failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: cronjob-restart1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to <YOUR NAMESPACE>/ServiceAccount/deployment-restart:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-restart
  namespace: <YOUR NAMESPACE>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-restart1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to <YOUR NAMESPACE>/Role/deployment-restart:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployment-restart
  namespace: <YOUR NAMESPACE>
rules:
- apiGroups:
  - apps
  - extensions
  resourceNames:
  - <YOUR DEPLOYMENT NAME>
  resources:
  - deployments
  verbs:
  - get
  - patch
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-restart1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to <YOUR NAMESPACE>/RoleBinding/deployment-restart:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deployment-restart
  namespace: <YOUR NAMESPACE>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deployment-restart
subjects:
- kind: ServiceAccount
  name: deployment-restart
  namespace: <YOUR NAMESPACE>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-restart1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to <YOUR NAMESPACE>/CronJob/deployment-restart:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: deployment-restart
  namespace: <YOUR NAMESPACE>
spec:
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 2
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - command:
            - bash
            - -c
            - kubectl rollout restart deployment/mihomo-deployment && kubectl rollout
              status deployment/mihomo-deployment
            image: bitnami/kubectl
            imagePullPolicy: Always
            name: kubectl
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: deployment-restart
          serviceAccountName: deployment-restart
          terminationGracePeriodSeconds: 30
  schedule: 0 3 * * *
  suspend: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource <YOUR NAMESPACE>/CronJob/deployment-restart

skipped mutate policy add-safe-to-evict -> resource <YOUR NAMESPACE>/CronJob/deployment-restart
policy disallow-latest-tag -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource <YOUR NAMESPACE>/CronJob/deployment-restart failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-spec.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/test:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - sleep 10
            image: busybox:1.28
            name: test
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/test

skipped mutate policy add-safe-to-evict -> resource default/CronJob/test
policy drop-all-capabilities -> resource default/CronJob/test failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/test failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/test failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/test failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/test failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/test failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-ssh.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-backup/ServiceAccount/kube-backup:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-backup
  namespace: kube-backup

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-success.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/foo:
apiVersion: v1
kind: Namespace
metadata:
  name: foo
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/foo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: foo
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/foo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: foo
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/foo:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: foo
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/foo:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: foo
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cronjob-success_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to foo/CronJob/batch-job-every-minutes:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: batch-job-every-minutes
  namespace: foo
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'
  startingDeadlineSeconds: 15

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource foo/CronJob/batch-job-every-minutes

skipped mutate policy add-safe-to-evict -> resource foo/CronJob/batch-job-every-minutes
policy drop-all-capabilities -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource foo/CronJob/batch-job-every-minutes failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: IMAGE/CRONJOB-TODO
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy disallow-latest-tag -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: PROJECT/IMAGE/TODO-JOB
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy disallow-latest-tag -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: PROJECT/IMAGE/TODO-JOB
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-read-wiki
policy disallow-latest-tag -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: PROJECT/IMAGE/TODO-JOB
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-read-wiki
policy disallow-latest-tag -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: PROJECT/IMAGE/TODO-JOB
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource default/CronJob/todo-read-wiki
policy disallow-latest-tag -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cronjob-todo9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project/CronJob/todo-read-wiki:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: todo-read-wiki
  namespace: project
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE-PASSWORD
                  name: database-secrets
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: DATABASE-USER
                  name: database-secrets
            - name: PGHOST
              value: todo-db-svc
            - name: PGPORT
              value: "5432"
            image: sushashu/todo-job:2.09
            name: todo-job
          restartPolicy: Never
  schedule: 0 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki

skipped mutate policy add-safe-to-evict -> resource project/CronJob/todo-read-wiki
policy drop-all-capabilities -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project/CronJob/todo-read-wiki failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: cron-nodejs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/nodejs-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    name: nodejs-cronjob
  name: nodejs-cronjob
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: nodejs-cronjob
          name: nodejs-cronjob
        spec:
          containers:
          - image: kalislami/nodejs-job
            name: nodejs-cronjob
          restartPolicy: Never
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/nodejs-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/nodejs-cronjob
policy disallow-latest-tag -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/nodejs-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cron-schedulejob.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/crondbdump1:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: crondbdump1
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          labels:
            parent: crondumpifrs
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - /opt/rh/rh-mysql57/root/usr/bin/mysqldump --single-transaction --routines
              -u $MYSQL_USER $MYSQL_DB -h $MYSQL_HOST | gzip > /tmp/dump`date '+%!Y(MISSING)%!m(MISSING)%!d(MISSING)_%!H(MISSING)%!M(MISSING)%!S(MISSING)'`.sql.gz
            env:
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PWD
              value: India@12345
            - name: MYSQL_HOST
              value: mysql1
            - name: MYSQL_DB
              value: myflixdb
            image: centos/mysql-57-centos7
            name: mysqldump1
            volumeMounts:
            - mountPath: /tmp
              name: dbdumpsvol
              subPath: mysqlbackupcron
          nodeSelector:
            kubernetes.io/hostname: i-0fc7f302b5c0ddb45
          restartPolicy: Never
          volumes:
          - hostPath:
              path: /tmp/
            name: dbdumpsvol
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 7

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/crondbdump1
policy disallow-latest-tag -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/crondbdump1 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

