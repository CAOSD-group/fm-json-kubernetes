##### FILE: microservice_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/microservice1-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice1-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservice1
  template:
    metadata:
      labels:
        app: microservice1
    spec:
      containers:
      - image: sumangaire96/microservice1:v1
        name: microservice1
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/microservice1-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/microservice1-deployment
policy disallow-default-namespace -> resource default/Deployment/microservice1-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/microservice1-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: microservice_1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/microservice1-service:
apiVersion: v1
kind: Service
metadata:
  name: microservice1-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: microservice1
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservice_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/microservice2-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice2-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservice2
  template:
    metadata:
      labels:
        app: microservice2
    spec:
      containers:
      - image: sumangaire96/microservice2:v1
        name: microservice2
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/microservice2-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/microservice2-deployment
policy disallow-default-namespace -> resource default/Deployment/microservice2-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/microservice2-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: microservice_2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/microservice2-service:
apiVersion: v1
kind: Service
metadata:
  name: microservice2-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: microservice2
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/myservice:
apiVersion: v1
kind: Service
metadata:
  name: myservice
  namespace: default
spec:
  ports:
  - nodePort: 31280
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: myservice
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/myservice failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: microservices2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/myservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice
  template:
    metadata:
      labels:
        app: myservice
    spec:
      containers:
      - image: moussa923/myservice:1
        imagePullPolicy: IfNotPresent
        name: myservice
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/myservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/myservice
policy disallow-default-namespace -> resource default/Deployment/myservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/myservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/myservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/myservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/myservice failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/myservice failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/myservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/myservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: microservices4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: apache
    spec:
      containers:
      - image: docker.io/ewolff/microservice-kubernetes-demo-apache:latest
        name: apache
        ports:
        - containerPort: 80
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache
policy disallow-default-namespace -> resource default/Deployment/apache failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: microservices4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/catalog:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: catalog
  name: catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: catalog
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: catalog
    spec:
      containers:
      - image: docker.io/ewolff/microservice-kubernetes-demo-catalog:latest
        name: catalog
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/catalog

skipped mutate policy add-safe-to-evict -> resource default/Deployment/catalog
policy disallow-default-namespace -> resource default/Deployment/catalog failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/catalog failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: microservices4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/customer:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: customer
  name: customer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: customer
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: customer
    spec:
      containers:
      - image: docker.io/ewolff/microservice-kubernetes-demo-customer:latest
        name: customer
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/customer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/customer
policy disallow-default-namespace -> resource default/Deployment/customer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/customer failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/customer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/customer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/customer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/customer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/customer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/customer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/customer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: microservices4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/order:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: order
  name: order
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: order
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: order
    spec:
      containers:
      - image: docker.io/ewolff/microservice-kubernetes-demo-order:latest
        name: order
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/order

skipped mutate policy add-safe-to-evict -> resource default/Deployment/order
policy disallow-default-namespace -> resource default/Deployment/order failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/order failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/order failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/order failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/order failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/order failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/order failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/order failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/order failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: microservices4_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: apache
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices4_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/catalog:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: catalog
  name: catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: catalog
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices4_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/customer:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: customer
  name: customer
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: customer
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices4_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/order:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: order
  name: order
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: order
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices-demo_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/productcatalogservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: productcatalogservice
  name: productcatalogservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "3550"
        - name: DISABLE_PROFILER
          value: "1"
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.10.0
        livenessProbe:
          grpc:
            port: 3550
        name: server
        ports:
        - containerPort: 3550
        readinessProbe:
          grpc:
            port: 3550
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: productcatalogservice
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/productcatalogservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/productcatalogservice
policy disallow-default-namespace -> resource default/Deployment/productcatalogservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/productcatalogservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/productcatalogservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/productcatalogservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: microservices-demo_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/productcatalogservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: productcatalogservice
  name: productcatalogservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
  selector:
    app: productcatalogservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices-demo_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/productcatalogservice:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: productcatalogservice
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: microservices-demo_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/checkoutservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: checkoutservice
  name: checkoutservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: SHIPPING_SERVICE_ADDR
          value: shippingservice:50051
        - name: PAYMENT_SERVICE_ADDR
          value: paymentservice:50051
        - name: EMAIL_SERVICE_ADDR
          value: emailservice:5000
        - name: CURRENCY_SERVICE_ADDR
          value: currencyservice:7000
        - name: CART_SERVICE_ADDR
          value: cartservice:7070
        image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.10.0
        livenessProbe:
          grpc:
            port: 5050
        name: server
        ports:
        - containerPort: 5050
        readinessProbe:
          grpc:
            port: 5050
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: checkoutservice

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/checkoutservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/checkoutservice
policy disallow-default-namespace -> resource default/Deployment/checkoutservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/checkoutservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/checkoutservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/checkoutservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: microservices-demo_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/checkoutservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: checkoutservice
  name: checkoutservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
  selector:
    app: checkoutservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: middleware-to-mysql.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/NetworkPolicy/middleware-to-mysql:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: middleware-to-mysql
  namespace: production
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: middleware
  podSelector:
    matchLabels:
      app: mysql
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mifiib.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mifiib-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mifiib
  name: mifiib-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mifiib
  template:
    metadata:
      labels:
        app: mifiib
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root_password
              name: mifiib-secret
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: mifiib-secret
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mifiib-secret
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mifiib-secret
        image: yana-db
        imagePullPolicy: Never
        name: mifiibdb
        ports:
        - containerPort: 3306
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mifiib-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mifiib-deployment
policy disallow-default-namespace -> resource default/Deployment/mifiib-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mifiib-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mifiib_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mifiib-service:
apiVersion: v1
kind: Service
metadata:
  name: mifiib-service
  namespace: default
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mifiib

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mifiib-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mifiib-config:
apiVersion: v1
data:
  mifiib-url: mifiib-service
kind: ConfigMap
metadata:
  name: mifiib-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mifiib-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mifiib-secret:
apiVersion: v1
data:
  database: bWlmaWli
  password: c1VjcmV0MTIz
  root_password: dGVzdA==
  username: eWFuYQ==
kind: Secret
metadata:
  name: mifiib-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: migrate-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to admission-app/Job/admitere-staging-run-migrations:
apiVersion: batch/v1
kind: Job
metadata:
  name: admitere-staging-run-migrations
  namespace: admission-app
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
      - command:
        - bundle
        - exec
        - rails
        - db:migrate
        env:
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        - name: MAILER_DEFAULT_URL
          value: admitere-staging.unibuc.ro
        - name: DATABASE_URL
          value: postgresql://admission-app-db:5432/admitere_staging
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: admitere-staging.admission-app-db.credentials.postgresql.acid.zalan.do
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: admitere-staging.admission-app-db.credentials.postgresql.acid.zalan.do
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              key: key
              name: admitere-staging.secret-key-base
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              key: email
              name: admitere-staging.admin-credentials
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: admitere-staging.admin-credentials
        image: registry.gitlab.com/unibuc/directia-itc/admission-app:main
        name: admitere-staging-run-migrations
      imagePullSecrets:
      - name: admission-docker-registry-pull-secret
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource admission-app/Job/admitere-staging-run-migrations

skipped mutate policy add-safe-to-evict -> resource admission-app/Job/admitere-staging-run-migrations
policy drop-all-capabilities -> resource admission-app/Job/admitere-staging-run-migrations failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource admission-app/Job/admitere-staging-run-migrations failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource admission-app/Job/admitere-staging-run-migrations failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource admission-app/Job/admitere-staging-run-migrations failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource admission-app/Job/admitere-staging-run-migrations failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource admission-app/Job/admitere-staging-run-migrations failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: migrate-svc-client.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/migrate-svc-client:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: migrate-svc-client
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: migrate-svc-client
  template:
    metadata:
      labels:
        app: migrate-svc-client
        zgroup: migrate-svc
    spec:
      containers:
      - command:
        - /client
        - migrate-svc.default.svc.cluster.local.:8000
        image: docker.io/cilium/migrate-svc-test:v0.0.2
        imagePullPolicy: IfNotPresent
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/migrate-svc-client

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/migrate-svc-client
policy drop-all-capabilities -> resource default/ReplicaSet/migrate-svc-client failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/migrate-svc-client failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/migrate-svc-client failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/migrate-svc-client failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/migrate-svc-client failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/migrate-svc-client failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: migrate-svc-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/migrate-svc:
apiVersion: v1
kind: Service
metadata:
  name: migrate-svc
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    app: migrate-svc-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: migrate-svc-server_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/migrate-svc-server:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: migrate-svc-server
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: migrate-svc-server
  template:
    metadata:
      labels:
        app: migrate-svc-server
        zgroup: migrate-svc
    spec:
      containers:
      - command:
        - /server
        - "8000"
        image: docker.io/cilium/migrate-svc-test:v0.0.2
        imagePullPolicy: IfNotPresent
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/migrate-svc-server

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/migrate-svc-server
policy drop-all-capabilities -> resource default/ReplicaSet/migrate-svc-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/migrate-svc-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/migrate-svc-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/migrate-svc-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/migrate-svc-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/migrate-svc-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: migration-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/migration-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: migration-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - python
        - manage.py
        - migrate
        env:
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)
        envFrom:
        - configMapRef:
            name: db-access
        image: pluralsight_backend:latest
        imagePullPolicy: Never
        name: backend
      restartPolicy: Never
  ttlSecondsAfterFinished: 100

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/migration-job

skipped mutate policy add-safe-to-evict -> resource default/Job/migration-job
policy disallow-default-namespace -> resource default/Job/migration-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/migration-job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/migration-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/migration-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/migration-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/migration-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/migration-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/migration-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: migration-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to snack-bar/Job/migration-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: migration-job
  namespace: snack-bar
spec:
  template:
    spec:
      containers:
      - command:
        - npx
        - prisma
        - migrate
        - deploy
        env:
        - name: DATABASE_URL
          value: postgresql://root:root@snack-bar-db:5432/snack-api-db
        image: deborasilveira/snack-bar-api:latest
        name: migration-job
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource snack-bar/Job/migration-job

skipped mutate policy add-safe-to-evict -> resource snack-bar/Job/migration-job
policy disallow-latest-tag -> resource snack-bar/Job/migration-job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource snack-bar/Job/migration-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource snack-bar/Job/migration-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource snack-bar/Job/migration-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource snack-bar/Job/migration-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource snack-bar/Job/migration-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource snack-bar/Job/migration-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: migrations3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to django-app/Job/django-staticfiles:
apiVersion: batch/v1
kind: Job
metadata:
  name: django-staticfiles
  namespace: django-app
spec:
  activeDeadlineSeconds: 60
  backoffLimit: 3
  template:
    spec:
      containers:
      - command:
        - python
        - manage.py
        - collectstatic
        - --noinput
        envFrom:
        - configMapRef:
            name: app-cm
        image: mukulmantosh/django-kubernetes:1.0
        imagePullPolicy: Always
        name: staticfiles-container
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /data/static
          name: staticfiles
      restartPolicy: OnFailure
      volumes:
      - name: staticfiles
        persistentVolumeClaim:
          claimName: staticfiles-pvc
  ttlSecondsAfterFinished: 100

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource django-app/Job/django-staticfiles

skipped mutate policy add-safe-to-evict -> resource django-app/Job/django-staticfiles
policy drop-all-capabilities -> resource django-app/Job/django-staticfiles failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource django-app/Job/django-staticfiles failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource django-app/Job/django-staticfiles failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource django-app/Job/django-staticfiles failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource django-app/Job/django-staticfiles failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource django-app/Job/django-staticfiles failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: migrator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to taskapp/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: taskapp
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_NAME
          value: taskapp
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v1.0.0
        name: migrator
        volumeMounts:
        - mountPath: var/run/secrets/mysql
          name: mysql-secret
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource taskapp/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource taskapp/Job/migrator-up
policy drop-all-capabilities -> resource taskapp/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource taskapp/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource taskapp/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: migrator1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_NAME
          value: taskapp
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v0.1.0
        name: migrator
        volumeMounts:
        - mountPath: /var/run/secrets/mysql
          name: mysql-secret
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up
policy disallow-default-namespace -> resource default/Job/migrator-up failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: migrator2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_NAME
          value: taskapp
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v0.1.0
        name: migrator
        volumeMounts:
        - mountPath: /var/run/secrets/mysql
          name: mysql-secret
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up
policy disallow-default-namespace -> resource default/Job/migrator-up failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: migrator3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_NAME
          value: taskapp
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v0.1.0
        name: migrator
        volumeMounts:
        - mountPath: /var/run/secrets/mysql
          name: mysql-secret
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up
policy disallow-default-namespace -> resource default/Job/migrator-up failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: migrator4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_NAME
          value: taskapp
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v0.1.0
        name: migrator
        volumeMounts:
        - mountPath: /var/run/secrets/mysql
          name: mysql-secret
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource default/Job/migrator-up
policy disallow-default-namespace -> resource default/Job/migrator-up failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: migrator5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to taskapp/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: taskapp
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: taskapp
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v1.0.0
        name: migrator
        volumeMounts:
        - mountPath: /var/run/secrets/mysql
          name: mysql-secret
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource taskapp/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource taskapp/Job/migrator-up
policy drop-all-capabilities -> resource taskapp/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource taskapp/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource taskapp/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: migrator6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to taskapp/Job/migrator-up:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: migrator
  name: migrator-up
  namespace: taskapp
spec:
  template:
    metadata:
      labels:
        app: migrator
    spec:
      containers:
      - args:
        - $(DB_HOST)
        - $(DB_PORT)
        - $(DB_NAME)
        - $(DB_USERNAME)
        - /var/run/secrets/mysql/user_password
        - up
        command:
        - bash
        - /migrator/migrate.sh
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: taskapp
        - name: DB_USERNAME
          value: taskapp_user
        image: ghcr.io/gihyodocker/taskapp-migrator:v1.0.0
        name: migrator
        volumeMounts:
        - mountPath: /var/run/secrets/mysql
          name: mysql-secret
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: mysql-secret
        secret:
          secretName: mysql

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource taskapp/Job/migrator-up

skipped mutate policy add-safe-to-evict -> resource taskapp/Job/migrator-up
policy drop-all-capabilities -> resource taskapp/Job/migrator-up failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource taskapp/Job/migrator-up failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource taskapp/Job/migrator-up failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource taskapp/Job/migrator-up failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: mihomo-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mihomo/ConfigMap/mihomo-config:
apiVersion: v1
data:
  config.yaml: |
    xxxx
kind: ConfigMap
metadata:
  name: mihomo-config
  namespace: mihomo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mihomo-config_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mihomo/ConfigMap/mihomo-iptables:
apiVersion: v1
data:
  iptables.sh: '#!/bin/sh echo "xxxx"'
kind: ConfigMap
metadata:
  name: mihomo-iptables
  namespace: mihomo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mihomo-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mihomo/Deployment/mihomo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mihomo-deployment
  namespace: mihomo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mihomo
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        k8s.v1.cni.cncf.io/networks: mihomo-home-lan
      labels:
        app: mihomo
    spec:
      containers:
      - env:
        - name: TZ
          value: Asia/Shanghai
        image: metacubex/mihomo:Alpha
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - /root/iptables.sh
        name: mihomo
        ports:
        - containerPort: 53
          name: dns
        - containerPort: 7890
          name: mixed-port
        - containerPort: 9999
          name: api
        - containerPort: 7893
          name: tproxy-port
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /root/.config/mihomo/config.yaml
          name: mihomo-config
          subPath: config.yaml
        - mountPath: /root/.config/mihomo
          name: mihomo-volume
        - mountPath: /root/iptables.sh
          name: iptables
          subPath: iptables.sh
      nodeName: master
      volumes:
      - hostPath:
          path: /root/mihomo
        name: mihomo-volume
      - configMap:
          name: mihomo-config
        name: mihomo-config
      - configMap:
          defaultMode: 484
          name: mihomo-iptables
        name: iptables

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource mihomo/Deployment/mihomo-deployment
policy drop-all-capabilities -> resource mihomo/Deployment/mihomo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource mihomo/Deployment/mihomo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource mihomo/Deployment/mihomo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource mihomo/Deployment/mihomo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource mihomo/Deployment/mihomo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource mihomo/Deployment/mihomo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: mikes_namespaces.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mike-dev:
apiVersion: v1
kind: Namespace
metadata:
  name: mike-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mike-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mike-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mike-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mike-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mike-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mike-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikes_namespaces_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mike-prod:
apiVersion: v1
kind: Namespace
metadata:
  name: mike-prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mike-prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mike-prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mike-prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mike-prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mike-prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mike-prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikes_namespaces1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mike-dev:
apiVersion: v1
kind: Namespace
metadata:
  name: mike-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mike-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mike-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mike-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mike-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mike-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mike-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikes_namespaces1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mike-prod:
apiVersion: v1
kind: Namespace
metadata:
  name: mike-prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mike-prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mike-prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mike-prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mike-prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mike-prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mike-prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mike-prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikesapi_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mikesapi-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mikesapi-editor-role
  namespace: default
rules:
- apiGroups:
  - simplyanengineer.com
  resources:
  - mikesapis
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - simplyanengineer.com
  resources:
  - mikesapis/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikesapi_editor_role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mikesapi-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mikesapi-editor-role
  namespace: default
rules:
- apiGroups:
  - simplyanengineer.com.simplyanengineer.com
  resources:
  - mikesapis
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - simplyanengineer.com.simplyanengineer.com
  resources:
  - mikesapis/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikesapi_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mikesapi-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mikesapi-viewer-role
  namespace: default
rules:
- apiGroups:
  - simplyanengineer.com
  resources:
  - mikesapis
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - simplyanengineer.com
  resources:
  - mikesapis/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mikesapi_viewer_role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mikesapi-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mikesapi-viewer-role
  namespace: default
rules:
- apiGroups:
  - simplyanengineer.com.simplyanengineer.com
  resources:
  - mikesapis
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - simplyanengineer.com.simplyanengineer.com
  resources:
  - mikesapis/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mike-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mike-service:
apiVersion: v1
kind: Service
metadata:
  name: mike-service
  namespace: default
spec:
  ports:
  - nodePort: 31394
    port: 5000
    targetPort: 5000
  selector:
    app: mike-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mike-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mike-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mike-service:
apiVersion: v1
kind: Service
metadata:
  name: mike-service
  namespace: default
spec:
  ports:
  - nodePort: 31394
    port: 5000
    targetPort: 5000
  selector:
    app: mike-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mike-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mike-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mike-service:
apiVersion: v1
kind: Service
metadata:
  name: mike-service
  namespace: default
spec:
  ports:
  - nodePort: 31394
    port: 5000
    targetPort: 5000
  selector:
    app: mike-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mike-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mike-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mike-service:
apiVersion: v1
kind: Service
metadata:
  name: mike-service
  namespace: default
spec:
  ports:
  - nodePort: 31394
    port: 5000
    targetPort: 5000
  selector:
    app: mike-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mike-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: millisearch-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/meilisearch:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meilisearch
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: meilisearch
  template:
    metadata:
      labels:
        app: meilisearch
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
      containers:
      - envFrom:
        - secretRef:
            name: meilisearch-secrets
        image: getmeili/meilisearch:v1.7.3
        imagePullPolicy: Always
        name: chat-meilisearch
        ports:
        - containerPort: 7700
        volumeMounts:
        - mountPath: /meili_data
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: librechat-meilisearch-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/meilisearch

skipped mutate policy add-safe-to-evict -> resource default/Deployment/meilisearch
policy disallow-default-namespace -> resource default/Deployment/meilisearch failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/meilisearch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/meilisearch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/meilisearch failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: millisearch-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/librechat-meilisearch-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: librechat-meilisearch-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: millisearch-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/meilisearch:
apiVersion: v1
kind: Service
metadata:
  name: meilisearch
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 7700
    targetPort: 7700
  selector:
    app: meilisearch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: millisearch-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/meilisearch-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/librechat/meilisearch
    avp.kubernetes.io/secret-version: "1"
  name: meilisearch-secrets
  namespace: default
stringData:
  MEILI_HOST: http://0.0.0.0:7700
  MEILI_MASTER_KEY: <MEILI_MASTER_KEY>
  MEILI_NO_ANALYTICS: "true"
  SEARCH: "true"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: millisearch-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/meilisearch:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meilisearch
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: meilisearch
  template:
    metadata:
      labels:
        app: meilisearch
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/role
                operator: In
                values:
                - agent
      containers:
      - envFrom:
        - secretRef:
            name: meilisearch-secrets
        image: getmeili/meilisearch:v1.7.3
        imagePullPolicy: Always
        name: chat-meilisearch
        ports:
        - containerPort: 7700
        volumeMounts:
        - mountPath: /meili_data
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: librechat-meilisearch-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/meilisearch

skipped mutate policy add-safe-to-evict -> resource default/Deployment/meilisearch
policy disallow-default-namespace -> resource default/Deployment/meilisearch failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/meilisearch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/meilisearch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/meilisearch failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/meilisearch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: millisearch-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/librechat-meilisearch-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: librechat-meilisearch-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: millisearch-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/meilisearch:
apiVersion: v1
kind: Service
metadata:
  name: meilisearch
  namespace: default
spec:
  clusterIP: None
  ports:
  - port: 7700
    targetPort: 7700
  selector:
    app: meilisearch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: millisearch-deployment1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/meilisearch-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/librechat/meilisearch
    avp.kubernetes.io/secret-version: "1"
  name: meilisearch-secrets
  namespace: default
stringData:
  MEILI_HOST: http://0.0.0.0:7700
  MEILI_MASTER_KEY: <MEILI_MASTER_KEY>
  MEILI_NO_ANALYTICS: "true"
  SEARCH: "true"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mimir-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Deployment/mimir:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mimir
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: mimir
    spec:
      containers:
      - args:
        - -config.file=/etc/mimir/config.yaml
        image: grafana/mimir:latest
        name: mimir
        ports:
        - containerPort: 9009
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
          readOnly: true
        - mountPath: /mimir
          name: data
      volumes:
      - configMap:
          name: mimir-config
        name: config
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/mimir
policy disallow-latest-tag -> resource monitoring/Deployment/mimir failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource monitoring/Deployment/mimir failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitoring/Deployment/mimir failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Deployment/mimir failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Deployment/mimir failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource monitoring/Deployment/mimir failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource monitoring/Deployment/mimir failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource monitoring/Deployment/mimir failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: mimir-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Service/mimir:
apiVersion: v1
kind: Service
metadata:
  name: mimir
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 9009
    protocol: TCP
    targetPort: 9009
  selector:
    app: mimir
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mimirrules_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mimirrules-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: o11y-rules-telemetry-operator
    app.kubernetes.io/instance: mimirrules-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: o11y-rules-telemetry-operator
  name: mimirrules-editor-role
  namespace: default
rules:
- apiGroups:
  - mimirrules.telemetry.springernature.com
  resources:
  - mimirrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mimirrules.telemetry.springernature.com
  resources:
  - mimirrules/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mimirrules_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/mimirrules-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: o11y-rules-telemetry-operator
    app.kubernetes.io/instance: mimirrules-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: o11y-rules-telemetry-operator
  name: mimirrules-viewer-role
  namespace: default
rules:
- apiGroups:
  - mimirrules.telemetry.springernature.com
  resources:
  - mimirrules
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - mimirrules.telemetry.springernature.com
  resources:
  - mimirrules/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mincraftserver.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/public-server-mcdata:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: public-server-mcdata
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mindsdb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to db/Deployment/mindsdb:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mindsdb
  name: mindsdb
  namespace: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mindsdb
  template:
    metadata:
      labels:
        app: mindsdb
    spec:
      containers:
      - env:
        - name: MINDSDB_PROJECT
          value: test_project
        - name: MINDSDB_DB_HOST
          value: ""
        - name: MINDSDB_DB_PORT
          value: "3306"
        - name: MINDSDB_DB_USER
          value: root
        - name: MINDSDB_DB_PASSWORD
          value: ""
        image: mindsdb/mindsdb:latest
        name: mindsdb
        ports:
        - containerPort: 47334
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /root/mindsdb_config.json
          name: config-volume
          subPath: mdb_config.json
      volumes:
      - configMap:
          name: mindsdb-config
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource db/Deployment/mindsdb

skipped mutate policy add-safe-to-evict -> resource db/Deployment/mindsdb
policy disallow-latest-tag -> resource db/Deployment/mindsdb failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource db/Deployment/mindsdb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource db/Deployment/mindsdb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource db/Deployment/mindsdb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource db/Deployment/mindsdb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource db/Deployment/mindsdb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource db/Deployment/mindsdb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: mindsdb_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to db/Service/mindsdb:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mindsdb
  name: mindsdb
  namespace: db
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 47334
  selector:
    app: mindsdb
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraft1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minecraft/Deployment/minecraft-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minecraft-server
  namespace: minecraft
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minecraft
  template:
    metadata:
      labels:
        app: minecraft
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - master
      containers:
      - env:
        - name: EULA
          value: "TRUE"
        - name: MEMORYSIZE
          value: 4G
        - name: TZ
          value: America/New_York
        - name: PAPERMC_FLAGS
          value: --nojline
        image: docker.prayujt.com/paper-mc:latest
        name: minecraft
        ports:
        - containerPort: 25565
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /data
          name: minecraft-data
      nodeSelector:
        kubernetes.io/hostname: server-master
      volumes:
      - name: minecraft-data
        persistentVolumeClaim:
          claimName: minecraft-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minecraft/Deployment/minecraft-server

skipped mutate policy add-safe-to-evict -> resource minecraft/Deployment/minecraft-server
policy disallow-latest-tag -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minecraft/Deployment/minecraft-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minecraft1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minecraft/Service/minecraft-service:
apiVersion: v1
kind: Service
metadata:
  name: minecraft-service
  namespace: minecraft
spec:
  ports:
  - port: 25565
    protocol: TCP
    targetPort: 25565
  selector:
    app: minecraft
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftdeployment_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftdeployment-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftdeployment-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftdeployment-editor-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftdeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftdeployments/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftdeployment_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftdeployment-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftdeployment-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftdeployment-viewer-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftdeployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftdeployments/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraft-minecraft.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minecraft-server/Deployment/minecraft-minecraft:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    meta.helm.sh/release-name: minecraft
    meta.helm.sh/release-namespace: minecraft-server
  creationTimestamp: "2024-05-21T06:27:01Z"
  generation: 5
  labels:
    app: minecraft-minecraft
    app.kubernetes.io/instance: minecraft-minecraft
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minecraft
    app.kubernetes.io/version: 4.17.0
    chart: minecraft-4.17.0
    heritage: Helm
    release: minecraft
  name: minecraft-minecraft
  namespace: minecraft-server
  resourceVersion: "29072"
  uid: c82d99c0-9138-46f4-a918-b61baae057e0
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: minecraft-minecraft
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        app: minecraft-minecraft
        app.kubernetes.io/instance: minecraft-minecraft
        app.kubernetes.io/name: minecraft
        app.kubernetes.io/version: 4.17.0
    spec:
      containers:
      - env:
        - name: EULA
          value: "true"
        - name: TYPE
          value: VANILLA
        - name: VERSION
          value: LATEST
        - name: DIFFICULTY
          value: peaceful
        - name: MAX_PLAYERS
          value: "20"
        - name: MAX_WORLD_SIZE
          value: "10000"
        - name: MAX_BUILD_HEIGHT
          value: "256"
        - name: MAX_TICK_TIME
          value: "60000"
        - name: SPAWN_PROTECTION
          value: "16"
        - name: VIEW_DISTANCE
          value: "10"
        - name: MODE
          value: creative
        - name: MOTD
          value: Welcome to Minecraft on Kubernetes!
        - name: LEVEL_TYPE
          value: DEFAULT
        - name: LEVEL
          value: world
        - name: MODRINTH_ALLOWED_VERSION_TYPE
          value: release
        - name: MEMORY
          value: 1024M
        - name: OVERRIDE_SERVER_PROPERTIES
          value: "false"
        - name: ENABLE_RCON
          value: "false"
        image: itzg/minecraft-server:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - mc-health
          failureThreshold: 20
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: minecraft-minecraft
        ports:
        - containerPort: 25565
          name: minecraft
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mc-health
          failureThreshold: 20
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: "1"
            memory: 1280Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /data
          name: datadir
        - mountPath: /backups
          name: backupdir
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: datadir
      - emptyDir: {}
        name: backupdir
status:
  conditions:
  - lastTransitionTime: "2024-05-21T06:27:02Z"
    lastUpdateTime: "2024-05-21T06:47:17Z"
    message: ReplicaSet "minecraft-minecraft-84c6b8cdf5" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-05-22T21:28:08Z"
    lastUpdateTime: "2024-05-22T21:28:08Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minecraft-server/Deployment/minecraft-minecraft
policy disallow-latest-tag -> resource minecraft-server/Deployment/minecraft-minecraft failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource minecraft-server/Deployment/minecraft-minecraft failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource minecraft-server/Deployment/minecraft-minecraft failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource minecraft-server/Deployment/minecraft-minecraft failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 4, warn: 0, error: 0, skip: 1 

##### FILE: minecraft-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/papermc-rcon-server:
apiVersion: v1
kind: Pod
metadata:
  name: papermc-rcon-server
  namespace: default
spec:
  containers:
  - env:
    - name: EULA
      value: "true"
    - name: ENABLE_RCON
      value: "true"
    - name: ONLINE_MODE
      value: "true"
    - name: RCON.PASSWORD
      value: chooseRconPassword
    - name: SERVER_NAME
      value: yourserverName
    - name: RCON.PORT
      value: "25575"
    image: phyremaster/papermc
    name: papermc
    ports:
    - containerPort: 25565
    volumeMounts:
    - mountPath: /minecraft
      name: minecraft-data
  - env:
    - name: RCON_PASSWORD
      value: chooseRconPassword
    image: outdead/rcon
    name: rcon
    ports:
    - containerPort: 25575
  restartPolicy: Always
  volumes:
  - name: minecraft-data
    persistentVolumeClaim:
      claimName: minecraft-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/papermc-rcon-server

skipped mutate policy add-safe-to-evict -> resource default/Pod/papermc-rcon-server
policy disallow-default-namespace -> resource default/Pod/papermc-rcon-server failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/papermc-rcon-server failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/papermc-rcon-server failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/papermc-rcon-server failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/papermc-rcon-server failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/papermc-rcon-server failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/papermc-rcon-server failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/papermc-rcon-server failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/papermc-rcon-server failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minecraftserver_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftserver-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftserver-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftserver-editor-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftservers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftserver_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftserver-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftserver-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftserver-viewer-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftservers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftservers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftserverautoscaler_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftserverautoscaler-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftserverautoscaler-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftserverautoscaler-editor-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftserverautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftserverautoscalers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftserverautoscaler_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftserverautoscaler-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftserverautoscaler-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftserverautoscaler-viewer-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftserverautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftserverautoscalers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftserverset_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftserverset-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftserverset-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftserverset-editor-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftserversets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftserversets/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftserverset_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftserverset-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftserverset-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftserverset-viewer-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftserversets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftserversets/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftstatefulset_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftstatefulset-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftstatefulset-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftstatefulset-editor-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftstatefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftstatefulsets/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minecraftstatefulset_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/minecraftstatefulset-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: strela
    app.kubernetes.io/instance: minecraftstatefulset-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: strela
  name: minecraftstatefulset-viewer-role
  namespace: default
rules:
- apiGroups:
  - strela.dev
  resources:
  - minecraftstatefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - strela.dev
  resources:
  - minecraftstatefulsets/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minernodestatefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/minernode:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minernode
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minernode
  serviceName: besu-node
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: minernode
    spec:
      containers:
      - args:
        - |
          exec /opt/besu/bin/besu \
            --config-file=/etc/besu/config.toml \
            --miner-enabled \
            --miner-coinbase=${MINER_COINBASE} \
            --bootnodes=enode://${BOOTNODE_PUBKEY}@${BESU_BOOTNODE_SERVICE_HOST}:30303
        command:
        - /bin/sh
        - -c
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BOOTNODE_PUBKEY
          valueFrom:
            configMapKeyRef:
              key: bootnodePubKey
              name: besu-bootnodes-configmap
        - name: MINER_COINBASE
          value: 0x935c7111EBD8fb96F51CB8002C07B7a8Ad144Cca
        image: hyperledger/besu:latest
        imagePullPolicy: IfNotPresent
        name: minernode
        ports:
        - containerPort: 8545
          name: json-rpc
          protocol: TCP
        - containerPort: 30303
          name: rlpx
          protocol: TCP
        - containerPort: 30303
          name: discovery
          protocol: UDP
        resources:
          limits:
            cpu: 150m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/genesis
          name: genesis-config
          readOnly: true
        - mountPath: /etc/besu
          name: config-toml
          readOnly: true
        - mountPath: /data
          name: data
      volumes:
      - configMap:
          name: besu-genesis-configmap
        name: genesis-config
      - configMap:
          name: besu-config-toml-configmap
        name: config-toml
      - emptyDir:
          sizeLimit: 1Gi
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minernode
policy disallow-default-namespace -> resource default/StatefulSet/minernode failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/minernode failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/minernode failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/minernode failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/minernode failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/StatefulSet/minernode failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/minernode failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/minernode failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: mini-app-frontend-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mini-app-frontend-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mini-app-frontend-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mini-app-frontend
  template:
    metadata:
      labels:
        app: mini-app-frontend
    spec:
      containers:
      - image: rvanappeldorn/mini-app-frontend
        name: mini-app-frontend

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mini-app-frontend-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mini-app-frontend-depl
policy disallow-default-namespace -> resource default/Deployment/mini-app-frontend-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mini-app-frontend-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mini-app-frontend-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mini-app-frontend-srv:
apiVersion: v1
kind: Service
metadata:
  name: mini-app-frontend-srv
  namespace: default
spec:
  ports:
  - name: mini-app-frontend
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: mini-app-frontend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miniflux.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/miniflux:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniflux
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miniflux
  template:
    metadata:
      labels:
        app: miniflux
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: database-url
              name: miniflux
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: miniflux
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: miniflux
        - name: CREATE_ADMIN
          value: "1"
        - name: RUN_MIGRATIONS
          value: "1"
        - name: BASE_URL
          value: https://reader.lab.janissary.xyz
        - name: OAUTH2_PROVIDER
          value: oidc
        - name: OAUTH2_CLIENT_ID
          value: miniflux
        - name: OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: oidc-client-secret
              name: miniflux
        - name: OAUTH2_REDIRECT_URL
          value: https://reader.lab.janissary.xyz/oauth2/oidc/callback
        - name: OAUTH2_OIDC_DISCOVERY_ENDPOINT
          value: https://auth.janissary.xyz
        - name: OAUTH2_USER_CREATION
          value: "1"
        image: docker.io/miniflux/miniflux:2.1.4
        name: miniflux
        ports:
        - containerPort: 8080
          name: http-tcp
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/miniflux

skipped mutate policy add-safe-to-evict -> resource default/Deployment/miniflux
policy disallow-default-namespace -> resource default/Deployment/miniflux failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/miniflux failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/miniflux failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/miniflux failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/miniflux failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/miniflux failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/miniflux failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/miniflux failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: miniflux3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/miniflux:
apiVersion: v1
kind: Service
metadata:
  name: miniflux
  namespace: default
spec:
  ports:
  - name: miniflux-http
    port: 80
    protocol: TCP
    targetPort: http-tcp
  selector:
    app: miniflux
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/miniflux failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minikube6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-persistent-storage:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-persistent-storage
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minikube6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minikube6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-persistent-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo
policy disallow-default-namespace -> resource default/Deployment/mongo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minikube6_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/todo-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - image: 637423495437.dkr.ecr.us-west-2.amazonaws.com/todo-flask-app:v3
        livenessProbe:
          httpGet:
            path: /list
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        name: todo-app-container
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /list
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/todo-app
policy disallow-default-namespace -> resource default/Deployment/todo-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/todo-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/todo-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/todo-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/todo-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/todo-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minikube6_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/todo-app-service:
apiVersion: v1
kind: Service
metadata:
  name: todo-app-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: todo-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minikube-ingress-deployment-example.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/foo-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: foo
  name: foo-app
  namespace: default
spec:
  containers:
  - image: kicbase/echo-server:1.0
    name: foo-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/foo-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/foo-app
policy disallow-default-namespace -> resource default/Pod/foo-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/foo-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/foo-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/foo-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/foo-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/foo-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/foo-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/foo-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minikube-ingress-deployment-example_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/foo-service:
apiVersion: v1
kind: Service
metadata:
  name: foo-service
  namespace: default
spec:
  ports:
  - port: 8080
  selector:
    app: foo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minikube-ingress-deployment-example_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bar-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: bar
  name: bar-app
  namespace: default
spec:
  containers:
  - image: kicbase/echo-server:1.0
    name: bar-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bar-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/bar-app
policy disallow-default-namespace -> resource default/Pod/bar-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/bar-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bar-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bar-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/bar-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/bar-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bar-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bar-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minikube-ingress-deployment-example_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/bar-service:
apiVersion: v1
kind: Service
metadata:
  name: bar-service
  namespace: default
spec:
  ports:
  - port: 8080
  selector:
    app: bar

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minikube-ingress-deployment-example_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/example-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  namespace: default
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: foo-service
            port:
              number: 8080
        path: /foo
        pathType: Prefix
      - backend:
          service:
            name: bar-service
            port:
              number: 8080
        path: /bar
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/example-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minimal-fake-pooler-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/acid-minimal-cluster-pooler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: db-connection-pooler
    connection-pooler: acid-minimal-cluster-pooler
  name: acid-minimal-cluster-pooler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      application: db-connection-pooler
      cluster-name: acid-minimal-cluster
      connection-pooler: acid-minimal-cluster-pooler
  template:
    metadata:
      labels:
        application: db-connection-pooler
        cluster-name: acid-minimal-cluster
        connection-pooler: acid-minimal-cluster-pooler
    spec:
      containers:
      - env: []
        image: registry.opensource.zalan.do/acid/pgbouncer:master-27
        imagePullPolicy: IfNotPresent
        name: postgres-operator
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 250Mi
      serviceAccountName: postgres-operator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/acid-minimal-cluster-pooler

skipped mutate policy add-safe-to-evict -> resource default/Deployment/acid-minimal-cluster-pooler
policy disallow-default-namespace -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minimal-fake-pooler-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/acid-minimal-cluster-pooler:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: db-connection-pooler
    connection-pooler: acid-minimal-cluster-pooler
  name: acid-minimal-cluster-pooler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      application: db-connection-pooler
      cluster-name: acid-minimal-cluster
      connection-pooler: acid-minimal-cluster-pooler
  template:
    metadata:
      labels:
        application: db-connection-pooler
        cluster-name: acid-minimal-cluster
        connection-pooler: acid-minimal-cluster-pooler
    spec:
      containers:
      - env: []
        image: registry.opensource.zalan.do/acid/pgbouncer:master-27
        imagePullPolicy: IfNotPresent
        name: postgres-operator
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 250Mi
      serviceAccountName: postgres-operator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/acid-minimal-cluster-pooler

skipped mutate policy add-safe-to-evict -> resource default/Deployment/acid-minimal-cluster-pooler
policy disallow-default-namespace -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/acid-minimal-cluster-pooler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minimal-image-replicas-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/client:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: client
  name: client
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  strategy: {}
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - image: alpine:3
        name: alpine
        resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/client

skipped mutate policy add-safe-to-evict -> resource default/Deployment/client
policy disallow-default-namespace -> resource default/Deployment/client failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/client failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/client failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/client failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/client failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/client failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/client failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/client failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minimal-master-replica-svcmonitor.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/test-pg:
apiVersion: v1
kind: Namespace
metadata:
  name: test-pg
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/test-pg:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: test-pg
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/test-pg:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: test-pg
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/test-pg:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: test-pg
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/test-pg:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: test-pg
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimal-master-replica-svcmonitor_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-pg/Service/acid-minimal-cluster-svc-metrics-master:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9187"
    prometheus.io/scrape: "true"
  labels:
    app: test-pg
    spilo-role: master
  name: acid-minimal-cluster-svc-metrics-master
  namespace: test-pg
spec:
  ports:
  - name: exporter
    port: 9187
    targetPort: exporter
  selector:
    application: spilo
    cluster-name: acid-minimal-cluster
    spilo-role: master
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimal-master-replica-svcmonitor_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-pg/Service/acid-minimal-cluster-svc-metrics-replica:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9187"
    prometheus.io/scrape: "true"
  labels:
    app: test-pg
    spilo-role: replica
  name: acid-minimal-cluster-svc-metrics-replica
  namespace: test-pg
spec:
  ports:
  - name: exporter
    port: 9187
    targetPort: exporter
  selector:
    application: spilo
    cluster-name: acid-minimal-cluster
    spilo-role: replica
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimal-master-replica-svcmonitor1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/test-pg:
apiVersion: v1
kind: Namespace
metadata:
  name: test-pg
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/test-pg:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: test-pg
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/test-pg:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: test-pg
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/test-pg:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: test-pg
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/test-pg:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: test-pg
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimal-master-replica-svcmonitor1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-pg/Service/acid-minimal-cluster-svc-metrics-master:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9187"
    prometheus.io/scrape: "true"
  labels:
    app: test-pg
    spilo-role: master
  name: acid-minimal-cluster-svc-metrics-master
  namespace: test-pg
spec:
  ports:
  - name: exporter
    port: 9187
    targetPort: exporter
  selector:
    application: spilo
    cluster-name: acid-minimal-cluster
    spilo-role: master
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimal-master-replica-svcmonitor1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-pg/Service/acid-minimal-cluster-svc-metrics-replica:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9187"
    prometheus.io/scrape: "true"
  labels:
    app: test-pg
    spilo-role: replica
  name: acid-minimal-cluster-svc-metrics-replica
  namespace: test-pg
spec:
  ports:
  - name: exporter
    port: 9187
    targetPort: exporter
  selector:
    application: spilo
    cluster-name: acid-minimal-cluster
    spilo-role: replica
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimum.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/test:
apiVersion: v1
kind: Namespace
metadata:
  name: test
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/test:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: test
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/test:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: test
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/test:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: test
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/test:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: test
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimum_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Service/keycloak-web:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-web
  namespace: test
spec:
  ports:
  - appProtocol: http
    name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: keycloak
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minimum_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Deployment/keycloak:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/name: keycloak
    spec:
      containers:
      - command:
        - /opt/keycloak/bin/kc.sh
        - start
        env:
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_CACHE
          value: local
        - name: KC_DB
          value: dev-file
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: admin
        image: quay.io/keycloak/keycloak:23.0.5@sha256:8772ab5e763f3374b7bb70bce4a96ad384b39c548c40007113538e103ee8a8f2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 200m
            memory: 768Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
        volumeMounts: []
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      volumes: []

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test/Deployment/keycloak
policy drop-cap-net-raw -> resource test/Deployment/keycloak failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource test/Deployment/keycloak failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource test/Deployment/keycloak failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource test/Deployment/keycloak failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 4, warn: 0, error: 0, skip: 1 

##### FILE: minio.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-store
spec:
  clusterIP: None
  ports:
  - name: minio
    port: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Service/minio-svc:
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  namespace: minio-store
spec:
  ports:
  - name: minio-console
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: minio-api
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio-store/Service/minio-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/StatefulSet/minio:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-store
spec:
  replicas: 2
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - http://minio-0.minio.minio-store.svc.cluster.local/data
        - http://minio-1.minio.minio-store.svc.cluster.local/data
        - --console-address
        - :9090
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: admin@2675
        - name: MINIO_IDENTITY_OPENID_CONFIG_URL
          value: https://auth.34.16.137.32.nip.io/.well-known/openid-configuration
        - name: MINIO_IDENTITY_OPENID_CLIENT_ID
          value: oidc-auth-client
        - name: MINIO_IDENTITY_OPENID_CLIENT_SECRET
          value: secret
        - name: MINIO_IDENTITY_OPENID_REDIRECT_URI
          value: https://minio-console.34.16.137.32.nip.io/oauth_callback
        - name: MINIO_IDENTITY_OPENID_SCOPES
          value: groups,openid,email,profile
        - name: MINIO_IDENTITY_OPENID_CLAIM_NAME
          value: groups
        - name: MINIO_IDENTITY_OPENID_CLAIM_PREFIX
          value: ""
        - name: MINIO_IDENTITY_TLS_ENABLE
          value: "on"
        - name: MINIO_IDENTITY_TLS_SKIP_VERIFY
          value: "on"
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9090
          hostPort: 9090
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /root/.minio/certs/CAs/ca.crt
          name: dex-cert
          subPath: ca.crt
      volumes:
      - configMap:
          defaultMode: 420
          name: dex-cert
        name: dex-cert
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-store/StatefulSet/minio

skipped mutate policy add-safe-to-evict -> resource minio-store/StatefulSet/minio
policy disallow-latest-tag -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-store/StatefulSet/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-store/StatefulSet/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-store/StatefulSet/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Ingress/minio-console:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: minio
  name: minio-console
  namespace: minio-store
spec:
  ingressClassName: nginx
  rules:
  - host: minio-console.34.16.137.32.nip.io
    http:
      paths:
      - backend:
          service:
            name: minio-svc
            port:
              number: 9090
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - minio-console.34.16.137.32.nip.io
    secretName: minio

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Ingress/minio-api:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: minio
  name: minio-api
  namespace: minio-store
spec:
  ingressClassName: nginx
  rules:
  - host: minio-api.1.2.3.4.nip.io
    http:
      paths:
      - backend:
          service:
            name: minio-svc
            port:
              number: 9000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: minio-nodeport
  namespace: default
spec:
  ports:
  - name: minio-api
    nodePort: 31236
    port: 9000
    protocol: TCP
    targetPort: minio-api
  selector:
    app.kubernetes.io/instance: minio
    app.kubernetes.io/name: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio_service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: minio-nodeport
  namespace: default
spec:
  ports:
  - name: minio-api
    nodePort: 31236
    port: 9000
    protocol: TCP
    targetPort: minio-api
  selector:
    app.kubernetes.io/instance: minio
    app.kubernetes.io/name: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-app/Deployment/minio-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-server
  namespace: airflow-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-server
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: minio-server
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        image: minio/minio:latest
        imagePullPolicy: IfNotPresent
        name: minio-server
        volumeMounts:
        - mountPath: /data
          name: localvolume
      volumes:
      - hostPath:
          path: /mnt/disk1/data
          type: DirectoryOrCreate
        name: localvolume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-app/Deployment/minio-server
policy disallow-latest-tag -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-app/Deployment/minio-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-app/Service/minio-ui-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    xccelerated.io/moritz-project: airflow-app
  name: minio-ui-service
  namespace: airflow-app
spec:
  ports:
  - name: minio-ui
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: minio-server
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio10_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-app/Service/minio-api-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    xccelerated.io/moritz-project: airflow-app
  name: minio-api-service
  namespace: airflow-app
spec:
  clusterIP: 10.97.46.15
  ports:
  - name: minio-api-service
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio-server
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio-dev:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: minio-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Secret/minio-env:
apiVersion: v1
kind: Secret
metadata:
  name: minio-env
  namespace: minio-dev
stringData:
  MINIO_ROOT_PASSWORD: minioadmin
  MINIO_ROOT_USER: minioadmin
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio16_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: minio
      name: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          limits:
            cpu: 1500m
            memory: 1500Mi
          requests:
            cpu: 1000m
            memory: 1000Mi
        volumeMounts:
        - mountPath: /data
          name: data
      restartPolicy: Always
      volumes:
      - emptyDir:
          sizeLimit: 10Gi
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Deployment/minio
policy disallow-latest-tag -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: minio16_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-dev
spec:
  ports:
  - name: console
    port: 9090
  - name: s3
    port: 9000
  selector:
    app: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-store
spec:
  clusterIP: None
  ports:
  - name: minio
    port: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Service/minio-svc:
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  namespace: minio-store
spec:
  ports:
  - name: minio-console
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: minio-api
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio-store/Service/minio-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/StatefulSet/minio:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-store
spec:
  replicas: 2
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - http://minio-0.minio.minio-store.svc.cluster.local/data
        - http://minio-1.minio.minio-store.svc.cluster.local/data
        - --console-address
        - :9090
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: admin@2675
        - name: MINIO_IDENTITY_OPENID_CONFIG_URL
          value: https://auth.34.16.137.32.nip.io/.well-known/openid-configuration
        - name: MINIO_IDENTITY_OPENID_CLIENT_ID
          value: oidc-auth-client
        - name: MINIO_IDENTITY_OPENID_CLIENT_SECRET
          value: secret
        - name: MINIO_IDENTITY_OPENID_REDIRECT_URI
          value: https://minio-console.34.16.137.32.nip.io/oauth_callback
        - name: MINIO_IDENTITY_OPENID_SCOPES
          value: groups,openid,email,profile
        - name: MINIO_IDENTITY_OPENID_CLAIM_NAME
          value: groups
        - name: MINIO_IDENTITY_OPENID_CLAIM_PREFIX
          value: ""
        - name: MINIO_IDENTITY_TLS_ENABLE
          value: "on"
        - name: MINIO_IDENTITY_TLS_SKIP_VERIFY
          value: "on"
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9090
          hostPort: 9090
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /root/.minio/certs/CAs/ca.crt
          name: dex-cert
          subPath: ca.crt
      volumes:
      - configMap:
          defaultMode: 420
          name: dex-cert
        name: dex-cert
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-store/StatefulSet/minio

skipped mutate policy add-safe-to-evict -> resource minio-store/StatefulSet/minio
policy disallow-latest-tag -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-store/StatefulSet/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-store/StatefulSet/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-store/StatefulSet/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-store/StatefulSet/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Ingress/minio-console:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: minio
  name: minio-console
  namespace: minio-store
spec:
  ingressClassName: nginx
  rules:
  - host: minio-console.34.16.137.32.nip.io
    http:
      paths:
      - backend:
          service:
            name: minio-svc
            port:
              number: 9090
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - minio-console.34.16.137.32.nip.io
    secretName: minio

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-store/Ingress/minio-api:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: minio
  name: minio-api
  namespace: minio-store
spec:
  ingressClassName: nginx
  rules:
  - host: minio-api.1.2.3.4.nip.io
    http:
      paths:
      - backend:
          service:
            name: minio-svc
            port:
              number: 9000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/${APP}-volsync-secret:
apiVersion: v1
kind: Secret
metadata:
  name: ${APP}-volsync-secret
  namespace: default
stringData:
  AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
  AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
  RESTIC_PASSWORD: ${RESTIC_PASS}
  RESTIC_REPOSITORY: ${REPO_TEMPLATE}/${APP}
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: minio
      name: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ROOT_USER
          value: lintang
        - name: MINIO_ROOT_PASSWORD
          value: lintang123
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          limits:
            cpu: 1500m
            memory: 1500Mi
          requests:
            cpu: 500m
            memory: 400Mi
        volumeMounts:
        - mountPath: /data
          name: data
      restartPolicy: Always
      volumes:
      - emptyDir:
          sizeLimit: 500Mi
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Deployment/minio
policy disallow-latest-tag -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: minio31_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-dev
spec:
  ports:
  - name: console
    nodePort: 30023
    port: 9090
  - name: s3
    nodePort: 30024
    port: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio-dev/Service/minio failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-external-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-external-service
  namespace: default
spec:
  externalName: ${NAS_URL}
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio32_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/minio-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
    gethomepage.dev/description: S3 compatible object storage
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Storage
    gethomepage.dev/icon: minio.png
    gethomepage.dev/name: Minio
  name: minio-ingress
  namespace: default
spec:
  ingressClassName: internal
  rules:
  - host: minio.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: minio-external-service
            port:
              number: 9090
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - minio.${SECRET_DOMAIN}

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: Namespace
metadata:
  name: dragonfly-e2e
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dragonfly-e2e:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dragonfly-e2e
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dragonfly-e2e:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dragonfly-e2e
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dragonfly-e2e
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dragonfly-e2e:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dragonfly-e2e
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio34_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dragonfly-e2e/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: dragonfly-e2e
spec:
  ports:
  - name: minio
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: dragonfly
    component: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio34_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dragonfly-e2e/StatefulSet/minio:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: dragonfly-e2e
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dragonfly
      component: minio
  serviceName: minio
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dragonfly
        component: minio
    spec:
      containers:
      - command:
        - /opt/bin/minio
        - server
        - --config-dir
        - /minio/config
        - --console-address
        - :9001
        - /minio/data
        env:
        - name: MINIO_ROOT_USER
          value: root
        - name: MINIO_ROOT_PASSWORD
          value: password
        image: minio/minio:RELEASE.2022-11-11T03-44-20Z
        imagePullPolicy: IfNotPresent
        name: minio
        ports:
        - containerPort: 9000
        - containerPort: 9001
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |-
              if [ -f /tmp/prepare-ok ]; then
                exit 0
              fi

              # download binary
              curl https://dl.min.io/client/mc/release/linux-amd64/mc > /bin/mc
              chmod +x /bin/mc

              # config
              mc config host add local http://127.0.0.1:9000 root password

              # create a new bucket
              mc mb local/minio-test-bucket

              # copy test data
              for dir in bin lib64 libexec sbin; do
                mc cp --recursive /usr/$dir local/minio-test-bucket/dragonfly-test/usr
              done

              # mc cp will skip empty folders, so sync back all files
              mkdir -p /host/tmp/minio-test-bucket/dragonfly-test
              mc cp --recursive local/minio-test-bucket/dragonfly-test/usr /host/tmp/minio-test-bucket/dragonfly-test

              # generate sha256sum
              chroot /host bash -c "cd /tmp/minio-test-bucket/dragonfly-test; \
                  find . -type f | sort | xargs -n 1 sha256sum | tee /tmp/dragonfly-test.sha256sum.txt"

              touch /tmp/prepare-ok
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 180
        volumeMounts:
        - mountPath: /minio
          name: files
        - mountPath: /host
          name: host
      volumes:
      - hostPath:
          path: /minio
          type: DirectoryOrCreate
        name: files
      - hostPath:
          path: /
        name: host

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dragonfly-e2e/StatefulSet/minio
policy drop-all-capabilities -> resource dragonfly-e2e/StatefulSet/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dragonfly-e2e/StatefulSet/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dragonfly-e2e/StatefulSet/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dragonfly-e2e/StatefulSet/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource dragonfly-e2e/StatefulSet/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dragonfly-e2e/StatefulSet/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: minio35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio35_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        image: minio/minio
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio
policy disallow-default-namespace -> resource default/Deployment/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio36_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        - --console-address
        - :9001
        env:
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        - name: MINIO_ROOT_USER
          value: minioadmin
        image: docker.io/minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9001
          hostPort: 9001
        resources: {}
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource minio/Deployment/minio
policy disallow-latest-tag -> resource minio/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource minio/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio36_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/PersistentVolumeClaim/minio:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
  namespace: minio
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio36_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 9000
  - name: gui
    port: 9001
    targetPort: 9001
  selector:
    app: minio
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: minio-credentials
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: minio-credentials
        image: minio/minio
        name: minio
      serviceAccountName: minio-serviceaccount

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio37_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-external-ip:
apiVersion: v1
kind: Service
metadata:
  name: minio-external-ip
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: minio
    port: 80
    protocol: TCP
    targetPort: 9769
  - name: minio-api
    port: 443
    protocol: TCP
    targetPort: 9768
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio38_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/minio-external-ip:
apiVersion: v1
kind: Endpoints
metadata:
  name: minio-external-ip
  namespace: default
subsets:
- addresses:
  - ip: 192.168.1.27
  ports:
  - name: minio
    port: 9769
    protocol: TCP
  - name: minio-api
    port: 9768
    protocol: TCP

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio38_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/minio-external-service:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.org/client-max-body-size: "0"
    nginx.org/websocket-services: minio-external-ip
  labels:
    app: minio
  name: minio-external-service
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: minio.basingse.ca
    http:
      paths:
      - backend:
          service:
            name: minio-external-ip
            port:
              name: minio
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - minio.basingse.ca
    secretName: minio-tls-secret
status:
  loadBalancer:
    ingress:
    - ip: 192.168.2.11

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio38_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/minio-api-external-service:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.org/client-max-body-size: "0"
    nginx.org/websocket-services: minio-external-ip
  labels:
    app: minio-api
  name: minio-api-external-service
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: minio-api.basingse.ca
    http:
      paths:
      - backend:
          service:
            name: minio-external-ip
            port:
              name: minio-api
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - minio-api.basingse.ca
    secretName: minio-api-tls-secret
status:
  loadBalancer:
    ingress:
    - ip: 192.168.2.11

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: mykey
        - name: MINIO_SECRET_KEY
          value: mysecret
        image: minio/minio:RELEASE.2022-10-29T06-21-33Z
        name: minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio
policy disallow-default-namespace -> resource default/Deployment/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: mykey
        - name: MINIO_SECRET_KEY
          value: mysecret
        image: minio/minio:RELEASE.2020-03-14T02-21-58Z
        name: minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio
policy disallow-default-namespace -> resource default/Deployment/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/PersistentVolumeClaim/minio-pvc-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc-claim
  namespace: tools
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  selector:
    matchLabels:
      disk: d
      type: usb-drive
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: tools
spec:
  selector:
    matchLabels:
      app: minio-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio-app
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - kworker2
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        - name: MINIO_API_CORS_ALLOW_ORIGIN
          value: '*'
        image: minio/minio
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        ports:
        - containerPort: 9000
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        volumeMounts:
        - mountPath: /data
          name: data
      dnsPolicy: ClusterFirst
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio-pvc-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource tools/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource tools/Deployment/minio-deployment
policy disallow-latest-tag -> resource tools/Deployment/minio-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource tools/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource tools/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource tools/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource tools/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource tools/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource tools/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minio9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: tools
spec:
  externalTrafficPolicy: Local
  ports:
  - name: minio-http
    port: 80
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-client.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/s3-client:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: s3-client
  name: s3-client
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3-client
  template:
    metadata:
      labels:
        app: s3-client
    spec:
      containers:
      - args:
        - "3600"
        command:
        - sleep
        env:
        - name: AWS_ACCESS_KEY_ID
          value: your-access-key
        - name: AWS_SECRET_ACCESS_KEY
          value: your-secret-key
        - name: AWS_DEFAULT_REGION
          value: us-east-1
        - name: BUCKET_NAME
          value: your-bucket-name
        image: amazon/aws-cli
        name: s3-client

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/s3-client

skipped mutate policy add-safe-to-evict -> resource default/Deployment/s3-client
policy disallow-default-namespace -> resource default/Deployment/s3-client failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/s3-client failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/s3-client failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/s3-client failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/s3-client failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/s3-client failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/s3-client failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/s3-client failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/s3-client failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/minio-configmap:
apiVersion: v1
data:
  MINIO_BROWSER_REDIRECT_URL: http://localhost:30080/minio/ui
kind: ConfigMap
metadata:
  name: minio-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-credentials.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-credentials:
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: default
stringData:
  password: minio123
  username: minio
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-credentials1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-credentials:
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: default
stringData:
  password: minio123
  username: minio
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-credentials4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-credentials:
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: default
stringData:
  password: minio123
  username: minio
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-ml-workshop:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: min
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: s3-server-0.0.1
  name: minio-ml-workshop
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: min
      app.kubernetes.io/name: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: min
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: minio
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: s3-server-0.0.1
    spec:
      containers:
      - args:
        - server
        - /storage
        - --console-address=:33933
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: public
        - name: MINIO_TRACE
          value: "true"
        - name: MINIO_ROOT_USER
          value: minio
        - name: MINIO_ROOT_PASSWORD
          value: minio123
        image: docker.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /minio/health/live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: minio
        ports:
        - containerPort: 9000
        - containerPort: 33933
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /minio/health/ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-ml-workshop

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-ml-workshop

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-ml-workshop
policy disallow-default-namespace -> resource default/Deployment/minio-ml-workshop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-ml-workshop failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-ml-workshop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-ml-workshop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/minio-ml-workshop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Deployment/minio-ml-workshop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-ml-workshop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/PersistentVolumeClaim/minio:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
  namespace: ai-demo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: cinder-default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: ai-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
      name: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: MINIO_ACCESS_KEY
              name: minio-secret
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: MINIO_SECRET_KEY
              name: minio-secret
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          limits:
            cpu: 1500m
            memory: 1500Mi
          requests:
            cpu: 1000m
            memory: 1000Mi
        volumeMounts:
        - mountPath: /data
          name: data
      restartPolicy: Always
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio
          readOnly: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ai-demo/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource ai-demo/Deployment/minio
policy disallow-latest-tag -> resource ai-demo/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ai-demo/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ai-demo/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ai-demo/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource ai-demo/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ai-demo/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: ai-demo
spec:
  ports:
  - name: console
    port: 9090
  - name: s3
    port: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/PersistentVolumeClaim/minio:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
  namespace: ai-demo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: cinder-default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: ai-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
      name: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: MINIO_ACCESS_KEY
              name: minio-secret
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: MINIO_SECRET_KEY
              name: minio-secret
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          limits:
            cpu: 1500m
            memory: 1500Mi
          requests:
            cpu: 1000m
            memory: 1000Mi
        volumeMounts:
        - mountPath: /data
          name: data
      restartPolicy: Always
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio
          readOnly: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ai-demo/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource ai-demo/Deployment/minio
policy disallow-latest-tag -> resource ai-demo/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ai-demo/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ai-demo/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ai-demo/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource ai-demo/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ai-demo/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: ai-demo
spec:
  ports:
  - name: console
    port: 9090
  - name: s3
    port: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/velero:
apiVersion: v1
kind: Namespace
metadata:
  name: velero
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/velero:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: velero
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/velero:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: velero
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/velero:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: velero
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/velero:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: velero
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/PersistentVolumeClaim/minio-data:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data
  namespace: velero
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/PersistentVolumeClaim/minio-cfg:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-cfg
  namespace: velero
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: minio
  name: minio
  namespace: velero
spec:
  selector:
    matchLabels:
      component: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        - --config-dir=/config
        - --console-address
        - :9001
        env:
        - name: MINIO_ACCESS_KEY
          value: packt
        - name: MINIO_SECRET_KEY
          value: packt123
        image: minio/minio:latest
        imagePullPolicy: IfNotPresent
        name: minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
        - mountPath: /config
          name: config
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-data
      - name: config
        persistentVolumeClaim:
          claimName: minio-cfg

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource velero/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource velero/Deployment/minio
policy disallow-latest-tag -> resource velero/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource velero/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource velero/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource velero/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource velero/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource velero/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource velero/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource velero/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    component: minio
  name: minio
  namespace: velero
spec:
  ports:
  - name: http
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    component: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/Service/console:
apiVersion: v1
kind: Service
metadata:
  labels:
    component: minio
  name: console
  namespace: velero
spec:
  ports:
  - name: http-console
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    component: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment2_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/Job/minio-setup:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    component: minio
  name: minio-setup
  namespace: velero
spec:
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      name: minio-setup
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - mc --config-dir=/config config host add velero http://minio:9000 packt packt123
          && mc --config-dir=/config mb -p velero/velero
        image: minio/mc:latest
        imagePullPolicy: IfNotPresent
        name: mc
        volumeMounts:
        - mountPath: /config
          name: config
      restartPolicy: OnFailure
      volumes:
      - emptyDir: {}
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource velero/Job/minio-setup
policy disallow-latest-tag -> resource velero/Job/minio-setup failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource velero/Job/minio-setup failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource velero/Job/minio-setup failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource velero/Job/minio-setup failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource velero/Job/minio-setup failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource velero/Job/minio-setup failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource velero/Job/minio-setup failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: minio-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: minio
  name: minio
  namespace: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - mkdir -p /data/bucket && /usr/bin/minio server /data --console-address ":9001"
        env:
        - name: MINIO_ROOT_USER
          value: minio
        - name: MINIO_ROOT_PASSWORD
          value: minio123
        - name: MINIO_BROWSER_REDIRECT_URL
          value: https://www.private-cloud.com/minio/
        image: quay.io/minio/minio
        name: minio
        ports:
        - containerPort: 9000
          protocol: TCP
        - containerPort: 9001
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource minio/Deployment/minio
policy disallow-latest-tag -> resource minio/Deployment/minio failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource minio/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minio/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
spec:
  ports:
  - name: api
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: console
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app.kubernetes.io/name: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/PersistentVolumeClaim/minio:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: minio
  name: minio
  namespace: minio
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Ingress/minio:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: minio
  namespace: minio
spec:
  ingressClassName: nginx
  rules:
  - host: www.private-cloud.com
    http:
      paths:
      - backend:
          service:
            name: minio
            port:
              number: 9001
        path: /minio/?(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio-deployment
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /data
        - --console-address=:9001
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: MINIO_ACCESS_KEY
              name: app-secret
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MINIO_SECRET_KEY
              name: app-secret
        - name: MINIO_BROWSER_REDIRECT_URL
          valueFrom:
            configMapKeyRef:
              key: MINIO_BROWSER_REDIRECT_URL
              name: minio-configmap
        image: quay.io/minio/minio
        name: minio
        ports:
        - containerPort: 9000
        - containerPort: 9001
        volumeMounts:
        - mountPath: /data
          name: minio-persistent-storage
      volumes:
      - name: minio-persistent-storage
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: minio-dev
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ROOT_USER
          value: minio
        - name: MINIO_ROOT_PASSWORD
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource minio-dev/Deployment/minio-deployment
policy disallow-latest-tag -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-system/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
      name: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9001
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ROOT_USER
          value: minio_root_user
        - name: MINIO_ROOT_PASSWORD
          value: minio_root_password
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9001
          hostPort: 9001
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          limits:
            cpu: 2000m
            memory: 1500Mi
          requests:
            cpu: 1500m
            memory: 1200Mi
        volumeMounts:
        - mountPath: /data
          name: minio-storage
      nodeSelector:
        kubernetes.io/hostname: cloud08
      restartPolicy: Always
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-system/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource minio-system/Deployment/minio
policy disallow-latest-tag -> resource minio-system/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-system/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-system/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-system/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource minio-system/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-system/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Deployment/minio-dev:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.26
    helm.sh/chart: minio-13.7.0
  name: minio-dev
  namespace: minio-dev
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: minio-dev
      app.kubernetes.io/name: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/credentials-secret: 47cc08dc7504369d4ed2465dc0a05fed4fadf6456b0b00145aff59b839309005
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/instance: minio-dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: minio
        app.kubernetes.io/version: 2024.2.26
        helm.sh/chart: minio-13.7.0
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: minio-dev
                  app.kubernetes.io/name: minio
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MINIO_SCHEME
          value: http
        - name: MINIO_FORCE_NEW_KEYS
          value: "no"
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: root-user
              name: minio-dev
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root-password
              name: minio-dev
        - name: MINIO_BROWSER
          value: "on"
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: public
        - name: MINIO_CONSOLE_PORT_NUMBER
          value: "9001"
        - name: MINIO_DATA_DIR
          value: /bitnami/minio/data
        envFrom: null
        image: docker.io/bitnami/minio:2024.2.26-debian-12-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /minio/health/live
            port: minio-api
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: minio
        ports:
        - containerPort: 9000
          name: minio-api
          protocol: TCP
        - containerPort: 9001
          name: minio-console
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: minio-api
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: null
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/minio/tmp
          name: empty-dir
          subPath: app-tmp-dir
        - mountPath: /.mc
          name: empty-dir
          subPath: app-mc-dir
        - mountPath: /bitnami/minio/data
          name: data
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: []
        sysctls: []
      serviceAccountName: minio-dev
      volumes:
      - emptyDir: {}
        name: empty-dir
      - name: data
        persistentVolumeClaim:
          claimName: minio-dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Deployment/minio-dev
policy drop-cap-net-raw -> resource minio-dev/Deployment/minio-dev failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource minio-dev/Deployment/minio-dev failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource minio-dev/Deployment/minio-dev failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource minio-dev/Deployment/minio-dev failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 4, warn: 0, error: 0, skip: 1 

##### FILE: minio-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose -f minio.yml convert
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: minio
  name: minio
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose -f minio.yml convert
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/osboxes-default: "true"
        io.kompose.service: minio
    spec:
      containers:
      - image: docker.io/bitnami/minio:2024
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
          protocol: TCP
        - containerPort: 9001
          hostPort: 9001
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio
policy disallow-default-namespace -> resource default/Deployment/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dena/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: dena
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: dena
        - name: MINIO_SECRET_KEY
          value: dena1234
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /data
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dena/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource dena/Deployment/minio-deployment
policy disallow-latest-tag -> resource dena/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dena/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dena/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dena/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dena/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dena/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dena/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dena/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-dev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio-dev:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: minio-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Pod/minio:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: minio
  name: minio
  namespace: minio-dev
spec:
  containers:
  - args:
    - minio server /data --console-address :9090
    command:
    - /bin/bash
    - -c
    image: quay.io/minio/minio:latest
    name: minio
    volumeMounts:
    - mountPath: /data
      name: localvolume
  nodeSelector:
    kubernetes.io/hostname: kubealpha.local
  volumes:
  - hostPath:
      path: /mnt/disk1/data
      type: DirectoryOrCreate
    name: localvolume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Pod/minio
policy disallow-latest-tag -> resource minio-dev/Pod/minio failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Pod/minio failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Pod/minio failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Pod/minio failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-dev/Pod/minio failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource minio-dev/Pod/minio failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-dev/Pod/minio failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Pod/minio failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-dev1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio-dev:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: minio-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Pod/minio:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: minio
  name: minio
  namespace: minio-dev
spec:
  containers:
  - args:
    - minio server /data --console-address :9090
    command:
    - /bin/bash
    - -c
    image: quay.io/minio/minio:latest
    name: minio
    volumeMounts:
    - mountPath: /data
      name: localvolume
  nodeSelector:
    kubernetes.io/hostname: k3d-onion-dev-agent-0
  volumes:
  - hostPath:
      path: /mnt/disk1/data
      type: DirectoryOrCreate
    name: localvolume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Pod/minio
policy disallow-latest-tag -> resource minio-dev/Pod/minio failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Pod/minio failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Pod/minio failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Pod/minio failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-dev/Pod/minio failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource minio-dev/Pod/minio failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-dev/Pod/minio failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Pod/minio failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-dev2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Pod/minio:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: minio
  name: minio
  namespace: minio
spec:
  containers:
  - args:
    - minio server /data --console-address :9090
    command:
    - /bin/bash
    - -c
    env:
    - name: MINIO_ROOT_USER
      value: admin
    - name: MINIO_ROOT_PASSWORD
      value: changeme
    image: quay.io/minio/minio:latest
    name: minio
    ports:
    - containerPort: 9090
      name: minio-con-port
    - containerPort: 9000
      name: minio-port
    volumeMounts:
    - mountPath: /data
      name: minio-vol
    - mountPath: /root/.minio
      name: minio-config
  nodeSelector:
    kubernetes.io/hostname: nc2
  volumes:
  - hostPath:
      path: /data/minio
      type: DirectoryOrCreate
    name: minio-vol
  - hostPath:
      path: /root/.minio
      type: DirectoryOrCreate
    name: minio-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Pod/minio
policy disallow-latest-tag -> resource minio/Pod/minio failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio/Pod/minio failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Pod/minio failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Pod/minio failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Pod/minio failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource minio/Pod/minio failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio/Pod/minio failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Pod/minio failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-dev2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio
spec:
  ports:
  - name: minio-console-port
    nodePort: 30099
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: minio-api-port
    nodePort: 30090
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to weaviate/Pod/minio:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: minio
  name: minio
  namespace: weaviate
spec:
  containers:
  - args:
    - minio server /data --console-address :9001
    command:
    - /bin/bash
    - -c
    env:
    - name: MINIO_ACCESS_KEY
      value: aws_access_key
    - name: MINIO_SECRET_KEY
      value: aws_secret_key
    image: quay.io/minio/minio:latest
    name: minio
    ports:
    - containerPort: 9000
    - containerPort: 9001
    volumeMounts:
    - mountPath: /data
      name: localvolume
  volumes:
  - hostPath:
      path: /mnt/disk1/data
      type: DirectoryOrCreate
    name: localvolume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource weaviate/Pod/minio
policy disallow-latest-tag -> resource weaviate/Pod/minio failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource weaviate/Pod/minio failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource weaviate/Pod/minio failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource weaviate/Pod/minio failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource weaviate/Pod/minio failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource weaviate/Pod/minio failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource weaviate/Pod/minio failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource weaviate/Pod/minio failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-dev3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to weaviate/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: weaviate
spec:
  ports:
  - name: 9000-9000
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio-dev:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: minio-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Pod/minio:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: minio
  name: minio
  namespace: minio-dev
spec:
  containers:
  - args:
    - minio server /data --console-address :9090
    command:
    - /bin/bash
    - -c
    image: quay.io/minio/minio:latest
    name: minio
    volumeMounts:
    - mountPath: /data
      name: gen3-volume
  nodeSelector:
    kubernetes.io/hostname: cloud08
  volumes:
  - hostPath:
      path: /$HOME/workspace/gen3-volume
      type: DirectoryOrCreate
    name: gen3-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Pod/minio
policy disallow-latest-tag -> resource minio-dev/Pod/minio failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Pod/minio failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Pod/minio failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Pod/minio failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-dev/Pod/minio failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource minio-dev/Pod/minio failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-dev/Pod/minio failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Pod/minio failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-dev5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio-dev:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: minio-dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio-dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio-dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio-dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio-dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: minio
      name: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        name: minio
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          limits:
            cpu: 1500m
            memory: 1500Mi
          requests:
            cpu: 1000m
            memory: 1000Mi
        volumeMounts:
        - mountPath: /data
          name: data
      restartPolicy: Always
      volumes:
      - emptyDir:
          sizeLimit: 500Mi
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-dev/Deployment/minio
policy disallow-latest-tag -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-dev/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-dev/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-dev/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-dev/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: minio-dev5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-dev
spec:
  ports:
  - name: console
    port: 9090
  - name: s3
    port: 9000
  selector:
    app: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev-nodeport.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-dev
spec:
  ports:
  - nodePort: 30000
    port: 30000
    protocol: TCP
    targetPort: 9090
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio-dev/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-dev-nodeport_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio-api-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-api-service
  namespace: minio-dev
spec:
  ports:
  - nodePort: 30002
    port: 30001
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio-dev/Service/minio-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-headless-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: minio
    port: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-headless-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: minio
    port: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-headless-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: minio
    port: 9000
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-distributed-statefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/minio:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - http://minio-0.minio.default.svc.cluster.local/data
        - http://minio-1.minio.default.svc.cluster.local/data
        - http://minio-2.minio.default.svc.cluster.local/data
        - http://minio-3.minio.default.svc.cluster.local/data
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /data
          name: data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minio

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minio
policy disallow-default-namespace -> resource default/StatefulSet/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-distributed-statefulset1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/minio:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - http://minio-0.minio.default.svc.cluster.local/data
        - http://minio-1.minio.default.svc.cluster.local/data
        - http://minio-2.minio.default.svc.cluster.local/data
        - http://minio-3.minio.default.svc.cluster.local/data
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /data
          name: data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minio

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minio
policy disallow-default-namespace -> resource default/StatefulSet/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-distributed-statefulset2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/minio:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - http://minio-0.minio.default.svc.cluster.local/data
        - http://minio-1.minio.default.svc.cluster.local/data
        - http://minio-2.minio.default.svc.cluster.local/data
        - http://minio-3.minio.default.svc.cluster.local/data
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /data
          name: data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minio

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/minio
policy disallow-default-namespace -> resource default/StatefulSet/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-external-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
spec:
  externalName: minio-proj.minio-ns.svc.cluster.local
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-external-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
spec:
  externalName: minio-proj.minio-ns.svc.cluster.local
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to velero/Ingress/minio-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  namespace: velero
spec:
  rules:
  - host: minio-console.$hostip.nip.io
    http:
      paths:
      - backend:
          service:
            name: console
            port:
              number: 9001
        path: /
        pathType: Prefix
  - host: minio.$hostip.nip.io
    http:
      paths:
      - backend:
          service:
            name: minio
            port:
              number: 9000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/minio-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 16m
  name: minio-ingress
  namespace: default
spec:
  rules:
  - host: localhost
    http:
      paths:
      - backend:
          service:
            name: minio
            port:
              number: 9000
        path: /minio
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Ingress/minio-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: minio-ingress
  namespace: minio
spec:
  ingressClassName: nginx
  rules:
  - host: dataplatform.minio.io
    http:
      paths:
      - backend:
          service:
            name: minio
            port:
              number: 9001
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/minio-ml-workshop-ui:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    openshift.io/host.generated: "true"
  labels:
    app.kubernetes.io/instance: min
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: s3-server-0.0.1
  name: minio-ml-workshop-ui
  namespace: default
spec:
  rules:
  - host: $(MINIO_HOST)
    http:
      paths:
      - backend:
          service:
            name: minio-ml-workshop
            port:
              number: 33933
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - $(MINIO_HOST)

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-system/Ingress/minio:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: minio
  namespace: minio-system
spec:
  ingressClassName: nginx
  rules:
  - host: cloud08.core.wits.ac.za
    http:
      paths:
      - backend:
          service:
            name: minio-service
            port:
              number: 9000
        path: /minio-api/(.*)
        pathType: ImplementationSpecific
      - backend:
          service:
            name: minio-service
            port:
              number: 9001
        path: /minio/(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - cloud08.core.wits.ac.za
    secretName: cloud08-tls-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-install.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        image: quay.io/minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: "1"
            memory: 10000Mi
          requests:
            cpu: "1"
            memory: 8000Mi
        volumeMounts:
        - mountPath: /data
          name: minio-pvc
      volumes:
      - name: minio-pvc
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-install_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-install_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-install1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        image: quay.io/minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: "1"
            memory: 10000Mi
          requests:
            cpu: "1"
            memory: 8000Mi
        volumeMounts:
        - mountPath: /data
          name: minio-pvc
      volumes:
      - name: minio-pvc
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-install1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-install1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/minio-ml-workshop:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/instance: min
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: s3-server-0.0.1
  name: minio-ml-workshop
  namespace: default
spec:
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      name: minio-setup-ml-workshop
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - mc --config-dir=/config config host add velero http://minio-ml-workshop:9000
          minio minio123 && mc --config-dir=/config mb --ignore-existing velero/data/
          && mc --config-dir=/config mb --ignore-existing velero/model-stats/tensordata/
          && mc --config-dir=/config mb --ignore-existing velero/models/ && mc --config-dir=/config
          cp /tmp/models.config velero/models && mc --config-dir=/config cp /tmp/prometheus_config.config
          velero/models && mc --config-dir=/config mb --ignore-existing velero/rawdata
          && mc --config-dir=/config policy set public velero/rawdata &&  mc --config-dir=/config
          mb --ignore-existing velero/mlflow && mc --config-dir=/config policy set
          public velero/mlflow &&  mc --config-dir=/config mb --ignore-existing velero/airflow
          && mc --config-dir=/config policy set public velero/airflow
        image: minio/mc:latest
        imagePullPolicy: IfNotPresent
        name: mc
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /tmp/models.config
          name: modelconfig
          subPath: models.config
        - mountPath: /tmp/prometheus_config.config
          name: promconfig
          subPath: prometheus_config.config
      restartPolicy: OnFailure
      volumes:
      - emptyDir: {}
        name: config
      - configMap:
          defaultMode: 420
          name: modelconfig
        name: modelconfig
      - configMap:
          defaultMode: 420
          name: promconfig
        name: promconfig

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/minio-ml-workshop
policy disallow-default-namespace -> resource default/Job/minio-ml-workshop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/minio-ml-workshop failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/minio-ml-workshop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/minio-ml-workshop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/minio-ml-workshop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/minio-ml-workshop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/minio-ml-workshop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/minio-ml-workshop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Service/minio-lb:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio-lb
  namespace: minio
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minion-annotations-differ.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress-master:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/max-conns: "108"
    nginx.org/mergeable-ingress-type: master
    nginx.org/proxy-send-timeout: 10s
  name: annotations-ingress-master
  namespace: default
spec:
  rules:
  - host: annotations.example.com

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/annotations-ingress-master failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minion-annotations-differ_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress-backend1-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/max-conns: "1048"
    nginx.org/mergeable-ingress-type: minion
    nginx.org/proxy-send-timeout: 25s
  name: annotations-ingress-backend1-minion
  namespace: default
spec:
  rules:
  - host: annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minion-annotations-differ_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress-backend2-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/max-conns: "1024"
    nginx.org/mergeable-ingress-type: minion
    nginx.org/proxy-send-timeout: 33s
  name: annotations-ingress-backend2-minion
  namespace: default
spec:
  rules:
  - host: annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-network-policy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/NetworkPolicy/minio-dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.26
    helm.sh/chart: minio-13.7.0
  name: minio-dev
  namespace: minio-dev
spec:
  egress:
  - {}
  ingress:
  - ports:
    - port: 9001
    - port: 9000
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: minio-dev
      app.kubernetes.io/name: minio
  policyTypes:
  - Ingress
  - Egress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    monitoring: prometheus
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    monitoring: prometheus
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ns2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    monitoring: prometheus
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ns3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    monitoring: prometheus
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ns4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    monitoring: prometheus
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-ns5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    monitoring: prometheus
  name: minio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-password-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mlflow-store:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: mlflow
  name: mlflow-store
  namespace: default
stringData:
  AWS_SECRET_ACCESS_KEY: minio123
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-post-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: minio
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job
policy drop-all-capabilities -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: minio
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job
policy drop-all-capabilities -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: minio
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job
policy drop-all-capabilities -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: default
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2023-10-25T06-33-25Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource default/Job/minio-post-job
policy disallow-default-namespace -> resource default/Job/minio-post-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: minio
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job
policy drop-all-capabilities -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: minio
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job
policy drop-all-capabilities -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: minio
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource minio/Job/minio-post-job
policy drop-all-capabilities -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: minio-post-job7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/minio-post-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-post-job
  namespace: default
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio-job
    spec:
      containers:
      - command:
        - /bin/sh
        - /config/add-user
        env:
        - name: MINIO_ENDPOINT
          value: minio
        - name: MINIO_PORT
          value: "9000"
        image: quay.io/minio/mc:RELEASE.2023-10-25T06-33-25Z
        imagePullPolicy: IfNotPresent
        name: minio-make-user
        resources:
          requests:
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: minio-configuration
      restartPolicy: OnFailure
      volumes:
      - name: minio-configuration
        projected:
          sources:
          - configMap:
              name: minio
          - secret:
              name: minio

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/minio-post-job

skipped mutate policy add-safe-to-evict -> resource default/Job/minio-post-job
policy disallow-default-namespace -> resource default/Job/minio-post-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/minio-post-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/minio-post-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/minio-post-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/minio-post-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Job/minio-post-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/minio-post-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minio-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/minio-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: minio-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /$HOME/workspace/gen3-volume
    type: DirectoryOrCreate
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dena/PersistentVolume/pv-minio:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-minio
  namespace: dena
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/data/minio
  persistentVolumeReclaimPolicy: Retain
  storageClassName: minio

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio
  name: minio-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio-storage-claim
  name: minio-pv-claim
  namespace: minio-dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-ml-workshop:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-ml-workshop
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-system/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pvc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/PersistentVolumeClaim/minio-dev:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.26
    helm.sh/chart: minio-13.7.0
  name: minio-dev
  namespace: minio-dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-pvc5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dena/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pv-claim
  namespace: dena
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: minio

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-reverse-proxy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/reverse-proxy-minio:
apiVersion: v1
kind: Service
metadata:
  name: reverse-proxy-minio
  namespace: default
spec:
  ports:
  - nodePort: 30009
    port: 9091
    targetPort: 80
  selector:
    app: reverse-proxy-minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/reverse-proxy-minio failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-reverse-proxy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reverse-proxy-minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy-minio
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverse-proxy-minio
  template:
    metadata:
      labels:
        app: reverse-proxy-minio
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx
          name: reverse-proxy-minio-config
      volumes:
      - configMap:
          name: reverse-proxy-minio-config
        name: reverse-proxy-minio-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reverse-proxy-minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reverse-proxy-minio
policy disallow-default-namespace -> resource default/Deployment/reverse-proxy-minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reverse-proxy-minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-secret:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/devsecops_admin_keys
    avp.kubernetes.io/secret-version: "13"
  name: minio-secret
  namespace: default
stringData:
  rootPassword: <rootPassword>
  rootUser: <rootUser>
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Secret/minio-secret:
apiVersion: v1
data:
  MINIO_ACCESS_KEY: RXNjaGVyY2xvdWRfQ1ZfZGVtbw==
  MINIO_SECRET_KEY: dXJGMkZiVVd2ODVkWXRqQg==
kind: Secret
metadata:
  name: minio-secret
  namespace: ai-demo
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-secret:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/devsecops_admin_keys
    avp.kubernetes.io/secret-version: "13"
  name: minio-secret
  namespace: default
stringData:
  rootPassword: <rootPassword>
  rootUser: <rootUser>
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Secret/minio-secret:
apiVersion: v1
data:
  MINIO_ACCESS_KEY: RXNjaGVyY2xvdWRfQ1ZfZGVtbw==
  MINIO_SECRET_KEY: dXJGMkZiVVd2ODVkWXRqQg==
kind: Secret
metadata:
  name: minio-secret
  namespace: ai-demo
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-operator/Secret/console-sa-secret:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: console-sa
  name: console-sa-secret
  namespace: minio-operator
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Secret/minio-dev:
apiVersion: v1
data:
  root-password: Y0s0UHliWmJUTQ==
  root-user: YWRtaW4=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.26
    helm.sh/chart: minio-13.7.0
  name: minio-dev
  namespace: minio-dev
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio-service
  namespace: default
spec:
  ports:
  - name: minio-api
    nodePort: 39000
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: minio-console
    nodePort: 39001
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-dev
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-ml-workshop:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: min
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: s3-server-0.0.1
  name: minio-ml-workshop
  namespace: default
spec:
  ports:
  - name: api
    port: 9000
    protocol: TCP
  - name: web
    port: 33933
    protocol: TCP
  selector:
    app.kubernetes.io/instance: min
    app.kubernetes.io/name: minio
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-system/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-system
spec:
  ports:
  - name: s3
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource minio-system/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/Service/minio-dev:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.26
    helm.sh/chart: minio-13.7.0
  name: minio-dev
  namespace: minio-dev
spec:
  ports:
  - name: minio-api
    nodePort: null
    port: 9000
    targetPort: minio-api
  - name: minio-console
    nodePort: null
    port: 9001
    targetPort: minio-console
  selector:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/name: minio
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose -f minio.yml convert
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: minio
  name: minio
  namespace: default
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 9000
  - name: "9001"
    port: 9001
    targetPort: 9001
  selector:
    io.kompose.service: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dena/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: dena
spec:
  ports:
  - name: backend
    nodePort: 30000
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: ui
    nodePort: 30001
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource dena/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-serviceaccount.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-dev/ServiceAccount/minio-dev:
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: minio-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.26
    helm.sh/chart: minio-13.7.0
  name: minio-dev
  namespace: minio-dev
secrets:
- name: minio-dev

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-standalone2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/minio-2-update-prometheus-secret:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2-update-prometheus-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-2/ServiceAccount/minio-2:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: minio
    chart: minio-8.0.10
    release: minio-2
  name: minio-2
  namespace: minio-2

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-2:
apiVersion: v1
data:
  accesskey: YWRtaW4=
  secretkey: YWRtaW4xMjM=
kind: Secret
metadata:
  labels:
    app: minio
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/minio-2:
apiVersion: v1
data:
  initialize: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"

    # connectToMinio
    # Use a check-sleep-check loop to wait for Minio service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to Minio server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} config host add myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }

    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(${MC} ls myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }

    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3
      VERSIONING=$4

      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          ${MC} rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi

      # Create the bucket if it does not exist
      if ! checkBucketExists $BUCKET ; then
        echo "Creating bucket '$BUCKET'"
        ${MC} mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."
      fi


      # set versioning for bucket
      if [ ! -z $VERSIONING ] ; then
        if [ $VERSIONING = true ] ; then
            echo "Enabling versioning for '$BUCKET'"
            ${MC} version enable myminio/$BUCKET
        elif [ $VERSIONING = false ] ; then
            echo "Suspending versioning for '$BUCKET'"
            ${MC} version suspend myminio/$BUCKET
        fi
      else
          echo "Bucket '$BUCKET' versioning unchanged."
      fi

      # At this point, the bucket should exist, skip checking for existence
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      ${MC} policy set $POLICY myminio/$BUCKET
    }

    # Try connecting to Minio instance
    scheme=http
    connectToMinio $scheme
kind: ConfigMap
metadata:
  labels:
    app: minio
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: hwameistor-storage-lvm-hdd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/minio-2-update-prometheus-secret:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2-update-prometheus-secret
  namespace: default
rules:
- apiGroups:
  - ""
  resourceNames:
  - minio-2-prometheus
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
- apiGroups:
  - monitoring.coreos.com
  resourceNames:
  - minio-2
  resources:
  - servicemonitors
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/minio-2-update-prometheus-secret:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2-update-prometheus-secret
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: minio-2-update-prometheus-secret
subjects:
- kind: ServiceAccount
  name: minio-2-update-prometheus-secret
  namespace: minio-2

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-2:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 32000
    port: 9000
    protocol: TCP
  selector:
    app: minio
    release: minio-2
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-2 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone2_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
    chart: minio-8.0.10
    heritage: Helm
    release: minio-2
  name: minio-2
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
      release: minio-2
  strategy:
    rollingUpdate:
      maxSurge: 100%!
(MISSING)      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: e26f7bd851c816f09a0baca011b5fd319a530d327ff7eafda6308ec3d4e88cc6
        checksum/secrets: f44d8a0347ae2b1353543f113004ee35cd127d99cfe9e836ac69560bb990115d
      labels:
        app: minio
        release: minio-2
      name: minio-2
    spec:
      containers:
      - command:
        - /bin/sh
        - -ce
        - /usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /export
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: minio-2
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: minio-2
        image: minio/minio:RELEASE.2021-02-14T04-01-33Z
        imagePullPolicy: IfNotPresent
        name: minio
        ports:
        - containerPort: 9000
          name: http
        resources:
          requests:
            memory: 4Gi
        volumeMounts:
        - mountPath: /export
          name: export
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: minio-2
      volumes:
      - name: export
        persistentVolumeClaim:
          claimName: minio-2
      - name: minio-user
        secret:
          secretName: minio-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-2
policy disallow-default-namespace -> resource default/Deployment/minio-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/minio-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/minio-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minio-standalone-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-standalone-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-standalone-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minio-standalone-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio-storage-claim
  name: minio-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio-storage-claim
  name: minio-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio-storage-claim
  name: minio-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-pvc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio-storage-claim
  name: minio-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-standalone-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-storage-class.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dena/StorageClass/minio:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: minio
  namespace: dena
parameters:
  type: pd-ssd
provisioner: k8s.io/minikube-hostpath

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - name: api
    nodePort: 32733
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: console
    nodePort: 31718
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-system.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/minio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-system
  name: minio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/minio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: minio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/minio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: minio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: minio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/minio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: minio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-system_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-system/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: minio-system
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: BASE_HREF
          value: /minio/
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: quay.io/minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9090
          hostPort: 9090
        volumeMounts:
        - mountPath: /data
          name: gen3-volume
      nodeSelector:
        kubernetes.io/hostname: cloud08
      volumes:
      - hostPath:
          path: /$HOME/workspace/gen3-volume
          type: DirectoryOrCreate
        name: gen3-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource minio-system/Deployment/minio-deployment
policy disallow-latest-tag -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource minio-system/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: minio-system_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to minio-system/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: minio-tls.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/minio-tls:
apiVersion: v1
data:
  tls.crt: <base64 encoded tls cert>
  tls.key: <base64 encoded tls key>
kind: Secret
metadata:
  name: minio-tls
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miniserve.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/:
apiVersion: v1
kind: Pod
metadata:
  namespace: default
spec:
  containers:
  - args:
    - /data
    image: svenstaro/miniserve:latest
    name: test

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/

skipped mutate policy add-safe-to-evict -> resource default/Pod/
policy disallow-default-namespace -> resource default/Pod/ failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/ failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/ failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/ failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/ failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/ failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/ failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/ failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/ failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: minist-classifier_inference_endpoint.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minist-inference-endpoint-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minist-classifier
  name: minist-inference-endpoint-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: minist-classifier
  template:
    metadata:
      labels:
        app: minist-classifier
    spec:
      containers:
      - image: azmd801/minist-classifier:dev
        name: minist-classifier
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minist-inference-endpoint-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minist-inference-endpoint-deployment
policy disallow-default-namespace -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minist-inference-endpoint-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: minist-classifier_inference_endpoint_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minist-classifier-service:
apiVersion: v1
kind: Service
metadata:
  name: minist-classifier-service
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: minist-classifier
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: prod
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/LimitRange/min-max:
apiVersion: v1
kind: LimitRange
metadata:
  name: min-max
  namespace: prod
spec:
  limits:
  - max:
      cpu: 1
      memory: 1Gi
    min:
      cpu: 100m
      memory: 100M
    type: Container

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/Pod/podtest3:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: backend
    env: dev
  name: podtest3
  namespace: prod
spec:
  containers:
  - image: nginx:alpine
    name: cont1
    resources:
      limits:
        cpu: 50m
        memory: 50M

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource prod/Pod/podtest3

skipped mutate policy add-safe-to-evict -> resource prod/Pod/podtest3
policy drop-all-capabilities -> resource prod/Pod/podtest3 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource prod/Pod/podtest3 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource prod/Pod/podtest3 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource prod/Pod/podtest3 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource prod/Pod/podtest3 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource prod/Pod/podtest3 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource prod/Pod/podtest3 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: minmaxcpu.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/LimitRange/minmaxconfig:
apiVersion: v1
kind: LimitRange
metadata:
  name: minmaxconfig
  namespace: default
spec:
  limits:
  - max:
      cpu: 800m
    min:
      cpu: 200m
    type: Container

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max-limits.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: prod
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max-limits_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/LimitRange/min-max:
apiVersion: v1
kind: LimitRange
metadata:
  name: min-max
  namespace: prod
spec:
  limits:
  - max:
      cpu: 1
      memory: 1Gi
    min:
      cpu: 100m
      memory: 100M
    type: Container

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max-limits_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/Pod/podtest3:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: backend
    env: dev
  name: podtest3
  namespace: prod
spec:
  containers:
  - image: nginx:alpine
    name: cont1
    resources:
      limits:
        cpu: 50m
        memory: 50M

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource prod/Pod/podtest3

skipped mutate policy add-safe-to-evict -> resource prod/Pod/podtest3
policy drop-all-capabilities -> resource prod/Pod/podtest3 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource prod/Pod/podtest3 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource prod/Pod/podtest3 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource prod/Pod/podtest3 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource prod/Pod/podtest3 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource prod/Pod/podtest3 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource prod/Pod/podtest3 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: min-max-limits1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: prod
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max-limits1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/LimitRange/mem-min:
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-min
  namespace: prod
spec:
  limits:
  - max:
      cpu: 1
      memory: 1Gi
    min:
      cpu: 100m
      memory: 500Mi
    type: Container

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: min-max-limits1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to prod/Pod/podtest:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: test
  name: podtest
  namespace: prod
spec:
  containers:
  - image: nginx:alpine
    name: cont1
    resources:
      limits:
        cpu: 0.5
        memory: 750Mi
      requests:
        cpu: 0.3
        memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource prod/Pod/podtest

skipped mutate policy add-safe-to-evict -> resource prod/Pod/podtest
policy drop-all-capabilities -> resource prod/Pod/podtest failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource prod/Pod/podtest failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource prod/Pod/podtest failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource prod/Pod/podtest failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource prod/Pod/podtest failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource prod/Pod/podtest failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: min-ready-seconds.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 3
  selector:
    matchLabels:
      app-label: my-app
  template:
    metadata:
      labels:
        app-label: my-app
    spec:
      containers:
      - image: nginx
        name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-deployment
policy disallow-default-namespace -> resource default/Deployment/my-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/my-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/my-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: miporin.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to knative-serving/Service/miporin:
apiVersion: v1
kind: Service
metadata:
  name: miporin
  namespace: knative-serving
spec:
  ports:
  - port: 80
    targetPort: 18080
  selector:
    app: miporin

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to knative-serving/Deployment/miporin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: miporin
  name: miporin
  namespace: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miporin
  template:
    metadata:
      labels:
        app: miporin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - node1
      containers:
      - env:
        - name: MIPORIN_ENVIRONMENT
          value: container
        envFrom:
        - configMapRef:
            name: config-ikukantai
        image: docker.io/bonavadeur/miporin:v1.2-cnsm-15nov24
        imagePullPolicy: IfNotPresent
        name: miporin
        ports:
        - containerPort: 18080
      hostname: miporin
      serviceAccount: miporin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource knative-serving/Deployment/miporin

skipped mutate policy add-safe-to-evict -> resource knative-serving/Deployment/miporin
policy drop-all-capabilities -> resource knative-serving/Deployment/miporin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource knative-serving/Deployment/miporin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource knative-serving/Deployment/miporin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: miporin1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to knative-serving/ServiceAccount/miporin:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: miporin
    app.kubernetes.io/name: miporin
    app.kubernetes.io/version: 1.12.1
  name: miporin
  namespace: knative-serving

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/miporin:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: miporin
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batch.bonavadeur.io
  resources:
  - seikas
  verbs:
  - get
  - watch
  - list
  - patch
  - delete
  - create
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - watch
  - list
  - patch
  - delete
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/miporin:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: miporin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: miporin
subjects:
- kind: ServiceAccount
  name: miporin
  namespace: knative-serving
- kind: ServiceAccount
  name: activator
  namespace: knative-serving
- kind: ServiceAccount
  name: default
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/miporin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: miporin
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/miporin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: miporin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: miporin
subjects:
- kind: ServiceAccount
  name: miporin
  namespace: knative-serving
- kind: ServiceAccount
  name: default
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to knative-serving/Service/miporin:
apiVersion: v1
kind: Service
metadata:
  name: miporin
  namespace: knative-serving
spec:
  ports:
  - port: 80
    targetPort: 18080
  selector:
    app: miporin

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miporin1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to knative-serving/Deployment/miporin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: miporin
  name: miporin
  namespace: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miporin
  template:
    metadata:
      labels:
        app: miporin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - node1
      containers:
      - env:
        - name: MIPORIN_ENVIRONMENT
          value: container
        envFrom:
        - configMapRef:
            name: config-ikukantai
        image: docker.io/bonavadeur/miporin:dev
        imagePullPolicy: IfNotPresent
        name: miporin
        ports:
        - containerPort: 18080
      hostname: miporin
      serviceAccount: miporin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource knative-serving/Deployment/miporin

skipped mutate policy add-safe-to-evict -> resource knative-serving/Deployment/miporin
policy drop-all-capabilities -> resource knative-serving/Deployment/miporin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource knative-serving/Deployment/miporin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource knative-serving/Deployment/miporin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource knative-serving/Deployment/miporin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: mirror.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-host-split-canary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istio-host-split
  name: istio-host-split-canary
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: istio-host-split

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mirror_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-host-split-stable:
apiVersion: v1
kind: Service
metadata:
  name: istio-host-split-stable
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: istio-host-split

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: missingDataFields.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testing/Secret/azure-service-principal:
apiVersion: v1
data:
  clientId: Y2xpZW50LWlkCg==
  clientSecret: Y2xpZW50LXNlY3JldC1zZWNyZXQtc3RyaW5nCg==
  tenantId: dGVuYW50LWlkCg==
kind: Secret
metadata:
  annotations:
    jenkins.io/credentials-description: Azure service principal
  labels:
    jenkins.io/credentials-scope: system
    jenkins.io/credentials-type: azureServicePrincipal
  name: azure-service-principal
  namespace: testing
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: missingDataFields_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testing/Secret/azure-service-principal:
apiVersion: v1
data:
  clientSecret: Y2xpZW50LXNlY3JldC1zZWNyZXQtc3RyaW5nCg==
  subscriptionId: MTIzNDQ1NjQ1Nwo=
  tenantId: dGVuYW50LWlkCg==
kind: Secret
metadata:
  annotations:
    jenkins.io/credentials-description: Azure service principal
  labels:
    jenkins.io/credentials-scope: system
    jenkins.io/credentials-type: azureServicePrincipal
  name: azure-service-principal
  namespace: testing
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: missingDataFields_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testing/Secret/azure-service-principal:
apiVersion: v1
data:
  clientId: Y2xpZW50LWlkCg==
  subscriptionId: MTIzNDQ1NjQ1Nwo=
  tenantId: dGVuYW50LWlkCg==
kind: Secret
metadata:
  annotations:
    jenkins.io/credentials-description: Azure service principal
  labels:
    jenkins.io/credentials-scope: system
    jenkins.io/credentials-type: azureServicePrincipal
  name: azure-service-principal
  namespace: testing
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: missingDataFields_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testing/Secret/azure-service-principal:
apiVersion: v1
data:
  clientId: Y2xpZW50LWlkCg==
  clientSecret: Y2xpZW50LXNlY3JldC1zZWNyZXQtc3RyaW5nCg==
  subscriptionId: MTIzNDQ1NjQ1Nwo=
kind: Secret
metadata:
  annotations:
    jenkins.io/credentials-description: Azure service principal
  labels:
    jenkins.io/credentials-scope: system
    jenkins.io/credentials-type: azureServicePrincipal
  name: azure-service-principal
  namespace: testing
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: missingScope.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testing/Secret/azure-service-principal:
apiVersion: v1
data:
  clientId: Y2xpZW50LWlkCg==
  clientSecret: Y2xpZW50LXNlY3JldC1zZWNyZXQtc3RyaW5nCg==
  subscriptionId: MTIzNDQ1NjQ1Nwo=
  tenantId: dGVuYW50LWlkCg==
kind: Secret
metadata:
  annotations:
    jenkins.io/credentials-description: Azure service principal
  labels:
    jenkins.io/credentials-type: azureServicePrincipal
  name: azure-service-principal
  namespace: testing
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: misused-command.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/broken-pods-misused-command-pod:
apiVersion: v1
kind: Pod
metadata:
  name: broken-pods-misused-command-pod
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    image: busybox
    name: broken-pods-misused-command-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/broken-pods-misused-command-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/broken-pods-misused-command-pod
policy disallow-default-namespace -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/broken-pods-misused-command-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mitmweb-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mitmweb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mitmweb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mitmweb
  template:
    metadata:
      labels:
        app: mitmweb
    spec:
      containers:
      - args:
        - --web-host
        - 0.0.0.0
        command:
        - mitmweb
        image: mitmproxy/mitmproxy:11.1.0
        name: mitmweb
        ports:
        - containerPort: 8080
        - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mitmweb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mitmweb
policy disallow-default-namespace -> resource default/Deployment/mitmweb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mitmweb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mitmweb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mitmweb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mitmweb-http2-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mitmweb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mitmweb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mitmweb
  template:
    metadata:
      labels:
        app: mitmweb
    spec:
      containers:
      - args:
        - --web-host
        - 0.0.0.0
        - -s
        - /scripts/script.py
        command:
        - mitmweb
        image: mitmproxy/mitmproxy:latest
        name: mitmweb
        ports:
        - containerPort: 8080
        - containerPort: 8081
        volumeMounts:
        - mountPath: /scripts/script.py
          name: script-volume
          subPath: script.py
      volumes:
      - configMap:
          name: mitmproxy-script
        name: script-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mitmweb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mitmweb
policy disallow-default-namespace -> resource default/Deployment/mitmweb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mitmweb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mitmweb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mitmweb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mitmweb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mitmweb-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mitmweb:
apiVersion: v1
kind: Service
metadata:
  name: mitmweb
  namespace: default
spec:
  ports:
  - name: proxy
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: web
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: mitmweb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miwebapp-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to miwebapp/Deployment/miwebapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miwebapp
  namespace: miwebapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miwebapp
  template:
    metadata:
      labels:
        app: miwebapp
    spec:
      containers:
      - image: 192.168.49.2:5000/miwebapp:latest
        imagePullPolicy: IfNotPresent
        name: mywebapp
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource miwebapp/Deployment/miwebapp

skipped mutate policy add-safe-to-evict -> resource miwebapp/Deployment/miwebapp
policy disallow-latest-tag -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource miwebapp/Deployment/miwebapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: miwebapp-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/miwebapp:
apiVersion: v1
kind: Namespace
metadata:
  name: miwebapp
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/miwebapp:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: miwebapp
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/miwebapp:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: miwebapp
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/miwebapp:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: miwebapp
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/miwebapp:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: miwebapp
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: miwebapp-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to miwebapp/Service/miwebapp:
apiVersion: v1
kind: Service
metadata:
  name: miwebapp
  namespace: miwebapp
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: miwebapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_artifacts_pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/PersistentVolumeClaim/mlflow-artifacts:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-artifacts
  namespace: airflow
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_minio.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mlflow-minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-minio
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-minio
  template:
    metadata:
      labels:
        app: mlflow-minio
    spec:
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: minioadmin
        - name: MINIO_SECRET_KEY
          value: minioadmin
        image: minio/minio:RELEASE.2020-07-27T18-37-02Z
        imagePullPolicy: IfNotPresent
        name: mlflow-minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /data
          name: mlflow-pvc-2
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: mlflow-pvc-2
        persistentVolumeClaim:
          claimName: mlflow-pvc-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mlflow-minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mlflow-minio
policy disallow-default-namespace -> resource default/Deployment/mlflow-minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mlflow-minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mlflow-minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mlflow-minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mlflow-minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mlflow-minio failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mlflow-minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mlflow-minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mlflow_minio_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mlflow-minio-service:
apiVersion: v1
kind: Service
metadata:
  name: mlflow-minio-service
  namespace: default
spec:
  ports:
  - name: http
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: mlflow-minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mlflow-minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_minio_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/mlflow-minio-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.il/add-base-url: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: mlflow-minio-ingress
  namespace: default
spec:
  rules:
  - host: mlflow-minio.local
    http:
      paths:
      - backend:
          service:
            name: mlflow-minio-service
            port:
              number: 9000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_minio_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mlflow-pvc-2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc-2
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_postgres.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mlflow-postgres-config:
apiVersion: v1
data:
  PGDATA: /var/lib/postgresql/mlflow/data
  POSTGRES_DB: mlflow_db
  POSTGRES_PASSWORD: mlflow_pwd
  POSTGRES_USER: mlflow_user
kind: ConfigMap
metadata:
  labels:
    app: mlflow-postgres
  name: mlflow-postgres-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_postgres_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/mlflow-postgres:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mlflow-postgres
  name: mlflow-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-postgres
  serviceName: mlflow-postgres-service
  template:
    metadata:
      labels:
        app: mlflow-postgres
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: mlflow-postgres-config
        image: postgres:11
        imagePullPolicy: IfNotPresent
        name: mlflow-postgres
        ports:
        - containerPort: 5432
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 200Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/mlflow
          name: mlflow-pvc-2
  volumeClaimTemplates:
  - metadata:
      name: mlflow-pvc-2
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/mlflow-postgres

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/mlflow-postgres
policy disallow-default-namespace -> resource default/StatefulSet/mlflow-postgres failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/mlflow-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mlflow_postgres_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mlflow-postgres-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    svc: mlflow-postgres-service
  name: mlflow-postgres-service
  namespace: default
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: mlflow-postgres
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mlflow-postgres-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mlflow_runs_pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/PersistentVolumeClaim/mlflow-runs:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-runs
  namespace: airflow
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-and-minio-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        image: quay.io/minio/minio:latest
        name: minio
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: "1"
            memory: 10000Mi
          requests:
            cpu: "0.1"
            memory: 8000Mi
        volumeMounts:
        - mountPath: /data
          name: minio-pvc
      volumes:
      - name: minio-pvc
        persistentVolumeClaim:
          claimName: minio-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio-deployment
policy disallow-default-namespace -> resource default/Deployment/minio-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mlflow-and-minio-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio-service:
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/minio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-and-minio-deploy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/minio-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-and-minio-deploy_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/PersistentVolumeClaim/mlflow-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc
  namespace: test
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-and-minio-deploy_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Deployment/mlflow-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-server
  template:
    metadata:
      labels:
        app: mlflow-server
      name: mlflow-server-pod
    spec:
      containers:
      - args:
        - server
        - --host=0.0.0.0
        - --port=5000
        - --serve-artifacts
        - --artifacts-destination=s3://mlflow
        command:
        - mlflow
        env:
        - name: MLFLOW_VERSION
          value: 2.6.0
        - name: MLFLOW_S3_ENDPOINT_URL
          value: http://minio-service:9000
        - name: MLFLOW_TRACKING_URI
          value: http://127.0.0.1:5000
        - name: MLFLOW_BUCKET
          value: mlflow
        - name: MLFLOW_S3_IGNORE_TLS
          value: "true"
        - name: AWS_ACCESS_KEY_ID
          value: minioadmin
        - name: AWS_SECRET_ACCESS_KEY
          value: minioadmin
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        image: ubuntu/mlflow:2.1.1_1.0-22.04
        name: mlflow-server
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 3000Mi
          requests:
            cpu: 500m
            memory: 1000Mi
        volumeMounts:
        - mountPath: /data
          name: mlflow-pvc
      volumes:
      - name: mlflow-pvc
        persistentVolumeClaim:
          claimName: mlflow-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test/Deployment/mlflow-server

skipped mutate policy add-safe-to-evict -> resource test/Deployment/mlflow-server
policy drop-all-capabilities -> resource test/Deployment/mlflow-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test/Deployment/mlflow-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test/Deployment/mlflow-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource test/Deployment/mlflow-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource test/Deployment/mlflow-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test/Deployment/mlflow-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: mlflow-and-minio-deploy_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Service/mlflow-service:
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: test
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: mlflow-server
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource test/Service/mlflow-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-dc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mlflow:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      containers:
      - args:
        - --provider=keycloak-oidc
        - --https-address=
        - --http-address=:5000
        - --client-id=mflow
        - --client-secret=ad216993-cf3a-4742-ba17-b531d5c22046
        - --upstream=http://localhost:5500
        - --email-domain=*
        - --cookie-secret=ad12ca-qw23asd55adcwbjep
        - --oidc-issuer-url=https://$(KEYCLOAK_URL)/auth/realms/master
        - --allowed-role=mflow:admin
        - --reverse-proxy=true
        - --skip-provider-button=true
        - --ssl-insecure-skip-verify=true
        - --ssl-upstream-insecure-skip-verify=true
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.2.0
        imagePullPolicy: IfNotPresent
        name: oauth-proxy
        ports:
        - containerPort: 5000
          name: public
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - mlflow
        - server
        - --host=0.0.0.0
        - --port=5500
        - --backend-store-uri=postgresql://postgres:admin@mlflow-db:5432/postgres
        - --default-artifact-root=s3://mlflow/
        - --workers=2
        env:
        - name: MLFLOW_S3_ENDPOINT_URL
          value: http://minio-ml-workshop:9000/
        - name: AWS_ACCESS_KEY_ID
          value: minio
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: mlflow-store
        - name: AWS_BUCKET_NAME
          value: mlflow
        - name: MLFLOW_S3_IGNORE_TLS
          value: "true"
        image: quay.io/ml-aml-workshop/mlflow:0.0.2
        imagePullPolicy: Always
        name: mlflow-deployment
        ports:
        - containerPort: 5500
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 500m
      initContainers:
      - command:
        - sh
        - -c
        - until nslookup mlflow-db.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo waiting for mlflow db service; sleep 2; done
        image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:latest
        name: oauthproxy
      serviceAccountName: mlflow-proxy

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mlflow

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mlflow
policy disallow-default-namespace -> resource default/Deployment/mlflow failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mlflow failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mlflow failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mlflow failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mlflow failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mlflow failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/mlflow failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mlflow failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mlflow failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mlflow-dc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mlflow:
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: default
spec:
  ports:
  - name: http
    port: 5000
    targetPort: 5000
  - name: http-mlflow
    port: 5500
    targetPort: 5500
  selector:
    app: mlflow
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-install.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/PersistentVolumeClaim/mlflow-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc
  namespace: test
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-install_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Deployment/mlflow-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-server
  template:
    metadata:
      labels:
        app: mlflow-server
      name: mlflow-server-pod
    spec:
      containers:
      - args:
        - server
        - --host=0.0.0.0
        - --port=5000
        - --serve-artifacts
        - --artifacts-destination=s3://mlflow
        command:
        - mlflow
        env:
        - name: MLFLOW_VERSION
          value: 2.6.0
        - name: MLFLOW_S3_ENDPOINT_URL
          value: http://minio-service:9000
        - name: MLFLOW_TRACKING_URI
          value: http://127.0.0.1:5000
        - name: MLFLOW_BUCKET
          value: mlflow
        - name: MLFLOW_S3_IGNORE_TLS
          value: "true"
        - name: AWS_ACCESS_KEY_ID
          value: minioadmin
        - name: AWS_SECRET_ACCESS_KEY
          value: minioadmin
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        image: ubuntu/mlflow:2.1.1_1.0-22.04
        name: mlflow-server
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 3000Mi
          requests:
            cpu: 500m
            memory: 1000Mi
        volumeMounts:
        - mountPath: /data
          name: mlflow-pvc
      volumes:
      - name: mlflow-pvc
        persistentVolumeClaim:
          claimName: mlflow-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test/Deployment/mlflow-server

skipped mutate policy add-safe-to-evict -> resource test/Deployment/mlflow-server
policy drop-all-capabilities -> resource test/Deployment/mlflow-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test/Deployment/mlflow-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test/Deployment/mlflow-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource test/Deployment/mlflow-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource test/Deployment/mlflow-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test/Deployment/mlflow-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: mlflow-install_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Service/mlflow-service:
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: test
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: mlflow-server
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource test/Service/mlflow-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-postgesql-statefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mlflow-db:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mlflow-db
  name: mlflow-db
  namespace: default
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: mlflow-db
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mlflow-postgesql-statefulset_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/mlflow-db:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mlflow-db
  name: mlflow-db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-db
  serviceName: mlflow-db
  template:
    metadata:
      labels:
        app: mlflow-db
      name: mlflow-db-postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: admin
        - name: POSTGRESQL_USER
          value: postgres
        - name: POSTGRESQL_PASSWORD
          value: postgres
        - name: POSTGRESQL_DATABASE
          value: postgres
        image: quay.io/internaldatahub/postgresql-96-centos7:9.6
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 5
        name: mlflow-db-postgresql
        ports:
        - containerPort: 5432
          name: postgresql
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: mlflow-db-data
      initContainers: null
      securityContext:
        fsGroup: 1000630000
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: mlflow-db-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/mlflow-db

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/mlflow-db
policy disallow-default-namespace -> resource default/StatefulSet/mlflow-db failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/mlflow-db failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/mlflow-db failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/mlflow-db failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/mlflow-db failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/

policy require-ro-rootfs -> resource default/StatefulSet/mlflow-db failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/mlflow-db failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: mlflow-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubeflow-user-example-com/Secret/mlflow-secret:
apiVersion: v1
data:
  MLFLOW_TRACKING_PASSWORD: dXhuc1lrelZhVQ==
  MLFLOW_TRACKING_USERNAME: dXNlcg==
kind: Secret
metadata:
  name: mlflow-secret
  namespace: kubeflow-user-example-com
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: MLHub.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to foxden/Service/mlhub:
apiVersion: v1
kind: Service
metadata:
  name: mlhub
  namespace: foxden
spec:
  ports:
  - name: foxden
    port: 8350
    targetPort: 8350
  selector:
    app: mlhub

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: MLHub_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to foxden/Deployment/mlhub:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mlhub
  name: mlhub
  namespace: foxden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlhub
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8350"
        prometheus.io/scrape: "true"
      labels:
        app: mlhub
        env: k8s
    spec:
      containers:
      - command:
        - /data/srv
        env:
        - name: FOXDEN_CONFIG
          value: /etc/secrets/.foxden.yaml
        image: ghcr.io/chesscomputing/mlhub:v0.0.3-test2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: Accept
              value: application/json
            path: /apis
            port: 8350
          initialDelaySeconds: 120
          periodSeconds: 10
        name: mlhub
        ports:
        - containerPort: 8350
          name: foxden
          protocol: TCP
        resources:
          limits:
            cpu: 8000m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/secrets
          name: secrets
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: foxden-secrets

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource foxden/Deployment/mlhub

skipped mutate policy add-safe-to-evict -> resource foxden/Deployment/mlhub
policy drop-all-capabilities -> resource foxden/Deployment/mlhub failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource foxden/Deployment/mlhub failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource foxden/Deployment/mlhub failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource foxden/Deployment/mlhub failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource foxden/Deployment/mlhub failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: mlnx-pod_testpmd_connectx4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/testpmd:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    k8s.v1.cni.cncf.io/networks: sriov-dpdk-mlnx-connectx4
  name: testpmd
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: <DPDK testpmd image>
    imagePullPolicy: IfNotPresent
    name: testpmd
    resources:
      limits:
        hugepages-1Gi: 2Gi
        mellanox.com/mlnx_connectx4: 2
      requests:
        hugepages-1Gi: 2Gi
        mellanox.com/mlnx_connectx4: 2
        memory: 1Gi
    securityContext:
      capabilities:
        add:
        - IPC_LOCK
    volumeMounts:
    - mountPath: /dev/hugepages
      name: hugepage
  volumes:
  - emptyDir:
      medium: HugePages
    name: hugepage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/testpmd
policy disallow-default-namespace -> resource default/Pod/testpmd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/testpmd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/testpmd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/testpmd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/testpmd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/testpmd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/testpmd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/testpmd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/testpmd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: mlnx-pod_testpmd_connectx5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/testpmd:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    k8s.v1.cni.cncf.io/networks: sriov-dpdk-mlnx-connectx5
  name: testpmd
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: <DPDK testpmd image>
    imagePullPolicy: IfNotPresent
    name: testpmd
    resources:
      limits:
        hugepages-1Gi: 2Gi
        mellanox.com/mlnx_connectx5: 2
      requests:
        hugepages-1Gi: 2Gi
        mellanox.com/mlnx_connectx5: 2
        memory: 1Gi
    securityContext:
      capabilities:
        add:
        - IPC_LOCK
    volumeMounts:
    - mountPath: /dev/hugepages
      name: hugepage
  volumes:
  - emptyDir:
      medium: HugePages
    name: hugepage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/testpmd
policy disallow-default-namespace -> resource default/Pod/testpmd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/testpmd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/testpmd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/testpmd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/testpmd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/testpmd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/testpmd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/testpmd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/testpmd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: mobile-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mobile-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mobile
  name: mobile-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mobile
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mobile
    spec:
      containers:
      - image: httpd
        name: mobile-c
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-deployment
policy disallow-default-namespace -> resource default/Deployment/mobile-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mobile-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mobile-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mobile-svc:
apiVersion: v1
kind: Service
metadata:
  name: mobile-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: mobile

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mobile-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mobile-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mobile
  name: mobile-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mobile
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mobile
    spec:
      containers:
      - image: httpd
        name: mobile-c
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-deployment
policy disallow-default-namespace -> resource default/Deployment/mobile-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mobile-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mobile-app1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mobile-svc:
apiVersion: v1
kind: Service
metadata:
  name: mobile-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: mobile

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mobile-app3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mobile-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mobile
  name: mobile-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mobile
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mobile
    spec:
      containers:
      - image: httpd
        name: mobile-c
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-deployment
policy disallow-default-namespace -> resource default/Deployment/mobile-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mobile-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mobile-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mobile-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mobile-app3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mobile-svc:
apiVersion: v1
kind: Service
metadata:
  name: mobile-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: mobile

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mobile-echo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/mobile-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: mobile
  name: mobile-app
  namespace: default
spec:
  containers:
  - args:
    - -text=I am the Mobile API
    image: hashicorp/http-echo
    name: mobile-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/mobile-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/mobile-app
policy disallow-default-namespace -> resource default/Pod/mobile-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/mobile-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/mobile-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/mobile-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/mobile-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/mobile-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/mobile-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/mobile-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/mobile-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mobile-echo_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mobile-service:
apiVersion: v1
kind: Service
metadata:
  name: mobile-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: mobile

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mobile-gateway-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mobile-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mobile-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mobile-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mobile-gateway
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: K8S
        - name: AzureAd__Instance
          value: https://login.microsoftonline.com/
        - name: AzureAd__TenantId
          value: TENANT_ID
        - name: AzureAd__ClientId
          valueFrom:
            secretKeyRef:
              key: clientId
              name: azure-secret
        - name: AzureAd__ClientSecret
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: azure-secret
        - name: AzureAd__Scopes
          value: SCOPES
        - name: DownstreamApi__BaseUrl
          value: https://graph.microsoft.com/v1.0
        - name: DownstreamApi__Scopes__0
          value: SCOPES
        - name: DownstreamApi__Scopes__1
          value: openid
        - name: DownstreamApi__Scopes__2
          value: profile
        - name: DownstreamApi__Scopes__3
          value: offline_access
        - name: DownstreamApi__Scopes__4
          value: email
        image: realshinchoku/ddhc-mobile-gateway
        imagePullPolicy: Always
        name: mobile-gateway
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mobile-gateway
policy disallow-default-namespace -> resource default/Deployment/mobile-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mobile-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mobile-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mobile-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/mobile-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mobile-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mobile-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mobile-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mobile-gateway-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mobile-gateway:
apiVersion: v1
kind: Service
metadata:
  name: mobile-gateway
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: mobile-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mobile-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: model_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/model-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: ollama-operator
    app.kubernetes.io/instance: model-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: ollama-operator
  name: model-editor-role
  namespace: default
rules:
- apiGroups:
  - ollama.ayaka.io
  resources:
  - models
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ollama.ayaka.io
  resources:
  - models/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: model_patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/llm1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm1
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - --model
        - tiiuae/falcon-40b-instruct
        - --dtype
        - float16
        - --tensor-parallel-size=8
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1
policy disallow-default-namespace -> resource default/Deployment/llm1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/llm1 failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/llm1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/llm1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/llm1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/llm1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/llm1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/llm1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: model_patch1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/llm1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm1
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - --model
        - ibm-granite/granite-8b-code-instruct
        - --dtype
        - float16
        - --tensor-parallel-size=2
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1
policy disallow-default-namespace -> resource default/Deployment/llm1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/llm1 failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/llm1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/llm1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/llm1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/llm1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/llm1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/llm1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: model_patch2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/llm1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm1
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - --model
        - meta-llama/Llama-2-13b-chat-hf
        - --dtype
        - float16
        - --tensor-parallel-size=2
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1
policy disallow-default-namespace -> resource default/Deployment/llm1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/llm1 failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/llm1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/llm1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/llm1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/llm1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/llm1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/llm1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: model_patch3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/llm1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm1
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - --model
        - meta-llama/Meta-Llama-3-8B
        - --dtype
        - float16
        - --tensor-parallel-size=2
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1
policy disallow-default-namespace -> resource default/Deployment/llm1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/llm1 failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/llm1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/llm1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/llm1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/llm1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/llm1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/llm1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: model_patch4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/llm1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm1
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - --model
        - mistralai/Mistral-7B-Instruct-v0.2
        - --dtype
        - float16
        - --tensor-parallel-size=2
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1
policy disallow-default-namespace -> resource default/Deployment/llm1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/llm1 failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/llm1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/llm1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/llm1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/llm1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/llm1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/llm1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: model_patch5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/llm1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm1
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - --model
        - mistralai/Mixtral-8x7B-Instruct-v0.1
        - --dtype
        - float16
        - --tensor-parallel-size=8
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/llm1
policy disallow-default-namespace -> resource default/Deployment/llm1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/llm1 failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/llm1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/llm1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/llm1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/llm1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/llm1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/llm1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/llm1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: model_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/model-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: ollama-operator
    app.kubernetes.io/instance: model-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: ollama-operator
  name: model-viewer-role
  namespace: default
rules:
- apiGroups:
  - ollama.ayaka.io
  resources:
  - models
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ollama.ayaka.io
  resources:
  - models/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: model-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tf-serving-pizza-model:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tf-serving-pizza-model
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tf-serving-pizza-model
  template:
    metadata:
      labels:
        app: tf-serving-pizza-model
    spec:
      containers:
      - image: machine-learning-zoomcamp-capstone-02:xception-001
        name: tf-serving-pizza-model
        ports:
        - containerPort: 8500
        resources:
          limits:
            cpu: "1"
            memory: 4Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tf-serving-pizza-model

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tf-serving-pizza-model
policy disallow-default-namespace -> resource default/Deployment/tf-serving-pizza-model failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/tf-serving-pizza-model failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: model-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tf-serving-clothing-model:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tf-serving-clothing-model
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tf-serving-clothing-model
  template:
    metadata:
      labels:
        app: tf-serving-clothing-model
    spec:
      containers:
      - image: 647677696628.dkr.ecr.ap-southeast-1.amazonaws.com/ai-lesson-kuber-images:ai-lesson-clothing-model-xception-v4-001
        name: tf-serving-clothing-model
        ports:
        - containerPort: 8500
        resources:
          limits:
            cpu: 500m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tf-serving-clothing-model

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tf-serving-clothing-model
policy disallow-default-namespace -> resource default/Deployment/tf-serving-clothing-model failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/tf-serving-clothing-model failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: model-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dog-prediction-model:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dog-prediction-model
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dog-prediction-model
  template:
    metadata:
      labels:
        app: dog-prediction-model
    spec:
      containers:
      - image: dog-prediction-model:v1
        name: dog-prediction-model
        ports:
        - containerPort: 8500
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dog-prediction-model

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dog-prediction-model
policy disallow-default-namespace -> resource default/Deployment/dog-prediction-model failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dog-prediction-model failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: model-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/model-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model
  template:
    metadata:
      labels:
        app: model
    spec:
      containers:
      - image: ghfranjabour/model-service:latest
        name: model
        ports:
        - containerPort: 4040
      env:
      - name: DATAMART_HOST
        value: datamart

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/model-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/model-deployment
policy disallow-default-namespace -> resource default/Deployment/model-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/model-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/model-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/model-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/model-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/model-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/model-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/model-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/model-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: model-deployment4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/model-service:
apiVersion: v1
kind: Service
metadata:
  name: model-service
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 4040
    protocol: TCP
    targetPort: 4040
  selector:
    app: model
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/model-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: model-metrics.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kserve-test/Deployment/python-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app
  namespace: kserve-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-app
  template:
    metadata:
      labels:
        app: python-app
    spec:
      containers:
      - image: thescorpoi/model-prometheus:v2
        name: python-app
        ports:
        - containerPort: 4433

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kserve-test/Deployment/python-app

skipped mutate policy add-safe-to-evict -> resource kserve-test/Deployment/python-app
policy drop-all-capabilities -> resource kserve-test/Deployment/python-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kserve-test/Deployment/python-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kserve-test/Deployment/python-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kserve-test/Deployment/python-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kserve-test/Deployment/python-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kserve-test/Deployment/python-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kserve-test/Deployment/python-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: model-metrics_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kserve-test/Service/python-app:
apiVersion: v1
kind: Service
metadata:
  name: python-app
  namespace: kserve-test
spec:
  ports:
  - port: 4433
    protocol: TCP
    targetPort: 4433
  selector:
    app: python-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: model-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tf-serving-pizza-model:
apiVersion: v1
kind: Service
metadata:
  name: tf-serving-pizza-model
  namespace: default
spec:
  ports:
  - port: 8500
    targetPort: 8500
  selector:
    app: tf-serving-pizza-model

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: model-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tf-serving-clothing-model:
apiVersion: v1
kind: Service
metadata:
  name: tf-serving-clothing-model
  namespace: default
spec:
  ports:
  - port: 8500
    targetPort: 8500
  selector:
    app: tf-serving-clothing-model

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: model-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dog-prediction-model:
apiVersion: v1
kind: Service
metadata:
  name: dog-prediction-model
  namespace: default
spec:
  ports:
  - port: 8500
    targetPort: 8500
  selector:
    app: dog-prediction-model

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: models-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/model-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: model-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /mnt/data

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: models-pvc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/models-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation_delp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-srv:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-srv
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation-srv
  template:
    metadata:
      labels:
        app: moderation-srv
    spec:
      containers:
      - image: registry.gitlab.com/manos972/tp_fil_rouge/moderation:v1.4
        imagePullPolicy: IfNotPresent
        name: cicd-moderation-container
        ports:
        - containerPort: 4003
      imagePullSecrets:
      - name: app-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-srv

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-srv
policy disallow-default-namespace -> resource default/Deployment/moderation-srv failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/moderation-srv failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-srv failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-srv failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-srv failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-srv failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-srv failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-srv failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: moderation_delp_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - port: 4003
    protocol: TCP
  selector:
    app: moderation-srv

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: boilingsoup/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: khalil1009/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: rallycoding/moderation-84
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: devmatheuus/blog-moderation-service
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-clusterip-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-clusterip-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: lokeam/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: mabroukdev/blog-moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: samtwin2020/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: isuruk1/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: ksobitov/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: kliao36/moderation:latest
        name: moderation
        ports:
        - containerPort: 4003

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: bheshraj13/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: jcmontgomery/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: manuelextra/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: abdessalamwizli/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-clusterip-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-clusterip-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: dilippm92/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: mikuadam/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: imranalikm/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: jahidhiron/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 8003
    protocol: TCP
    targetPort: 8003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: tenaw/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl25_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: mathiasso/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl26_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: vanessavmk/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl27_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: daemonwolfdev/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl28_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4001
    protocol: TCP
    targetPort: 4001
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: rallycoding/moderation-84
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: devmatheuus/blog-moderation-service
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-clusterip-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-clusterip-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: lokeam/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: mabroukdev/blog-moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: boilingsoup/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: khalil1009/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-depl9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: manuelextra/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-depl
policy disallow-default-namespace -> resource default/Deployment/moderation-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-depl9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: moderation

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: nirgluzman/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-deployment
policy disallow-default-namespace -> resource default/Deployment/moderation-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4300
    protocol: TCP
    targetPort: 4300
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderation-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderation-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderation-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderation
  template:
    metadata:
      labels:
        app: moderation
    spec:
      containers:
      - image: nirgluzman/moderation
        name: moderation

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderation-deployment
policy disallow-default-namespace -> resource default/Deployment/moderation-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderation-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderation-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderation-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderation-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderation-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: moderation-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderation-srv:
apiVersion: v1
kind: Service
metadata:
  name: moderation-srv
  namespace: default
spec:
  ports:
  - name: moderation
    port: 4300
    protocol: TCP
    targetPort: 4300
  selector:
    app: moderation
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moderator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moderator-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moderator-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moderator-service
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: moderator-service
    spec:
      containers:
      - command:
        - python
        - manage.py
        - runserver
        - 0.0.0.0:8005
        env:
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_USERNAME
              name: rabbitmq-secret
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_PASSWORD
              name: rabbitmq-secret
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        image: ghcr.io/tomdieu/wikiculture/moderator_service:latest
        imagePullPolicy: IfNotPresent
        name: moderator-service
        ports:
        - containerPort: 8005
        volumeMounts:
        - mountPath: /moderator/staticfiles
          name: moderator-static-volume
      - command:
        - python
        - consumer.py
        env:
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_USERNAME
              name: rabbitmq-secret
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_PASSWORD
              name: rabbitmq-secret
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        image: ghcr.io/tomdieu/wikiculture/moderator_service:latest
        imagePullPolicy: IfNotPresent
        name: consumer
      initContainers:
      - command:
        - python
        - manage.py
        - collectstatic
        - --noinput
        env:
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_USERNAME
              name: rabbitmq-secret
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_PASSWORD
              name: rabbitmq-secret
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        - configMapRef:
            name: wikiculture-config
        image: ghcr.io/tomdieu/wikiculture/moderator_service:latest
        imagePullPolicy: IfNotPresent
        name: collectstatic
        volumeMounts:
        - mountPath: /moderator/staticfiles
          name: moderator-static-volume
      volumes:
      - emptyDir: {}
        name: moderator-static-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moderator-service
policy disallow-default-namespace -> resource default/Deployment/moderator-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/moderator-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/moderator-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moderator-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moderator-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moderator-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/moderator-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moderator-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moderator-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: moderator_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moderator-service:
apiVersion: v1
kind: Service
metadata:
  name: moderator-service
  namespace: default
spec:
  ports:
  - port: 8005
    protocol: TCP
    targetPort: 8005
  selector:
    app: moderator-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: modified-loki-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Service/loki:
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: loki
    meta.helm.sh/release-namespace: monitoring
  creationTimestamp: "2023-12-07T22:43:06Z"
  labels:
    app: loki
    app.kubernetes.io/managed-by: Helm
    chart: loki-2.16.0
    heritage: Helm
    release: loki
  name: loki
  namespace: monitoring
  resourceVersion: "3088442"
  uid: d9a95a51-28c7-456d-b75f-c24efddbb39e
spec:
  clusterIP: 10.43.188.90
  clusterIPs:
  - 10.43.188.90
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http-metrics
    port: 3100
    protocol: TCP
    targetPort: http-metrics
  selector:
    app: loki
    release: loki
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource monitoring/Service/loki failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: modify-pods.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/modify-pods:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: modify-pods
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: modsecurity_configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "true"
  enable-modsecurity: "true"
  enable-owasp-core-rules: "true"
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: module-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webtrees/ConfigMap/webtrees-modules-config:
apiVersion: v1
data:
  modules.py: |
    import os
    import shutil
    import zipfile
    from urllib.parse import urlparse
    from urllib.request import urlopen

    modules_dir = "modules_v4"
    source_file = "source.txt"
    sources = [
        "https://github.com/UksusoFF/webtrees-faces/archive/refs/tags/v2.7.3.zip",
        "https://github.com/JustCarmen/webtrees-fancy-imagebar/archive/refs/tags/2.4.1.zip",
        "https://github.com/JustCarmen/webtrees-theme-justlight/archive/refs/tags/2.3.1.zip",
        "https://github.com/vesta-webtrees-2-custom-modules/vesta_classic_laf/archive/9b0b37cd67eb4962b1f377aefb131a8806cf0896.zip",
        "https://github.com/vesta-webtrees-2-custom-modules/vesta_common/archive/eeca1bf0b7507b2ccfcdb1522a52ef24fde42fe8.zip",
        "https://github.com/vytux-com/vytux_cousins/archive/refs/tags/2.1.1.zip",
        "https://github.com/magicsunday/webtrees-fan-chart/releases/download/3.0.0/webtrees-fan-chart.zip",
        "https://github.com/magicsunday/webtrees-pedigree-chart/releases/download/2.0.0/webtrees-pedigree-chart.zip",
        "https://github.com/magicsunday/webtrees-descendants-chart/releases/download/2.0.0/webtrees-descendants-chart.zip",
    ]


    def check_existing_dir(dir: str, url: str) -> bool:
        """
        See if the existing directory came from the same source.
        If not, delete. Returns result.
        """
        if not os.path.isdir(dir):
            return False

        # see if existing folder comes from the same upstream url
        dir_source_file = os.path.join(dir, source_file)
        if os.path.isfile(dir_source_file):
            with open(dir_source_file, "r") as fp:
                source = fp.read()
                if source == url:
                    return True

        print(f"Deleting {dir}")
        shutil.rmtree(dir)
        return False


    def download_and_extract_zip(url: str) -> None:
        print("-------------------")
        if not os.path.exists(modules_dir):
            os.makedirs(modules_dir)

        # Parse the file name from the URL
        url_path = urlparse(url).path
        # comes with a leading slash
        repo_name = url_path.split("/")[2]
        file_name = os.path.basename(url_path)
        zip_path = os.path.join(modules_dir, file_name)
        dst_path = os.path.join(modules_dir, repo_name)

        # if already exists, break
        if check_existing_dir(dst_path, url):
            print(f"{url} already downloaded")
            return

        # Download the file
        print(f"Downloading {url}...")
        with urlopen(url) as response, open(zip_path, "wb") as file:
            file.write(response.read())
        print(f"Downloaded {file_name}.")

        # Extract the file
        print(f"Extracting {file_name}...")
        with zipfile.ZipFile(zip_path, "r") as zip_ref:
            # first item will be the top level directory name with no prefix
            extracted_dir = zip_ref.namelist()[0]
            zip_ref.extractall(modules_dir)
        print(f"Extracted {file_name}")

        # Delete the downloaded ZIP file
        os.remove(zip_path)
        print(f"Deleted {file_name}.")

        # Rename zip
        os.rename(os.path.join(modules_dir, extracted_dir), dst_path)
        print(f"Renamed {extracted_dir} to {repo_name}.")

        # Record source url
        with open(os.path.join(dst_path, source_file), "w") as fp:
            fp.write(url)


    if __name__ == "__main__":
        for source in sources:
            download_and_extract_zip(source)
kind: ConfigMap
metadata:
  name: webtrees-modules-config
  namespace: webtrees

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: module-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webtrees-test/ConfigMap/webtrees-test-modules-config:
apiVersion: v1
data:
  modules.py: |
    import os
    import shutil
    import zipfile
    from urllib.parse import urlparse
    from urllib.request import urlopen

    modules_dir = "modules_v4"
    source_file = "source.txt"
    sources = [
        "https://github.com/UksusoFF/webtrees-faces/archive/refs/tags/v2.7.3.zip",
        "https://github.com/JustCarmen/webtrees-fancy-imagebar/archive/refs/tags/2.4.1.zip",
        "https://github.com/JustCarmen/webtrees-theme-justlight/archive/refs/tags/2.3.1.zip",
        "https://github.com/vesta-webtrees-2-custom-modules/vesta_classic_laf/archive/f3a28f9948abd825f2055bdaf772e8744ef9de9f.zip",
        "https://github.com/vesta-webtrees-2-custom-modules/vesta_common/archive/eeca1bf0b7507b2ccfcdb1522a52ef24fde42fe8.zip",
        "https://github.com/vytux-com/vytux_cousins/archive/refs/tags/2.1.1.zip",
        "https://github.com/magicsunday/webtrees-fan-chart/releases/download/3.0.0/webtrees-fan-chart.zip",
        "https://github.com/magicsunday/webtrees-pedigree-chart/releases/download/2.0.0/webtrees-pedigree-chart.zip",
        "https://github.com/magicsunday/webtrees-descendants-chart/releases/download/2.0.0/webtrees-descendants-chart.zip",
    ]


    def check_existing_dir(dir: str, url: str) -> bool:
        """
        See if the existing directory came from the same source.
        If not, delete. Returns result.
        """
        if not os.path.isdir(dir):
            return False

        # see if existing folder comes from the same upstream url
        dir_source_file = os.path.join(dir, source_file)
        if os.path.isfile(dir_source_file):
            with open(dir_source_file, "r") as fp:
                source = fp.read()
                if source == url:
                    return True

        print(f"Deleting {dir}")
        shutil.rmtree(dir)
        return False


    def download_and_extract_zip(url: str) -> None:
        print("-------------------")
        if not os.path.exists(modules_dir):
            os.makedirs(modules_dir)

        # Parse the file name from the URL
        url_path = urlparse(url).path
        # comes with a leading slash
        repo_name = url_path.split("/")[2]
        file_name = os.path.basename(url_path)
        zip_path = os.path.join(modules_dir, file_name)
        dst_path = os.path.join(modules_dir, repo_name)

        # if already exists, break
        if check_existing_dir(dst_path, url):
            print(f"{url} already downloaded")
            return

        # Download the file
        print(f"Downloading {url}...")
        with urlopen(url) as response, open(zip_path, "wb") as file:
            file.write(response.read())
        print(f"Downloaded {file_name}.")

        # Extract the file
        print(f"Extracting {file_name}...")
        with zipfile.ZipFile(zip_path, "r") as zip_ref:
            # first item will be the top level directory name with no prefix
            extracted_dir = zip_ref.namelist()[0]
            zip_ref.extractall(modules_dir)
        print(f"Extracted {file_name}")

        # Delete the downloaded ZIP file
        os.remove(zip_path)
        print(f"Deleted {file_name}.")

        # Rename zip
        os.rename(os.path.join(modules_dir, extracted_dir), dst_path)
        print(f"Renamed {extracted_dir} to {repo_name}.")

        # Record source url
        with open(os.path.join(dst_path, source_file), "w") as fp:
            fp.write(url)


    if __name__ == "__main__":
        for source in sources:
            download_and_extract_zip(source)
kind: ConfigMap
metadata:
  name: webtrees-test-modules-config
  namespace: webtrees-test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: modulus.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/modulus-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: modulus-service-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: modulus-service
  template:
    metadata:
      labels:
        app: modulus-service
    spec:
      containers:
      - image: gcr.io/ceng489project/modulus:latest
        name: modulus-service
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/modulus-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/modulus-service-deployment
policy disallow-default-namespace -> resource default/Deployment/modulus-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/modulus-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: modulus-honeypot.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/duplicate-modulus-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: duplicate-modulus-service-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: duplicate-modulus-service
  template:
    metadata:
      labels:
        app: duplicate-modulus-service
    spec:
      containers:
      - image: gcr.io/ceng489project/modulus:latest
        name: duplicate-modulus-service
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/duplicate-modulus-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/duplicate-modulus-service-deployment
policy disallow-default-namespace -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/duplicate-modulus-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mohamed-csr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CertificateSigningRequest/mohamed:
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: mohamed
  namespace: default
spec:
  expirationSeconds: 864000000
  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ1Z6Q0NBVDhDQVFBd0VqRVFNQTRHQTFVRUF3d0hiVzlvWVcxbFpEQ0NBU0l3RFFZSktvWklodmNOQVFFQgpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMK0FMQkppSEtmWmFDOWhFVElhUGhQMW5SeUZOckxsajVSbk5kdnhDZzhHCmFsSnRZOHh0MWl0Yjg3R3VrVFcrQ2FlVktoWkpFS2hrd1BRMU50dUp0SlpjVkhHOFJ5N01oOEkyUzB2UjdxWHMKeGJpVXJ3UXRPOWVveEFHS1o1OElNc0I1WGs3OWUyc0dhWngwV2ZYU2h3c3FjZHRKcEtmMytzMy9XS3ozaUtyZwpDOWMxbHR1SDJ0UGJNSlZRQ3ZVVmhFWmRuK09rK2xoUFBWaTNsa1hKaFV6REZVRS90a1h3Z0xabEdYU1BjaTZ1ClZ0UzNCVEVUeitzbHpXYm9WelNyUXREY0VSZWg1aFdFdThXcktjQzU4QTduRkdEdFJhdnl2ekVJOTk0Uk9NbFkKUThrMVFvTE1DdGxzNGRXYnBoZkJqRUUrd2g2TVVOVisxNFk4RVVlbHBoOENBd0VBQWFBQU1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUNITzk1NDJwaU9LUVFseWJIRG4vRFZsR0RjYUVaazg2cDZwTnpweUU4Mlhld0tWVjZKCmt0T2hiNE02YTQ5a1oxWEU2L2YrMHV4WmZxbERjaFIyZkovYTNacys3dEdlZkcvYXc0MHJONXJQdzA2OHA4YVcKTVNRYStzdTMxbm5od1RrdmJMSUdnRisxNVVTWklNMWh6WjZKUGFocnpXaVJNN3UzTVR3RHFRams3d25XL0hHcwpqelRxSktkOEJidVhqMk4vRGNVaGorOXB1aEtVWjBHa2dzSTRVQTdNcjl6S2JlY3dFZldkSFZZb2xvdjNFelBDCnNlbjByblRJbjF2aGFRcjhIb3RnckNoVDlOcGxMdkN2T0REUFEzVWxYSlRsUkdDMXArVjQ2S1h2eWg1TjZDeSsKc1A5ZU9vSFBPYVRONW5tT0ZYWHZ6dFpvdEJWMjVvOUI0b3BOCi0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=
  signerName: kubernetes.io/kube-apiserver-client
  usages:
  - client auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: moija-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/moija-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moija-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moija-app
  template:
    metadata:
      labels:
        app: moija-app
    spec:
      containers:
      - env:
        - name: DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              key: datasource_url
              name: env-config
        - name: DATA_MONGODB_URL
          valueFrom:
            configMapKeyRef:
              key: data_mongodb_url
              name: env-config
        - name: DATANAME
          valueFrom:
            secretKeyRef:
              key: datasource_root_username
              name: db-credentials
        - name: DATAPASSWORD
          valueFrom:
            secretKeyRef:
              key: datasource_password
              name: db-credentials
        image: shinyenggwak/moija:cloud-0.5.8
        imagePullPolicy: Always
        name: moija-cont
        ports:
        - containerPort: 8090

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/moija-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/moija-deploy
policy disallow-default-namespace -> resource default/Deployment/moija-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/moija-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/moija-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/moija-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/moija-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/moija-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/moija-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/moija-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: moija-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/moija-service:
apiVersion: v1
kind: Service
metadata:
  name: moija-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8090
  selector:
    app: moija-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mollie-token.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mollie-token:
apiVersion: v1
data:
  mollie-token: |
    <VALUE>
kind: Secret
metadata:
  name: mollie-token
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mollie-token1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mollie-token:
apiVersion: v1
data:
  mollie-token: |
    <VALUE>
kind: Secret
metadata:
  name: mollie-token
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mollie-token-dev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mollie-token-dev:
apiVersion: v1
data:
  mollie-token-dev: |
    <VALUE>
kind: Secret
metadata:
  name: mollie-token-dev
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mollie-token-dev1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mollie-token-dev:
apiVersion: v1
data:
  mollie-token-dev: |
    <VALUE>
kind: Secret
metadata:
  name: mollie-token-dev
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mon-api-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mon-api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mon_api
  name: mon-api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mon_api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mon_api
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: mon-api-secret
        image: dockersebc/datascientest-exam-kubernetes-1:latest
        name: mon-api-conteneurs
        ports:
        - containerPort: 8000
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mon-api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mon-api-deployment
policy disallow-default-namespace -> resource default/Deployment/mon-api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mon-api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mon-api-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mon-api-secret:
apiVersion: v1
kind: Secret
metadata:
  name: mon-api-secret
  namespace: default
stringData:
  MYSQL_PASSWORD: datascientest1234
  MYSQL_URL: ma-bdd-service
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mon-api-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mon-api-service:
apiVersion: v1
kind: Service
metadata:
  name: mon-api-service
  namespace: default
spec:
  ports:
  - port: 8001
    protocol: TCP
    targetPort: 8000
  selector:
    app: mon_api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mon-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mon-cert-tls.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mon-cert-tls:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRV...LS0tGc==
  tls.key: LS0tLS1CRUdJTiBSU0...LS0tGc==
kind: Secret
metadata:
  name: mon-cert-tls
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mong.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
  name: mongodb-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-root-username
              name: mongodb-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-root-password
              name: mongodb-secret
        image: mongo
        name: mongodb
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-deployment
policy disallow-default-namespace -> resource default/Deployment/mongodb-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mong-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongdb-operator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb-kubernetes-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-kubernetes-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongodb-kubernetes-operator
  template:
    metadata:
      labels:
        name: mongodb-kubernetes-operator
    spec:
      containers:
      - command:
        - mongodb-kubernetes-operator
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: mongodb-kubernetes-operator
        - name: AGENT_IMAGE
          value: quay.io/mongodb/mongodb-agent:10.19.0.6562-1
        - name: VERSION_UPGRADE_HOOK_IMAGE
          value: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.2
        image: quay.io/mongodb/mongodb-kubernetes-operator:0.2.0
        imagePullPolicy: Always
        name: mongodb-kubernetes-operator
      serviceAccountName: mongodb-kubernetes-operator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-kubernetes-operator

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-kubernetes-operator
policy disallow-default-namespace -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb-kubernetes-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongexpress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongexpress:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongexpress
  name: mongexpress
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongexpress
  template:
    metadata:
      labels:
        app: mongexpress
      name: mongexpress
    spec:
      containers:
      - env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongo-creds
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongo-creds
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: link
              name: mongo-creds
        - name: ME_CONFIG_BASICAUTH_USERNAME
          value: admin
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          value: admin
        image: mongo-express:latest
        imagePullPolicy: IfNotPresent
        name: mongexpress
        ports:
        - containerPort: 8081
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongexpress

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongexpress
policy disallow-default-namespace -> resource default/Deployment/mongexpress failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongexpress failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongexpress failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongexpress failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongexpress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongexpress-service:
apiVersion: v1
kind: Service
metadata:
  name: mongexpress-service
  namespace: default
spec:
  ports:
  - nodePort: 30008
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: mongexpress
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mongexpress-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mongexpress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongexpress:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongexpress
  name: mongexpress
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongexpress
  template:
    metadata:
      labels:
        app: mongexpress
      name: mongexpress
    spec:
      containers:
      - env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongo-creds
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongo-creds
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: link
              name: mongo-creds
        - name: ME_CONFIG_BASICAUTH_USERNAME
          value: admin
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          value: admin
        image: mongo-express:latest
        imagePullPolicy: IfNotPresent
        name: mongexpress
        ports:
        - containerPort: 8081
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongexpress

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongexpress
policy disallow-default-namespace -> resource default/Deployment/mongexpress failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongexpress failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongexpress failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongexpress failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongexpress failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongexpress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongexpress-service:
apiVersion: v1
kind: Service
metadata:
  name: mongexpress-service
  namespace: default
spec:
  ports:
  - nodePort: 30008
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: mongexpress
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/mongexpress-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFROM:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        image: mongo:4.0-xenial
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:latest
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.5"
            memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
        volumeMounts:
        - mountPath: /data/db
          name: mongo-persistent-storage
      volumes:
      - emptyDir: {}
        name: mongo-persistent-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: mongo-app16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: secrets
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:latest
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: secret
        image: mongo
        name: mongodb
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-deployment
policy disallow-default-namespace -> resource default/Deployment/mongodb-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongodb-service:
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongodb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:latest
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secrets
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app25_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:7
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app26_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-user
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017
        resources:
          limits:
            cpu: 500m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app27_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:latest
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp
  name: webapp-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: USER_NAME
          valueFrom:
            secretKeyRef:
              key: mongo-root-username
              name: mongodb-secret
        - name: USER_PWD
          valueFrom:
            secretKeyRef:
              key: mongo-root-password
              name: mongodb-secret
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              key: database_url
              name: mongodb-configmap
        image: nanajanashia/k8s-demo-app:v1.0
        name: webapp
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp-deployment
policy disallow-default-namespace -> resource default/Deployment/webapp-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/webapp-service:
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: default
spec:
  ports:
  - nodePort: 30100
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: webapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/webapp-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: MONGO_USER
              name: mongo-secret
        - name: mongo-MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MONGO_PASSWORD
              name: mongo-secret
        image: mongo:latest
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-app9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: secret
        image: mongo:6.0
        name: mongo
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-deployment
policy disallow-default-namespace -> resource default/Deployment/mongo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: mongo-app9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-service:
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-argo-secret-pw.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/private-repo:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: private-repo
  namespace: argocd
stringData:
  password: xxxxxxxxxxxxxx
  type: git
  url: https://github.com/htoohtooaungcloud/cynapse-ai-k8s-setup.git
  username: your-username

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-backup-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backup-mongo/PersistentVolumeClaim/mongo-backup-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-backup-pvc
  namespace: backup-mongo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 400Gi
  storageClassName: gp3-xfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to federation/PersistentVolumeClaim/mongo-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-claim
  namespace: federation
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 400Mi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: mongo-claim0
  name: mongo-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim0-persistentvolumeclaim1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-claim0
  name: mongo-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim0-persistentvolumeclaim2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-claim0
  name: mongo-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim1-persistentvolume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/mongo-claim1-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-claim1-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 100Mi
  hostPath:
    path: /mnt/data
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim1-persistentvolume1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/mongo-claim1-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-claim1-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 100Mi
  hostPath:
    path: /mnt/data
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim1-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-claim1
  name: mongo-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim1-persistentvolumeclaim1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-claim1
  name: mongo-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-claim1-persistentvolumeclaim2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mongo-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-claim1
  name: mongo-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-client-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongo-client-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo-client-depl
  name: mongo-client-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-client
  template:
    metadata:
      labels:
        app: mongodb-client
    spec:
      containers:
      - env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-root-username
              name: mongo-secret
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-root-password
              name: mongo-secret
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
            configMapKeyRef:
              key: mongo-url
              name: mongo-config-map
        - name: ME_CONFIG_MONGODB_PORT
          valueFrom:
            configMapKeyRef:
              key: mongo-port
              name: mongo-config-map
        image: mongo-express
        name: mongo-client
        ports:
        - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-client-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongo-client-depl
policy disallow-default-namespace -> resource default/Deployment/mongo-client-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongo-client-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-client-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongodb-client-service:
apiVersion: v1
kind: Service
metadata:
  name: mongodb-client-service
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: mongodb-client
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-cluster.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-cluster:
apiVersion: v1
data:
  mongod.conf: |
    net:
      port: 27017
    replication:
      replSetName: rs0
    storage:
      dbPath: /data/db
kind: ConfigMap
metadata:
  labels:
    app: mongo-cluster
  name: mongo-cluster
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-cluster_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongo-cluster:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: mongo-cluster
  name: mongo-cluster
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: peer
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo-cluster
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-cluster_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/mongo-cluster:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo-cluster
  name: mongo-cluster
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mongo-cluster
  serviceName: mongo-cluster
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: mongo-cluster
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: mongo-cluster
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - date >> /var/log/kanister.log; tail -F /var/log/kanister.log
        command:
        - bash
        - -c
        env: null
        image: <registry>/<repository>/mongo-sidecar:<tag_name>
        name: mongo-tools-sidecar
      - command:
        - mongod
        - --config=/config/mongod.conf
        image: mongo:3.4
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongo-cluster
        ports:
        - containerPort: 27017
          name: peer
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /data/db
          name: datadir
        - mountPath: /config
          name: config
        - mountPath: /work-dir
          name: workdir
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - --work-dir=/work-dir
        image: gcr.io/google_containers/mongodb-install:0.5
        name: install
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /config
          name: config
      - args:
        - -on-start=/work-dir/on-start.sh
        - -service=mongo-cluster
        command:
        - /work-dir/peer-finder
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: REPLICA_SET
          value: rs0
        image: mongo:3.4
        name: bootstrap
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /config
          name: config
        - mountPath: /data/db
          name: datadir
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: mongo-cluster
        name: config
      - emptyDir: {}
        name: workdir
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
    status:
      phase: Pending

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/mongo-cluster
policy disallow-default-namespace -> resource default/StatefulSet/mongo-cluster failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/mongo-cluster failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: mongo-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-mongoapp/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: my-mongoapp

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config100.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config101.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config102.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config103.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config104.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config105.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config106.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config107.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config108.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config109.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config110.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config111.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config112.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config113.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config114.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config115.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  db-host: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config116.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config117.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config118.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config119.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config120.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config121.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config122.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config123.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mongodb-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
  name: mongodb-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-root-username
              name: mongodb-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-root-password
              name: mongodb-secret
        image: mongo:latest
        name: mongodb
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mongodb-deployment
policy disallow-default-namespace -> resource default/Deployment/mongodb-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mongodb-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: mongo-config123_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongodb-service:
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongodb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config124.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config125.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config126.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config127.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config128.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config129.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config130.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config131.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config132.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config133.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  db_url: mongo-internal-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-secret:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  MONGO_URL: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongodb.conf: "storage: \n  dbPath: /data/configdb\nreplication:\n  replSetName:
    \"rs0\"\n"
  password: venugopalreddy
  useraname: admin
immutable: false
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/demo-crm-conf:
apiVersion: v1
data:
  LOG_LEVEL: info
  PERSISTENCE: "true"
kind: ConfigMap
metadata:
  name: demo-crm-conf
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/demo-crm-conf:
apiVersion: v1
data:
  LOG_LEVEL: info
  PERSISTENCE: "true"
kind: ConfigMap
metadata:
  name: demo-crm-conf
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/demo-crm-conf:
apiVersion: v1
data:
  LOG_LEVEL: info
  PERSISTENCE: "true"
kind: ConfigMap
metadata:
  name: demo-crm-conf
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/task-manager-mongo-conf:
apiVersion: v1
data:
  LOG_LEVEL: info
  PERSISTENCE: "true"
kind: ConfigMap
metadata:
  name: task-manager-mongo-conf
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config57.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
  theme: rubyblue
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config58.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config59.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config60.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-mongo/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: k8s-mongo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config61.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kd/ConfigMap/mongo-config:
apiVersion: v1
data:
  MONGO_INITDB_ROOT_PASSWORD: example
  MONGO_INITDB_ROOT_USERNAME: root
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: kd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config62.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config63.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config65.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config66.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config67.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config68.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config69.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config70.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config71.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config72.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config73.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config74.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config75.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config76.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config77.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config78.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config79.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config80.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config81.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config82.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config83.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config84.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config85.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config86.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config87.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config88.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config89.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config90.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config91.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config92.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config93.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config94.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config95.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongodb-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config96.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config97.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config98.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config99.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-config-map.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  db_host: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap100.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-ConfigMap101.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap102.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap103.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap104.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap105.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap106.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap107.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongo
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap108.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap109.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mongo-setup/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: mongo-setup

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configMap11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongo-db-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap110.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap111.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap112.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap113.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  datbase_url: mongo-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap114.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap115.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-payment-configmap:
apiVersion: v1
data:
  MONGO_COMMAND: mongo
  MONGO_INITDB_DATABASE: payment-manager
  MONGO_INITDB_ROOT_PASSWORD: root
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_REPLICA_HOST: svc-mongodb-payment
  MONGO_REPLICA_PORT: "27017"
kind: ConfigMap
metadata:
  name: mongo-payment-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap116.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-production-configmap:
apiVersion: v1
data:
  MONGO_COMMAND: mongo
  MONGO_INITDB_DATABASE: production-manager
  MONGO_INITDB_ROOT_PASSWORD: root
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_REPLICA_HOST: svc-mongodb-production
  MONGO_REPLICA_PORT: "27018"
kind: ConfigMap
metadata:
  name: mongo-production-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap117.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap118.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap119.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  mongo.conf: |
    storage:
      dbPath: /data/db
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap120.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap121.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap122.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap123.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap124.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap125.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap126.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mongo/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: mongo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap127.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  mongo-port: "27017"
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap128.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap129.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-namespace/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: my-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap130.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap131.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap132.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap133.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap134.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap135.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap136.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configMap24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongo-db-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  mongo.conf: |
    storage:
      dbPath: /data/db
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: apps/v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database-url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection-string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection-string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configMap38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo-url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database-url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-mahir-submission-2-ns/ConfigMap/mongo-config:
apiVersion: v1
data:
  mongo.conf: |
    storage:
      dbPath: /data/db
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: devops-mahir-submission-2-ns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-config:
apiVersion: v1
data:
  mongodb.conf: |
    storage:
      dbPath: /data/venu
    replication:
      replSetName: "rs0"
  username: admin
immutable: false
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database-url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-config:
apiVersion: v1
data:
  mongodb.conf: |
    storage:
      dbPath: /data/db
    replication:
        replSetName: "rs0"
  username: admin1
immutable: false
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-config:
apiVersion: v1
data:
  mongodb.conf: |
    storage:
      dbPath: /data/db
    replication:
        replSetName: "rs0"
  username: admin1
immutable: false
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongo-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: development

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configMap55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap57.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap58.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  mongod.conf: |-
    storage:
      dbPath: /data/db
    net:
      bindIp: 0.0.0.0
    security:
      authorization: enabled
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap59.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap60.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap61.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap62.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap63.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongo-configmap:
apiVersion: v1
data:
  connection_string: mongodb://username:password@mongo-service:27017
kind: ConfigMap
metadata:
  name: mongo-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap65.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap66.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-config:
apiVersion: v1
data:
  mongodb.conf: |
    storage:
      dbPath: /data/db
    replication:
        replSetName: "rs0"
  username: admin14
immutable: false
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap67.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap68.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap69.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap70.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mongo-configmap71.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to maialen-namespace/ConfigMap/mongodb-configmap:
apiVersion: v1
data:
  database_url: mongodb-service
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: maialen-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mong-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/mongodb-secret:
apiVersion: v1
data:
  mongo-auth-password: cGFzc3dvcmQ=
  mongo-auth-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=
  mongo-root-username: dXNlcm5hbWU=
kind: Secret
metadata:
  name: mongodb-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: mon-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/mon-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mon-ingress
  namespace: default
spec:
  ingressClassName: traefik
  rules:
  - host: kubernetes.seb-coasne.cloudns.biz
    http:
      paths:
      - backend:
          service:
            name: mon-api-service
            port:
              number: 8001
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

