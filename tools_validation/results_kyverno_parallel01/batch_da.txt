##### FILE: dev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dev:
apiVersion: v1
kind: Namespace
metadata:
  name: dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/ResourceQuota/dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  name: dev
  namespace: dev
spec:
  hard:
    limits.cpu: 1
    limits.memory: 1Gi
    pods: 10
    requests.cpu: 0.8
    requests.memory: 500Mi
    services.nodeports: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/kantt-collector:
apiVersion: v1
kind: Namespace
metadata:
  name: kantt-collector
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/kantt-collector:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: kantt-collector
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/kantt-collector:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: kantt-collector
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kantt-collector:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: kantt-collector
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kantt-collector:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: kantt-collector
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kantt-collector-cluster-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kantt-collector-cluster-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kantt-collector-cluster-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kantt-collector-cluster-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kantt-collector-cluster-role
subjects:
- kind: ServiceAccount
  name: kantt-collector
  namespace: kantt-collector

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kantt-collector/ServiceAccount/kantt-collector:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kantt-collector
  namespace: kantt-collector

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kantt-collector/Deployment/kantt-collector:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kantt-collector
  namespace: kantt-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kantt-collector
  template:
    metadata:
      labels:
        app: kantt-collector
    spec:
      containers:
      - image: endophage/kantt-collector:latest
        imagePullPolicy: IfNotPresent
        name: collector
        ports:
        - containerPort: 8080
      serviceAccountName: kantt-collector

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kantt-collector/Deployment/kantt-collector

skipped mutate policy add-safe-to-evict -> resource kantt-collector/Deployment/kantt-collector
policy disallow-latest-tag -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kantt-collector/Deployment/kantt-collector failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dev_env.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/thisCanBeAnything:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thisCanBeAnything
  namespace: default
spec:
  template:
    spec:
      containers:
      - env:
        - name: ENVIRONMENT
          value: dev
        name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/thisCanBeAnything

skipped mutate policy add-safe-to-evict -> resource default/Deployment/thisCanBeAnything
policy disallow-default-namespace -> resource default/Deployment/thisCanBeAnything failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/thisCanBeAnything failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: dev_manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/go-api-content-configmap:
apiVersion: v1
data:
  content.txt: |
    Hi! I got deployed in Kubernetes Dev Environment using Kustomize
    Multi-line Test
kind: ConfigMap
metadata:
  name: go-api-content-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev_manifest_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-api-service:
apiVersion: v1
kind: Service
metadata:
  name: go-api-service
  namespace: default
spec:
  ports:
  - nodePort: 30090
    port: 9000
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-api-label
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/go-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dev_manifest_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: go-api-app
  name: go-api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-api-label
  template:
    metadata:
      labels:
        app: go-api-label
    spec:
      containers:
      - image: localhost/my-go-api-kustomize:1.0
        imagePullPolicy: IfNotPresent
        name: go-api-container
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /app/content
          name: go-api-content-file
      volumes:
      - configMap:
          name: go-api-content-configmap
        name: go-api-content-file

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-api-deployment
policy disallow-default-namespace -> resource default/Deployment/go-api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/go-api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dev11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dev:
apiVersion: v1
kind: Namespace
metadata:
  name: dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ui-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: react-ui
    env: dev
  name: ui-service
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: react-ui
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ui-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dev18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/react-ui-dep:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: react-ui
    env: dev
  name: react-ui-dep
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-ui
  template:
    metadata:
      labels:
        app: react-ui
        env: dev
    spec:
      containers:
      - image: thiernos/ui
        imagePullPolicy: IfNotPresent
        name: react-ui
        resources:
          limits:
            cpu: 0.2
            memory: 500Mi
          requests:
            cpu: 0.2
            memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/react-ui-dep

skipped mutate policy add-safe-to-evict -> resource default/Deployment/react-ui-dep
policy disallow-default-namespace -> resource default/Deployment/react-ui-dep failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/react-ui-dep failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/react-ui-dep failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/react-ui-dep failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/react-ui-dep failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/react-ui-dep failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/react-ui-dep failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/react-ui-dep failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dev19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/my-application-dev:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-application-dev
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-application
  template:
    metadata:
      labels:
        app: my-application
    spec:
      containers:
      - image: my-application:dev
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
        name: my-application
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/my-application-dev

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/my-application-dev
policy drop-all-capabilities -> resource dev/Deployment/my-application-dev failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/my-application-dev failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/my-application-dev failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/my-application-dev failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource dev/Deployment/my-application-dev failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/my-application-dev failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dev1-user-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev1/Role/dev1-full-access-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev1-full-access-role
  namespace: dev1
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev1-user-role_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev1/RoleBinding/full-access-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: full-access-rolebinding
  namespace: dev1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev1-full-access-role
subjects:
- kind: User
  name: <AD-user-name>
  namespace: dev1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dev:
apiVersion: v1
kind: Namespace
metadata:
  name: dev
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dev
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dev:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dev
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dev
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dev:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dev
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/ResourceQuota/dev:
apiVersion: v1
kind: ResourceQuota
metadata:
  name: dev
  namespace: dev
spec:
  hard:
    limits.cpu: 1
    limits.memory: 1Gi
    pods: 10
    requests.cpu: 0.8
    requests.memory: 500Mi
    services.nodeports: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev-argon/ConfigMap/ingress-rules:
apiVersion: v1
data:
  rules: |
    - path:
        origin:
          prefix: backend
          environment: dev
          service: argon
        destination:
          service: dev-argon
          namespace: dev-argon
          port: 9898
        rewrite:
          origin: yes
kind: ConfigMap
metadata:
  name: ingress-rules
  namespace: dev-argon

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev-helium/ConfigMap/ingress-rules:
apiVersion: v1
data:
  rules: |
    - path:
        origin:
          prefix: backend
          environment: dev
          service: helium
        destination:
          service: dev-helium
          namespace: dev-helium
          port: 9898
        rewrite:
          origin: yes
kind: ConfigMap
metadata:
  name: ingress-rules
  namespace: dev-helium

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev20_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev-neon/ConfigMap/ingress-rules:
apiVersion: v1
data:
  rules: |
    - path:
        origin:
          prefix: backend
          environment: dev
          service: neon
        destination:
          service: dev-neon
          namespace: dev-neon
          port: 9898
        rewrite:
          origin: yes
kind: ConfigMap
metadata:
  name: ingress-rules
  namespace: dev-neon

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginxdeployment
  template:
    metadata:
      labels:
        app: nginxdeployment
    spec:
      containers:
      - image: nginx:latest
        name: nginxdeployment
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/node/.n8n
          name: n8n-persistent-storage
      volumes:
      - name: n8n-persistent-storage
        persistentVolumeClaim:
          claimName: n8n-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        - name: CUSTOM_REDIS_HOST
          value: redis-service
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/node/.n8n
          name: n8n-persistent-storage
          subPath: n8n-storage
      volumes:
      - name: n8n-persistent-storage
        persistentVolumeClaim:
          claimName: n8n-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        - name: CUSTOM_REDIS_HOST
          value: redis-service
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/node/.n8n
          name: n8n-persistent-storage
          subPath: n8n-storage
      volumes:
      - name: n8n-persistent-storage
        persistentVolumeClaim:
          claimName: n8n-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        - name: CUSTOM_REDIS_HOST
          value: redis-service
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/node/.n8n
          name: n8n-persistent-storage
          subPath: n8n-storage
      volumes:
      - name: n8n-persistent-storage
        persistentVolumeClaim:
          claimName: n8n-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        - name: CUSTOM_REDIS_HOST
          value: redis-service
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/node/.n8n
          name: n8n-persistent-storage
          subPath: n8n-storage
      volumes:
      - name: n8n-persistent-storage
        persistentVolumeClaim:
          claimName: n8n-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devam-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/n8n-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - env:
        - name: GENERIC_TIMEZONE
          value: Europe/Istanbul
        - name: EXECUTIONS_PROCESS
          value: main
        - name: NODE_OPTIONS
          value: --max-old-space-size=4096
        - name: CUSTOM_REDIS_HOST
          value: redis-service
        image: n8nio/n8n:0.227.0
        name: n8n-main
        ports:
        - containerPort: 5678
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/node/.n8n
          name: n8n-persistent-storage
          subPath: n8n-storage
      volumes:
      - name: n8n-persistent-storage
        persistentVolumeClaim:
          claimName: n8n-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/n8n-deployment
policy disallow-default-namespace -> resource default/Deployment/n8n-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/n8n-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/n8n-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/n8n-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: develop.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/develop:
apiVersion: v1
kind: Namespace
metadata:
  name: develop
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: develop
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: develop
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: develop
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: develop
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Deployment/backend-deploy-develop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deploy-develop
  namespace: develop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-develop
  template:
    metadata:
      labels:
        app: backend-develop
    spec:
      containers:
      - image: lucaslpdacosta/backend-develop
        name: backend

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource develop/Deployment/backend-deploy-develop

skipped mutate policy add-safe-to-evict -> resource develop/Deployment/backend-deploy-develop
policy disallow-latest-tag -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: develop_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Service/backend-service-develop:
apiVersion: v1
kind: Service
metadata:
  name: backend-service-develop
  namespace: develop
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: backend-develop

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Ingress/ingress-develop-backend:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-develop-backend
  namespace: develop
spec:
  ingressClassName: nginx
  rules:
  - host: backdevelop.10.48.8.15.nip.io
    http:
      paths:
      - backend:
          service:
            name: backend-service-develop
            port:
              number: 3000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/develop:
apiVersion: v1
kind: Namespace
metadata:
  name: develop
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: develop
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: develop
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: develop
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: develop
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Deployment/frontend-deploy-develop:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: develop
  name: frontend-deploy-develop
  namespace: develop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-develop
  template:
    metadata:
      labels:
        app: frontend-develop
    spec:
      containers:
      - image: lucaslpdacosta/frontend-develop
        name: frontend
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource develop/Deployment/frontend-deploy-develop

skipped mutate policy add-safe-to-evict -> resource develop/Deployment/frontend-deploy-develop
policy disallow-latest-tag -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: develop_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Service/frontend-service-develop:
apiVersion: v1
kind: Service
metadata:
  name: frontend-service-develop
  namespace: develop
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: frontend-develop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Ingress/ingress-develop-frontend:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-develop-frontend
  namespace: develop
spec:
  ingressClassName: nginx
  rules:
  - host: frontdevelop.10.48.9.22.nip.io
    http:
      paths:
      - backend:
          service:
            name: frontend-service-develop
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/develop:
apiVersion: v1
kind: Namespace
metadata:
  name: develop
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: develop
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: develop
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: develop
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: develop
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Deployment/backend-deploy-develop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deploy-develop
  namespace: develop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-develop
  template:
    metadata:
      labels:
        app: backend-develop
    spec:
      containers:
      - image: lucaslpdacosta/backend-develop
        name: backend

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource develop/Deployment/backend-deploy-develop

skipped mutate policy add-safe-to-evict -> resource develop/Deployment/backend-deploy-develop
policy disallow-latest-tag -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource develop/Deployment/backend-deploy-develop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: develop1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Service/backend-service-develop:
apiVersion: v1
kind: Service
metadata:
  name: backend-service-develop
  namespace: develop
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: backend-develop

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Ingress/ingress-develop-backend:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-develop-backend
  namespace: develop
spec:
  ingressClassName: nginx
  rules:
  - host: backdevelop.10.48.8.15.nip.io
    http:
      paths:
      - backend:
          service:
            name: backend-service-develop
            port:
              number: 3000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/develop:
apiVersion: v1
kind: Namespace
metadata:
  name: develop
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: develop
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/develop:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: develop
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: develop
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/develop:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: develop
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Deployment/frontend-deploy-develop:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: develop
  name: frontend-deploy-develop
  namespace: develop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-develop
  template:
    metadata:
      labels:
        app: frontend-develop
    spec:
      containers:
      - image: lucaslpdacosta/frontend-develop
        name: frontend
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource develop/Deployment/frontend-deploy-develop

skipped mutate policy add-safe-to-evict -> resource develop/Deployment/frontend-deploy-develop
policy disallow-latest-tag -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource develop/Deployment/frontend-deploy-develop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: develop1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Service/frontend-service-develop:
apiVersion: v1
kind: Service
metadata:
  name: frontend-service-develop
  namespace: develop
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: frontend-develop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: develop1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to develop/Ingress/ingress-develop-frontend:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-develop-frontend
  namespace: develop
spec:
  ingressClassName: nginx
  rules:
  - host: frontdevelop.10.48.9.22.nip.io
    http:
      paths:
      - backend:
          service:
            name: frontend-service-develop
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CertificateSigningRequest/developer:
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: developer
  namespace: default
spec:
  expirationSeconds: 31536000
  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ1dUQ0NBVUVDQVFBd0ZERVNNQkFHQTFVRUF3d0paR1YyWld4dmNHVnlNSUlCSWpBTkJna3Foa2lHOXcwQgpBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6K1Y2UHNzMzRrVVY1M1ZYb3lTNjN3cHpZSFlMa2tpVlVLSENjMlkvClRDNjlDZURyZkVMejBGdUJYdmNacHNUdWdWc0puNXZmS0NTV2E2WEJRNHV3Q0VkU29ENk1LMUVkYWhnekF0OFcKeGpwZndyWFhuTTVVR3FIbGxEUXM5R290SEJLNXVGVWFmbTBxN0JvV0d1ekIzQ29IVlRTZHQxRFE3aXpZV3E1VQp1MFRwb2xsNU1jT2U0RWFhTTV1aHh4VzFvVUxVVDVVK0RUMXBtTDY1NGhmNVp0emlPaDUzN0doTVAyQU9WSEZtCmhacjJ2VlpTRVB4ajhiSFRGK1A1VG0yRVBqRlNpQW5zUUVhNDZ4K0kyNFZqZmlTV251WjhSZXBZNndub0FUZWEKQnEzd0pDalcxQWwySkxTV0x2enFYbXhrMnlqa2tWTDQ3L29VN0M4d0FBSmxiUUlEQVFBQm9BQXdEUVlKS29aSQpodmNOQVFFTEJRQURnZ0VCQUhabldxZnJodjlTWEVWYlJWQmVsQlJTRWVDQ0VFUWxxTlQ1TSt3UTBDaEc3S0JWCkk5TVNvR1hKMmF3TG81cWZPT1RJb1RrSm9Da1lhajNIWUJid21naWRrUGdRUHUzZjI5QkR5VEducGtuSVNuN2UKNWpjYWc3UkowdUlucGpIVUMzdk4yOW93aDZFYzl5U0ZUVW0rVTI2eVNJb2xBY0VtQ1lYT2VFc0x4S1lLOVdsZApCb2RRNEh5OVluc2wrNFpmQUdxN1Y2OVFYOUJUV1dhcDNKQW5mdXRxSEtUcml0NGhxQlZ4bFllUEE1VEEyMko1CmFsSjY5eDdTYWRSZHdaaG5paXZrNzh5TjRDZEpHN1NHeXhZektqZnkzV21TeWlKL1F1cVBaM3RGOThzMFp4bk0KVWdJQjcwZkJMY2F3bHZVM2srQlYzKzl4ZFBlODllZmRQajM4bngwPQotLS0tLUVORCBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0K
  signerName: kubernetes.io/kube-apiserver-client
  usages:
  - client auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-clusterRole.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/developer-cr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: developer-cr
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-clusterRoleBinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/developer-crb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: developer-crb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: developer-cr
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: developer

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-cr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/developer-cr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: developer-cr
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-crb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/developer-crb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: developer-crb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: developer-cr
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: developer

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-r.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-rb1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/read-pods:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: developer

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resourceNames:
  - blue
  - orange
  resources:
  - pods
  verbs:
  - list
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resourceNames:
  - blue
  - orange
  resources:
  - ""
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - blue
  - orange
  resources:
  - pods
  verbs:
  - list
  - get
  - create
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resourceNames:
  - blue
  - orange
  resources:
  - pods
  verbs:
  - list
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to automagic-developer/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: automagic-developer
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - list
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - ConfigMap
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - my-configmap
  resources:
  - ConfigMap
  verbs:
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Role/developer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: developer-role
  namespace: development
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - persistentvolumeclaims
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Role/developer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: developer-role
  namespace: development
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - persistentvolumeclaims
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Role/developer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: developer-role
  namespace: development
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - persistentvolumeclaims
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Role/developer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: developer-role
  namespace: development
rules:
- apiGroups:
  - ""
  resources:
  - services
  - persistentvolumeclaims
  - pods
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-role9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/developer:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: developer
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - ConfigMaps
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-rolebinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/read-pods:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: developer

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-rolebinding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/RoleBinding/developer-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: developer-rolebinding
  namespace: development
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: martin

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-rolebinding2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/RoleBinding/developer-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: developer-rolebinding
  namespace: development
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: martin

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developer-rolebinding3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/RoleBinding/developer-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: developer-rolebinding
  namespace: development
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: martin

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: development1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service1:
apiVersion: v1
kind: Service
metadata:
  name: service1
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: service1
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: development1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/service1-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: service1
  name: service1-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service1
  template:
    metadata:
      labels:
        app: service1
    spec:
      containers:
      - image: service1:latest
        imagePullPolicy: Never
        name: service1-svc
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/service1-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/service1-deployment
policy disallow-default-namespace -> resource default/Deployment/service1-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/service1-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/service1-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/service1-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/service1-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/service1-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/service1-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/service1-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/service1-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: development2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Deployment/pod-info-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pod-info
  name: pod-info-deployment
  namespace: development
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pod-info
  template:
    metadata:
      labels:
        app: pod-info
    spec:
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: kimschles/pod-info-app:latest
        name: pod-info-container
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Deployment/pod-info-deployment

skipped mutate policy add-safe-to-evict -> resource development/Deployment/pod-info-deployment
policy disallow-latest-tag -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Deployment/pod-info-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: development3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Deployment/my-app-development:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-development
  namespace: development
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 81

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Deployment/my-app-development

skipped mutate policy add-safe-to-evict -> resource development/Deployment/my-app-development
policy disallow-latest-tag -> resource development/Deployment/my-app-development failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Deployment/my-app-development failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Deployment/my-app-development failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Deployment/my-app-development failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Deployment/my-app-development failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource development/Deployment/my-app-development failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Deployment/my-app-development failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Deployment/my-app-development failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: development4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/resources-cluster-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: resources-cluster-role
  namespace: default
rules:
- apiGroups:
  - ""
  - networking.k8s.io
  resources:
  - namespaces
  - pods
  - pods/exec
  - networkpolicies
  - services
  - endpoints
  - service/status
  - endpoints/status
  - configmaps
  - secrets
  - ingresses
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - list
  - create
  - delete
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: development4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${NAMESPACE}/ServiceAccount/resources-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: resources-sa
  namespace: ${NAMESPACE}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: development4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/resources-cluster-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: resources-cluster-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: resources-cluster-role
subjects:
- kind: ServiceAccount
  name: resources-sa
  namespace: ${NAMESPACE}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: development4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${NAMESPACE}/Deployment/container-maker-development:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: container-maker-development
  name: container-maker-development
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-maker-development
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: container-maker-development
    spec:
      containers:
      - env:
        - name: SERVER_KEY
          valueFrom:
            secretKeyRef:
              key: server.key
              name: grpc-certs
        - name: SERVER_CRT
          valueFrom:
            secretKeyRef:
              key: server.crt
              name: grpc-certs
        - name: CLIENT_KEY
          valueFrom:
            secretKeyRef:
              key: client.key
              name: grpc-certs
        - name: CLIENT_CRT
          valueFrom:
            secretKeyRef:
              key: client.crt
              name: grpc-certs
        - name: CA_CRT
          valueFrom:
            secretKeyRef:
              key: ca.crt
              name: grpc-certs
        - name: NFS_IP
          value: 10.105.3.108
        - name: NFS_PATH
          value: /export
        image: zim95/container-maker-development:latest
        name: container-maker-development
        ports:
        - containerPort: 50051
        volumeMounts:
        - mountPath: /app
          name: app-code
      serviceAccountName: resources-sa
      volumes:
      - hostPath:
          path: ${HOSTPATH}
          type: Directory
        name: app-code

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ${NAMESPACE}/Deployment/container-maker-development
policy disallow-latest-tag -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ${NAMESPACE}/Deployment/container-maker-development failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: developmental-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ClusterRoleBinding/kubernetes-dashboard-cluster-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-cluster-admin
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: developmental-role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ClusterRoleBinding/kubernetes-dashboard-cluster-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-cluster-admin
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devicegateway-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/devicegateway-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devicegateway-depl
  namespace: default
spec:
  selector:
    matchLabels:
      io.kompose.service: devicegateway
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: devicegateway
    spec:
      containers:
      - env:
        - name: IMAGE_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: IMAGE_REPOSITORY
              name: ihotraco-configmap
        - name: SPRING_DATA_MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              key: SPRING_DATA_MONGODB_HOST
              name: ihotraco-configmap
        - name: target_url
          valueFrom:
            configMapKeyRef:
              key: target_url
              name: ihotraco-configmap
        - name: SERVER_URL
          value: https://$(target_url)
        - name: java_profiles
          valueFrom:
            configMapKeyRef:
              key: java_profiles
              name: ihotraco-configmap
        - name: SPRING_PROFILES_ACTIVE
          value: $(java_profiles)
        - name: MQTT_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_HOSTNAME
              name: ihotraco-configmap
        - name: CASSANDRA_PORT
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_PORT
              name: ihotraco-configmap
        - name: CASSANDRA_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_HOSTNAME
              name: ihotraco-configmap
        image: $(IMAGE_REPOSITORY)/devicegateway:stud-joris
        imagePullPolicy: Always
        name: devicegateway
        ports:
        - containerPort: 8449
        - containerPort: 8450
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 400Mi
        volumeMounts:
        - mountPath: /run/secrets/mongo-user
          name: mongo-user
          subPath: mongo-user
        - mountPath: /run/secrets/mongo-user-passwd
          name: mongo-user-passwd
          subPath: mongo-user-passwd
        - mountPath: /run/secrets/cassandra-username
          name: cassandra-username
          subPath: cassandra-username
        - mountPath: /run/secrets/cassandra-password
          name: cassandra-password
          subPath: cassandra-password
        - mountPath: /run/secrets/shutdown-secret
          name: shutdown-secret
          subPath: shutdown-secret
        - mountPath: /run/secrets/device-gateway-mqtt
          name: device-gateway-mqtt
          subPath: device-gateway-mqtt
      imagePullSecrets:
      - name: nexus-secrets
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - name: mongo-user
        secret:
          secretName: mongo-user
      - name: mongo-user-passwd
        secret:
          secretName: mongo-user-passwd
      - name: cassandra-username
        secret:
          secretName: cassandra-username
      - name: cassandra-password
        secret:
          secretName: cassandra-password
      - name: shutdown-secret
        secret:
          secretName: shutdown-secret
      - name: device-gateway-mqtt
        secret:
          secretName: device-gateway-mqtt
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/devicegateway-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/devicegateway-depl
policy disallow-default-namespace -> resource default/Deployment/devicegateway-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devicegateway-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/devicegateway-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devicegateway-depl
  namespace: default
spec:
  selector:
    matchLabels:
      io.kompose.service: devicegateway
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: devicegateway
    spec:
      containers:
      - env:
        - name: IMAGE_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: IMAGE_REPOSITORY
              name: ihotraco-configmap
        - name: SPRING_DATA_MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              key: SPRING_DATA_MONGODB_HOST
              name: ihotraco-configmap
        - name: target_url
          valueFrom:
            configMapKeyRef:
              key: target_url
              name: ihotraco-configmap
        - name: SERVER_URL
          value: https://$(target_url)
        - name: java_profiles
          valueFrom:
            configMapKeyRef:
              key: java_profiles
              name: ihotraco-configmap
        - name: SPRING_PROFILES_ACTIVE
          value: $(java_profiles)
        - name: MQTT_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: MQTT_HOSTNAME
              name: ihotraco-configmap
        - name: CASSANDRA_PORT
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_PORT
              name: ihotraco-configmap
        - name: CASSANDRA_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_HOSTNAME
              name: ihotraco-configmap
        image: $(IMAGE_REPOSITORY)/devicegateway:stud-joris
        imagePullPolicy: Always
        name: devicegateway
        ports:
        - containerPort: 8449
        - containerPort: 8450
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 400Mi
        volumeMounts:
        - mountPath: /run/secrets/mongo-user
          name: mongo-user
          subPath: mongo-user
        - mountPath: /run/secrets/mongo-user-passwd
          name: mongo-user-passwd
          subPath: mongo-user-passwd
        - mountPath: /run/secrets/cassandra-username
          name: cassandra-username
          subPath: cassandra-username
        - mountPath: /run/secrets/cassandra-password
          name: cassandra-password
          subPath: cassandra-password
        - mountPath: /run/secrets/shutdown-secret
          name: shutdown-secret
          subPath: shutdown-secret
        - mountPath: /run/secrets/device-gateway-mqtt
          name: device-gateway-mqtt
          subPath: device-gateway-mqtt
      imagePullSecrets:
      - name: nexus-secrets
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - name: mongo-user
        secret:
          secretName: mongo-user
      - name: mongo-user-passwd
        secret:
          secretName: mongo-user-passwd
      - name: cassandra-username
        secret:
          secretName: cassandra-username
      - name: cassandra-password
        secret:
          secretName: cassandra-password
      - name: shutdown-secret
        secret:
          secretName: shutdown-secret
      - name: device-gateway-mqtt
        secret:
          secretName: device-gateway-mqtt
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/devicegateway-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/devicegateway-depl
policy disallow-default-namespace -> resource default/Deployment/devicegateway-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/devicegateway-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devicegateway-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/devicegateway-depl:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: devicegateway-depl
  namespace: default
spec:
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 20
        type: Percent
        value: 20
    scaleUp:
      policies:
      - periodSeconds: 20
        type: Pods
        value: 1
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devicegateway-depl

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: devicegateway-hpa1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/devicegateway-depl:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: devicegateway-depl
  namespace: default
spec:
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 20
        type: Percent
        value: 20
    scaleUp:
      policies:
      - periodSeconds: 20
        type: Pods
        value: 1
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devicegateway-depl

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: device-gateway-mqtt.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/device-gateway-mqtt:
apiVersion: v1
data:
  device-gateway-mqtt: |
    <VALUE>
kind: Secret
metadata:
  name: device-gateway-mqtt
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: device-gateway-mqtt1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/device-gateway-mqtt:
apiVersion: v1
data:
  device-gateway-mqtt: |
    <VALUE>
kind: Secret
metadata:
  name: device-gateway-mqtt
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devicegateway-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/devicegateway-depl:
apiVersion: v1
kind: Service
metadata:
  name: devicegateway-depl
  namespace: default
spec:
  ports:
  - name: "8449"
    port: 8449
    targetPort: 8449
  - name: "8450"
    port: 8450
    targetPort: 8450
  selector:
    io.kompose.service: devicegateway
  type: ClusterIP
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devicegateway-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/devicegateway-depl:
apiVersion: v1
kind: Service
metadata:
  name: devicegateway-depl
  namespace: default
spec:
  ports:
  - name: "8449"
    port: 8449
    targetPort: 8449
  - name: "8450"
    port: 8450
    targetPort: 8450
  selector:
    io.kompose.service: devicegateway
  type: ClusterIP
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: device-plugin.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nvshare-system/DaemonSet/nvshare-device-plugin:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvshare-device-plugin
  namespace: nvshare-system
spec:
  selector:
    matchLabels:
      name: nvshare-device-plugin
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        name: nvshare-device-plugin
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: beclab/nvshare:libnvshare-v0.0.1
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - test -f /host-var-run-nvshare/libnvshare.so || ( test -d /host-var-run-nvshare/libnvshare.so
                && rm -rf /host-var-run-nvshare/libnvshare.so && false ) || touch
                /host-var-run-nvshare/libnvshare.so && mount -v --bind /libnvshare.so
                /host-var-run-nvshare/libnvshare.so
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - umount -v /host-var-run-nvshare/libnvshare.so && rm -rf /host-var-run-nvshare/libnvshare.so
        name: nvshare-lib
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host-var-run-nvshare
          mountPropagation: Bidirectional
          name: host-var-run-nvshare
      - env:
        - name: NVSHARE_VIRTUAL_DEVICES
          value: "10"
        image: bytetrade/nvshare:nvshare-device-plugin
        imagePullPolicy: IfNotPresent
        name: nvshare-device-plugin
        resources:
          limits:
            nvidia.com/gpu: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/lib/kubelet/device-plugins
          name: device-plugin-socket
      initContainers:
      - command:
        - sh
        - -c
        - '[ -d /var/run/nvshare/libnvshare.so ] && rm -rf /var/run/nvshare/libnvshare.so
          || true'
        image: busybox:1.28
        name: init-dir
        volumeMounts:
        - mountPath: /var/run/nvshare
          name: host-var-run-nvshare
      nodeSelector:
        gpu.bytetrade.io/cuda-supported: "true"
      priorityClassName: system-node-critical
      runtimeClassName: nvidia
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
      volumes:
      - hostPath:
          path: /var/run/nvshare
          type: DirectoryOrCreate
        name: host-var-run-nvshare
      - hostPath:
          path: /var/lib/kubelet/device-plugins
        name: device-plugin-socket

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource nvshare-system/DaemonSet/nvshare-device-plugin
policy drop-all-capabilities -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource nvshare-system/DaemonSet/nvshare-device-plugin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: device-plugin-daemonset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/nvidia-device-plugin-daemonset:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-device-plugin-daemonset
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: nvidia-device-plugin-ds
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        name: nvidia-device-plugin-ds
    spec:
      containers:
      - env:
        - name: FAIL_ON_INIT_ERROR
          value: "false"
        image: www.kb-sys.co.kr/nvcr.io/nvidia/k8s-device-plugin:v0.7.0
        imagePullPolicy: IfNotPresent
        name: nvidia-device-plugin-ctr
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/kubelet/device-plugins
          name: device-plugin
      dnsPolicy: ClusterFirst
      nodeSelector:
        konvoy.mesosphere.com/gpu-provider: NVIDIA
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/lib/kubelet/device-plugins
          type: ""
        name: device-plugin
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset
policy drop-cap-net-raw -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/nvidia-device-plugin-daemonset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: devicetopic-modelgroup01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to splunkuba/ReplicationController/devicetopic-modelgroup01-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: devicetopic-modelgroup01-rc
  namespace: splunkuba
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: devicetopic-modelgroup01
        uba-displayName: UBA_Streaming_Models_devicetopic-modelgroup01
        uba-groupName: ubastreamingmodels
        uba-serviceName: realtimemodels
    spec:
      containers:
      - command:
        - /opt/caspida/bin/UBAFunctionExecutor
        - com.caspida.streaming.docker.KafkaModelFunctionExecutor
        - -n
        - splunkuba
        - -G
        - devicetopic-modelgroup01
        - -f
        - DeviceExploitChainModel
        - -f
        - IpTrafficBeaconStreamDetection
        - -f
        - WebBeaconStreamDetection
        env:
        - name: UBA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: UBA_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UBA_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: UBA_HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: UBA_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: UBA_POD_MAXHEAP
          value: 3G
        - name: UBA_POD_GROUPNAME
          value: ubastreamingmodels
        - name: RUN_AS_USER
          value: null
        - name: RUN_AS_GROUP
          value: null
        image: sujits-uba53-rhel-k8s-01:5000/ubabase:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - startup
          preStop:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - shutdown
        livenessProbe:
          exec:
            command:
            - /opt/caspida/bin/ContainerLivenessProbe.sh
          failureThreshold: 2
          initialDelaySeconds: 900
          periodSeconds: 900
          timeoutSeconds: 60
        name: devicetopic-modelgroup01
        volumeMounts:
        - mountPath: /var/vcap/sys/log/caspida/containerization
          name: log-volume
          readOnly: false
      hostAliases:
      - hostnames:
        - sujits-uba53-rhel-k8s-01.sv.splunk.com
        - sujits-uba53-rhel-k8s-01
        ip: 10.141.39.46
      - hostnames:
        - sujits-uba53-rhel-k8s-02.sv.splunk.com
        - sujits-uba53-rhel-k8s-02
        ip: 10.141.39.205
      - hostnames:
        - sujits-uba53-rhel-k8s-03.sv.splunk.com
        - sujits-uba53-rhel-k8s-03
        ip: 10.141.39.184
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/vcap/sys/log/caspida/containerization
        name: log-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc
policy disallow-latest-tag -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource splunkuba/ReplicationController/devicetopic-modelgroup01-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: devops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/devops:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: devops
  name: devops
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devops
  template:
    metadata:
      labels:
        app: devops
    spec:
      containers:
      - image: rain5115/devops:1.0
        livenessProbe:
          httpGet:
            path: /
            port: 8000
        name: devops
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/devops

skipped mutate policy add-safe-to-evict -> resource default/Deployment/devops
policy disallow-default-namespace -> resource default/Deployment/devops failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/devops failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/devops failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/devops failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/devops failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/devops failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/devops failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devops_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/hpa-devops:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-devops
  namespace: default
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devops

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: devops_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  ports:
  - nodePort: 30007
    port: 8000
    targetPort: 8000
  selector:
    app: devops
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/my-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: devops1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/devops:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: devops
  name: devops
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devops
  template:
    metadata:
      labels:
        app: devops
    spec:
      containers:
      - image: rain5115/devops:1.0
        livenessProbe:
          httpGet:
            path: /
            port: 8000
        name: devops
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/devops

skipped mutate policy add-safe-to-evict -> resource default/Deployment/devops
policy disallow-default-namespace -> resource default/Deployment/devops failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/devops failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/devops failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/devops failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/devops failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/devops failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/devops failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: devops1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/hpa-devops:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-devops
  namespace: default
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devops

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: devops1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  ports:
  - nodePort: 30007
    port: 8000
    targetPort: 8000
  selector:
    app: devops
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/my-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: devops2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/2ndpod:
apiVersion: v1
kind: Pod
metadata:
  name: 2ndpod
  namespace: default
spec:
  containers:
  - image: nginx
    name: simple-container
  tolerations:
  - effect: NoSchedule
    key: devops
    operator: Equal
    value: engineer

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/2ndpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/2ndpod
policy disallow-default-namespace -> resource default/Pod/2ndpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/2ndpod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/2ndpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/2ndpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/2ndpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/2ndpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/2ndpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/2ndpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/2ndpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: DevOps-ClusterRoleBinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/test:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: DevOps-ClusterRoleBinding_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/test:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: test

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: default
spec:
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: app
        imagePullPolicy: Never
        name: app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app
policy disallow-default-namespace -> resource default/Deployment/app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: devpod-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/devpod-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: devpod
  name: devpod-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /Users/tomxu/devpods/share

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devstore-api-catalog.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devstore/Service/api-catalog-loadbalancer-test:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: api-catalog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-catalog
    app.kubernetes.io/version: 5.0.0
    helm.sh/chart: template-api-2.0.1
  name: api-catalog-loadbalancer-test
  namespace: devstore
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app.kubernetes.io/instance: api-catalog
    app.kubernetes.io/name: api-catalog
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devstore-api-catalog1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devstore/Service/api-catalog-loadbalancer-test:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: api-catalog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-catalog
    app.kubernetes.io/version: 5.0.0
    helm.sh/chart: template-api-2.0.1
  name: api-catalog-loadbalancer-test
  namespace: devstore
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app.kubernetes.io/instance: api-catalog
    app.kubernetes.io/name: api-catalog
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devstore-api-catalog2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devstore/Service/api-catalog-loadbalancer-test:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: api-catalog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-catalog
    app.kubernetes.io/version: 5.0.0
    helm.sh/chart: template-api-2.0.1
  name: api-catalog-loadbalancer-test
  namespace: devstore
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app.kubernetes.io/instance: api-catalog
    app.kubernetes.io/name: api-catalog
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev-user-binding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to blue/RoleBinding/dev-user-deploy-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-user-deploy-binding
  namespace: blue
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deploy-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devuser-developer-binding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/devuser-developer-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devuser-developer-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev-user-developer-binding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/dev-user-developer-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-user-developer-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devuser-developer-binding2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/devuser-developer-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devuser-developer-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devuser-developer-binding3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: admin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devuser-developer-binding4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/devuser-developer-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devuser-developer-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: devuser-developer-binding5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/devuser-developer-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devuser-developer-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: dev-user

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev-user-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to blue/Role/deploy-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deploy-role
  namespace: blue
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev-user-role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to blue/Role/deploy-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deploy-role
  namespace: blue
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dev-webserver.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dev-webserver:
apiVersion: v1
kind: Pod
metadata:
  name: dev-webserver
  namespace: default
spec:
  containers:
  - image: lovelearnlinux/customweb:v1
    name: boxone
    volumeMounts:
    - mountPath: /etc/httpd/conf/
      name: webconfig
  restartPolicy: Never
  volumes:
  - configMap:
      name: dev-web-config
    name: webconfig

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dev-webserver

skipped mutate policy add-safe-to-evict -> resource default/Pod/dev-webserver
policy disallow-default-namespace -> resource default/Pod/dev-webserver failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dev-webserver failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dev-webserver failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dev-webserver failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dev-webserver failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dev-webserver failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dev-webserver failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dev-webserver failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dev-with-strategy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/hello-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-deploy
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 10
  selector:
    matchLabels:
      app: hello-world
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - image: lovelearnlinux/webserver:v1
        name: hello-pod
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/hello-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/hello-deploy
policy disallow-default-namespace -> resource default/Deployment/hello-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/hello-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/hello-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/hello-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/hello-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/hello-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/hello-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dev-with-strategy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hello-deploy-svc:
apiVersion: v1
kind: Service
metadata:
  name: hello-deploy-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: hello-world

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dewey.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dewey:
apiVersion: v1
kind: Pod
metadata:
  name: dewey
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: alpine
    name: dewey
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dewey

skipped mutate policy add-safe-to-evict -> resource default/Pod/dewey
policy disallow-default-namespace -> resource default/Pod/dewey failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dewey failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dewey failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dewey failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dewey failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dewey failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dewey failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dewey failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dewey failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dex.config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: "issuer: http://dex.auth.svc.cluster.local:5556/dex\nstorage:\n  type:
    kubernetes\n  config:\n    inCluster: true\nweb:\n  http: 0.0.0.0:5556\nlogger:\n
    \ level: \"debug\"\n  format: text\noauth2:\n  skipApprovalScreen: true\nenablePasswordDB:
    true\nstaticPasswords:\n- email: user@example.com\n  hash: $2a$10$aCqK.7wAh6H.GskWOKGrpuZblMWBtnf/a4tFBne2q1Adab3UmCY1u
    \n  # pw: admin\n  # https://github.com/dexidp/dex/pull/1601/commits\n  # FIXME:
    Use hashFromEnv instead\n  username: user\n  userID: \"15841185641784\"\nstaticClients:\n#
    https://github.com/dexidp/dex/pull/1664\n- idEnv: OIDC_CLIENT_ID\n  redirectURIs:
    [\"/authservice/oidc/callback\"]\n  name: 'Dex Login Application'\n  secretEnv:
    OIDC_CLIENT_SECRET\n"
kind: ConfigMap
metadata:
  name: dex
  namespace: auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ServiceAccount/dex:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ClusterRole/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  namespace: auth-system
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ClusterRoleBinding/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
  namespace: auth-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/Deployment/dex:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: dex
  name: dex
  namespace: auth-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dex
        revision: "1"
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        env:
        - name: KUBERNETES_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/dexidp/dex:v2.30.0
        imagePullPolicy: IfNotPresent
        name: dex
        ports:
        - containerPort: 5556
          name: http
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
        - mountPath: /etc/dex/tls
          name: tls
        - mountPath: /web/themes/custom/
          name: theme
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: dex
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tls
        secret:
          secretName: dex
      - configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: dex
        name: config
      - emptyDir: {}
        name: theme

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource auth-system/Deployment/dex
policy drop-all-capabilities -> resource auth-system/Deployment/dex failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource auth-system/Deployment/dex failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource auth-system/Deployment/dex failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: dex_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/Service/dex:
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: auth-system
spec:
  ports:
  - name: dex
    nodePort: 32000
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource auth-system/Service/dex failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dex_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/Ingress/dex:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-issuer
    ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  name: dex
  namespace: auth-system
spec:
  ingressClassName: nginx
  rules:
  - host: auth.apps.k8s.cloudcafe.tech
    http:
      paths:
      - backend:
          service:
            name: dex
            port:
              number: 5556
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - auth.apps.k8s.cloudcafe.tech
    secretName: dex

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ServiceAccount/dex:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ClusterRole/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  namespace: auth-system
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ClusterRoleBinding/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
  namespace: auth-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/Deployment/dex:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: dex
  name: dex
  namespace: auth-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dex
        revision: "1"
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        env:
        - name: KUBERNETES_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/dexidp/dex:v2.30.0
        imagePullPolicy: IfNotPresent
        name: dex
        ports:
        - containerPort: 5556
          name: http
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
        - mountPath: /etc/dex/tls
          name: tls
        - mountPath: /web/themes/custom/
          name: theme
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: dex
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tls
        secret:
          secretName: dex
      - configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: dex
        name: config
      - emptyDir: {}
        name: theme

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource auth-system/Deployment/dex
policy drop-all-capabilities -> resource auth-system/Deployment/dex failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource auth-system/Deployment/dex failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource auth-system/Deployment/dex failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource auth-system/Deployment/dex failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: dex1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/Service/dex:
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: auth-system
spec:
  ports:
  - name: dex
    nodePort: 32000
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource auth-system/Service/dex failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dex1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/Ingress/dex:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-issuer
    ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  name: dex
  namespace: auth-system
spec:
  ingressClassName: nginx
  rules:
  - host: auth.apps.k8s.cloudcafe.tech
    http:
      paths:
      - backend:
          service:
            name: dex
            port:
              number: 5556
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - auth.apps.k8s.cloudcafe.tech
    secretName: dex

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dex:
apiVersion: v1
kind: Namespace
metadata:
  name: dex
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dex:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dex
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dex:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dex
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dex:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dex
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dex:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dex
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Deployment/dex:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        env:
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: github-client
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: github-client
        - name: STATIC_HASH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: static-hash-password
              name: github-client
        - name: STATIC_SECRET
          valueFrom:
            secretKeyRef:
              key: static-secret
              name: github-client
        - name: KUBERNETES_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/dexidp/dex:v2.32.0
        name: dex
        ports:
        - containerPort: 5556
          name: https
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
            scheme: HTTPS
        volumeMounts:
        - mountPath: /etc/dex/cfg/config.yaml
          name: config
          subPath: config.yaml
        - mountPath: /etc/dex/tls
          name: tls
          readOnly: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      serviceAccountName: dex
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: dex
        name: config
      - name: tls
        secret:
          secretName: dex-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dex/Deployment/dex

skipped mutate policy add-safe-to-evict -> resource dex/Deployment/dex
policy drop-all-capabilities -> resource dex/Deployment/dex failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dex/Deployment/dex failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dex/Deployment/dex failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dex/Deployment/dex failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource dex/Deployment/dex failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dex/Deployment/dex failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dex5_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/dex-cluster-auth:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex-cluster-auth
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: kubequest-lil:kubernetes-admins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: |
    issuer: https://dex.k3s.lifoto.co:32000
    logger:
      level: "debug"
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      https: 0.0.0.0:5556
      tlsCert: /etc/dex/tls/tls.crt
      tlsKey: /etc/dex/tls/tls.key
    oauth2:
      responseTypes: ["code", "token", "id_token"]
      skipApprovalScreen: true

    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: $GITHUB_CLIENT_ID
        clientSecret: $GITHUB_CLIENT_SECRET
        redirectURI: https://dex.k3s.lifoto.co:32000/callback
        orgs:
          - name: kubequest-lil

    enablePasswordDB: true
    staticPasswords:
    - email: "ed.paillard@gmail.com"
      # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
      hash: $2y$10$OhTOIO8z6qKqbDQoduLoZeMbiPXbT1HwIWfCau9fv.kLRwENPB1Ea
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"

    oauth2:
      skipApprovalScreen: true
      responseTypes: ["code", "token", "id_token"]

    staticClients:
    - id: dex-k8s-authenticator
      redirectURIs:
      - https://login.k3s.lifoto.co/callback
      name: 'KubequestApp'
      secret: $STATIC_SECRET
kind: ConfigMap
metadata:
  name: dex
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Service/dex:
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  ports:
  - name: dex
    nodePort: 32000
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource dex/Service/dex failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dex5_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/ServiceAccount/dex:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex5_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  namespace: default
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex5_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dex:
apiVersion: v1
kind: Namespace
metadata:
  name: dex
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dex:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dex
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dex:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dex
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dex:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dex
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dex:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dex
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Deployment/dex:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        env:
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: github-client
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: github-client
        image: ghcr.io/dexidp/dex:v2.32.0
        name: dex
        ports:
        - containerPort: 5556
          name: https
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
            scheme: HTTPS
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
        - mountPath: /etc/dex/tls
          name: tls
      serviceAccountName: dex
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: dex
        name: config
      - name: tls
        secret:
          secretName: dex.example.com.tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dex/Deployment/dex

skipped mutate policy add-safe-to-evict -> resource dex/Deployment/dex
policy drop-all-capabilities -> resource dex/Deployment/dex failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dex/Deployment/dex failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dex/Deployment/dex failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dex/Deployment/dex failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource dex/Deployment/dex failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dex/Deployment/dex failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dex6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: |
    issuer: https://dex.example.com:32000
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      https: 0.0.0.0:5556
      tlsCert: /etc/dex/tls/tls.crt
      tlsKey: /etc/dex/tls/tls.key
    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: $GITHUB_CLIENT_ID
        clientSecret: $GITHUB_CLIENT_SECRET
        redirectURI: https://dex.example.com:32000/callback
        org: kubernetes
    oauth2:
      skipApprovalScreen: true

    staticClients:
    - id: example-app
      redirectURIs:
      - 'http://127.0.0.1:5555/callback'
      name: 'Example App'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0

    enablePasswordDB: true
    staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
kind: ConfigMap
metadata:
  name: dex
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex6_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Service/dex:
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  ports:
  - name: dex
    nodePort: 32000
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource dex/Service/dex failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dex6_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/ServiceAccount/dex:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex6_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  namespace: default
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex6_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/dex:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-ad-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: "issuer: https://auth.172.30.2.2.nip.io/\nstorage:\n  type: kubernetes\n
    \ config:\n    inCluster: true\noauth2:\n  skipApprovalScreen: true\nweb:\n  http:
    0.0.0.0:5556\n  tlsCert: /etc/dex/tls/tls.crt\n  tlsKey: /etc/dex/tls/tls.key\nfrontend:\n
    \ theme: custom\ntelemetry:\n  http: 0.0.0.0:5558\nstaticClients:\n- id: oidc-auth-client\n
    \ redirectURIs:\n  - https://kubectl.172.30.2.2.nip.io/callback\n  - http://dashboard.172.30.2.2.nip.io/oauth2/callback\n
    \ name: oidc-auth-client\n  secret: secret\nconnectors:\n- type: ldap\n  id: ldap\n
    \ name: LDAP\n  config:\n    host: 172.16.16.16:389\n    insecureNoSSL: true\n
    \   insecureSkipVerify: true\n    bindDN: admin\n    bindPW: 'StrongAdminPassw0rd'\n
    \   userSearch:\n      baseDN: OU=Cloudcafe Organisation,DC=cloudcafe,DC=org\n
    \     username: sAMAccountName\n      idAttr: sn\n      nameAttr: givenName\n
    \     emailAttr: mail\n    groupSearch: \n      baseDN: CN=groups,OU=cloudcafe,DC=cloudcafe,DC=org
    \n      userMatchers:\n      - userAttr: sAMAccountName\n        groupAttr: memberOf\n
    \     nameAttr: givenName\n"
kind: ConfigMap
metadata:
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-ad-cm1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: "issuer: https://auth.172.30.2.2.nip.io/\nstorage:\n  type: kubernetes\n
    \ config:\n    inCluster: true\noauth2:\n  skipApprovalScreen: true\nweb:\n  http:
    0.0.0.0:5556\n  tlsCert: /etc/dex/tls/tls.crt\n  tlsKey: /etc/dex/tls/tls.key\nfrontend:\n
    \ theme: custom\ntelemetry:\n  http: 0.0.0.0:5558\nstaticClients:\n- id: oidc-auth-client\n
    \ redirectURIs:\n  - https://kubectl.172.30.2.2.nip.io/callback\n  - http://dashboard.172.30.2.2.nip.io/oauth2/callback\n
    \ name: oidc-auth-client\n  secret: secret\nconnectors:\n- type: ldap\n  id: ldap\n
    \ name: LDAP\n  config:\n    host: 172.16.16.16:389\n    insecureNoSSL: true\n
    \   insecureSkipVerify: true\n    bindDN: admin\n    bindPW: 'StrongAdminPassw0rd'\n
    \   userSearch:\n      baseDN: OU=Cloudcafe Organisation,DC=cloudcafe,DC=org\n
    \     username: sAMAccountName\n      idAttr: sn\n      nameAttr: givenName\n
    \     emailAttr: mail\n    groupSearch: \n      baseDN: CN=groups,OU=cloudcafe,DC=cloudcafe,DC=org
    \n      userMatchers:\n      - userAttr: sAMAccountName\n        groupAttr: memberOf\n
    \     nameAttr: givenName\n"
kind: ConfigMap
metadata:
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-k8s-authenticator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Service/dex-k8s-authenticator:
apiVersion: v1
kind: Service
metadata:
  name: dex-k8s-authenticator
  namespace: dex
spec:
  ports:
  - name: http
    port: 5555
    targetPort: http
  selector:
    app: dex-k8s-authenticator
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-k8s-authenticator_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Deployment/dex-k8s-authenticator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex-k8s-authenticator
  namespace: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex-k8s-authenticator
  template:
    metadata:
      labels:
        app: dex-k8s-authenticator
    spec:
      containers:
      - args:
        - --config
        - config.yaml
        env:
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: github-client
        - name: STATIC_SECRET
          valueFrom:
            secretKeyRef:
              key: static-secret
              name: github-client
        image: mintel/dex-k8s-authenticator
        imagePullPolicy: IfNotPresent
        name: dex-k8s-authenticator
        ports:
        - containerPort: 5555
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /app/config.yaml
          name: config
          subPath: config.yaml
        - mountPath: /etc/tls/tls.crt
          name: tls-key
          subPath: ca.crt
      volumes:
      - configMap:
          name: dex-k8s-authenticator
        name: config
      - name: tls-key
        secret:
          secretName: dex-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dex/Deployment/dex-k8s-authenticator

skipped mutate policy add-safe-to-evict -> resource dex/Deployment/dex-k8s-authenticator
policy disallow-latest-tag -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dex/Deployment/dex-k8s-authenticator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dex-k8s-authenticator_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/ConfigMap/dex-k8s-authenticator:
apiVersion: v1
data:
  config.yaml: "listen: http://0.0.0.0:5555\nweb_path_prefix: /\ndebug: true\nclusters:\n
    \ - client_id: dex-k8s-authenticator\n    client_secret: $STATIC_SECRET\n    issuer:
    https://dex.k3s.lifoto.co:32000\n    k8s_ca_pem_file: /etc/tls/tls.crt\n    k8s_master_uri:
    https://kubequest-vm0.westeurope.cloudapp.azure.com:6443\n    name: KubequestApp\n
    \   redirect_uri: https://login.k3s.lifoto.co/callback\n    short_description:
    My Kubequest k3s cluster\n    description: My Kubequest k3s cluster\ntrusted_root_ca:
    |\n  -----BEGIN CERTIFICATE-----\n  MIIDBTCCAe2gAwIBAgIUHLkVX6ejNsW1uA7j4rw9djwLkvkwDQYJKoZIhvcNAQEL\n
    \ BQAwEjEQMA4GA1UEAwwHa3ViZS1jYTAeFw0yNDA2MDMxMjAxMjNaFw0yNDA4MDIx\n  MjAxMjNaMBIxEDAOBgNVBAMMB2t1YmUtY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\n
    \ DwAwggEKAoIBAQDeghgO4gV1EYPQB4oQwH3L0Jri+VthEPzZk++JcKpNAU2rKL38\n  acT8PGxkIwtueGZFYYHF4mTIHpUyp51meE9CjG5mPxwHRSMrMX2LEkKc2SUGjrSN\n
    \ 4zRVXmXerpbLeU59FeYIsJ42j5bCYDiw592GsLVRh1q26+b6gUHZQMltdBNcvTLA\n  EnOf9SHBTLnc35OmC4BjyRpsm33QPp0mIt63BVEGyiw3dxiMurtPD8XNQREyrpMl\n
    \ fVcjehK2SCWVFPFKgG2OfoULnhfCN1yknkn5uB3mBBRRxaklBj2OVQLp6O0Obfvp\n  Jv3tZE2zvhGPt0mr7wAd4WTgHc8zCF5PlQfDAgMBAAGjUzBRMB0GA1UdDgQWBBQ3\n
    \ 6J9KkPI2bvXKtuEqNEJrGaqh6DAfBgNVHSMEGDAWgBQ36J9KkPI2bvXKtuEqNEJr\n  Gaqh6DAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCXmF+v1q9k\n
    \ 4Z9Iu+gr+82+q30QWz2TvFNBwpIPvqE0+CfTnoOIXB+LYjr3pUCpQ7Ou1Tkc5Imt\n  q/hjZQql4IEo4usO662+C9wi+14BdnNWJFqTuKhESdM2hTY7cCMfQF8xPaRmcXAz\n
    \ i3//uD14tdE7kO+mUXSPyrnJwx0J36WZYNs/ijmnQVXB3sR17JlL2Moe45OqiSXY\n  afcTpNgN53sw4HL9+IE7MvcQkV0Utu0DeOitlS95p1/foHsdO3GdlIWfIJTdsHvf\n
    \ fHK1lpA0GSghMrlwqfS2pkVfEILnEcu1BRlz2mZIDz1jXtxSTl8xXU7JUcFanc7C\n  YwpjqfXJCFVf\n
    \ -----END CERTIFICATE-----\n  \n"
kind: ConfigMap
metadata:
  name: dex-k8s-authenticator
  namespace: dex

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-k8s-authenticator_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dex/Ingress/dex-k8s-authenticator:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: dex-k8s-authenticator
  namespace: dex
spec:
  ingressClassName: traefik
  rules:
  - host: login.k3s.lifoto.co
    http:
      paths:
      - backend:
          service:
            name: dex-k8s-authenticator
            port:
              number: 5555
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - login.k3s.lifoto.co
    secretName: cert-auth-login

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-ldap-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: "issuer: https://auth.apps.k8s.cloudcafe.tech/\nstorage:\n  type: kubernetes\n
    \ config:\n    inCluster: true\noauth2:\n  skipApprovalScreen: true\nweb:\n  http:
    0.0.0.0:5556\n  tlsCert: /etc/dex/tls/tls.crt\n  tlsKey: /etc/dex/tls/tls.key\nfrontend:\n
    \ issuer: dex\n  #logoURL: theme/logo.png\n  logoURL: https://raw.githubusercontent.com/cloudcafetech/k8s-ad-integration/main/logo.png\n
    \ dir: \"\"\n  theme: light\ntelemetry:\n  http: 0.0.0.0:5558\nstaticClients:\n-
    id: oidc-auth-client\n  redirectURIs:\n  - https://kubectl.apps.k8s.cloudcafe.tech/callback\n
    \ - https://console.apps.k8s.cloudcafe.tech/auth/callback      \n  - https://minio-console.apps.k8s.cloudcafe.tech/oauth_callback\n
    \ - http://dashboard.apps.k8s.cloudcafe.tech/oauth2/callback\n  - http://prom.apps.k8s.cloudcafe.tech/oauth2/callback\n
    \ - http://alert.apps.k8s.cloudcafe.tech/oauth2/callback      \n  name: oidc-auth-client\n
    \ secret: secret\nconnectors:\n- type: ldap\n  id: ldap\n  name: LDAP\n  config:\n
    \   host: openldap.auth-system.svc.cluster.local:389\n    insecureNoSSL: true\n
    \   insecureSkipVerify: true\n    startTLS: false\n    bindDN: cn=admin,dc=cloudcafe,dc=org\n
    \   bindPW: 'StrongAdminPassw0rd'\n    usernamePrompt: Email Address\n    userSearch:\n
    \     baseDN: ou=people,dc=cloudcafe,dc=org\n      emailAttr: mail\n      filter:
    (objectClass=person)\n      idAttr: DN\n      nameAttr: cn\n      username: mail\n
    \   groupSearch:\n      baseDN: ou=groups,dc=cloudcafe,dc=org\n      filter: (objectClass=groupOfNames)\n
    \     nameAttr: cn\n      userMatchers:\n      - groupAttr: member\n        userAttr:
    DN\n"
kind: ConfigMap
metadata:
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dex-ldap-cm1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to auth-system/ConfigMap/dex:
apiVersion: v1
data:
  config.yaml: "issuer: https://auth.apps.k8s.cloudcafe.tech/\nstorage:\n  type: kubernetes\n
    \ config:\n    inCluster: true\noauth2:\n  skipApprovalScreen: true\nweb:\n  http:
    0.0.0.0:5556\n  tlsCert: /etc/dex/tls/tls.crt\n  tlsKey: /etc/dex/tls/tls.key\nfrontend:\n
    \ issuer: dex\n  #logoURL: theme/logo.png\n  logoURL: https://raw.githubusercontent.com/cloudcafetech/k8s-ad-integration/main/logo.png\n
    \ dir: \"\"\n  theme: light\ntelemetry:\n  http: 0.0.0.0:5558\nstaticClients:\n-
    id: oidc-auth-client\n  redirectURIs:\n  - https://kubectl.apps.k8s.cloudcafe.tech/callback\n
    \ - https://console.apps.k8s.cloudcafe.tech/auth/callback      \n  - https://minio-console.apps.k8s.cloudcafe.tech/oauth_callback\n
    \ - http://dashboard.apps.k8s.cloudcafe.tech/oauth2/callback\n  - http://prom.apps.k8s.cloudcafe.tech/oauth2/callback\n
    \ - http://alert.apps.k8s.cloudcafe.tech/oauth2/callback      \n  name: oidc-auth-client\n
    \ secret: secret\nconnectors:\n- type: ldap\n  id: ldap\n  name: LDAP\n  config:\n
    \   host: openldap.auth-system.svc.cluster.local:389\n    insecureNoSSL: true\n
    \   insecureSkipVerify: true\n    startTLS: false\n    bindDN: cn=admin,dc=cloudcafe,dc=org\n
    \   bindPW: 'StrongAdminPassw0rd'\n    usernamePrompt: Email Address\n    userSearch:\n
    \     baseDN: ou=people,dc=cloudcafe,dc=org\n      emailAttr: mail\n      filter:
    (objectClass=person)\n      idAttr: DN\n      nameAttr: cn\n      username: mail\n
    \   groupSearch:\n      baseDN: ou=groups,dc=cloudcafe,dc=org\n      filter: (objectClass=groupOfNames)\n
    \     nameAttr: cn\n      userMatchers:\n      - groupAttr: member\n        userAttr:
    DN\n"
kind: ConfigMap
metadata:
  name: dex
  namespace: auth-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dguessd.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dguessd:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dguessd
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dguessp
  template:
    metadata:
      labels:
        app: dguessp
    spec:
      containers:
      - image: ftatimo/guessgamedocker:v1
        imagePullPolicy: IfNotPresent
        name: dguessc
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dguessd

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dguessd
policy disallow-default-namespace -> resource default/Deployment/dguessd failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dguessd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dguessd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dguessd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dguessd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dguessd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dguessd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dguessd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dguessd1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dguessd:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dguessd
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dguessp
  template:
    metadata:
      labels:
        app: dguessp
    spec:
      containers:
      - image: ftatimo/guessgamedocker:v1
        imagePullPolicy: IfNotPresent
        name: dguessc
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dguessd

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dguessd
policy disallow-default-namespace -> resource default/Deployment/dguessd failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dguessd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dguessd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dguessd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dguessd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dguessd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dguessd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dguessd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dguesss.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dguesss-1:
apiVersion: v1
kind: Service
metadata:
  name: dguesss-1
  namespace: default
spec:
  ports:
  - nodePort: 31000
    port: 80
    targetPort: 80
  selector:
    app: dguessp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/dguesss-1 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dguesss1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dguesss-1:
apiVersion: v1
kind: Service
metadata:
  name: dguesss-1
  namespace: default
spec:
  ports:
  - nodePort: 31000
    port: 80
    targetPort: 80
  selector:
    app: dguessp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/dguesss-1 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dice-roller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller
  namespace: default
spec:
  replicas: 10
  selector:
    matchLabels:
      app: dice-roller
  template:
    metadata:
      labels:
        app: dice-roller
        backstage.io/kubernetes-id: dice-roller
    spec:
      containers:
      - args:
        - bash
        - -c
        - yes > /dev/null & yes > /dev/null & yes > /dev/null
        image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller
policy disallow-default-namespace -> resource default/Deployment/dice-roller failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dice-roller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dice-roller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dice-roller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dice-roller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dice-roller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dice-roller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dice-roller-manifests_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dice-roller-incorrect-probe:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-incorrect-probe
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dice-roller-incorrect-probe
  template:
    metadata:
      labels:
        app: dice-roller-incorrect-probe
        backstage.io/kubernetes-id: dice-roller
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 8080
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-incorrect-probe

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-incorrect-probe
policy disallow-default-namespace -> resource default/Deployment/dice-roller-incorrect-probe failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dice-roller-incorrect-probe failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dice-roller-incorrect-probe failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dice-roller-incorrect-probe failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/dice-roller-incorrect-probe failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dice-roller-incorrect-probe failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dice-roller-manifests_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dice-roller:
apiVersion: v1
data:
  username: YWRtaW4=
kind: Secret
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dice-roller:
apiVersion: v1
kind: Service
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller
  namespace: default
spec:
  ports:
  - name: port1
    port: 80
    protocol: TCP
    targetPort: 9376
  - name: port2
    port: 81
    protocol: TCP
    targetPort: 9377
  selector:
    app: dice-roller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dice-roller-lb:
apiVersion: v1
kind: Service
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-lb
  namespace: default
spec:
  ports:
  - port: 8765
    targetPort: 9376
  selector:
    app: dice-roller
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/dice-roller:
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  name: dice-roller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/sa-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sa-admin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: dice-roller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dice-roller-canary:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-canary
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dice-roller-canary
  template:
    metadata:
      labels:
        app: dice-roller-canary
        backstage.io/kubernetes-id: dice-roller
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      - image: nginx:1.14.2
        name: side-car
        ports:
        - containerPort: 81
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      - image: nginx:1.14.2
        name: other-side-car
        ports:
        - containerPort: 82
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-canary

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-canary
policy disallow-default-namespace -> resource default/Deployment/dice-roller-canary failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dice-roller-canary failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dice-roller-canary failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dice-roller-canary failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dice-roller-canary failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dice-roller-canary failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dice-roller-canary failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dice-roller-manifests_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dice-roller-bad-config:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-bad-config
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dice-roller-bad-config
  template:
    metadata:
      labels:
        app: dice-roller-bad-config
        backstage.io/kubernetes-id: dice-roller
    spec:
      containers:
      - image: nginx:6000000
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-bad-config

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-bad-config
policy disallow-default-namespace -> resource default/Deployment/dice-roller-bad-config failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dice-roller-bad-config failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dice-roller-bad-config failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dice-roller-bad-config failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dice-roller-bad-config failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dice-roller-bad-config failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dice-roller-bad-config failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dice-roller-manifests_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dice-roller-big:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-big
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dice-roller-big
  template:
    metadata:
      labels:
        app: dice-roller-big
        backstage.io/kubernetes-id: dice-roller
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100000m
            memory: 128Mi
          requests:
            cpu: 100000m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-big

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-big
policy disallow-default-namespace -> resource default/Deployment/dice-roller-big failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dice-roller-big failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dice-roller-big failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dice-roller-big failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dice-roller-big failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dice-roller-big failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dice-roller-big failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dice-roller-manifests_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dice-roller-bad-cm:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-bad-cm
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dice-roller-bad-cm
  template:
    metadata:
      labels:
        app: dice-roller-bad-cm
        backstage.io/kubernetes-id: dice-roller
    spec:
      containers:
      - env:
        - name: SOME_ENV_VAR
          valueFrom:
            configMapKeyRef:
              key: some-key
              name: some-cm
        image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-bad-cm

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dice-roller-bad-cm
policy disallow-default-namespace -> resource default/Deployment/dice-roller-bad-cm failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dice-roller-bad-cm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dice-roller-bad-cm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dice-roller-bad-cm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dice-roller-bad-cm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dice-roller-bad-cm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dice-roller-bad-cm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dice-roller-manifests_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/dice-roller:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller
  namespace: default
spec:
  maxReplicas: 15
  minReplicas: 10
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dice-roller
  targetCPUUtilizationPercentage: 50

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: dice-roller-manifests_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dice-roller-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller-cronjob
  namespace: default
spec:
  jobTemplate:
    metadata:
      labels:
        backstage.io/kubernetes-id: dice-roller
    spec:
      template:
        metadata:
          labels:
            backstage.io/kubernetes-id: dice-roller
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - date; echo Rolling a die!
            image: busybox
            imagePullPolicy: IfNotPresent
            name: busybox
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dice-roller-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dice-roller-cronjob
policy disallow-latest-tag -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/dice-roller-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: dice-roller-manifests_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/dice-roller:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller
  namespace: default
spec:
  rules:
  - host: nginx
    http:
      paths:
      - backend:
          serviceName: dice-roller
          servicePort: 80
        path: /

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dice-roller-manifests_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/dice-roller:
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  labels:
    backstage.io/kubernetes-id: dice-roller
  name: dice-roller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dicom:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dicom
  name: dicom
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orthanc
  template:
    metadata:
      labels:
        app: orthanc
    spec:
      containers:
      - image: jodogne/orthanc-plugins:1.12.5
        name: orthanc
        ports:
        - containerPort: 8042
        - containerPort: 4242
        volumeMounts:
        - mountPath: /var/lib/orthanc/db
          name: orthanc-storage
        - mountPath: /etc/orthanc
          name: json-configmap-volume
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: orthanc-storage
        persistentVolumeClaim:
          claimName: orthanc-pvc
      - configMap:
          name: json-configmap
        name: json-configmap-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dicom

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dicom
policy disallow-default-namespace -> resource default/Deployment/dicom failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dicom failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dicom failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dicom failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dicom failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dicom failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dicom failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dicom failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dicom-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dicom:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dicom
  name: dicom
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orthanc
  template:
    metadata:
      labels:
        app: orthanc
    spec:
      containers:
      - image: jodogne/orthanc-plugins:1.12.5
        name: orthanc
        ports:
        - containerPort: 8042
        - containerPort: 4242
        volumeMounts:
        - mountPath: /var/lib/orthanc/db
          name: orthanc-storage
        - mountPath: /etc/orthanc
          name: json-configmap-volume
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: orthanc-storage
        persistentVolumeClaim:
          claimName: orthanc-pvc
      - configMap:
          name: json-configmap
        name: json-configmap-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dicom

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dicom
policy disallow-default-namespace -> resource default/Deployment/dicom failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dicom failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dicom failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dicom failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dicom failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dicom failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dicom failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dicom failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dicom-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dicom/Ingress/dicom-nginx-cluster-local:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header 'Access-Control-Allow-Origin' '*' always;
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: dicom-nginx-cluster-local
  namespace: dicom
spec:
  ingressClassName: nginx
  rules:
  - host: k2s.cluster.local
    http:
      paths:
      - backend:
          service:
            name: dicom
            port:
              number: 8042
        path: /dicom(/|$)(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dicom/Ingress/dicom-nginx-cluster-local:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header 'Access-Control-Allow-Origin' '*' always;
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: dicom-nginx-cluster-local
  namespace: dicom
spec:
  ingressClassName: nginx
  rules:
  - host: k2s.cluster.local
    http:
      paths:
      - backend:
          service:
            name: dicom
            port:
              number: 8042
        path: /dicom(/|$)(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-ingress-traefik_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dicom/Ingress/dicom-traefik-cluster-local:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: dicom-cors-header@kubernetescrd,dicom-strip-prefix@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: dicom-traefik-cluster-local
  namespace: dicom
spec:
  ingressClassName: traefik
  rules:
  - host: k2s.cluster.local
    http:
      paths:
      - backend:
          service:
            name: dicom
            port:
              number: 8042
        path: /dicom/
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-ingress-traefik1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dicom/Ingress/dicom-traefik-cluster-local:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: dicom-cors-header@kubernetescrd,dicom-strip-prefix@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: dicom-traefik-cluster-local
  namespace: dicom
spec:
  ingressClassName: traefik
  rules:
  - host: k2s.cluster.local
    http:
      paths:
      - backend:
          service:
            name: dicom
            port:
              number: 8042
        path: /dicom/
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dicom:
apiVersion: v1
kind: Namespace
metadata:
  name: dicom
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dicom:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dicom
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dicom:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dicom
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dicom:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dicom
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dicom:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dicom
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-namespace1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dicom:
apiVersion: v1
kind: Namespace
metadata:
  name: dicom
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dicom:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dicom
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dicom:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dicom
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dicom:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dicom
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dicom:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dicom
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/dicom-pv-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dicom-pv-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /mnt/dicom/db

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/orthanc-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: orthanc-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/dicom/orthanc
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pv2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/orthanc-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: orthanc-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/k8s-smb-share/dicom
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pv3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/dicom-pv-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dicom-pv-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /mnt/dicom/db

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pv4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/orthanc-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: orthanc-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/dicom/orthanc
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pv5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/orthanc-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: orthanc-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/k8s-smb-share/dicom
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/dicom-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dicom-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: dicom-pv-volume

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/orthanc-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orthanc-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: orthanc-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/orthanc-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orthanc-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: orthanc-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/dicom-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dicom-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: dicom-pv-volume

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pvc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/orthanc-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orthanc-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: orthanc-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-pvc5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/orthanc-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orthanc-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: orthanc-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dicom:
apiVersion: v1
kind: Service
metadata:
  name: dicom
  namespace: default
spec:
  ports:
  - name: http
    port: 8042
    targetPort: 8042
  - name: dicom
    port: 4242
    targetPort: 4242
  selector:
    app: orthanc

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dicom-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dicom:
apiVersion: v1
kind: Service
metadata:
  name: dicom
  namespace: default
spec:
  ports:
  - name: http
    port: 8042
    targetPort: 8042
  - name: dicom
    port: 4242
    targetPort: 4242
  selector:
    app: orthanc

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: different_fileformat.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-different-file-format-log:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: pod-different-file-format-log
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - |
      i=0; while true; do
        echo "$i: $(date)" >> /var/log/1.log;
        echo "$(date) INFO $i" >> /var/log/2.log
        i=$((i+1));
        sleep 1;
      done;
    image: busybox
    name: containerv6
    volumeMounts:
    - mountPath: /var/log
      name: varlog
  volumes:
  - emptyDir: {}
    name: varlog

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-different-file-format-log
policy disallow-default-namespace -> resource default/Pod/pod-different-file-format-log failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-different-file-format-log failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-different-file-format-log failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-different-file-format-log failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-different-file-format-log failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-different-file-format-log failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-different-file-format-log failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-different-file-format-log failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-different-file-format-log failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dify:
apiVersion: v1
kind: Namespace
metadata:
  name: dify
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dify:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dify
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dify:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dify
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dify:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dify
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dify:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dify
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ServiceAccount/dify-postgres:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dify-postgres
  name: dify-postgres
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-redis:
apiVersion: v1
kind: Service
metadata:
  name: dify-redis
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: dify-redis
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ServiceAccount/dify-weaviate:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dify-weaviate
  name: dify-weaviate
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Role/dify-weaviate:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dify-weaviate
  name: dify-weaviate
  namespace: dify
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/RoleBinding/dify-weaviate:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dify-weaviate
  name: dify-weaviate
  namespace: dify
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dify-weaviate
subjects:
- kind: ServiceAccount
  name: dify-weaviate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-weaviate:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dify-weaviate
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-weaviate
  serviceName: dify-weaviate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-weaviate
    spec:
      containers:
      - env:
        - name: QUERY_DEFAULTS_LIMIT
          value: "25"
        - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
          value: "false"
        - name: PERSISTENCE_DATA_PATH
          value: /var/lib/weaviate
        - name: DEFAULT_VECTORIZER_MODULE
          value: none
        - name: AUTHENTICATION_APIKEY_ENABLED
          value: "true"
        - name: AUTHENTICATION_APIKEY_ALLOWED_KEYS
          value: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
        - name: AUTHENTICATION_APIKEY_USERS
          value: hello@dify.ai
        - name: AUTHORIZATION_ADMINLIST_ENABLED
          value: "true"
        - name: AUTHORIZATION_ADMINLIST_USERS
          value: hello@dify.ai
        image: semitechnologies/weaviate:1.19.0
        name: dify-weaviate
        ports:
        - containerPort: 8080
          name: weaviate-p
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 102Mi
        volumeMounts:
        - mountPath: /var/lib/weaviate
          name: weaviate-data
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: dify-weaviate
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /root/dify/db/weaviate/data
          type: DirectoryOrCreate
        name: weaviate-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-weaviate
policy drop-all-capabilities -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-weaviate:
apiVersion: v1
kind: Service
metadata:
  name: dify-weaviate
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: weaviate
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: dify-weaviate
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-sandbox:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-sandbox
  name: dify-sandbox
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-sandbox
  template:
    metadata:
      labels:
        app: dify-sandbox
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: API_KEY
          value: dify-sandbox
        - name: GIN_MODE
          value: release
        - name: WORKER_TIMEOUT
          value: "15"
        - name: ENABLE_NETWORK
          value: "true"
        - name: SANDBOX_PORT
          value: "8194"
        - name: HTTP_PROXY
          value: http://dify-ssrf:3128
        - name: HTTPS_PROXY
          value: http://dify-ssrf:3128
        image: langgenius/dify-sandbox:0.2.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:8194/health
        name: dify-sandbox
        ports:
        - containerPort: 8194
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-sandbox

skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-sandbox
policy drop-all-capabilities -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: dify-deployment_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-sandbox:
apiVersion: v1
kind: Service
metadata:
  name: dify-sandbox
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: dify-sandbox
    port: 8194
    protocol: TCP
    targetPort: 8194
  selector:
    app: dify-sandbox
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ConfigMap/ssrf-proxy-config:
apiVersion: v1
data:
  squid.conf: "acl localnet src 0.0.0.1-0.255.255.255\t# RFC 1122 \"this\" network
    (LAN)\nacl localnet src 10.0.0.0/8\t\t# RFC 1918 local private network (LAN)\nacl
    localnet src 100.64.0.0/10\t\t# RFC 6598 shared address space (CGN)\nacl localnet
    src 169.254.0.0/16 \t# RFC 3927 link-local (directly plugged) machines\nacl localnet
    src 172.16.0.0/12\t\t# RFC 1918 local private network (LAN)\nacl localnet src
    192.168.0.0/16\t\t# RFC 1918 local private network (LAN)\nacl localnet src fc00::/7
    \      \t# RFC 4193 local private network range\nacl localnet src fe80::/10      \t#
    RFC 4291 link-local (directly plugged) machines\nacl SSL_ports port 443\n# acl
    SSL_ports port 1025-65535   # Enable the configuration to resolve this issue:
    https://github.com/langgenius/dify/issues/12792\nacl Safe_ports port 80\t\t# http\nacl
    Safe_ports port 21\t\t# ftp\nacl Safe_ports port 443\t\t# https\nacl Safe_ports
    port 70\t\t# gopher\nacl Safe_ports port 210\t\t# wais\nacl Safe_ports port 1025-65535\t#
    unregistered ports\nacl Safe_ports port 280\t\t# http-mgmt\nacl Safe_ports port
    488\t\t# gss-http\nacl Safe_ports port 591\t\t# filemaker\nacl Safe_ports port
    777\t\t# multiling http\nacl CONNECT method CONNECT\nhttp_access deny !Safe_ports\nhttp_access
    deny CONNECT !SSL_ports\nhttp_access allow localhost manager\nhttp_access deny
    manager\nhttp_access allow localhost\nhttp_access allow localnet\nhttp_access
    deny all\n\n################################## Proxy Server ################################\nhttp_port
    3128\ncoredump_dir /var/spool/squid\nrefresh_pattern ^ftp:\t\t1440\t20%!\(MISSING)t10080\nrefresh_pattern
    ^gopher:\t1440\t0%!\(MISSING)t1440\nrefresh_pattern -i (/cgi-bin/|\\?) 0\t0%!\(MISSING)t0\nrefresh_pattern
    \\/(Packages|Sources)(|\\.bz2|\\.gz|\\.xz)$ 0 0%!r(MISSING)efresh-ims\nrefresh_pattern
    \\/Release(|\\.gpg)$ 0 0%!r(MISSING)efresh-ims\nrefresh_pattern \\/InRelease$ 0 0%!
(MISSING)    refresh-ims\nrefresh_pattern \\/(Translation-.*)(|\\.bz2|\\.gz|\\.xz)$ 0 0%!
(MISSING)    refresh-ims\nrefresh_pattern .\t\t0\t20%!\(MISSING)t4320\n\n\n# upstream proxy, set to your
    own upstream proxy IP to avoid SSRF attacks\n# cache_peer 172.1.1.1 parent 3128
    0 no-query no-digest no-netdb-exchange default \n\n\n##################################
    Reverse Proxy To Sandbox ################################\nhttp_port 8194 accel
    vhost\n# Notice:\n# default is 'sandbox' in dify's github repo, here is 'dify-sandbox'
    because the service name of sandbox is 'dify-sandbox'\n# you can change it to
    your own service name\ncache_peer dify-sandbox parent 8194 0 no-query originserver\nacl
    src_all src all\nhttp_access allow src_all\n"
kind: ConfigMap
metadata:
  name: ssrf-proxy-config
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ConfigMap/ssrf-proxy-entrypoint:
apiVersion: v1
data:
  docker-entrypoint-mount.sh: |
    #!/bin/bash

    # Modified based on Squid OCI image entrypoint

    # This entrypoint aims to forward the squid logs to stdout to assist users of
    # common container related tooling (e.g., kubernetes, docker-compose, etc) to
    # access the service logs.

    # Moreover, it invokes the squid binary, leaving all the desired parameters to
    # be provided by the "command" passed to the spawned container. If no command
    # is provided by the user, the default behavior (as per the CMD statement in
    # the Dockerfile) will be to use Ubuntu's default configuration [1] and run
    # squid with the "-NYC" options to mimic the behavior of the Ubuntu provided
    # systemd unit.

    # [1] The default configuration is changed in the Dockerfile to allow local
    # network connections. See the Dockerfile for further information.

    echo "[ENTRYPOINT] re-create snakeoil self-signed certificate removed in the build process"
    if [ ! -f /etc/ssl/private/ssl-cert-snakeoil.key ]; then
        /usr/sbin/make-ssl-cert generate-default-snakeoil --force-overwrite > /dev/null 2>&1
    fi

    tail -F /var/log/squid/access.log 2>/dev/null &
    tail -F /var/log/squid/error.log 2>/dev/null &
    tail -F /var/log/squid/store.log 2>/dev/null &
    tail -F /var/log/squid/cache.log 2>/dev/null &

    # Replace environment variables in the template and output to the squid.conf
    echo "[ENTRYPOINT] replacing environment variables in the template"
    awk '{
        while(match($0, /\${[A-Za-z_][A-Za-z_0-9]*}/)) {
            var = substr($0, RSTART+2, RLENGTH-3)
            val = ENVIRON[var]
            $0 = substr($0, 1, RSTART-1) val substr($0, RSTART+RLENGTH)
        }
        print
    }' /etc/squid/squid.conf.template > /etc/squid/squid.conf

    /usr/sbin/squid -Nz
    echo "[ENTRYPOINT] starting squid"
    /usr/sbin/squid -f /etc/squid/squid.conf -NYC 1
kind: ConfigMap
metadata:
  name: ssrf-proxy-entrypoint
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Role/dify-postgres:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dify-postgres
  name: dify-postgres
  namespace: dify
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-ssrf:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-ssrf
  name: dify-ssrf
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-ssrf
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dify-ssrf
    spec:
      containers:
      - command:
        - sh
        - -c
        - "cp /tmp/docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//'
          /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh"
        env:
        - name: HTTP_PORT
          value: "3128"
        - name: COREDUMP_DIR
          value: /var/spool/squid
        - name: REVERSE_PROXY_PORT
          value: "8194"
        - name: SANDBOX_HOST
          value: dify-sandbox
        - name: SANDBOX_PORT
          value: "8194"
        image: ubuntu/squid:latest
        name: dify-ssrf
        ports:
        - containerPort: 3128
          name: dify-ssrf
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/squid/
          name: ssrf-proxy-config
        - mountPath: /tmp/
          name: ssrf-proxy-entrypoint
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
      - configMap:
          name: ssrf-proxy-config
        name: ssrf-proxy-config
      - configMap:
          name: ssrf-proxy-entrypoint
        name: ssrf-proxy-entrypoint

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-ssrf

skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-ssrf
policy disallow-latest-tag -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dify-deployment_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-ssrf:
apiVersion: v1
kind: Service
metadata:
  name: dify-ssrf
  namespace: dify
spec:
  ports:
  - port: 3128
    protocol: TCP
    targetPort: 3128
  selector:
    app: dify-ssrf

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-api:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: dify-api
    app.kubernetes.io/instance: dify-api
  name: dify-api
  namespace: dify
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-api
  serviceName: dify-api
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-api
    spec:
      containers:
      - env:
        - name: MODE
          value: api
        - name: LOG_LEVEL
          value: DEBUG
        - name: SECRET_KEY
          value: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
        - name: CONSOLE_WEB_URL
          value: ""
        - name: INIT_PASSWORD
          value: password
        - name: CONSOLE_API_URL
          value: ""
        - name: SERVICE_API_URL
          value: ""
        - name: APP_WEB_URL
          value: ""
        - name: FILES_URL
          value: ""
        - name: MIGRATION_ENABLED
          value: "true"
        - name: DB_USERNAME
          value: postgres
        - name: DB_PASSWORD
          value: difyai123456
        - name: DB_HOST
          value: dify-postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_DATABASE
          value: dify
        - name: REDIS_HOST
          value: dify-redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_USERNAME
          value: ""
        - name: REDIS_PASSWORD
          value: difyai123456
        - name: REDIS_USE_SSL
          value: "false"
        - name: REDIS_DB
          value: "0"
        - name: CELERY_BROKER_URL
          value: redis://$(REDIS_USERNAME):$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/1
        - name: WEB_API_CORS_ALLOW_ORIGINS
          value: '*'
        - name: CONSOLE_CORS_ALLOW_ORIGINS
          value: '*'
        - name: STORAGE_TYPE
          value: opendal
        - name: OPENDAL_SCHEME
          value: fs
        - name: OPENDAL_FS_ROOT
          value: storage
        - name: STORAGE_LOCAL_PATH
          value: /app/api/storage
        - name: VECTOR_STORE
          value: weaviate
        - name: WEAVIATE_HOST
          value: dify-weaviate
        - name: WEAVIATE_PORT
          value: "8080"
        - name: WEAVIATE_ENDPOINT
          value: http://$(WEAVIATE_HOST):$(WEAVIATE_PORT)
        - name: WEAVIATE_API_KEY
          value: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
        - name: CODE_EXECUTION_ENDPOINT
          value: http://dify-sandbox:8194
        - name: CODE_EXECUTION_API_KEY
          value: dify-sandbox
        - name: CODE_MAX_NUMBER
          value: "9223372036854775807"
        - name: CODE_MIN_NUMBER
          value: "-9223372036854775808"
        - name: CODE_MAX_STRING_LENGTH
          value: "80000"
        - name: TEMPLATE_TRANSFORM_MAX_LENGTH
          value: "80000"
        - name: CODE_MAX_STRING_ARRAY_LENGTH
          value: "30"
        - name: CODE_MAX_OBJECT_ARRAY_LENGTH
          value: "30"
        - name: CODE_MAX_NUMBER_ARRAY_LENGTH
          value: "1000"
        - name: INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH
          value: "1000"
        - name: SSRF_PROXY_HTTP_URL
          value: http://dify-ssrf:3128
        - name: SSRF_PROXY_HTTPS_URL
          value: http://dify-ssrf:3128
        - name: SENTRY_DSN
          value: ""
        - name: SENTRY_TRACES_SAMPLE_RATE
          value: "1.0"
        - name: SENTRY_PROFILES_SAMPLE_RATE
          value: "1.0"
        - name: PLUGIN_MAX_PACKAGE_SIZE
          value: "52428800"
        - name: INNER_API_KEY_FOR_PLUGIN
          value: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
        - name: PLUGIN_DAEMON_KEY
          value: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
        - name: PLUGIN_DAEMON_URL
          value: http://dify-plugin-daemon:5002
        - name: MARKETPLACE_ENABLED
          value: "true"
        - name: MARKETPLACE_API_URL
          value: https://marketplace.dify.ai
        image: langgenius/dify-api:1.0.0
        imagePullPolicy: IfNotPresent
        name: dify-api
        ports:
        - containerPort: 5001
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /app/api/storage
          name: dify-api-storage
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - hostPath:
          path: /root/dify/app/api/storage
          type: DirectoryOrCreate
        name: dify-api-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-api
policy drop-all-capabilities -> resource dify/StatefulSet/dify-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/StatefulSet/dify-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/StatefulSet/dify-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-api:
apiVersion: v1
kind: Service
metadata:
  name: dify-api
  namespace: dify
spec:
  ports:
  - name: dify-api
    port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: dify-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-worker:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: dify-worker
    app.kubernetes.io/instance: dify-worker
  name: dify-worker
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-worker
  serviceName: dify-worker
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-worker
    spec:
      containers:
      - env:
        - name: CONSOLE_WEB_URL
          value: ""
        - name: MODE
          value: worker
        - name: LOG_LEVEL
          value: INFO
        - name: SECRET_KEY
          value: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
        - name: DB_USERNAME
          value: postgres
        - name: DB_PASSWORD
          value: difyai123456
        - name: DB_HOST
          value: dify-postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_DATABASE
          value: dify
        - name: REDIS_HOST
          value: dify-redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_USERNAME
          value: ""
        - name: REDIS_PASSWORD
          value: difyai123456
        - name: REDIS_USE_SSL
          value: "false"
        - name: REDIS_DB
          value: "0"
        - name: CELERY_BROKER_URL
          value: redis://$(REDIS_USERNAME):$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/1
        - name: WEB_API_CORS_ALLOW_ORIGINS
          value: '*'
        - name: CONSOLE_CORS_ALLOW_ORIGINS
          value: '*'
        - name: STORAGE_TYPE
          value: opendal
        - name: OPENDAL_SCHEME
          value: fs
        - name: OPENDAL_FS_ROOT
          value: storage
        - name: STORAGE_LOCAL_PATH
          value: /app/api/storage
        - name: VECTOR_STORE
          value: weaviate
        - name: WEAVIATE_HOST
          value: dify-weaviate
        - name: WEAVIATE_PORT
          value: "8080"
        - name: WEAVIATE_ENDPOINT
          value: http://$(WEAVIATE_HOST):$(WEAVIATE_PORT)
        - name: WEAVIATE_API_KEY
          value: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
        - name: SSRF_PROXY_HTTP_URL
          value: http://dify-ssrf:3128
        - name: SSRF_PROXY_HTTPS_URL
          value: http://dify-ssrf:3128
        - name: SENTRY_DSN
          value: ""
        - name: SENTRY_TRACES_SAMPLE_RATE
          value: "1.0"
        - name: SENTRY_PROFILES_SAMPLE_RATE
          value: "1.0"
        - name: PLUGIN_MAX_PACKAGE_SIZE
          value: "52428800"
        - name: PLUGIN_DAEMON_URL
          value: http://dify-plugin-daemon:5002
        - name: PLUGIN_DAEMON_KEY
          value: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
        - name: INNER_API_KEY_FOR_PLUGIN
          value: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
        - name: MARKETPLACE_ENABLED
          value: "true"
        - name: MARKETPLACE_API_URL
          value: https://marketplace.dify.ai
        image: langgenius/dify-api:1.0.0
        imagePullPolicy: IfNotPresent
        name: dify-worker
        ports:
        - containerPort: 5001
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /app/api/storage
          name: dify-api-storage
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /root/dify/app/api/storage
          type: DirectoryOrCreate
        name: dify-api-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-worker
policy drop-all-capabilities -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-worker:
apiVersion: v1
kind: Service
metadata:
  name: dify-worker
  namespace: dify
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: dify-worker
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-web
  name: dify-web
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-web
  template:
    metadata:
      labels:
        app: dify-web
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: EDITION
          value: SELF_HOSTED
        - name: CONSOLE_API_URL
          value: ""
        - name: APP_API_URL
          value: ""
        - name: SENTRY_DSN
          value: ""
        - name: NEXT_TELEMETRY_DISABLED
          value: "0"
        - name: TEXT_GENERATION_TIMEOUT_MS
          value: "60000"
        - name: CSP_WHITELIST
          value: ""
        - name: MARKETPLACE_API_URL
          value: https://marketplace.dify.ai
        - name: MARKETPLACE_URL
          value: https://marketplace.dify.ai
        - name: TOP_K_MAX_VALUE
          value: ""
        - name: INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH
          value: ""
        - name: PM2_INSTANCES
          value: "2"
        image: langgenius/dify-web:1.0.0
        imagePullPolicy: IfNotPresent
        name: dify-web
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-web

skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-web
policy drop-all-capabilities -> resource dify/Deployment/dify-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-web failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dify-deployment_27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-web:
apiVersion: v1
kind: Service
metadata:
  name: dify-web
  namespace: dify
spec:
  ports:
  - name: dify-web
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: dify-web
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ConfigMap/dify-nginx:
apiVersion: v1
data:
  nginx.conf: "user  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log
    notice;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections
    \ 1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type
    \ application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user
    [$time_local] \"$request\" '\n                      '$status $body_bytes_sent
    \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n
    \   access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n
    \   #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n    client_max_body_size
    15M;\n\n    server {\n    listen 80;\n    server_name _;\n\n    location /console/api
    {\n      proxy_pass http://dify-api:5001;\n      proxy_set_header X-Forwarded-For
    $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n
    \     proxy_set_header X-Forwarded-Port $server_port;\n      proxy_http_version
    1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering off;\n      proxy_read_timeout
    3600s;\n      proxy_send_timeout 3600s;\n    }\n\n    location /api {\n      proxy_pass
    http://dify-api:5001;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n
    \     proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port
    $server_port;\n      proxy_http_version 1.1;\n      proxy_set_header Connection
    \"\";\n      proxy_buffering off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout
    3600s;\n    }\n\n    location /v1 {\n      proxy_pass http://dify-api:5001;\n
    \     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header
    X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port $server_port;\n
    \     proxy_http_version 1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering
    off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout 3600s;\n    }\n\n
    \   location /files {\n      proxy_pass http://dify-api:5001;\n      proxy_set_header
    X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto
    $scheme;\n      proxy_set_header X-Forwarded-Port $server_port;\n      proxy_http_version
    1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering off;\n      proxy_read_timeout
    3600s;\n      proxy_send_timeout 3600s;\n    }\n\n    location /explore {\n      proxy_pass
    http://dify-web:3000;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n
    \     proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port
    $server_port;\n      proxy_http_version 1.1;\n      proxy_set_header Connection
    \"\";\n      proxy_buffering off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout
    3600s;\n    }\n    \n    location /e/ {\n      proxy_pass http://dify-plugin-daemon:5002;\n
    \     proxy_set_header Dify-Hook-Url ://;\n      proxy_set_header X-Forwarded-For
    $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n
    \     proxy_set_header X-Forwarded-Port $server_port;\n      proxy_http_version
    1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering off;\n      proxy_read_timeout
    3600s;\n      proxy_send_timeout 3600s;\n  }\n\n    location / {\n      proxy_pass
    http://dify-web:3000;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n
    \     proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port
    $server_port;\n      proxy_http_version 1.1;\n      proxy_set_header Connection
    \"\";\n      proxy_buffering off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout
    3600s;\n    }\n\n    # If you want to support HTTPS, please uncomment the code
    snippet below\n    #listen 443 ssl;\n    #ssl_certificate ./../ssl/your_cert_file.cer;\n
    \   #ssl_certificate_key ./../ssl/your_cert_key.key;\n    #ssl_protocols TLSv1.1
    TLSv1.2 TLSv1.3;\n    #ssl_prefer_server_ciphers on;\n    #ssl_session_cache shared:SSL:10m;\n
    \   #ssl_session_timeout 10m;\n}\n}"
kind: ConfigMap
metadata:
  name: dify-nginx
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-nginx
  name: dify-nginx
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-nginx
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-nginx
    spec:
      automountServiceAccountToken: false
      containers:
      - image: nginx:stable
        imagePullPolicy: IfNotPresent
        name: dify-nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: dify-nginx
          subPath: nginx.conf
        - mountPath: /etc/nginx/conf.d
          name: dify-nginx-config
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          name: dify-nginx
        name: dify-nginx
      - emptyDir: {}
        name: dify-nginx-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-nginx
policy drop-all-capabilities -> resource dify/Deployment/dify-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/RoleBinding/dify-postgres:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dify-postgres
  name: dify-postgres
  namespace: dify
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dify-postgres
subjects:
- kind: ServiceAccount
  name: dify-postgres

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-nginx:
apiVersion: v1
kind: Service
metadata:
  name: dify-nginx
  namespace: dify
spec:
  ports:
  - name: dify-nginx
    port: 80
    targetPort: 80
  selector:
    app: dify-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-nginx-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: dify-nginx-nodeport
  namespace: dify
spec:
  ports:
  - name: dify-nginx
    nodePort: 30000
    port: 80
    targetPort: 80
  selector:
    app: dify-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource dify/Service/dify-nginx-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-plugin-daemon:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-plugin-daemon
  name: dify-plugin-daemon
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-plugin-daemon
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-plugin-daemon
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: DB_USERNAME
          value: postgres
        - name: DB_PASSWORD
          value: difyai123456
        - name: DB_HOST
          value: dify-postgres
        - name: DB_PORT
          value: "5432"
        - name: REDIS_HOST
          value: dify-redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_USERNAME
          value: ""
        - name: REDIS_PASSWORD
          value: difyai123456
        - name: REDIS_USE_SSL
          value: "false"
        - name: REDIS_DB
          value: "0"
        - name: CELERY_BROKER_URL
          value: redis://$(REDIS_USERNAME):$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/1
        - name: DB_DATABASE
          value: dify_plugin
        - name: SERVER_PORT
          value: "5002"
        - name: EXPOSE_PLUGIN_DAEMON_PORT
          value: "5002"
        - name: SERVER_KEY
          value: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
        - name: MAX_PLUGIN_PACKAGE_SIZE
          value: "52428800"
        - name: PPROF_ENABLED
          value: "false"
        - name: DIFY_INNER_API_URL
          value: http://dify-api:5001
        - name: DIFY_INNER_API_KEY
          value: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
        - name: PLUGIN_REMOTE_INSTALLING_HOST
          value: 0.0.0.0
        - name: PLUGIN_REMOTE_INSTALLING_PORT
          value: "5003"
        - name: PLUGIN_WORKING_PATH
          value: /app/storage/cwd
        - name: FORCE_VERIFYING_SIGNATURE
          value: "true"
        - name: EXPOSE_PLUGIN_DEBUGGING_HOST
          value: localhost
        - name: EXPOSE_PLUGIN_DEBUGGING_PORT
          value: "5003"
        image: langgenius/dify-plugin-daemon:0.0.3-local
        name: dify-plugin-daemon
        ports:
        - containerPort: 5003
          name: debug-port
          protocol: TCP
        - containerPort: 5002
          name: service-port
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /app/storage
          name: dify-plugin-daemon-storage
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - hostPath:
          path: /root/dify/app/plugin/storage
          type: DirectoryOrCreate
        name: dify-plugin-daemon-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-plugin-daemon
policy drop-all-capabilities -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment_33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-plugin-daemon:
apiVersion: v1
kind: Service
metadata:
  name: dify-plugin-daemon
  namespace: dify
spec:
  ports:
  - name: debug-port
    port: 5003
    protocol: TCP
    targetPort: 5003
  - name: service-port
    port: 5002
    protocol: TCP
    targetPort: 5002
  selector:
    app: dify-plugin-daemon
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-postgres:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dify-postgres
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-postgres
  serviceName: dify-postgres
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-postgres
    spec:
      containers:
      - env:
        - name: PGUSER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: difyai123456
        - name: POSTGRES_DB
          value: dify
        - name: PGDATA
          value: /var/lib/postgresql/data
        image: postgres:15-alpine
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(PGUSER)
            - -d
            - $(POSTGRES_DB)
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        name: dify-postgres
        ports:
        - containerPort: 5432
          name: postgres-port
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: dify-postgres
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /root/dify/db/postgres/data
          type: DirectoryOrCreate
        name: postgres-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-postgres
policy drop-all-capabilities -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: dify-deployment_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-postgres:
apiVersion: v1
kind: Service
metadata:
  name: dify-postgres
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: dify-postgres
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ServiceAccount/dify-redis:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dify-redis
  name: dify-redis
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Role/dify-redis:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dify-redis
  name: dify-redis
  namespace: dify
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/RoleBinding/dify-redis:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dify-redis
  name: dify-redis
  namespace: dify
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dify-redis
subjects:
- kind: ServiceAccount
  name: dify-redis

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-deployment_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-redis:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dify-redis
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-redis
  serviceName: dify-redis
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-redis
    spec:
      containers:
      - command:
        - redis-server
        - --save
        - "20"
        - "1"
        - --loglevel
        - warning
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          value: difyai123456
        image: redis:6-alpine
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
        name: dify-redis
        ports:
        - containerPort: 6379
          name: redis-p
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 102Mi
        volumeMounts:
        - mountPath: /data
          name: redis-data
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: dify-redis
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /root/dify/db/redis/data
          type: DirectoryOrCreate
        name: redis-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-redis
policy drop-all-capabilities -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dify:
apiVersion: v1
kind: Namespace
metadata:
  name: dify
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dify:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dify
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dify:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dify
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dify:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dify
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dify:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dify
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Secret/dify-credentials:
apiVersion: v1
data:
  pg-host: ZGlmeS1wb3N0Z3Jlcw==
  pg-password: ZGlmeWFpMTIzNDU2
  pg-port: NTQzMg==
  pg-username: cG9zdGdyZXM=
  redis-host: ZGlmeS1yZWRpcw==
  redis-password: ZGlmeWFpMTIzNDU2
  redis-port: NjM3OQ==
  redis-username: ""
  weaviate-host: ZGlmeS13ZWF2aWF0ZQ==
  weaviate-port: ODA4MA==
kind: Secret
metadata:
  name: dify-credentials
  namespace: dify
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-redis:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dify-redis
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-redis
  serviceName: dify-redis
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-redis
    spec:
      containers:
      - command:
        - redis-server
        - --save
        - "20"
        - "1"
        - --loglevel
        - warning
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: dify-credentials
        image: dhub.kubesre.xyz/redis:6-alpine
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
        name: dify-redis
        ports:
        - containerPort: 6379
          name: redis-p
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 102Mi
        volumeMounts:
        - mountPath: /data
          name: redis-data
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: dify-redis
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /root/dify/db/redis/data
          type: DirectoryOrCreate
        name: redis-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-redis
policy drop-all-capabilities -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-redis:
apiVersion: v1
kind: Service
metadata:
  name: dify-redis
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: dify-redis
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ServiceAccount/dify-weaviate:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dify-weaviate
  name: dify-weaviate
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Role/dify-weaviate:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dify-weaviate
  name: dify-weaviate
  namespace: dify
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/RoleBinding/dify-weaviate:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dify-weaviate
  name: dify-weaviate
  namespace: dify
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dify-weaviate
subjects:
- kind: ServiceAccount
  name: dify-weaviate

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-weaviate:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dify-weaviate
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-weaviate
  serviceName: dify-weaviate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-weaviate
    spec:
      containers:
      - env:
        - name: QUERY_DEFAULTS_LIMIT
          value: "25"
        - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
          value: "false"
        - name: PERSISTENCE_DATA_PATH
          value: /var/lib/weaviate
        - name: DEFAULT_VECTORIZER_MODULE
          value: none
        - name: AUTHENTICATION_APIKEY_ENABLED
          value: "true"
        - name: AUTHENTICATION_APIKEY_ALLOWED_KEYS
          value: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
        - name: AUTHENTICATION_APIKEY_USERS
          value: hello@dify.ai
        - name: AUTHORIZATION_ADMINLIST_ENABLED
          value: "true"
        - name: AUTHORIZATION_ADMINLIST_USERS
          value: hello@dify.ai
        image: dockerhub.icu/semitechnologies/weaviate:1.19.0
        name: dify-weaviate
        ports:
        - containerPort: 8080
          name: weaviate-p
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 102Mi
        volumeMounts:
        - mountPath: /var/lib/weaviate
          name: weaviate-data
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: dify-weaviate
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /root/dify/db/weaviate/data
          type: DirectoryOrCreate
        name: weaviate-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-weaviate
policy drop-all-capabilities -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-weaviate failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-weaviate:
apiVersion: v1
kind: Service
metadata:
  name: dify-weaviate
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: weaviate
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: dify-weaviate
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-sandbox:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-sandbox
  name: dify-sandbox
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-sandbox
  template:
    metadata:
      labels:
        app: dify-sandbox
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: API_KEY
          value: dify-sandbox
        - name: GIN_MODE
          value: release
        - name: WORKER_TIMEOUT
          value: "15"
        - name: ENABLE_NETWORK
          value: "true"
        - name: SANDBOX_PORT
          value: "8194"
        - name: HTTP_PROXY
          value: http://dify-ssrf:3128
        - name: HTTPS_PROXY
          value: http://dify-ssrf:3128
        image: dockerhub.icu/langgenius/dify-sandbox:0.2.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:8194/health
        name: dify-sandbox
        ports:
        - containerPort: 8194
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-sandbox

skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-sandbox
policy drop-all-capabilities -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-sandbox failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: dify-mirror-deployment_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-sandbox:
apiVersion: v1
kind: Service
metadata:
  name: dify-sandbox
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: dify-sandbox
    port: 8194
    protocol: TCP
    targetPort: 8194
  selector:
    app: dify-sandbox
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ConfigMap/ssrf-proxy-config:
apiVersion: v1
data:
  squid.conf: "acl localnet src 0.0.0.1-0.255.255.255\t# RFC 1122 \"this\" network
    (LAN)\nacl localnet src 10.0.0.0/8\t\t# RFC 1918 local private network (LAN)\nacl
    localnet src 100.64.0.0/10\t\t# RFC 6598 shared address space (CGN)\nacl localnet
    src 169.254.0.0/16 \t# RFC 3927 link-local (directly plugged) machines\nacl localnet
    src 172.16.0.0/12\t\t# RFC 1918 local private network (LAN)\nacl localnet src
    192.168.0.0/16\t\t# RFC 1918 local private network (LAN)\nacl localnet src fc00::/7
    \      \t# RFC 4193 local private network range\nacl localnet src fe80::/10      \t#
    RFC 4291 link-local (directly plugged) machines\nacl SSL_ports port 443\n# acl
    SSL_ports port 1025-65535   # Enable the configuration to resolve this issue:
    https://github.com/langgenius/dify/issues/12792    \nacl Safe_ports port 80\t\t#
    http\nacl Safe_ports port 21\t\t# ftp\nacl Safe_ports port 443\t\t# https\nacl
    Safe_ports port 70\t\t# gopher\nacl Safe_ports port 210\t\t# wais\nacl Safe_ports
    port 1025-65535\t# unregistered ports\nacl Safe_ports port 280\t\t# http-mgmt\nacl
    Safe_ports port 488\t\t# gss-http\nacl Safe_ports port 591\t\t# filemaker\nacl
    Safe_ports port 777\t\t# multiling http\nacl CONNECT method CONNECT\nhttp_access
    deny !Safe_ports\nhttp_access deny CONNECT !SSL_ports\nhttp_access allow localhost
    manager\nhttp_access deny manager\nhttp_access allow localhost\nhttp_access allow
    localnet\nhttp_access deny all\n\n################################## Proxy Server
    ################################\nhttp_port 3128\ncoredump_dir /var/spool/squid\nrefresh_pattern
    ^ftp:\t\t1440\t20%!\(MISSING)t10080\nrefresh_pattern ^gopher:\t1440\t0%!\(MISSING)t1440\nrefresh_pattern
    -i (/cgi-bin/|\\?) 0\t0%!\(MISSING)t0\nrefresh_pattern \\/(Packages|Sources)(|\\.bz2|\\.gz|\\.xz)$
    0 0%!r(MISSING)efresh-ims\nrefresh_pattern \\/Release(|\\.gpg)$ 0 0%!r(MISSING)efresh-ims\nrefresh_pattern
    \\/InRelease$ 0 0%!r(MISSING)efresh-ims\nrefresh_pattern \\/(Translation-.*)(|\\.bz2|\\.gz|\\.xz)$
    0 0%!r(MISSING)efresh-ims\nrefresh_pattern .\t\t0\t20%!\(MISSING)t4320\n\n\n# upstream proxy, set
    to your own upstream proxy IP to avoid SSRF attacks\n# cache_peer 172.1.1.1 parent
    3128 0 no-query no-digest no-netdb-exchange default \n\n\n##################################
    Reverse Proxy To Sandbox ################################\nhttp_port 8194 accel
    vhost\n# Notice:\n# default is 'sandbox' in dify's github repo, here is 'dify-sandbox'
    because the service name of sandbox is 'dify-sandbox'\n# you can change it to
    your own service name\ncache_peer dify-sandbox parent 8194 0 no-query originserver\nacl
    src_all src all\nhttp_access allow src_all\n"
kind: ConfigMap
metadata:
  name: ssrf-proxy-config
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ServiceAccount/dify-postgres:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dify-postgres
  name: dify-postgres
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ConfigMap/ssrf-proxy-entrypoint:
apiVersion: v1
data:
  docker-entrypoint-mount.sh: |
    #!/bin/bash

    # Modified based on Squid OCI image entrypoint

    # This entrypoint aims to forward the squid logs to stdout to assist users of
    # common container related tooling (e.g., kubernetes, docker-compose, etc) to
    # access the service logs.

    # Moreover, it invokes the squid binary, leaving all the desired parameters to
    # be provided by the "command" passed to the spawned container. If no command
    # is provided by the user, the default behavior (as per the CMD statement in
    # the Dockerfile) will be to use Ubuntu's default configuration [1] and run
    # squid with the "-NYC" options to mimic the behavior of the Ubuntu provided
    # systemd unit.

    # [1] The default configuration is changed in the Dockerfile to allow local
    # network connections. See the Dockerfile for further information.

    echo "[ENTRYPOINT] re-create snakeoil self-signed certificate removed in the build process"
    if [ ! -f /etc/ssl/private/ssl-cert-snakeoil.key ]; then
        /usr/sbin/make-ssl-cert generate-default-snakeoil --force-overwrite > /dev/null 2>&1
    fi

    tail -F /var/log/squid/access.log 2>/dev/null &
    tail -F /var/log/squid/error.log 2>/dev/null &
    tail -F /var/log/squid/store.log 2>/dev/null &
    tail -F /var/log/squid/cache.log 2>/dev/null &

    # Replace environment variables in the template and output to the squid.conf
    echo "[ENTRYPOINT] replacing environment variables in the template"
    awk '{
        while(match($0, /\${[A-Za-z_][A-Za-z_0-9]*}/)) {
            var = substr($0, RSTART+2, RLENGTH-3)
            val = ENVIRON[var]
            $0 = substr($0, 1, RSTART-1) val substr($0, RSTART+RLENGTH)
        }
        print
    }' /etc/squid/squid.conf.template > /etc/squid/squid.conf

    /usr/sbin/squid -Nz
    echo "[ENTRYPOINT] starting squid"
    /usr/sbin/squid -f /etc/squid/squid.conf -NYC 1
kind: ConfigMap
metadata:
  name: ssrf-proxy-entrypoint
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-ssrf:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-ssrf
  name: dify-ssrf
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-ssrf
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dify-ssrf
    spec:
      containers:
      - command:
        - sh
        - -c
        - "cp /tmp/docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//'
          /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh"
        env:
        - name: HTTP_PORT
          value: "3128"
        - name: COREDUMP_DIR
          value: /var/spool/squid
        - name: REVERSE_PROXY_PORT
          value: "8194"
        - name: SANDBOX_HOST
          value: dify-sandbox
        - name: SANDBOX_PORT
          value: "8194"
        image: dockerhub.icu/ubuntu/squid:latest
        name: dify-ssrf
        ports:
        - containerPort: 3128
          name: dify-ssrf
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/squid/
          name: ssrf-proxy-config
        - mountPath: /tmp/
          name: ssrf-proxy-entrypoint
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
      - configMap:
          name: ssrf-proxy-config
        name: ssrf-proxy-config
      - configMap:
          name: ssrf-proxy-entrypoint
        name: ssrf-proxy-entrypoint

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-ssrf

skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-ssrf
policy disallow-latest-tag -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-ssrf failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dify-mirror-deployment_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-ssrf:
apiVersion: v1
kind: Service
metadata:
  name: dify-ssrf
  namespace: dify
spec:
  ports:
  - port: 3128
    protocol: TCP
    targetPort: 3128
  selector:
    app: dify-ssrf

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-api:
apiVersion: v1
kind: Service
metadata:
  name: dify-api
  namespace: dify
spec:
  ports:
  - name: dify-api
    port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: dify-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-worker:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: dify-worker
    app.kubernetes.io/instance: dify-worker
  name: dify-worker
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-worker
  serviceName: dify-worker
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-worker
    spec:
      containers:
      - env:
        - name: CONSOLE_WEB_URL
          value: ""
        - name: MODE
          value: worker
        - name: LOG_LEVEL
          value: INFO
        - name: SECRET_KEY
          value: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: pg-username
              name: dify-credentials
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pg-password
              name: dify-credentials
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: pg-host
              name: dify-credentials
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              key: pg-port
              name: dify-credentials
        - name: DB_DATABASE
          value: dify
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              key: redis-host
              name: dify-credentials
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              key: redis-port
              name: dify-credentials
        - name: REDIS_USERNAME
          valueFrom:
            secretKeyRef:
              key: redis-username
              name: dify-credentials
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: dify-credentials
        - name: REDIS_USE_SSL
          value: "false"
        - name: REDIS_DB
          value: "0"
        - name: CELERY_BROKER_URL
          value: redis://$(REDIS_USERNAME):$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/1
        - name: WEB_API_CORS_ALLOW_ORIGINS
          value: '*'
        - name: CONSOLE_CORS_ALLOW_ORIGINS
          value: '*'
        - name: STORAGE_TYPE
          value: opendal
        - name: OPENDAL_SCHEME
          value: fs
        - name: OPENDAL_FS_ROOT
          value: storage
        - name: STORAGE_LOCAL_PATH
          value: /app/api/storage
        - name: VECTOR_STORE
          value: weaviate
        - name: WEAVIATE_HOST
          valueFrom:
            secretKeyRef:
              key: weaviate-host
              name: dify-credentials
        - name: WEAVIATE_PORT
          valueFrom:
            secretKeyRef:
              key: weaviate-port
              name: dify-credentials
        - name: WEAVIATE_ENDPOINT
          value: http://$(WEAVIATE_HOST):$(WEAVIATE_PORT)
        - name: WEAVIATE_API_KEY
          value: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
        - name: SSRF_PROXY_HTTP_URL
          value: http://dify-ssrf:3128
        - name: SSRF_PROXY_HTTPS_URL
          value: http://dify-ssrf:3128
        - name: SENTRY_DSN
          value: ""
        - name: SENTRY_TRACES_SAMPLE_RATE
          value: "1.0"
        - name: SENTRY_PROFILES_SAMPLE_RATE
          value: "1.0"
        - name: PLUGIN_MAX_PACKAGE_SIZE
          value: "52428800"
        - name: PLUGIN_DAEMON_URL
          value: http://dify-plugin-daemon:5002
        - name: PLUGIN_DAEMON_KEY
          value: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
        - name: INNER_API_KEY_FOR_PLUGIN
          value: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
        - name: MARKETPLACE_ENABLED
          value: "true"
        - name: MARKETPLACE_API_URL
          value: https://marketplace.dify.ai
        image: dockerhub.icu/langgenius/dify-api:1.0.0
        imagePullPolicy: IfNotPresent
        name: dify-worker
        ports:
        - containerPort: 5001
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /app/api/storage
          name: dify-api-storage
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /root/dify/app/api/storage
          type: DirectoryOrCreate
        name: dify-api-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-worker
policy drop-all-capabilities -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-worker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment_26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-worker:
apiVersion: v1
kind: Service
metadata:
  name: dify-worker
  namespace: dify
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: dify-worker
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-web
  name: dify-web
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-web
  template:
    metadata:
      labels:
        app: dify-web
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: EDITION
          value: SELF_HOSTED
        - name: CONSOLE_API_URL
          value: ""
        - name: APP_API_URL
          value: ""
        - name: SENTRY_DSN
          value: ""
        - name: NEXT_TELEMETRY_DISABLED
          value: "0"
        - name: TEXT_GENERATION_TIMEOUT_MS
          value: "60000"
        - name: CSP_WHITELIST
          value: ""
        - name: MARKETPLACE_API_URL
          value: https://marketplace.dify.ai
        - name: MARKETPLACE_URL
          value: https://marketplace.dify.ai
        - name: TOP_K_MAX_VALUE
          value: ""
        - name: INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH
          value: ""
        - name: PM2_INSTANCES
          value: "2"
        image: dockerhub.icu/langgenius/dify-web:1.0.0
        imagePullPolicy: IfNotPresent
        name: dify-web
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-web

skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-web
policy drop-all-capabilities -> resource dify/Deployment/dify-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-web failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dify-mirror-deployment_28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-web:
apiVersion: v1
kind: Service
metadata:
  name: dify-web
  namespace: dify
spec:
  ports:
  - name: dify-web
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: dify-web
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ConfigMap/dify-nginx:
apiVersion: v1
data:
  nginx.conf: "user  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log
    notice;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections
    \ 1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type
    \ application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user
    [$time_local] \"$request\" '\n                      '$status $body_bytes_sent
    \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n
    \   access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n
    \   #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n    client_max_body_size
    15M;\n\n    server {\n    listen 80;\n    server_name _;\n\n    location /console/api
    {\n      proxy_pass http://dify-api:5001;\n      proxy_set_header X-Forwarded-For
    $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n
    \     proxy_set_header X-Forwarded-Port $server_port;\n      proxy_http_version
    1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering off;\n      proxy_read_timeout
    3600s;\n      proxy_send_timeout 3600s;\n    }\n\n    location /api {\n      proxy_pass
    http://dify-api:5001;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n
    \     proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port
    $server_port;\n      proxy_http_version 1.1;\n      proxy_set_header Connection
    \"\";\n      proxy_buffering off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout
    3600s;\n    }\n\n    location /v1 {\n      proxy_pass http://dify-api:5001;\n
    \     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header
    X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port $server_port;\n
    \     proxy_http_version 1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering
    off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout 3600s;\n    }\n\n
    \   location /files {\n      proxy_pass http://dify-api:5001;\n      proxy_set_header
    X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto
    $scheme;\n      proxy_set_header X-Forwarded-Port $server_port;\n      proxy_http_version
    1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering off;\n      proxy_read_timeout
    3600s;\n      proxy_send_timeout 3600s;\n    }\n    location /explore {\n      proxy_pass
    http://dify-web:3000;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n
    \     proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port
    $server_port;\n      proxy_http_version 1.1;\n      proxy_set_header Connection
    \"\";\n      proxy_buffering off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout
    3600s;\n    }\n    \n    location /e/ {\n      proxy_pass http://dify-plugin-daemon:5002;\n
    \     proxy_set_header Dify-Hook-Url ://;\n      proxy_set_header X-Forwarded-For
    $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n
    \     proxy_set_header X-Forwarded-Port $server_port;\n      proxy_http_version
    1.1;\n      proxy_set_header Connection \"\";\n      proxy_buffering off;\n      proxy_read_timeout
    3600s;\n      proxy_send_timeout 3600s;\n  }\n    location / {\n      proxy_pass
    http://dify-web:3000;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n
    \     proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_set_header X-Forwarded-Port
    $server_port;\n      proxy_http_version 1.1;\n      proxy_set_header Connection
    \"\";\n      proxy_buffering off;\n      proxy_read_timeout 3600s;\n      proxy_send_timeout
    3600s;\n    }\n\n    # If you want to support HTTPS, please uncomment the code
    snippet below\n    #listen 443 ssl;\n    #ssl_certificate ./../ssl/your_cert_file.cer;\n
    \   #ssl_certificate_key ./../ssl/your_cert_key.key;\n    #ssl_protocols TLSv1.1
    TLSv1.2 TLSv1.3;\n    #ssl_prefer_server_ciphers on;\n    #ssl_session_cache shared:SSL:10m;\n
    \   #ssl_session_timeout 10m;\n}\n}"
kind: ConfigMap
metadata:
  name: dify-nginx
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Role/dify-postgres:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dify-postgres
  name: dify-postgres
  namespace: dify
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-nginx
  name: dify-nginx
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-nginx
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-nginx
    spec:
      automountServiceAccountToken: false
      containers:
      - image: dhub.kubesre.xyz/nginx:stable
        imagePullPolicy: IfNotPresent
        name: dify-nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: dify-nginx
          subPath: nginx.conf
        - mountPath: /etc/nginx/conf.d
          name: dify-nginx-config
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          name: dify-nginx
        name: dify-nginx
      - emptyDir: {}
        name: dify-nginx-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-nginx
policy drop-all-capabilities -> resource dify/Deployment/dify-nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment_31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-nginx:
apiVersion: v1
kind: Service
metadata:
  name: dify-nginx
  namespace: dify
spec:
  ports:
  - name: dify-nginx
    port: 80
    targetPort: 80
  selector:
    app: dify-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-nginx-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: dify-nginx-nodeport
  namespace: dify
spec:
  ports:
  - name: dify-nginx
    nodePort: 30000
    port: 80
    targetPort: 80
  selector:
    app: dify-nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource dify/Service/dify-nginx-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Deployment/dify-plugin-daemon:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dify-plugin-daemon
  name: dify-plugin-daemon
  namespace: dify
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dify-plugin-daemon
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-plugin-daemon
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: DB_USERNAME
          value: postgres
        - name: DB_PASSWORD
          value: difyai123456
        - name: DB_HOST
          value: dify-postgres
        - name: DB_PORT
          value: "5432"
        - name: REDIS_HOST
          value: dify-redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_USERNAME
          value: ""
        - name: REDIS_PASSWORD
          value: difyai123456
        - name: REDIS_USE_SSL
          value: "false"
        - name: REDIS_DB
          value: "0"
        - name: CELERY_BROKER_URL
          value: redis://$(REDIS_USERNAME):$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/1
        - name: DB_DATABASE
          value: dify_plugin
        - name: SERVER_PORT
          value: "5002"
        - name: EXPOSE_PLUGIN_DAEMON_PORT
          value: "5002"
        - name: SERVER_KEY
          value: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
        - name: MAX_PLUGIN_PACKAGE_SIZE
          value: "52428800"
        - name: PPROF_ENABLED
          value: "false"
        - name: DIFY_INNER_API_URL
          value: http://dify-api:5001
        - name: DIFY_INNER_API_KEY
          value: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
        - name: PLUGIN_REMOTE_INSTALLING_HOST
          value: 0.0.0.0
        - name: PLUGIN_REMOTE_INSTALLING_PORT
          value: "5003"
        - name: PLUGIN_WORKING_PATH
          value: /app/storage/cwd
        - name: FORCE_VERIFYING_SIGNATURE
          value: "true"
        - name: EXPOSE_PLUGIN_DEBUGGING_HOST
          value: localhost
        - name: EXPOSE_PLUGIN_DEBUGGING_PORT
          value: "5003"
        image: dhub.kubesre.xyz/langgenius/dify-plugin-daemon:0.0.3-local
        name: dify-plugin-daemon
        ports:
        - containerPort: 5003
          name: debug-port
          protocol: TCP
        - containerPort: 5002
          name: service-port
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /app/storage
          name: dify-plugin-daemon-storage
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - hostPath:
          path: /root/dify/app/plugin/storage
          type: DirectoryOrCreate
        name: dify-plugin-daemon-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/Deployment/dify-plugin-daemon
policy drop-all-capabilities -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/Deployment/dify-plugin-daemon failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment_34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-plugin-daemon:
apiVersion: v1
kind: Service
metadata:
  name: dify-plugin-daemon
  namespace: dify
spec:
  ports:
  - name: debug-port
    port: 5003
    protocol: TCP
    targetPort: 5003
  - name: service-port
    port: 5002
    protocol: TCP
    targetPort: 5002
  selector:
    app: dify-plugin-daemon
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/RoleBinding/dify-postgres:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dify-postgres
  name: dify-postgres
  namespace: dify
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dify-postgres
subjects:
- kind: ServiceAccount
  name: dify-postgres

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/StatefulSet/dify-postgres:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dify-postgres
  namespace: dify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-postgres
  serviceName: dify-postgres
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dify-postgres
    spec:
      containers:
      - env:
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: pg-username
              name: dify-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pg-password
              name: dify-credentials
        - name: POSTGRES_DB
          value: dify
        image: dhub.kubesre.xyz/postgres:15-alpine
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(PGUSER)
            - -d
            - $(POSTGRES_DB)
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        name: dify-postgres
        ports:
        - containerPort: 5432
          name: postgres-port
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: dify-postgres
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /root/dify/db/postgres/data
          type: DirectoryOrCreate
        name: postgres-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dify/StatefulSet/dify-postgres
policy drop-all-capabilities -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dify/StatefulSet/dify-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: dify-mirror-deployment_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Service/dify-postgres:
apiVersion: v1
kind: Service
metadata:
  name: dify-postgres
  namespace: dify
spec:
  clusterIP: None
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: dify-postgres
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/ServiceAccount/dify-redis:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dify-redis
  name: dify-redis
  namespace: dify

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/Role/dify-redis:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dify-redis
  name: dify-redis
  namespace: dify
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dify-mirror-deployment_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dify/RoleBinding/dify-redis:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dify-redis
  name: dify-redis
  namespace: dify
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dify-redis
subjects:
- kind: ServiceAccount
  name: dify-redis

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
  use-proxy-protocol: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: digitalocean-deploy_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: digitalocean-deploy_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: digitalocean-deploy_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None
  timeoutSeconds: 29

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
  use-proxy-protocol: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: digitalocean-deploy1_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: digitalocean-deploy1_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: digitalocean-deploy1_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None
  timeoutSeconds: 29

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: digitalocean-deploy1_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dind.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/dind-certs:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dind-certs
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dind_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dind:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind
  namespace: default
spec:
  selector:
    matchLabels:
      app: dind
  template:
    metadata:
      labels:
        app: dind
    spec:
      containers:
      - env:
        - name: DOCKER_TLS_CERTDIR
          value: /certs
        image: docker:dind
        name: dind
        ports:
        - containerPort: 2376
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      hostname: dind
      volumes:
      - name: dind-certs
        persistentVolumeClaim:
          claimName: dind-certs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dind

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dind
policy disallow-default-namespace -> resource default/Deployment/dind failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dind failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dind failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dind failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dind failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dind failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dind failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dind failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dind_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dind:
apiVersion: v1
kind: Service
metadata:
  name: dind
  namespace: default
spec:
  ports:
  - port: 2376
  selector:
    app: dind

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dind_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dind-service2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind-service2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dind-service2
  template:
    metadata:
      labels:
        app: dind-service2
    spec:
      containers:
      - command:
        - dockerd
        - --host
        - tcp://127.0.0.1:2375
        image: docker:dind
        imagePullPolicy: Always
        name: dind
        securityContext:
          privileged: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dind-service2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dind-service2
policy disallow-default-namespace -> resource default/Deployment/dind-service2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dind-service2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dind-service2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dind-service2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dind-service2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dind-service2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dind-service2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dind-service2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dind_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dind-service2:
apiVersion: v1
kind: Service
metadata:
  name: dind-service2
  namespace: default
spec:
  ports:
  - port: 2375
    protocol: TCP
    targetPort: 2375
  selector:
    app: dind-service2

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dind1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ops/PersistentVolumeClaim/docker-dind-data:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: docker-dind
  name: docker-dind-data
  namespace: ops
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  storageClassName: gp2

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dind1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ops/Deployment/docker-dind:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-dind
  name: docker-dind
  namespace: ops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-dind
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: docker-dind
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://0.0.0.0:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:20.10.22-dind
        name: docker-dind
        ports:
        - containerPort: 2375
          name: daemon-port
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker/
          name: docker-dind-data-vol
      volumes:
      - name: docker-dind-data-vol
        persistentVolumeClaim:
          claimName: docker-dind-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ops/Deployment/docker-dind

skipped mutate policy add-safe-to-evict -> resource ops/Deployment/docker-dind
policy drop-all-capabilities -> resource ops/Deployment/docker-dind failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ops/Deployment/docker-dind failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ops/Deployment/docker-dind failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ops/Deployment/docker-dind failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ops/Deployment/docker-dind failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ops/Deployment/docker-dind failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ops/Deployment/docker-dind failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dind1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ops/Service/docker-dind:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-dind
  name: docker-dind
  namespace: ops
spec:
  ports:
  - port: 2375
    protocol: TCP
    targetPort: 2375
  selector:
    app: docker-dind

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dind-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to az-devops/Deployment/azsh-dind:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: azsh-dind-agent
  name: azsh-dind
  namespace: az-devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azsh-dind-agent
  template:
    metadata:
      annotations:
        io.kubernetes.cri-o.userns-mode: auto:size=65536
      labels:
        app: azsh-dind-agent
    spec:
      containers:
      - command:
        - /azp/start.sh
        env:
        - name: AZP_URL
          valueFrom:
            secretKeyRef:
              key: AZP_URL
              name: azdevops
        - name: AZP_TOKEN
          valueFrom:
            secretKeyRef:
              key: AZP_TOKEN
              name: azdevops
        - name: AZP_POOL
          valueFrom:
            secretKeyRef:
              key: AZP_POOL
              name: azdevops
        image: anvesh35/azsh-dind-agent
        name: dind
      runtimeClassName: sysbox-runc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource az-devops/Deployment/azsh-dind

skipped mutate policy add-safe-to-evict -> resource az-devops/Deployment/azsh-dind
policy disallow-latest-tag -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource az-devops/Deployment/azsh-dind failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dind-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dind-jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind-jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dind-jenkins
  template:
    metadata:
      labels:
        app: dind-jenkins
    spec:
      containers:
      - image: docker:dind
        name: dind-jenkins
        ports:
        - containerPort: 8080
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker/volumes
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: demo-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dind-jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dind-jenkins
policy disallow-default-namespace -> resource default/Deployment/dind-jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dind-jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dind-jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dind-jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dind-jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dind-jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dind-jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dind-jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dind-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-dind-service2:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-dind-service2
  namespace: default
spec:
  ports:
  - port: 8084
    protocol: TCP
    targetPort: 8084
  selector:
    app: dind-jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dingtalk-hook_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-ops/Service/dingtalk-hook:
apiVersion: v1
kind: Service
metadata:
  name: dingtalk-hook
  namespace: kube-ops
spec:
  ports:
  - name: hook
    port: 5000
    targetPort: http
  selector:
    app: dingtalk-hook

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dir-persistent-volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/dir-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dir-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  hostPath:
    path: /tmp/data
  storageClassName: dir

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dir-persistent-volume-claim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/dir-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dir-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: dir

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dir-persistent-volumen-claim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/dir-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dir-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: dir

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disable-automount-sa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/foo:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: foo
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disable-automount-sa_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/foo:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: foo
  name: foo
  namespace: default
spec:
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
  - name: http
    port: 8090
    targetPort: 8090
  selector:
    app: foo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disable-automount-sa_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/foo-bar:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: foo-bar
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: foo
      version: bar
  template:
    metadata:
      annotations:
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
      labels:
        app: foo
        test.istio.io/class: standard
        version: bar
    spec:
      automountServiceAccountToken: false
      containers:
      - image: auto
        imagePullPolicy: Always
        name: istio-proxy
        securityContext:
          readOnlyRootFilesystem: false
      - args:
        - --metrics=15014
        - --cluster=cluster-0
        - --grpc=7070
        - --port=8090
        - --port=8080
        - --port=3333
        - --version=bar
        - --istio-version=
        - --crt=/cert.crt
        - --key=/cert.key
        env:
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: testing.hub/app:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          initialDelaySeconds: 10
          periodSeconds: 10
          tcpSocket:
            port: tcp-health-port
        name: app
        ports:
        - containerPort: 7070
        - containerPort: 8090
        - containerPort: 8080
        - containerPort: 3333
          name: tcp-health-port
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 2
        startupProbe:
          failureThreshold: 10
          periodSeconds: 1
          tcpSocket:
            port: tcp-health-port
      imagePullSecrets:
      - name: myregistrykey
      serviceAccountName: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/foo-bar

skipped mutate policy add-safe-to-evict -> resource default/Deployment/foo-bar
policy disallow-default-namespace -> resource default/Deployment/foo-bar failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/foo-bar failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/foo-bar failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/foo-bar failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/foo-bar failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/foo-bar failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/foo-bar failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/foo-bar failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/foo-bar failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: disable-psp-demo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/disable-psp-demo:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: disable-psp-demo
  namespace: default
rules:
- apiGroups:
  - policy
  resourceNames:
  - privileged
  resources:
  - podsecuritypolicies
  verbs:
  - use

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disable-psp-demo_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/disable-psp-demo:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: disable-psp-demo
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: disable-psp-demo
subjects:
- kind: ServiceAccount
  name: default
  namespace: demo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discount-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/discount-service:
apiVersion: v1
data:
  actualConfigFile: name.properties
  key: value
  name.properties: |
    field=value1,value2
kind: ConfigMap
metadata:
  name: discount-service
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discounts.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/discounts:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discounts
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: discounts
  template:
    metadata:
      labels:
        app: discounts
    spec:
      containers:
      - image: smarthotels/discounts:latest
        name: discounts
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/discounts

skipped mutate policy add-safe-to-evict -> resource default/Deployment/discounts
policy disallow-default-namespace -> resource default/Deployment/discounts failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/discounts failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/discounts failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/discounts failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/discounts failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/discounts failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/discounts failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/discounts failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/discounts failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: discounts_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discounts:
apiVersion: v1
kind: Service
metadata:
  name: discounts
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: discounts
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/discounts failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: discount-service-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discount-service:
apiVersion: v1
kind: Service
metadata:
  name: discount-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: discount-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discount-service-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/discount-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discount-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discount-service
  template:
    metadata:
      labels:
        app: discount-service
    spec:
      containers:
      - image: discount-service:latest
        name: discount-service
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/discount-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/discount-service
policy disallow-default-namespace -> resource default/Deployment/discount-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/discount-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/discount-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/discount-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/discount-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/discount-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/discount-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/discount-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/discount-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: discovery.k8s.io.v1.EndpointSlice.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "20"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "28": "29"
  hints:
    forZones:
    - name: "32"
  hostname: "21"
  nodeName: "30"
  targetRef:
    apiVersion: "25"
    fieldPath: "27"
    kind: "22"
    name: "24"
    namespace: "23"
    resourceVersion: "26"
    uid: ɑ
  zone: "31"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "34"
  name: "33"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "20"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "28": "29"
  hints:
    forZones:
    - name: "32"
  hostname: "21"
  nodeName: "30"
  targetRef:
    apiVersion: "25"
    fieldPath: "27"
    kind: "22"
    name: "24"
    namespace: "23"
    resourceVersion: "26"
    uid: ɑ
  zone: "31"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "34"
  name: "33"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "20"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "28": "29"
  hints:
    forZones:
    - name: "32"
  hostname: "21"
  nodeName: "30"
  targetRef:
    apiVersion: "25"
    fieldPath: "27"
    kind: "22"
    name: "24"
    namespace: "23"
    resourceVersion: "26"
    uid: ɑ
  zone: "31"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "34"
  name: "33"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "20"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "28": "29"
  hints:
    forZones:
    - name: "32"
  hostname: "21"
  nodeName: "30"
  targetRef:
    apiVersion: "25"
    fieldPath: "27"
    kind: "22"
    name: "24"
    namespace: "23"
    resourceVersion: "26"
    uid: ɑ
  zone: "31"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "34"
  name: "33"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "20"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "28": "29"
  hints:
    forZones:
    - name: "32"
  hostname: "21"
  nodeName: "30"
  targetRef:
    apiVersion: "25"
    fieldPath: "27"
    kind: "22"
    name: "24"
    namespace: "23"
    resourceVersion: "26"
    uid: ɑ
  zone: "31"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "34"
  name: "33"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "19"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "27": "28"
  hints:
    forZones:
    - name: "31"
  hostname: "20"
  nodeName: "29"
  targetRef:
    apiVersion: "24"
    fieldPath: "26"
    kind: "21"
    name: "23"
    namespace: "22"
    resourceVersion: "25"
    uid: ɑ
  zone: "30"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "33"
  name: "32"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/EndpointSlice/2:
addressType: īqJ枊a8衍`Ĩɘ.蘯
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - "20"
  conditions:
    ready: false
    serving: false
    terminating: false
  deprecatedTopology:
    "28": "29"
  hints:
    forZones:
    - name: "32"
  hostname: "21"
  nodeName: "30"
  targetRef:
    apiVersion: "25"
    fieldPath: "27"
    kind: "22"
    name: "24"
    namespace: "23"
    resourceVersion: "26"
    uid: ɑ
  zone: "31"
kind: EndpointSlice
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
ports:
- appProtocol: "34"
  name: "33"
  port: -591435092
  protocol: ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery.k8s.io.v1.EndpointSlice9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/EndpointSlice/nameValue:
addressType: addressTypeValue
apiVersion: discovery.k8s.io/v1
endpoints:
- addresses:
  - addressesValue
  conditions:
    ready: true
    serving: true
    terminating: true
  deprecatedTopology:
    deprecatedTopologyKey: deprecatedTopologyValue
  hints:
    forZones:
    - name: nameValue
  hostname: hostnameValue
  nodeName: nodeNameValue
  targetRef:
    apiVersion: apiVersionValue
    fieldPath: fieldPathValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
    resourceVersion: resourceVersionValue
    uid: uidValue
  zone: zoneValue
kind: EndpointSlice
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
ports:
- appProtocol: appProtocolValue
  name: nameValue
  port: 3
  protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: discovery-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/discovery:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: discovery
  name: discovery
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app: discovery
  serviceName: discovery-server
  template:
    metadata:
      labels:
        app: discovery
        environment: production
        tier: geoserver
    spec:
      containers:
      - env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: eureka.client.serviceUrl.defaultZone
          value: http://discovery-server-0.discovery-server:8761/eureka
        - name: eureka.instance.hostname
          value: ${MY_POD_NAME}.discovery-server
        image: geoservercloud/geoserver-cloud-discovery:1.9.0
        name: discovery
        ports:
        - containerPort: 8761
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 128Mi
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/discovery

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/discovery
policy disallow-default-namespace -> resource default/StatefulSet/discovery failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/discovery failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/discovery failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/discovery failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/StatefulSet/discovery failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/discovery failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/discovery failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: discovery-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discovery:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: discovery
  name: discovery
  namespace: default
spec:
  ports:
  - name: http
    port: 8761
    targetPort: 8761
  selector:
    app: discovery

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discovery-server-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/discovery-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: discovery-server
  name: discovery-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: discovery-server
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert -f docker-compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/microservices-parent-updated-default: "true"
        io.kompose.service: discovery-server
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: docker
        image: beko2001/discovery-server:latest
        name: discovery-server
        ports:
        - containerPort: 8761
          hostPort: 8761
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/discovery-server

skipped mutate policy add-safe-to-evict -> resource default/Deployment/discovery-server
policy disallow-default-namespace -> resource default/Deployment/discovery-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/discovery-server failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/discovery-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/discovery-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/discovery-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/discovery-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/discovery-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/discovery-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/discovery-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: discovery-server-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discovery-server:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: discovery-server
  name: discovery-server
  namespace: default
spec:
  ports:
  - name: "8761"
    port: 8761
    targetPort: 8761
  selector:
    io.kompose.service: discovery-server
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/discovery-server failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: discovery-server-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discovery-server:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
    kompose.image-pull-secret: regcred
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: discovery-server
  name: discovery-server
  namespace: default
spec:
  ports:
  - name: "8761"
    port: 8761
    targetPort: 8761
  selector:
    io.kompose.service: discovery-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discovery-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/discovery-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discovery-service
  template:
    metadata:
      labels:
        app: discovery-service
    spec:
      containers:
      - image: mounanga/discovery-service
        name: discovery-service
        ports:
        - containerPort: 8761

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/discovery-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/discovery-service
policy disallow-default-namespace -> resource default/Deployment/discovery-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/discovery-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/discovery-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/discovery-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/discovery-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: discovery-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discovery-service:
apiVersion: v1
kind: Service
metadata:
  name: discovery-service
  namespace: default
spec:
  ports:
  - port: 8761
    targetPort: 8761
  selector:
    app: discovery-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discovery-service-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/discovery-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discovery-service
  template:
    metadata:
      labels:
        app: discovery-service
    spec:
      containers:
      - image: medtest2013/discoveryservice:latest
        name: discovery-service
        ports:
        - containerPort: 8761

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/discovery-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/discovery-service
policy disallow-default-namespace -> resource default/Deployment/discovery-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/discovery-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/discovery-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/discovery-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/discovery-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: discovery-service-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discovery-service:
apiVersion: v1
kind: Service
metadata:
  name: discovery-service
  namespace: default
spec:
  ports:
  - port: 8761
    targetPort: 8761
  selector:
    app: discovery-service
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: discussion-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/discussion-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: discussion-service
  name: discussion-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discussion-service
  template:
    metadata:
      labels:
        app: discussion-service
      name: discussion-service
    spec:
      containers:
      - image: muchacho3alex/rsodiscussionservice:latest
        name: discussion-service
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100m
            memory: 200M
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/discussion-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/discussion-service
policy disallow-default-namespace -> resource default/Deployment/discussion-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/discussion-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/discussion-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/discussion-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/discussion-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/discussion-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/discussion-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/discussion-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/discussion-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: discussion-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/discussion-cip-service:
apiVersion: v1
kind: Service
metadata:
  name: discussion-cip-service
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: discussion-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disk-access-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/disk-access-pod:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: disk-access-pod
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - sleep 3600
    image: alpine:latest
    name: main-container
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /dev
      name: host-dev
  nodeSelector:
    kubernetes.io/hostname: stanton-03
  volumes:
  - hostPath:
      path: /dev
      type: Directory
    name: host-dev

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/disk-access-pod
policy disallow-default-namespace -> resource default/Pod/disk-access-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/disk-access-pod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/disk-access-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/disk-access-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/disk-access-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/disk-access-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/disk-access-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/disk-access-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/disk-access-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: disk-calc-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nginx:
apiVersion: v1
kind: Job
metadata:
  labels:
    app: nginx
    kiamol: ch08-lab
  name: nginx
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - du -h /nginx1/access.log /nginx2/access.log /nginx3/access.log
    image: kiamol/ch03-sleep
    name: calc
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /nginx1/
      name: nginx1
    - mountPath: /nginx2/
      name: nginx2
    - mountPath: /nginx3/
      name: nginx3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nginx

skipped mutate policy add-safe-to-evict -> resource default/Job/nginx
policy disallow-container-sock-mounts -> resource default/Job/nginx failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Job/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Job/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Job/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Job/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/disk-calc:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    kiamol: ch08-lab
  name: disk-calc
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - du -h /nginx0/access.log /nginx1/access.log /nginx2/access.log
        image: kiamol/ch03-sleep
        name: calc
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /nginx0/
          name: nginx0
        - mountPath: /nginx1/
          name: nginx1
        - mountPath: /nginx2/
          name: nginx2
      restartPolicy: Never
      volumes:
      - name: nginx0
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-0
      - name: nginx1
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-1
      - name: nginx2
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc

skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc
policy disallow-default-namespace -> resource default/Job/disk-calc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/disk-calc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/disk-calc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/disk-calc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/disk-calc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/disk-calc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nginx:
apiVersion: v1
kind: Job
metadata:
  labels:
    app: nginx
    kiamol: ch08-lab
  name: nginx
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - du -h /nginx1/access.log /nginx2/access.log /nginx3/access.log
    image: kiamol/ch03-sleep
    name: calc
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /nginx1/
      name: nginx1
    - mountPath: /nginx2/
      name: nginx2
    - mountPath: /nginx3/
      name: nginx3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nginx

skipped mutate policy add-safe-to-evict -> resource default/Job/nginx
policy disallow-container-sock-mounts -> resource default/Job/nginx failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Job/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Job/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Job/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Job/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/disk-calc:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    kiamol: ch08-lab
  name: disk-calc
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - du -h /nginx0/access.log /nginx1/access.log /nginx2/access.log
        image: kiamol/ch03-sleep
        name: calc
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /nginx0/
          name: nginx0
        - mountPath: /nginx1/
          name: nginx1
        - mountPath: /nginx2/
          name: nginx2
      restartPolicy: Never
      volumes:
      - name: nginx0
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-0
      - name: nginx1
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-1
      - name: nginx2
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc

skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc
policy disallow-default-namespace -> resource default/Job/disk-calc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/disk-calc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/disk-calc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/disk-calc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/disk-calc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/disk-calc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nginx:
apiVersion: v1
kind: Job
metadata:
  labels:
    app: nginx
    kiamol: ch08-lab
  name: nginx
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - du -h /nginx1/access.log /nginx2/access.log /nginx3/access.log
    image: kiamol/ch03-sleep
    name: calc
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /nginx1/
      name: nginx1
    - mountPath: /nginx2/
      name: nginx2
    - mountPath: /nginx3/
      name: nginx3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nginx

skipped mutate policy add-safe-to-evict -> resource default/Job/nginx
policy disallow-container-sock-mounts -> resource default/Job/nginx failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Job/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Job/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Job/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Job/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/disk-calc:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    kiamol: ch08-lab
  name: disk-calc
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - du -h /nginx0/access.log /nginx1/access.log /nginx2/access.log
        image: kiamol/ch03-sleep
        name: calc
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /nginx0/
          name: nginx0
        - mountPath: /nginx1/
          name: nginx1
        - mountPath: /nginx2/
          name: nginx2
      restartPolicy: Never
      volumes:
      - name: nginx0
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-0
      - name: nginx1
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-1
      - name: nginx2
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc

skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc
policy disallow-default-namespace -> resource default/Job/disk-calc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/disk-calc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/disk-calc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/disk-calc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/disk-calc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/disk-calc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nginx:
apiVersion: v1
kind: Job
metadata:
  labels:
    app: nginx
    kiamol: ch08-lab
  name: nginx
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - du -h /nginx1/access.log /nginx2/access.log /nginx3/access.log
    image: kiamol/ch03-sleep
    name: calc
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /nginx1/
      name: nginx1
    - mountPath: /nginx2/
      name: nginx2
    - mountPath: /nginx3/
      name: nginx3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nginx

skipped mutate policy add-safe-to-evict -> resource default/Job/nginx
policy disallow-container-sock-mounts -> resource default/Job/nginx failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Job/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Job/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Job/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Job/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: disk-calc-job7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/disk-calc:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    kiamol: ch08-lab
  name: disk-calc
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - du -h /nginx0/access.log /nginx1/access.log /nginx2/access.log
        image: kiamol/ch03-sleep
        name: calc
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /nginx0/
          name: nginx0
        - mountPath: /nginx1/
          name: nginx1
        - mountPath: /nginx2/
          name: nginx2
      restartPolicy: Never
      volumes:
      - name: nginx0
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-0
      - name: nginx1
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-1
      - name: nginx2
        persistentVolumeClaim:
          claimName: logs-nginx-stateful-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc

skipped mutate policy add-safe-to-evict -> resource default/Job/disk-calc
policy disallow-default-namespace -> resource default/Job/disk-calc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/disk-calc failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/disk-calc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/disk-calc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/disk-calc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/disk-calc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/disk-calc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: disk-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/disk-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: disk-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: disk-app
  template:
    metadata:
      labels:
        app: disk-app
    spec:
      containers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo $(date +%!Y(MISSING)-%!m(MISSING)-%!d(MISSING):%!H(MISSING):%!M(MISSING):%!S(MISSING)) - $(hostname) >>
          /mnt/index.html; done
        image: busybox
        name: busybox-writer
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - mountPath: /mnt
          name: managed-disk-volume
      - command:
        - sh
        - -c
        - httpd -p 80 -f -v -h /mnt
        image: busybox
        name: busybox-web
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - mountPath: /mnt
          name: managed-disk-volume
      volumes:
      - azureDisk:
          diskName: <disk name>
          diskURI: <disk resource ID>
          kind: Managed
        name: managed-disk-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/disk-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/disk-app
policy disallow-default-namespace -> resource default/Deployment/disk-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/disk-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/disk-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/disk-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/disk-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/disk-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/disk-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/disk-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/disk-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: disk-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/disk-app:
apiVersion: v1
kind: Service
metadata:
  name: disk-app
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: disk-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disk-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/azure-disk:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azure-disk
  namespace: default
parameters:
  kind: Managed
  storageaccounttype: Standard_LRS
provisioner: kubernetes.io/azure-disk

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disk-pvc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/mssql-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: azure-disk
  name: mssql-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disk-statefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/managed-disk-svc:
apiVersion: v1
kind: Service
metadata:
  name: managed-disk-svc
  namespace: default
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: managed-disk-pod
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: disk-statefulset_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/managed-disk-statefulset:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: managed-disk-statefulset
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: managed-disk-pod
  serviceName: managed-disk-svc
  template:
    metadata:
      labels:
        app: managed-disk-pod
    spec:
      containers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo $(date +%!Y(MISSING)-%!m(MISSING)-%!d(MISSING):%!H(MISSING):%!M(MISSING):%!S(MISSING)) - $(hostname) >>
          /mnt/index.html; done
        image: busybox
        name: busybox-writer
        volumeMounts:
        - mountPath: /mnt
          name: managed-disk-volume
      - command:
        - sh
        - -c
        - httpd -p 80 -f -v -h /mnt
        image: busybox
        name: busybox-web
        volumeMounts:
        - mountPath: /mnt
          name: managed-disk-volume
  volumeClaimTemplates:
  - metadata:
      name: managed-disk-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: default

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/managed-disk-statefulset

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/managed-disk-statefulset
policy disallow-default-namespace -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/managed-disk-statefulset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dispatch-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dispatch-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dispatch:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: dispatch
  name: dispatch
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: dispatch

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: display.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to uvasds-services/CronJob/display-this:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: display-this
  namespace: uvasds-services
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "180"
            envFrom:
            - secretRef:
                name: nem2p-pat
            image: ubuntu
            name: display-this
            resources:
              limits:
                cpu: "0.5"
                memory: 512Mi
              requests:
                cpu: "0.5"
                memory: 512Mi
          restartPolicy: Never
      ttlSecondsAfterFinished: 86400
  schedule: 0 7 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource uvasds-services/CronJob/display-this

skipped mutate policy add-safe-to-evict -> resource uvasds-services/CronJob/display-this
policy disallow-latest-tag -> resource uvasds-services/CronJob/display-this failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource uvasds-services/CronJob/display-this failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource uvasds-services/CronJob/display-this failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource uvasds-services/CronJob/display-this failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource uvasds-services/CronJob/display-this failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource uvasds-services/CronJob/display-this failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: disruption-budget.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to exam/PodDisruptionBudget/myapp-disruption-budget:
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: myapp-disruption-budget
  namespace: exam
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: backend

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: disruption-budget1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to exam/PodDisruptionBudget/myapp-disruption-budget:
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: myapp-disruption-budget
  namespace: exam
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: backend

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: distributed-15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/medium-stress:
apiVersion: batch/v1
kind: Job
metadata:
  name: medium-stress
  namespace: default
spec:
  backoffLimit: 4
  completionMode: Indexed
  completions: 15
  parallelism: 15
  template:
    metadata:
      labels:
        job: medium-stress
      name: stress-ng-pod
    spec:
      containers:
      - args:
        - apt-get update && apt-get install -y stress-ng && stress-ng --cpu 1 --cpu-ops
          80000  --metrics-brief
        command:
        - /bin/bash
        - -c
        image: ubuntu:latest
        name: stress-ng-container
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.5"
            memory: 512Mi
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/medium-stress

skipped mutate policy add-safe-to-evict -> resource default/Job/medium-stress
policy disallow-default-namespace -> resource default/Job/medium-stress failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/medium-stress failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/medium-stress failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/medium-stress failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/medium-stress failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Job/medium-stress failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/medium-stress failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: distributed-streaming.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/ServiceAccount/distributed-streaming-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: distributed-streaming-service-account
  namespace: distributed-streaming

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/Role/job-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-manager
  namespace: distributed-streaming
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - get
  - list
  - watch
  - delete
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/RoleBinding/job-manager-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-manager-binding
  namespace: distributed-streaming
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: job-manager
subjects:
- kind: ServiceAccount
  name: distributed-streaming-service-account
  namespace: distributed-streaming

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/Deployment/distributed-streaming:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: distributed-streaming
  namespace: distributed-streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: distributed-streaming
  template:
    metadata:
      labels:
        app: distributed-streaming
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: distributed-streaming-secrets
        image: docker.prayujt.com/distributed-streaming-api
        name: distributed-streaming
        ports:
        - containerPort: 8080
      nodeSelector:
        kubernetes.io/arch: arm64
      serviceAccountName: distributed-streaming-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource distributed-streaming/Deployment/distributed-streaming

skipped mutate policy add-safe-to-evict -> resource distributed-streaming/Deployment/distributed-streaming
policy disallow-latest-tag -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: distributed-streaming_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/Service/distributed-streaming:
apiVersion: v1
kind: Service
metadata:
  name: distributed-streaming
  namespace: distributed-streaming
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: distributed-streaming
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/ServiceAccount/distributed-streaming-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: distributed-streaming-service-account
  namespace: distributed-streaming

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/Role/job-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-manager
  namespace: distributed-streaming
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - get
  - list
  - watch
  - delete
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/RoleBinding/job-manager-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-manager-binding
  namespace: distributed-streaming
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: job-manager
subjects:
- kind: ServiceAccount
  name: distributed-streaming-service-account
  namespace: distributed-streaming

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: distributed-streaming1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/Deployment/distributed-streaming:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: distributed-streaming
  namespace: distributed-streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: distributed-streaming
  template:
    metadata:
      labels:
        app: distributed-streaming
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: distributed-streaming-secrets
        image: docker.prayujt.com/distributed-streaming-api
        name: distributed-streaming
        ports:
        - containerPort: 8080
      serviceAccountName: distributed-streaming-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource distributed-streaming/Deployment/distributed-streaming

skipped mutate policy add-safe-to-evict -> resource distributed-streaming/Deployment/distributed-streaming
policy disallow-latest-tag -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource distributed-streaming/Deployment/distributed-streaming failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: distributed-streaming1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to distributed-streaming/Service/distributed-streaming:
apiVersion: v1
kind: Service
metadata:
  name: distributed-streaming
  namespace: distributed-streaming
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: distributed-streaming
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: division.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/division-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: division-service-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: division-service
  template:
    metadata:
      labels:
        app: division-service
    spec:
      containers:
      - image: gcr.io/ceng489project/division:latest
        name: division-service
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/division-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/division-service-deployment
policy disallow-default-namespace -> resource default/Deployment/division-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/division-service-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/division-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/division-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/division-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/division-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/division-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/division-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/division-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: division-honeypot.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/duplicate-division-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: duplicate-division-service-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: duplicate-division-service
  template:
    metadata:
      labels:
        app: duplicate-division-service
    spec:
      containers:
      - image: <duplicate-division-service-image>
        name: duplicate-division-service
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/duplicate-division-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/duplicate-division-service-deployment
policy disallow-default-namespace -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/duplicate-division-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: django.service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/django:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: django
    tier: frontend
  name: django
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: django
  selector:
    app: django
    tier: frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/django failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: django.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tethys/Deployment/django-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: tethys
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - django-app
            topologyKey: kubernetes.io/hostname
      containers:
      - image: gronka/django:latest
        name: django-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource tethys/Deployment/django-app

skipped mutate policy add-safe-to-evict -> resource tethys/Deployment/django-app
policy disallow-latest-tag -> resource tethys/Deployment/django-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource tethys/Deployment/django-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource tethys/Deployment/django-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource tethys/Deployment/django-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource tethys/Deployment/django-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource tethys/Deployment/django-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource tethys/Deployment/django-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource tethys/Deployment/django-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tethys/Service/python-svc:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-ipv4: 10.208.1.101
  name: python-svc
  namespace: tethys
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: django-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django_datos_configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/django-datos:
apiVersion: v1
data:
  django_email: admin@example.org
  django_user: admin
  mysql_database: django
  mysql_user: django
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: django-datos
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django_secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/django-secret:
apiVersion: v1
data:
  django_password: YWRtaW4=
  mysql_password: ZGphbmdv
  mysql_root_password: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: null
  name: django-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/django:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: django
  name: django
  namespace: default
spec:
  ports:
  - name: app
    port: 8000
    protocol: TCP
  selector:
    app: django
    tier: app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: django
  name: django
  namespace: default
spec:
  selector:
    matchLabels:
      app: django
      tier: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: django
        tier: app
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              key: host
              name: postgres-creds
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: db_name
              name: postgres-creds
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: postgres-creds
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-creds
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: postgres-creds
        - name: ALLOWED_HOSTS
          valueFrom:
            secretKeyRef:
              key: ALLOWED_HOSTS
              name: django-secret
        - name: CORS_TRUSTED_ORIGINS
          valueFrom:
            secretKeyRef:
              key: CORS_TRUSTED_ORIGINS
              name: django-secret
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: DJANGO_SECRET_KEY
              name: django-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: django-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: django-secret
        - name: AWS_STORAGE_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: AWS_STORAGE_BUCKET_NAME
              name: django-secret
        - name: AWS_S3_REGION_NAME
          valueFrom:
            secretKeyRef:
              key: AWS_S3_REGION_NAME
              name: django-secret
        image: djangoweather-django:latest
        name: app
      - image: djangoweather-proxy:latest
        name: proxy
        ports:
        - containerPort: 8000
          name: proxy

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django
policy disallow-default-namespace -> resource default/Deployment/django failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/django failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/django failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: djangoapp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - django-app
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: DATABASE_HOST
          value: sqlservername.database.windows.net
        - name: DATABASE_USER
          value: username
        - name: DATABASE_PASSWORD
          value: password
        - name: DATABASE_NAME
          value: database_name
        image: drisdary/django-app:version-16
        imagePullPolicy: Always
        name: django-app
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django-app
policy disallow-default-namespace -> resource default/Deployment/django-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/django-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: djangoapp_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/python-svc:
apiVersion: v1
kind: Service
metadata:
  name: python-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: django-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: djangoapp_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-service:
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: default
spec:
  externalName: sqlsvr214.database.windows.net
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-app-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to django-app/Deployment/django-app-deploy:
apiVersion: v1
kind: Deployment
metadata:
  name: django-app-deploy
  namespace: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-application
  template:
    metadata:
      labels:
        app: django-application
    spec:
      containers:
        envFrom:
        - configMapRef:
            name: app-cm
        image: ivicazuz/django-kubernetes:1.0
        imagePolicy: Always
        name: django-app-container
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /data/static
          name: staticfiles
      volumes:
      - name: staticfiles
        persistentVolumeClaim:
          claimName: staticfiles-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource django-app/Deployment/django-app-deploy

skipped mutate policy add-safe-to-evict -> resource django-app/Deployment/django-app-deploy
policy drop-all-capabilities -> resource django-app/Deployment/django-app-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource django-app/Deployment/django-app-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource django-app/Deployment/django-app-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource django-app/Deployment/django-app-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource django-app/Deployment/django-app-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource django-app/Deployment/django-app-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: django-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/django-config:
apiVersion: v1
data:
  DJANGO_DB: postgresql://revng:cdWVz5vQpcnkBW4QRaPU31YjEuQhZaC3/uRoxJ2ZbVs@postgres-service:5432/django_hello_world
  DJANGO_DB_PASSWORD: cdWVz5vQpcnkBW4QRaPU31YjEuQhZaC3/uRoxJ2ZbVs
  DJANGO_DB_USER: revng
kind: ConfigMap
metadata:
  name: django-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/django-config:
apiVersion: v1
data:
  ALLOWED_HOSTS: '*'
  BASE_DATOS: django
  DJANGO_SUPERUSER_EMAIL: admin@example.org
  DJANGO_SUPERUSER_PASSWORD: admin
  DJANGO_SUPERUSER_USERNAME: admin
  HOST: bd-mariadb-django
  USUARIO: django
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: django-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-db-migrations.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to django-app/Job/django-db-migrations:
apiVersion: batch/v1
kind: Job
metadata:
  name: django-db-migrations
  namespace: django-app
spec:
  activeDeadLineSeconds: 60
  bacofflimit: 15
  template:
    spec:
      containers:
      - command:
        - python
        - manage.py
        - migrate
        envFrom:
          configMapRef: app-cm
        image: ivicazuz/django-kubernetes:1.0
        imagePulPolicy: Always
        name: migration-container
        ports:
        - containerPort: 8000
      restartPolicy: OnFailure
  ttlSecondsAfterFinished: 100

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource django-app/Job/django-db-migrations

skipped mutate policy add-safe-to-evict -> resource django-app/Job/django-db-migrations
policy drop-all-capabilities -> resource django-app/Job/django-db-migrations failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource django-app/Job/django-db-migrations failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource django-app/Job/django-db-migrations failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource django-app/Job/django-db-migrations failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource django-app/Job/django-db-migrations failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource django-app/Job/django-db-migrations failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: django-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/assignment3-django-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: assignment3-django-deploy
  name: assignment3-django-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: assignment3-django-deploy
  template:
    metadata:
      labels:
        pod: assignment3-django-deploy
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: thisisatestthing.
        - name: MYSQL_DB
          value: GiftcardSiteDB
        - name: MYSQL_HOST
          value: mysql-service
        - name: ALLOWED_HOSTS
          value: '*,'
        image: nyuappsec/assign3:v0
        name: assignment3-django-deploy
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /var/lib/busybox
          name: mysql-volume-mount
        - mountPath: /vol/static
          name: static-data-volume-mount
      volumes:
      - name: mysql-volume-mount
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: static-data-volume-mount
        persistentVolumeClaim:
          claimName: static-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/assignment3-django-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/assignment3-django-deploy
policy disallow-default-namespace -> resource default/Deployment/assignment3-django-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/assignment3-django-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: assignment3-django-deploy
  name: assignment3-django-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: assignment3-django-deploy
  template:
    metadata:
      labels:
        pod: assignment3-django-deploy
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db_password
              name: giftcard-app-secrets
        - name: APP_SECRET
          valueFrom:
            secretKeyRef:
              key: app_secret
              name: giftcard-app-secrets
        - name: MYSQL_DB
          valueFrom:
            secretKeyRef:
              key: db_name
              name: giftcard-app-secrets
        - name: MYSQL_HOST
          value: mysql-service
        - name: ALLOWED_HOSTS
          value: '*,'
        image: nyuappsec/assign3:v0
        name: assignment3-django-deploy
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /var/lib/busybox
          name: mysql-volume-mount
        - mountPath: /vol/static
          name: static-data-volume-mount
      volumes:
      - name: mysql-volume-mount
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: static-data-volume-mount
        persistentVolumeClaim:
          claimName: static-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/assignment3-django-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/assignment3-django-deploy
policy disallow-default-namespace -> resource default/Deployment/assignment3-django-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/assignment3-django-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: django
    tier: frontend
  name: django
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
      tier: frontend
  template:
    metadata:
      labels:
        app: django
        tier: frontend
    spec:
      containers:
      - env:
        - name: USUARIO_BD
          valueFrom:
            configMapKeyRef:
              key: mysql_user
              name: django-datos
        - name: CONTRASENA_BD
          valueFrom:
            secretKeyRef:
              key: mysql_password
              name: django-secret
        - name: HOST_BD
          value: mariadb
        - name: NOMBRE_BD
          valueFrom:
            configMapKeyRef:
              key: mysql_database
              name: django-datos
        - name: DJANGO_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: django_password
              name: django-secret
        - name: DJANGO_SUPERUSER_USERNAME
          valueFrom:
            configMapKeyRef:
              key: django_user
              name: django-datos
        - name: DJANGO_SUPERUSER_EMAIL
          valueFrom:
            configMapKeyRef:
              key: django_email
              name: django-datos
        - name: ALLOWED_HOSTS
          value: '*'
        image: mmarnun/django:v2
        name: contenedor-django
        ports:
        - containerPort: 8000
          name: http-server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django
policy disallow-default-namespace -> resource default/Deployment/django failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/django failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: django
    tier: frontend
  name: django
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
      tier: frontend
  template:
    metadata:
      labels:
        app: django
        tier: frontend
    spec:
      containers:
      - env:
        - name: HOST
          value: mariadb
        - name: BASE_DATOS
          valueFrom:
            configMapKeyRef:
              key: bbdd_name
              name: cm-mariadb
        - name: CONTRA
          valueFrom:
            secretKeyRef:
              key: passwd_user
              name: secret-mariadb
        - name: USUARIO
          valueFrom:
            configMapKeyRef:
              key: bbdd_user
              name: cm-mariadb
        image: fabiiogonzalez8/django:55
        name: django
        ports:
        - containerPort: 6000
          name: django

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django
policy disallow-default-namespace -> resource default/Deployment/django failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/django failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
      - image: aswinvilasp/travel-app:V1.1
        name: django
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django-app
policy disallow-default-namespace -> resource default/Deployment/django-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/django-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: django
    tier: frontend
  name: django
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
      tier: frontend
  template:
    metadata:
      labels:
        app: django
        tier: frontend
    spec:
      containers:
      - env:
        - name: ALLOWED_HOSTS
          value: '*'
        - name: HOST
          value: mariadb
        - name: DB_DJANGO
          valueFrom:
            configMapKeyRef:
              key: BASE_DATOS
              name: django-config
        - name: PWD_DJANGO
          valueFrom:
            secretKeyRef:
              key: CONTRA
              name: django-secret
        - name: USER_DJANGO
          valueFrom:
            configMapKeyRef:
              key: USUARIO
              name: django-config
        - name: DJANGO_SUPERUSER_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SUPERUSER_PASSWORD
              name: django-config
        - name: DJANGO_SUPERUSER_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SUPERUSER_USERNAME
              name: django-config
        - name: DJANGO_SUPERUSER_EMAIL
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SUPERUSER_EMAIL
              name: django-config
        image: andresdocker77/pruebadjango:v1
        name: django
        ports:
        - containerPort: 8006
          name: django

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django
policy disallow-default-namespace -> resource default/Deployment/django failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/django failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-hello-world-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/django-hello-world:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-hello-world
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-hello-world
  template:
    metadata:
      labels:
        app: django-hello-world
    spec:
      containers:
      - env:
        - name: DJANGO_DB
          valueFrom:
            configMapKeyRef:
              key: DJANGO_DB
              name: django-config
        - name: DJANGO_SECRET_KEY
          value: M+vD8Y9mqQCpvqnp1jTySf7+5DKVAG+DK2zRDG4i31Q=
        - name: DJANGO_ALLOWED_HOSTS
          value: hello-world.example.org
        - name: DJANGO_DB_USER
          valueFrom:
            configMapKeyRef:
              key: DJANGO_DB_USER
              name: django-config
        - name: DJANGO_DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DJANGO_DB_PASSWORD
              name: django-config
        image: registry.rev.ng/jackv/django-hello-world:master
        name: django-hello-world

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/django-hello-world

skipped mutate policy add-safe-to-evict -> resource default/Deployment/django-hello-world
policy disallow-default-namespace -> resource default/Deployment/django-hello-world failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/django-hello-world failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/django-hello-world failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/django-hello-world failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/django-hello-world failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/django-hello-world failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/django-hello-world failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/django-hello-world failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: django-hello-world-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/django-hello-world-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    role: ingress
  name: django-hello-world-ingress
  namespace: default
spec:
  rules:
  - host: hello-world.example.org
    http:
      paths:
      - backend:
          service:
            name: django-hello-world-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-hello-world-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/django-hello-world-service:
apiVersion: v1
kind: Service
metadata:
  name: django-hello-world-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: django-hello-world

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/django:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django
  namespace: default
spec:
  rules:
  - host: www.alex-django.org
    http:
      paths:
      - backend:
          service:
            name: django
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/django:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django
  namespace: default
spec:
  rules:
  - host: www.fabiopractica.org
    http:
      paths:
      - backend:
          service:
            name: django
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/django-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-ingress
  namespace: default
spec:
  rules:
  - host: aswin.com
    http:
      paths:
      - backend:
          service:
            name: django-app
            port:
              number: 8000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/django:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django
  namespace: default
spec:
  rules:
  - host: www.djangodeandres.es
    http:
      paths:
      - backend:
          service:
            name: django
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-django:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-django
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/django-secret:
apiVersion: v1
data:
  ALLOWED_HOSTS: foo
  AWS_ACCESS_KEY_ID: foo
  AWS_S3_REGION_NAME: foo
  AWS_SECRET_ACCESS_KEY: foo
  AWS_STORAGE_BUCKET_NAME: foo
  CORS_TRUSTED_ORIGINS: foo
  DJANGO_SECRET_KEY: foo
kind: Secret
metadata:
  name: django-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/django-secret:
apiVersion: v1
data:
  CONTRA: ZGphbmdv
  MARIADB_PASSWORD: ZGphbmdv
  MARIADB_ROOT_PASSWORD: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: null
  name: django-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/assignment3-django-service:
apiVersion: v1
kind: Service
metadata:
  name: assignment3-django-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    pod: assignment3-django-deploy
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/assignment3-django-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: django-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/assignment3-django-service:
apiVersion: v1
kind: Service
metadata:
  name: assignment3-django-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    pod: assignment3-django-deploy
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/assignment3-django-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: django-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/django-app:
apiVersion: v1
kind: Service
metadata:
  name: django-app
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: django
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: django-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/django:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: django
    tier: frontend
  name: django
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8006
  selector:
    app: django
    tier: frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/django failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: django-staticfiles.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to django-app/Job/django-staticfiles:
apiVersion: batch/v1
kind: Job
metadata:
  name: django-staticfiles
  namespace: django-app
spec:
  activeDeadLineSeconds: 60
  bacofflimit: 3
  template:
    spec:
      containers:
      - command:
        - python
        - manage.py
        - collectstatic
        - --noinput
        envFrom:
          configMapRef: app-cm
        image: ivicazuz/django-kubernetes:1.0
        imagePulPolicy: Always
        name: staticfiles-container
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /data/static
          name: staticfiles
      restartPolicy: OnFailure
      volumes:
      - name: staticfiles
        persistentVolumeClaim: staticfiles-pvc
  ttlSecondsAfterFinished: 100

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource django-app/Job/django-staticfiles

skipped mutate policy add-safe-to-evict -> resource django-app/Job/django-staticfiles
policy drop-all-capabilities -> resource django-app/Job/django-staticfiles failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource django-app/Job/django-staticfiles failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource django-app/Job/django-staticfiles failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource django-app/Job/django-staticfiles failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource django-app/Job/django-staticfiles failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource django-app/Job/django-staticfiles failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dkron-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dkron:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dkron
  namespace: default
spec:
  selector:
    matchLabels:
      app: dkron
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dkron
    spec:
      containers:
      - command:
        - /usr/local/bin/dkron
        - agent
        - --server
        - --bootstrap-expect=1
        image: docker.io/dkron/dkron:3.2.7
        name: dkron
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /curl
          name: dkroncurl
        - mountPath: /bisa
          name: dirbuatcurl
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      volumes:
      - emptyDir: {}
        name: dirbuatcurl
      - configMap:
          name: dkroncurl
        name: dkroncurl

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dkron
policy disallow-default-namespace -> resource default/Deployment/dkron failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dkron failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dkron failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dkron failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dkron failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dkron failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dkron failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dkron failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: dkron-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dkron-svc:
apiVersion: v1
kind: Service
metadata:
  name: dkron-svc
  namespace: default
spec:
  ports:
  - nodePort: 31022
    port: 8080
    targetPort: 8080
  selector:
    app: dkron
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/dkron-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dkron-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dkron:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dkron
  namespace: default
spec:
  selector:
    matchLabels:
      app: dkron
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: dkron
    spec:
      containers:
      - command:
        - /usr/local/bin/dkron
        - agent
        - --server
        - --bootstrap-expect=1
        image: docker.io/dkron/dkron:3.2.7
        limits:
          cpu: 1500m
          memory: 1500Mi
        name: dkron
        ports:
        - containerPort: 8080
        resources: null
        volumeMounts:
        - mountPath: /curl
          name: dkroncurl
        - mountPath: /bisa
          name: dirbuatcurl
        - mountPath: /etc/localtime
          name: tz-config
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      volumes:
      - emptyDir: {}
        name: dirbuatcurl
      - configMap:
          name: dkroncurl
        name: dkroncurl
      - hostPath:
          path: /etc/localtime
          type: File
        name: tz-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dkron
policy disallow-default-namespace -> resource default/Deployment/dkron failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dkron failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dkron failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dkron failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dkron failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dkron failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dkron failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dkron failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: dkron-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dkron-svc:
apiVersion: v1
kind: Service
metadata:
  name: dkron-svc
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: dkron

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dl_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-dl-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-dl-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-dl-app
  template:
    metadata:
      labels:
        app: my-dl-app
    spec:
      containers:
      - image: gcr.io/my-project-27779-401121/my-dl-app:latest
        name: my-dl-app
        volumeMounts:
        - mountPath: /app/new_data
          name: model-data-volume
      volumes:
      - name: model-data-volume
        persistentVolumeClaim:
          claimName: new-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-dl-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-dl-app
policy disallow-default-namespace -> resource default/Deployment/my-dl-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/my-dl-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-dl-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-dl-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dl_deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-dl-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-dl-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-dl-app
  template:
    metadata:
      labels:
        app: my-dl-app
    spec:
      containers:
      - image: gcr.io/my-project-27779-401121/my-dl-app:latest
        name: my-dl-app
        volumeMounts:
        - mountPath: /app/new_data
          name: model-data-volume
      volumes:
      - name: model-data-volume
        persistentVolumeClaim:
          claimName: new-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-dl-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-dl-app
policy disallow-default-namespace -> resource default/Deployment/my-dl-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/my-dl-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-dl-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-dl-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-dl-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dmn.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/dummy-ds:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dummy-ds
  namespace: default
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app: ds
  template:
    metadata:
      labels:
        app: demon-pod
        version: v1.1
    spec:
      containers:
      - image: nginx
        name: demon-c

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/dummy-ds

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/dummy-ds
policy disallow-default-namespace -> resource default/DaemonSet/dummy-ds failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/dummy-ds failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dns_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/default-subdomain:
apiVersion: v1
kind: Service
metadata:
  name: default-subdomain
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: foo
    port: 1234
    targetPort: 1234
  selector:
    name: busybox

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: DNS_1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/busybox1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: busybox
  name: busybox1
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox:1.28
    name: busybox
  hostname: busybox-1
  subdomain: default-subdomain

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox1

skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox1
policy disallow-default-namespace -> resource default/Pod/busybox1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/busybox1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/busybox1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/busybox1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/busybox1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/busybox1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/busybox1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/busybox1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: DNS_1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/busybox2:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: busybox
  name: busybox2
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox:1.28
    name: busybox
  hostname: busybox-2
  subdomain: default-subdomain

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox2

skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox2
policy disallow-default-namespace -> resource default/Pod/busybox2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/busybox2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/busybox2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/busybox2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/busybox2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/busybox2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/busybox2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/busybox2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/busybox:
apiVersion: v1
kind: Pod
metadata:
  name: busybox
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: busybox
  dnsPolicy: ClusterFirstWithHostNet
  hostNetwork: true
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox

skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox
policy disallow-default-namespace -> resource default/Pod/busybox failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/busybox failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/busybox failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/busybox failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/busybox failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/busybox failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/busybox failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/busybox failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns_pod_svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/busybox1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: busybox
  name: busybox1
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox:1.28
    name: busybox
  hostname: busybox-1
  subdomain: busybox-subdomain

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox1

skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox1
policy disallow-default-namespace -> resource default/Pod/busybox1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/busybox1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/busybox1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/busybox1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/busybox1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/busybox1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/busybox1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/busybox1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/busybox:
apiVersion: v1
kind: Service
metadata:
  name: busybox
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: busybox

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/busybox1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: busybox
  name: busybox1
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - sleep 1h
    image: busybox
    name: busybox1
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
  hostname: busybox-1
  subdomain: my-subdomain

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox1

skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox1
policy disallow-default-namespace -> resource default/Pod/busybox1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/busybox1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/busybox1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/busybox1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/busybox1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/busybox1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/busybox1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/busybox1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/busybox1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dns15_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/busybox2:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: busybox
  name: busybox2
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - sleep 1h
    image: busybox
    name: busybox2
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
  hostname: busybox-2
  subdomain: my-subdomain

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox2

skipped mutate policy add-safe-to-evict -> resource default/Pod/busybox2
policy disallow-default-namespace -> resource default/Pod/busybox2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/busybox2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/busybox2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/busybox2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/busybox2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/busybox2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/busybox2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/busybox2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/busybox2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dns18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:5353 {
      forward . 8.8.8.8:53
      log
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: coredns
  template:
    metadata:
      labels:
        app: coredns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.10.0
        name: coredns
        ports:
        - containerPort: 5353
          name: dns
          protocol: UDP
        - containerPort: 5353
          name: dns-tcp
          protocol: TCP
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coredns
policy disallow-default-namespace -> resource default/Deployment/coredns failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coredns failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coredns failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/coredns failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dns18_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coredns:
apiVersion: v1
kind: Service
metadata:
  name: coredns
  namespace: default
spec:
  ports:
  - name: dns
    port: 5353
    protocol: UDP
  - name: dns-tcp
    port: 5353
    protocol: TCP
  selector:
    app: coredns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
      forward . 8.8.8.8:53
      log
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: coredns
  template:
    metadata:
      labels:
        app: coredns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.10.0
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coredns
policy disallow-default-namespace -> resource default/Deployment/coredns failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coredns failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/coredns failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coredns:
apiVersion: v1
kind: Service
metadata:
  name: coredns
  namespace: default
spec:
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    app: coredns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns19_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coredns-headless:
apiVersion: v1
kind: Service
metadata:
  name: coredns-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    app: coredns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-rc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: k8s.gcr.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: registry.k8s.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-rc9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/dns-backend:
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: dns-backend
  name: dns-backend
  namespace: default
spec:
  replicas: 1
  selector:
    name: dns-backend
  template:
    metadata:
      labels:
        name: dns-backend
    spec:
      containers:
      - image: k8s.gcr.io/example-dns-backend:v1
        name: dns-backend
        ports:
        - containerPort: 8000
          name: backend-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/dns-backend
policy drop-all-capabilities -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/dns-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/dns-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/dns-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: dns-backend-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-backend-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dns-backend:
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    name: dns-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-checker.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox:latest
    imagePullPolicy: IfNotPresent
    name: dnsutils
    resources: {}
    stdin: true
    tty: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dnsutils failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dns-checker1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/custom-hosts:
apiVersion: v1
data:
  hosts: |
    149.154.167.220 api.telegram.org
kind: ConfigMap
metadata:
  name: custom-hosts
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-checker1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dns-checker:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dns-checker
  name: dns-checker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dns-checker
  template:
    metadata:
      labels:
        app: dns-checker
    spec:
      containers:
      - env:
        - name: TELEGRAM_BOT_TOKEN
          value: _______________________________
        - name: TELEGRAM_CHAT_ID
          value: _______________________________
        - name: DNS_NAMES
          value: kubernetes.default.svc.cluster.local,google.com,hubble-ui.kube-system.svc.cluster.local
        - name: CHECK_INTERVAL
          value: "10"
        - name: DNS_TIMEOUT
          value: "2"
        image: vcr.vngcloud.vn/60108-annd2-ingress/dns-check:0.0.0
        imagePullPolicy: Always
        name: dns-checker
        volumeMounts:
        - mountPath: /etc/hosts
          name: custom-hosts
          subPath: hosts
      volumes:
      - configMap:
          name: custom-hosts
        name: custom-hosts

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dns-checker

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dns-checker
policy disallow-default-namespace -> resource default/Deployment/dns-checker failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dns-checker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dns-checker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dns-checker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dns-checker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dns-checker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dns-checker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dns-checker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsclass_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsclass-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubedns-shepherd
    app.kubernetes.io/instance: dnsclass-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kubedns-shepherd
  name: dnsclass-editor-role
  namespace: default
rules:
- apiGroups:
  - config.kubedns-shepherd.io
  resources:
  - dnsclasses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.kubedns-shepherd.io
  resources:
  - dnsclasses/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsclass_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsclass-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kubedns-shepherd
    app.kubernetes.io/instance: dnsclass-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kubedns-shepherd
  name: dnsclass-viewer-role
  namespace: default
rules:
- apiGroups:
  - config.kubedns-shepherd.io
  resources:
  - dnsclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.kubedns-shepherd.io
  resources:
  - dnsclasses/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-config-dns-config-pod:
apiVersion: v1
kind: Pod
metadata:
  name: dns-config-dns-config-pod
  namespace: default
spec:
  containers:
  - image: nginx
    name: test
  dnsConfig:
    nameservers:
    - 1.2.3.4
    options:
    - name: ndots
      value: "2"
    - name: edns0
    searches:
    - ns1.svc.cluster-domain.example
    - my.dns.search.suffix
  dnsPolicy: None

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-config-dns-config-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-config-dns-config-pod
policy disallow-default-namespace -> resource default/Pod/dns-config-dns-config-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dns-config-dns-config-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dns-config-dns-config-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-config-dns-config-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-config-dns-config-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dns-config-dns-config-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-config-dns-config-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-config-dns-config-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-config-dns-config-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dns-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/dns-server-config:
apiVersion: v1
data:
  Corefile: |
    .:5353 {
        errors
        health {
            lameduck 5s
        }
        ready
        k8s_dns_chaos cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
            grpcport 9288
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: chaos-dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: dns-server-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsconnector_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsconnector-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: coredns-manager-operator
    app.kubernetes.io/instance: dnsconnector-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: coredns-manager-operator
  name: dnsconnector-editor-role
  namespace: default
rules:
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsconnectors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsconnectors/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsconnector_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsconnector-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: coredns-manager-operator
    app.kubernetes.io/instance: dnsconnector-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: coredns-manager-operator
  name: dnsconnector-viewer-role
  namespace: default
rules:
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsconnectors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsconnectors/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-controller.addons.k8s.io-k8s-1.12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/dns-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: dns-controller.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: dns-controller.addons.k8s.io
    k8s-app: dns-controller
    version: v1.30.0-alpha.1
  name: dns-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: dns-controller
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-addon: dns-controller.addons.k8s.io
        k8s-app: dns-controller
        kops.k8s.io/managed-by: kops
        version: v1.30.0-alpha.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      containers:
      - args:
        - --watch-ingress=false
        - --dns=aws-route53
        - --zone=*/Z1AFAKE1ZON3YO
        - --internal-ipv4
        - --zone=*/*
        - -v=2
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: 127.0.0.1
        - name: AWS_ROLE_ARN
          value: arn:aws-test:iam::123456789012:role/dns-controller.kube-system.sa.minimal.example.com
        - name: AWS_WEB_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/amazonaws.com/token
        image: registry.k8s.io/kops/dns-controller:1.30.0-alpha.1
        name: dns-controller
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/amazonaws.com/
          name: token-amazonaws-com
          readOnly: true
      dnsPolicy: Default
      hostNetwork: true
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 10001
      serviceAccount: dns-controller
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        operator: Exists
      - key: node.kubernetes.io/not-ready
        operator: Exists
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
      - key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: token-amazonaws-com
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: amazonaws.com
              expirationSeconds: 86400
              path: token

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/dns-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/dns-controller
policy drop-all-capabilities -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/Deployment/dns-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dns-controller.addons.k8s.io-k8s-1.12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/dns-controller:
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: dns-controller.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: dns-controller.addons.k8s.io
  name: dns-controller
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-controller.addons.k8s.io-k8s-1.12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kops:dns-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: dns-controller.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: dns-controller.addons.k8s.io
  name: kops:dns-controller
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - ingress
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-controller.addons.k8s.io-k8s-1.12_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kops:dns-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: dns-controller.addons.k8s.io
    app.kubernetes.io/managed-by: kops
    k8s-addon: dns-controller.addons.k8s.io
  name: kops:dns-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kops:dns-controller
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:kube-system:dns-controller

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: DNS-custom.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-example:
apiVersion: v1
kind: Pod
metadata:
  name: dns-example
  namespace: default
spec:
  containers:
  - image: nginx
    name: test
  dnsConfig:
    nameservers:
    - 1.2.3.4
    options:
    - name: ndots
      value: "2"
    - name: edns0
    searches:
    - ns1.svc.cluster-domain.example
    - my.dns.search.suffix
  dnsPolicy: None

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-example

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-example
policy disallow-default-namespace -> resource default/Pod/dns-example failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dns-example failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dns-example failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-example failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-example failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dns-example failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-example failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-example failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-example failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dns-debug.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-dns-debug:
apiVersion: v1
kind: Pod
metadata:
  name: pod-dns-debug
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
    name: dnsutils

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-dns-debug

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-dns-debug
policy disallow-default-namespace -> resource default/Pod/pod-dns-debug failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-dns-debug failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-dns-debug failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-dns-debug failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-dns-debug failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-dns-debug failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-dns-debug failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-dns-debug failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-debug-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-debug-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/chaos-dns-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: chaos-dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: chaos-dns-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: chaos-dns-server
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: chaos-mesh
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: chaos-dns-server
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: chaos-mesh-0.0.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - chaos-dns-server
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/chaos-dns/Corefile
        image: ghcr.io/chaos-mesh/chaos-coredns:v0.2.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: chaos-dns-server
        ports:
        - containerPort: 5353
          name: dns
          protocol: UDP
        - containerPort: 5353
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        - containerPort: 9288
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/chaos-dns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: null
      serviceAccountName: chaos-dns-server
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: dns-server-config
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/chaos-dns-server

skipped mutate policy add-safe-to-evict -> resource default/Deployment/chaos-dns-server
policy disallow-default-namespace -> resource default/Deployment/chaos-dns-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/chaos-dns-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/chaos-dns-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy restrict-image-registries -> resource default/Deployment/chaos-dns-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: dns-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Deployment/chaos-dns-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: chaos-dns-server
  name: chaos-dns-server
  namespace: dynamic_parameters
spec:
  replicas: dynamic_parameters
  selector:
    matchLabels:
      app.kubernetes.io/component: chaos-dns-server
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: chaos-dns-server
    spec:
      affinity: null
      containers:
      - args:
        - -conf
        - /etc/chaos-dns/Corefile
        image: dynamic_parameters
        imagePullPolicy: dynamic_parameters
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: chaos-dns-server
        ports:
        - containerPort: 5353
          name: dns
          protocol: UDP
        - containerPort: 5353
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        - containerPort: dynamic_parameters
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources: null
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/chaos-dns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      imagePullSecrets: dynamic_parameters
      nodeSelector: null
      priorityClassName: dynamic_parameters
      serviceAccountName: dynamic_parameters
      tolerations: null
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: dns-server-config
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/chaos-dns-server

skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/chaos-dns-server
policy disallow-latest-tag -> resource dynamic_parameters/Deployment/chaos-dns-server failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource dynamic_parameters/Deployment/chaos-dns-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dynamic_parameters/Deployment/chaos-dns-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dynamic_parameters/Deployment/chaos-dns-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource dynamic_parameters/Deployment/chaos-dns-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: k8s.gcr.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: registry.k8s.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-frontend-pod9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: dns-frontend
  name: dns-frontend
  namespace: default
spec:
  containers:
  - command:
    - python
    - client.py
    - http://dns-backend.development.svc.cluster.local:8000
    image: k8s.gcr.io/example-dns-frontend:v1
    imagePullPolicy: Always
    name: dns-frontend
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-frontend
policy disallow-default-namespace -> resource default/Pod/dns-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dns-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsimple-issuer-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/flow-schema-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flow-schema-reader
  namespace: default
rules:
- apiGroups:
  - flowcontrol.apiserver.k8s.io
  resources:
  - flowschemas
  - prioritylevelconfigurations
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsimple-issuer-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/grant-flow-schema-permission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grant-flow-schema-permission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flow-schema-reader
subjects:
- kind: ServiceAccount
  name: dnsimple-issuer-cert-manager-webhook-dnsimple
  namespace: cert-manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsimple-webhook-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/RoleBinding/webhook-dnsimple:webhook-authentication-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: cert-manager-webhook-dnsimple
  name: webhook-dnsimple:webhook-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: webhook-dnsimple
  namespace: cert-manager

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: mo.ija.kro.kr
    http:
      paths:
      - backend:
          service:
            name: user-service
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: chat-service
            port:
              number: 80
        path: /message/
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsmax.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dnsmax:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dnsmax
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dnsmax
  template:
    metadata:
      labels:
        app: dnsmax
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
        imagePullPolicy: IfNotPresent
        name: dnsutils
      dnsConfig:
        nameservers:
        - 10.43.68.254
        searches:
        - intranet.local
      dnsPolicy: None
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dnsmax

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dnsmax
policy disallow-default-namespace -> resource default/Deployment/dnsmax failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dnsmax failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dnsmax failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dnsmax failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dnsmax failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dnsmax failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dnsmax failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dnsmax failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsmax_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dnsmax:
apiVersion: v1
kind: Service
metadata:
  name: dnsmax
  namespace: default
spec:
  ports:
  - port: 8089
    protocol: TCP
  selector:
    app: dnsmax

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-pod:
apiVersion: v1
kind: Pod
metadata:
  name: dns-pod
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: busybox
  dnsConfig:
    nameservers:
    - 172.16.1.103
    - 10.96.0.10
    - 8.8.8.8
    searches:
    - 4labs.example
    - default.svc.cluster.local
  dnsPolicy: None

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-pod
policy disallow-default-namespace -> resource default/Pod/dns-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dns-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dns-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dns-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/chaos-dns-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: chaos-dns-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/my-release-chaos-dns-server-target-namespace:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: my-release-chaos-dns-server-target-namespace
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - chaos-mesh.org
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/my-release-chaos-dns-server-cluster-level:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: my-release-chaos-dns-server-cluster-level
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/my-release-chaos-dns-server-cluster-level:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: my-release-chaos-dns-server-cluster-level
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-chaos-dns-server-cluster-level
subjects:
- kind: ServiceAccount
  name: chaos-dns-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/my-release-chaos-dns-server-target-namespace:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: my-release-chaos-dns-server-target-namespace
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-chaos-dns-server-target-namespace
subjects:
- kind: ServiceAccount
  name: chaos-dns-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/my-release-chaos-dns-server-control-plane:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: my-release-chaos-dns-server-control-plane
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/my-release-chaos-dns-server-control-plane:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: my-release-chaos-dns-server-control-plane
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-chaos-dns-server-control-plane
subjects:
- kind: ServiceAccount
  name: chaos-dns-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/ServiceAccount/dynamic_parameters:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-chaos-dns-server-target-namespace:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters-chaos-dns-server-target-namespace
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - chaos-mesh.org
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-chaos-dns-server-cluster-level:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters-chaos-dns-server-cluster-level
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Role/dynamic_parameters-chaos-dns-server-control-plane:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters-chaos-dns-server-control-plane
  namespace: dynamic_parameters
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/dynamic_parameters-chaos-dns-server-cluster-level:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters-chaos-dns-server-cluster-level
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dynamic_parameters-chaos-dns-server-cluster-level
subjects:
- kind: ServiceAccount
  name: dynamic_parameters
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/RoleBinding/dynamic_parameters-chaos-dns-server-control-plane:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters-chaos-dns-server-control-plane
  namespace: dynamic_parameters
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dynamic_parameters-chaos-dns-server-control-plane
subjects:
- kind: ServiceAccount
  name: dynamic_parameters
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-rbac1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/RoleBinding/dynamic_parameters-chaos-dns-server-target-namespace:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dns-server
  name: dynamic_parameters-chaos-dns-server-target-namespace
  namespace: dynamic_parameters
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dynamic_parameters-chaos-dns-server-target-namespace
subjects:
- kind: ServiceAccount
  name: dynamic_parameters
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsrecord_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsrecord-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: coredns-manager-operator
    app.kubernetes.io/instance: dnsrecord-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: coredns-manager-operator
  name: dnsrecord-editor-role
  namespace: default
rules:
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsrecords
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsrecords/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsrecord_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsrecord-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: coredns-manager-operator
    app.kubernetes.io/instance: dnsrecord-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: coredns-manager-operator
  name: dnsrecord-viewer-role
  namespace: default
rules:
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsrecords
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnsrecords/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsresolver_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsresolver-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: dns-resolution-operator
    app.kubernetes.io/instance: dnsresolver-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: dns-resolution-operator
  name: dnsresolver-editor-role
  namespace: default
rules:
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - dnsresolvers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - dnsresolvers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsresolver_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnsresolver-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: dns-resolution-operator
    app.kubernetes.io/instance: dnsresolver-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: dns-resolution-operator
  name: dnsresolver-viewer-role
  namespace: default
rules:
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - dnsresolvers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - dnsresolvers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/chaos-mesh-dns-server:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: chaos-mesh-0.0.0
  name: chaos-mesh-dns-server
  namespace: default
spec:
  ports:
  - name: dns
    port: 53
    protocol: UDP
    targetPort: 5353
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: 5353
  - name: metrics
    port: 9153
    protocol: TCP
  - name: grpc
    port: 9288
    protocol: TCP
  selector:
    app.kubernetes.io/component: chaos-dns-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: chaos-mesh

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dns-sw-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/mediabot:
apiVersion: v1
kind: Pod
metadata:
  labels:
    class: mediabot
    org: empire
  name: mediabot
  namespace: default
spec:
  containers:
  - image: quay.io/cilium/json-mock:v1.3.8@sha256:5aad04835eda9025fe4561ad31be77fd55309af8158ca8663a72f6abb78c2603
    name: mediabot

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/mediabot

skipped mutate policy add-safe-to-evict -> resource default/Pod/mediabot
policy disallow-default-namespace -> resource default/Pod/mediabot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/mediabot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/mediabot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/mediabot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/mediabot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/mediabot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/mediabot failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/mediabot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-test.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dns-test:
apiVersion: v1
kind: Pod
metadata:
  name: dns-test
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: busybox
    name: dns-test
    resources:
      limits:
        cpu: 500m
        ephemeral-storage: 1Gi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 1Gi
        memory: 2Gi
  tolerations:
  - effect: NoSchedule
    key: kubernetes.io/arch
    operator: Equal
    value: amd64
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-test

skipped mutate policy add-safe-to-evict -> resource default/Pod/dns-test
policy disallow-default-namespace -> resource default/Pod/dns-test failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dns-test failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dns-test failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dns-test failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dns-test failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/dns-test failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dns-test failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dns-test failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnstools.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnstools:
apiVersion: v1
kind: Pod
metadata:
  name: dnstools
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: infoblox/dnstools:latest
    imagePullPolicy: IfNotPresent
    name: dnstools
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnstools

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnstools
policy disallow-default-namespace -> resource default/Pod/dnstools failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dnstools failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dnstools failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnstools failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnstools failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnstools failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnstools failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnstools failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnstools failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dnstools1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnstools:
apiVersion: v1
kind: Pod
metadata:
  name: dnstools
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: infoblox/dnstools:latest
    imagePullPolicy: IfNotPresent
    name: dnstools
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnstools

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnstools
policy disallow-default-namespace -> resource default/Pod/dnstools failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dnstools failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dnstools failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnstools failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnstools failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnstools failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnstools failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnstools failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnstools failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dnsutilis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: mydlqclub/dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  nodeSelector:
    kubernetes.io/hostname: node1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dns-utils.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dnsutils:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: dnsutils
  name: dnsutils
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dnsutils:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dnsutils
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dnsutils:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dnsutils
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dnsutils:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dnsutils
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dnsutils:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dnsutils
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnsutils3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dnsutils/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: dnsutils
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: 192.168.13.206:5000/dnsutils:1.0.0
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dnsutils/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource dnsutils/Pod/dnsutils
policy drop-all-capabilities -> resource dnsutils/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dnsutils/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dnsutils/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource dnsutils/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource dnsutils/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dnsutils/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource dnsutils/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-ns/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: k8s-ns
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: ubuntu:22.04
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource k8s-ns/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource k8s-ns/Pod/dnsutils
policy drop-all-capabilities -> resource k8s-ns/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource k8s-ns/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource k8s-ns/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-ns/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: dnsutils
  name: dnsutils
  namespace: k8s-ns
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: ubuntu:22.04
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always
  setHostnameAsFQDN: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource k8s-ns/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource k8s-ns/Pod/dnsutils
policy drop-all-capabilities -> resource k8s-ns/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource k8s-ns/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource k8s-ns/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource k8s-ns/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "3600"
    image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: dnsutils
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: ubuntu:22.04
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always
  setHostnameAsFQDN: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: tutum/dnsutils
    name: dnsutils

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/dnsutils failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dnsutils9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/dnsutils:
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/e2e-test-images/agnhost:2.39
    imagePullPolicy: IfNotPresent
    name: dnsutils
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils

skipped mutate policy add-safe-to-evict -> resource default/Pod/dnsutils
policy disallow-default-namespace -> resource default/Pod/dnsutils failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/dnsutils failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/dnsutils failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/dnsutils failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/dnsutils failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/dnsutils failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/dnsutils failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/dnsutils failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dnszone_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnszone-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: coredns-manager-operator
    app.kubernetes.io/instance: dnszone-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: coredns-manager-operator
  name: dnszone-editor-role
  namespace: default
rules:
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnszones
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnszones/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dnszone_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dnszone-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: coredns-manager-operator
    app.kubernetes.io/instance: dnszone-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: coredns-manager-operator
  name: dnszone-viewer-role
  namespace: default
rules:
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnszones
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monkale.monkale.io
  resources:
  - dnszones/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: do.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: do-alb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/pokemon-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pokemon-ingress
  namespace: default
spec:
  rules:
  - host: game2048.poke-itcamp.xyz
    http:
      paths:
      - backend:
          service:
            name: game2048-svc
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker_config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/dockerd-config:
apiVersion: v1
data:
  daemon.json: |
    {
      "ipv6": true,
      "fixed-cidr-v6": "2001:db8:1::/64"
    }
kind: ConfigMap
metadata:
  name: dockerd-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker_config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/dockerd-config:
apiVersion: v1
data:
  daemon.json: |
    {
      "ipv6": true,
      "fixed-cidr-v6": "2001:db8:1::/64"
    }
kind: ConfigMap
metadata:
  name: dockerd-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker_secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/regcred:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJkb2NrZXIucGtnLmdpdGh1Yi5jb20iOiB7CgkJCSJhdXRoIjogIlZWTkZVazVCVFVVNloyaDFYMFkzU0VVeFYwSkJORFZMYjNWMWJtNVRTekZTYUVsUGQxZGpiV2RaWWpFMmF6aFJZUT09IgoJCX0sCgkJImdoY3IuaW8iOiB7CgkJCSJhdXRoIjogIlFXaHRaV1F0U0c5a2FHOWtPbWRvZFY5R04waEZNVmRDUVRRMVMyOTFkVzV1VTBzeFVtaEpUM2RYWTIxbldXSXhObXM0VVdFPSIKCQl9LAoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogIllXaHRaV1JvYjJSb2IyUXhPamM1ZGpnOUx6azFNaTFUWHlZcFZBPT0iCgkJfQoJfSwKCSJIdHRwSGVhZGVycyI6IHsKCQkiWC1NZXRhLVNvdXJjZS1DbGllbnQiOiAiZ2l0aHViL2NvZGVzcGFjZXMiCgl9Cn0=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: app
    meta.helm.sh/release-namespace: default
  name: regcred
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-tools/Pod/dind-pod:
apiVersion: v1
kind: Pod
metadata:
  name: dind-pod
  namespace: devops-tools
spec:
  containers:
  - image: docker:stable-dind
    name: dind-container
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-socket
  volumes:
  - name: docker-socket
    persistentVolumeClaim:
      claimName: jenkins-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource devops-tools/Pod/dind-pod

skipped mutate policy add-safe-to-evict -> resource devops-tools/Pod/dind-pod
policy drop-all-capabilities -> resource devops-tools/Pod/dind-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource devops-tools/Pod/dind-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource devops-tools/Pod/dind-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource devops-tools/Pod/dind-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource devops-tools/Pod/dind-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource devops-tools/Pod/dind-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource devops-tools/Pod/dind-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: docker9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Deployment/registry:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
        name: registry
    spec:
      containers:
      - image: registry:2
        name: registry
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /var/lib/registry
          name: volv
          subPath: registry
      volumes:
      - name: volv
        persistentVolumeClaim:
          claimName: longhorn-docker-registry-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/registry

skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/registry
policy drop-all-capabilities -> resource docker-registry/Deployment/registry failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Deployment/registry failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Deployment/registry failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource docker-registry/Deployment/registry failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource docker-registry/Deployment/registry failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Deployment/registry failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Deployment/registry failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dockerbuild_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dockerbuild-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dockerbuild-editor-role
  namespace: default
rules:
- apiGroups:
  - build.contrib.flux.io
  resources:
  - dockerbuilds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.contrib.flux.io
  resources:
  - dockerbuilds/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerbuild_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dockerbuild-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dockerbuild-viewer-role
  namespace: default
rules:
- apiGroups:
  - build.contrib.flux.io
  resources:
  - dockerbuilds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.contrib.flux.io
  resources:
  - dockerbuilds/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockercfg-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/secret-dockercfg:
apiVersion: v1
data:
  .dockercfg: "eyJhdXRocyI6eyJodHRwczovL2V4YW1wbGUvdjEvIjp7ImF1dGgiOiJvcGVuc2VzYW1lIn19fQo=
    \   \n"
kind: Secret
metadata:
  name: secret-dockercfg
  namespace: default
type: kubernetes.io/dockercfg

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockercfg-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/secret-dockercfg:
apiVersion: v1
data:
  .dockercfg: "eyJhdXRocyI6eyJodHRwczovL2V4YW1wbGUvdjEvIjp7ImF1dGgiOiJvcGVuc2VzYW1lIn19fQo=
    \   \n"
kind: Secret
metadata:
  name: secret-dockercfg
  namespace: default
type: kubernetes.io/dockercfg

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockercfg-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/secret-dockercfg:
apiVersion: v1
data:
  .dockercfg: |
    eyJhdXRocyI6eyJodHRwczovL2V4YW1wbGUvdjEvIjp7ImF1dGgiOiJvcGVuc2VzYW1lIn19fQo=
kind: Secret
metadata:
  name: secret-dockercfg
  namespace: default
type: kubernetes.io/dockercfg

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-cleanup-cronjob.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to openhands/CronJob/docker-cleanup:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: docker-cleanup
  namespace: openhands
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - |
              echo "Starting Docker cleanup process on golyat-1 node"
              # 未使用のDockerリソースを削除
              docker system prune -af --volumes
              echo "Docker cleanup completed"
            image: docker:cli
            name: docker-cleanup
            volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock
          nodeSelector:
            kubernetes.io/hostname: golyat-1
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /var/run/docker.sock
              type: Socket
            name: docker-sock
  schedule: 0 0 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource openhands/CronJob/docker-cleanup
policy disallow-container-sock-mounts -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-cronjob-validate-docker-sock-mount failed at path /spec/jobTemplate/spec/template/spec/volumes/0/hostPath/path/

policy drop-all-capabilities -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource openhands/CronJob/docker-cleanup failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: docker-compose-backends.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/backend-reviews-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-reviews-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-reviews
  template:
    metadata:
      labels:
        app: backend-reviews
    spec:
      containers:
      - env:
        - name: MONGODB_HOST
          value: mongodb-reviews-service
        image: chaphe/backend-reviews-image:1.0
        name: backend-reviews
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-reviews-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-reviews-deployment
policy disallow-default-namespace -> resource default/Deployment/backend-reviews-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/backend-reviews-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: docker-compose-backends_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/backend-catalog-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-catalog-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-catalog
  template:
    metadata:
      labels:
        app: backend-catalog
    spec:
      containers:
      - env:
        - name: MYSQL_DB_HOST
          value: mysql-catalog-store-service
        - name: MYSQL_DB_PORT
          value: "3306"
        - name: MYSQL_DB_USERNAME
          value: root
        - name: MYSQL_DB_PASSWORD
          value: password
        image: chaphe/backend-catalog-image:1.0
        name: backend-catalog
        ports:
        - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-catalog-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-catalog-deployment
policy disallow-default-namespace -> resource default/Deployment/backend-catalog-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/backend-catalog-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: docker-compose-backends_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/backend-store-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-store-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-store
  template:
    metadata:
      labels:
        app: backend-store
    spec:
      containers:
      - env:
        - name: MYSQL_DB_HOST
          value: mysql-catalog-store-service
        - name: MYSQL_DB_PORT
          value: "3306"
        - name: MYSQL_DB_USERNAME
          value: root
        - name: MYSQL_DB_PASSWORD
          value: password
        - name: RABBITMQ_HOST
          value: rabbitmq-service
        - name: RABBITMQ_PORT
          value: "5672"
        image: chaphe/backend-store-image:1.0
        name: backend-store
        ports:
        - containerPort: 8082

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-store-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-store-deployment
policy disallow-default-namespace -> resource default/Deployment/backend-store-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/backend-store-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: docker-compose-backends_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/backend-shipping-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-shipping-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-shipping
  template:
    metadata:
      labels:
        app: backend-shipping
    spec:
      containers:
      - env:
        - name: RABBITMQ_HOST
          value: rabbitmq-service
        image: chaphe/backend-shipping-image:1.0
        name: backend-shipping
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-shipping-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-shipping-deployment
policy disallow-default-namespace -> resource default/Deployment/backend-shipping-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/backend-shipping-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: docker-compose-backends_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/backend-reviews-service:
apiVersion: v1
kind: Service
metadata:
  name: backend-reviews-service
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: backend-reviews
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/backend-reviews-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-compose-backends_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/backend-catalog-service:
apiVersion: v1
kind: Service
metadata:
  name: backend-catalog-service
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: backend-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/backend-catalog-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-compose-backends_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/backend-store-service:
apiVersion: v1
kind: Service
metadata:
  name: backend-store-service
  namespace: default
spec:
  ports:
  - nodePort: 30002
    port: 8082
    protocol: TCP
    targetPort: 8082
  selector:
    app: backend-store
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/backend-store-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-compose-backends_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/backend-shipping-service:
apiVersion: v1
kind: Service
metadata:
  name: backend-shipping-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: backend-shipping
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/backend-shipping-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-compose-env-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/docker-compose-env:
apiVersion: v1
data:
  PAPERLESS_OCR_LANGUAGE: eng
  PAPERLESS_SECRET_KEY: change-me
  PAPERLESS_TIME_ZONE: America/Toronto
  USERMAP_GID: "20"
  USERMAP_UID: "501"
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: webserver-docker-compose-env
  name: docker-compose-env
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerconfig.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-secret:
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJwaXl1c2h0aGVtaXR0YWwiLCJwYXNzd29yZCI6ImRja3JfcGF0X19YelRQSHhXbkd0RVhWNjhRSi1NdEQwYVFiNCIsImF1dGgiOiJjR2w1ZFhOb2RHaGxiV2wwZEdGc09tUmphM0pmY0dGMFgxOVllbFJRU0hoWGJrZDBSVmhXTmpoUlNpMU5kRVF3WVZGaU5BPT0ifX19
kind: Secret
metadata:
  name: my-registry-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerconfigjson-sops-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-secret:
apiVersion: v1
data:
  .dockerconfigjson: ENC[AES256_GCM,data:KHCFH3hNnc+PMfWLFEPjebf3W4z4WXbGFAANRZyZC+07z7wlrTALJM6rn8YslW4tMAWCoAYxblC5WRCszTy0h9rw0U/RGOv5H0qCgnNg/FILFUqhwo9pNfrUH+MEP4M9qxxbLKZwObpHUE7DUsKx1JYAxsI=,iv:q48lqUbUQD+0cbYcjNMZMJLRdGHi78ZmDhNAT2th9tg=,tag:QRI2SZZXQrAcdql3R5AH2g==,type:str]
kind: Secret
metadata:
  name: docker-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA3eU1CTEJhVXZ4eEVYYkVV
      OU90TEcrR2pYckttN0pBanJoSUZWSW1RQXlRCkUydFJ3V1NZUTBuVFF0aC9GUEcw
      bUdhNjJWTkoyL1FUVi9Dc1dxUDBkM0UKLS0tIE1sQXkwcWdGaEFuY0RHQTVXM0J6
      dWpJcThEbW15V3dXYXpPZklBdW1Hd1kKoIAdmGNPrEctV8h1w8KuvQ5S+BGmgqN9
      MgpNmUhJjWhgcQpb5BRYpQesBOgU5TBGK7j58A6DMDKlSiYZsdQchQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age10la2ge0wtvx3qr7datqf7rs4yngxszdal927fs9rukamr8u2pshsvtz7ce
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2022-02-03T16:03:17Z"
  mac: ENC[AES256_GCM,data:AHdYSawajwgAFwlmDN1IPNmT9vWaYKzyVIra2d6sPcjTbZ8/p+VRSRpVm4XZFFsaNnW5AUJaouwXnKYDTmJDXKlr/rQcu9kXqsssQgdzcXaA6l5uJlgsnml8ba7J3OK+iEKMax23mwQEx2EUskCd9ENOwFDkunP02sxqDNOz20k=,iv:8F5OamHt3fAVorf6p+SoIrWoqkcATSGWVoM0EK87S4M=,tag:E1mxXnc7wWkEX5BxhpLtng==,type:str]
  pgp: []
  version: 3.7.1
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-credentials.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-credentials:
apiVersion: v1
data:
  .dockerconfigjson: null
kind: Secret
metadata:
  name: docker-credentials
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub_secret_manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-hub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    <SUA_STRING_BASE64_COM_AS_INFORMAÇÕES_DE_AUTH_DO_DOCKER_HUB>
kind: Secret
metadata:
  name: docker-hub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/meu-pod:
apiVersion: v1
kind: Pod
metadata:
  name: meu-pod
  namespace: default
spec:
  containers:
  - image: israeldoamaral/app01:develop
    name: meu-container
  imagePullSecrets:
  - name: docker-hub-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/meu-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/meu-pod
policy disallow-default-namespace -> resource default/Pod/meu-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/meu-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/meu-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/meu-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/meu-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/meu-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/meu-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/meu-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dockerhub-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dockerhub-test:
apiVersion: v1
data:
  .dockerconfigjson: |
    ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImFtOW9ibWRoWW5KcFpXeHpjRUJuYldGcGJDNWpiMjA2U2pCdVFEUXpORGt4TWpNME5UWkVRQT09IgoJCX0KCX0KfQ==
kind: Secret
metadata:
  name: dockerhub-test
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-hub-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-hub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    suasecretadockerhub
kind: Secret
metadata:
  name: docker-hub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dockerhub-test:
apiVersion: v1
data:
  .dockerconfigjson: |
    <DIGITAR AQUI O CÓDIGO>
kind: Secret
metadata:
  name: dockerhub-test
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-hub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    <YOUR_BASE64_DOCKERHUB_CREDENCIAL>
kind: Secret
metadata:
  name: docker-hub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-hub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImJXRnlZMmx2Y25WaVpXNXpPbVJqYTNKZmNHRjBYMU41YzNSWGVIRkthMUpOYUdkb00xZGlhR1kwY0hGbmRqZ3dOQT09IgoJCX0KCX0KfQ==
kind: Secret
metadata:
  name: docker-hub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dockerhub-test:
apiVersion: v1
data:
  .dockerconfigjson: ""
kind: Secret
metadata:
  name: dockerhub-test
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-hub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImFYTnlZV1ZzWkc5aGJXRnlZV3c2TVRCd2FYTjBZVEV3TUdGdFlYSmhiQT09IgoJCX0KCX0KfQ==
kind: Secret
metadata:
  name: docker-hub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-hub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImJXbHlhbUZvWVd3NlpHTnJjbDl3WVhSZlZFMTFhVXQwYmtKc05rdFpNRnBNTFRJNVVHbGZOSEpNZDJ4TkNnPT0iCgkJfQoJfSwKCSJjcmVkc1N0b3JlIjogImRlc2t0b3AiLAoJImN1cnJlbnRDb250ZXh0IjogImRlZmF1bHQiLAoJInBsdWdpbnMiOiB7CgkJIi14LWNsaS1oaW50cyI6IHsKCQkJImVuYWJsZWQiOiAidHJ1ZSIKCQl9Cgl9Cn0=
kind: Secret
metadata:
  name: docker-hub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockerhub-secret7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dockerhub-secret:
apiVersion: v1
data:
  .dockerconfigjson: |
    ewoJImF1dGhzIjogewoJCSJnaXQuZXBvYy5jb20uYnI6NTAwNSI6IHsKCQkJImF1dGgiOiAiYkc5b1lXNHVjR1YwWlhKdFlXNXVPbFUyYXpsRFdubFJOREF0VVZwV1lqSmxNazFLVjJ0V2RXMWhXbTV1TFMwPSIKCQl9LAoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImJHOW9ZVzV3WlhSbGNtMWhibTQ2WkdOcmNsOXdZWFJmTUdsclJURkZMVGR1WTBsR1pqaHhUalZmU0dwMFptOUxiMlEwIgoJCX0KCX0sCgkiY3VycmVudENvbnRleHQiOiAicm9vdGxlc3MiCn0=
kind: Secret
metadata:
  name: dockerhub-secret
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-io1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to delta/Pod/busybox-docker-io:
apiVersion: v1
kind: Pod
metadata:
  name: busybox-docker-io
  namespace: delta
spec:
  containers:
  - command:
    - sh
    - -c
    - echo "Success!" && sleep 60
    image: busybox:latest
    imagePullPolicy: Always
    name: busybox
  restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource delta/Pod/busybox-docker-io

skipped mutate policy add-safe-to-evict -> resource delta/Pod/busybox-docker-io
policy disallow-latest-tag -> resource delta/Pod/busybox-docker-io failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource delta/Pod/busybox-docker-io failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource delta/Pod/busybox-docker-io failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource delta/Pod/busybox-docker-io failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource delta/Pod/busybox-docker-io failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource delta/Pod/busybox-docker-io failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource delta/Pod/busybox-docker-io failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource delta/Pod/busybox-docker-io failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-jenkins-demo:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: docker-jenkins-demo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: docker-jenkins-demo
    spec:
      containers:
      - image: houssembel/express-sqlite
        name: docker-jenkins-demo
        ports:
        - containerPort: 80
          name: demo-http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-jenkins-demo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-jenkins-demo
policy disallow-default-namespace -> resource default/Deployment/docker-jenkins-demo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-jenkins-demo:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: docker-jenkins-demo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: docker-jenkins-demo
    spec:
      containers:
      - image: rawandnaddari/express-sqlite
        name: docker-jenkins-demo
        ports:
        - containerPort: 80
          name: demo-http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-jenkins-demo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-jenkins-demo
policy disallow-default-namespace -> resource default/Deployment/docker-jenkins-demo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-deploy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-jenkins-demo:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: docker-jenkins-demo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: docker-jenkins-demo
    spec:
      containers:
      - image: hadilkortas/express-sqlite
        name: docker-jenkins-demo
        ports:
        - containerPort: 80
          name: demo-http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-jenkins-demo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-jenkins-demo
policy disallow-default-namespace -> resource default/Deployment/docker-jenkins-demo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-jenkins-demo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/docker-jenkins-demo-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo-pod
  namespace: default
spec:
  containers:
  - image: houssembel/express-sqlite
    name: docker-jenkins-demo
    ports:
    - containerPort: 80
      name: demo-http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/docker-jenkins-demo-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/docker-jenkins-demo-pod
policy disallow-default-namespace -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/docker-jenkins-demo-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo-pod
  namespace: default
spec:
  containers:
  - image: rawandnaddari/express-sqlite
    name: docker-jenkins-demo
    ports:
    - containerPort: 80
      name: demo-http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/docker-jenkins-demo-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/docker-jenkins-demo-pod
policy disallow-default-namespace -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/docker-jenkins-demo-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo-pod
  namespace: default
spec:
  containers:
  - image: hadilkortas/express-sqlite
    name: docker-jenkins-demo
    ports:
    - containerPort: 80
      name: demo-http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/docker-jenkins-demo-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/docker-jenkins-demo-pod
policy disallow-default-namespace -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/docker-jenkins-demo-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-jenkins-demo-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/docker-jenkins-demo-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: docker-jenkins-demo
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-jenkins-demo-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/docker-jenkins-demo-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: docker-jenkins-demo
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-jenkins-demo-svc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/docker-jenkins-demo-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-jenkins-demo
  name: docker-jenkins-demo-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: docker-jenkins-demo
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-kubernetes.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-kubernetes:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-kubernetes
  name: docker-kubernetes
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-kubernetes
  template:
    metadata:
      labels:
        app: docker-kubernetes
    spec:
      containers:
      - image: anirudhdabral/docker-kubernetes
        name: docker-kubernetes
        ports:
        - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-kubernetes

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-kubernetes
policy disallow-default-namespace -> resource default/Deployment/docker-kubernetes failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-kubernetes failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-login-app-manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/docker-login-page:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
  name: docker-login-page
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/docker-login-page:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: docker-login-page
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/docker-login-page:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: docker-login-page
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-login-page:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: docker-login-page
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-login-page:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: docker-login-page
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-login-app-manifest_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-login-page/Deployment/frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
    tier: frontend
  name: frontend
  namespace: docker-login-page
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: docker-login-page
      tier: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-login-page
        tier: frontend
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql_root_pass
              name: database-secret
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: mysql_database
              name: database-secret
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: mysql_user
              name: database-secret
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql_password
              name: database-secret
        - name: MYSQL_ROOT_HOST
          value: mysql-svc
        image: dockerloginpage/frontend:v1.0.0
        imagePullPolicy: Always
        name: webapp1
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-login-page/Deployment/frontend

skipped mutate policy add-safe-to-evict -> resource docker-login-page/Deployment/frontend
policy drop-all-capabilities -> resource docker-login-page/Deployment/frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-login-page/Deployment/frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource docker-login-page/Deployment/frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource docker-login-page/Deployment/frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-login-page/Deployment/frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-login-page/Deployment/frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: docker-login-app-manifest_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-login-page/Service/docker-login-page:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
    tier: frontend
  name: docker-login-page
  namespace: docker-login-page
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: docker-login-page
    tier: frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource docker-login-page/Service/docker-login-page failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-login-app-manifest_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-login-page/Deployment/backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
    tier: backend
  name: backend
  namespace: docker-login-page
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: docker-login-page
      tier: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-login-page
        tier: backend
    spec:
      containers:
      - args:
        - --default-authentication-plugin=mysql_native_password
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql_root_pass
              name: database-secret
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: mysql_database
              name: database-secret
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: mysql_user
              name: database-secret
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql_password
              name: database-secret
        image: dockerloginpage/backend:v1.0.0
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: db-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-login-page/Deployment/backend

skipped mutate policy add-safe-to-evict -> resource docker-login-page/Deployment/backend
policy drop-all-capabilities -> resource docker-login-page/Deployment/backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-login-page/Deployment/backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource docker-login-page/Deployment/backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource docker-login-page/Deployment/backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-login-page/Deployment/backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-login-page/Deployment/backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: docker-login-app-manifest_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-login-page/Service/mysql-svc:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
    tier: backend
  name: mysql-svc
  namespace: docker-login-page
spec:
  clusterIP: None
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app.kubernetes.io/name: docker-login-page
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-login-app-manifest_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-login-page/PersistentVolumeClaim/db-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
    tier: backend
  name: db-pvc
  namespace: docker-login-page
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-login-app-manifest_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-login-page/Secret/database-secret:
apiVersion: v1
data:
  mysql_database: ZGF0YWJhc2U=
  mysql_password: cGFzc3dvcmQ=
  mysql_root_pass: cGFzcw==
  mysql_user: dXNlcm5hbWU=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: docker-login-page
    tier: backend
  name: database-secret
  namespace: docker-login-page
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-python-kubernetes.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-python-demo:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-python-demo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: flask
  template:
    metadata:
      labels:
        service: flask
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: "1234"
        image: dotpep/docker-cicd
        imagePullPolicy: Always
        name: flask-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-python-demo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-python-demo
policy disallow-default-namespace -> resource default/Deployment/docker-python-demo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-python-demo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-python-demo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-python-demo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-python-demo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-python-kubernetes_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-entrypoint:
apiVersion: v1
kind: Service
metadata:
  name: service-entrypoint
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 5000
    targetPort: 5000
  selector:
    service: flask
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-entrypoint failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-python-kubernetes1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-python-demo:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-python-demo
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      service: flask
  template:
    metadata:
      labels:
        service: flask
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: mysecretpassword
        image: jaysinghvi/cc_lab5_temp
        imagePullPolicy: Always
        name: flask-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-python-demo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-python-demo
policy disallow-default-namespace -> resource default/Deployment/docker-python-demo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-python-demo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-python-demo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-python-demo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-python-demo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-python-demo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-python-kubernetes1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-entrypoint:
apiVersion: v1
kind: Service
metadata:
  name: service-entrypoint
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 5000
    targetPort: 5000
  selector:
    service: flask
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-entrypoint failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/docker-registry:
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/docker-registry:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: docker-registry
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/docker-registry:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: docker-registry
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-registry:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: docker-registry
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-registry:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: docker-registry
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/StatefulSet/docker-registry:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: docker-registry
  serviceName: docker-registry
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
    spec:
      containers:
      - env: []
        image: registry:2
        imagePullPolicy: Always
        name: registry
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/registry
          name: registry-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: registry-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/StatefulSet/docker-registry

skipped mutate policy add-safe-to-evict -> resource docker-registry/StatefulSet/docker-registry
policy drop-all-capabilities -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/StatefulSet/docker-registry failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Ingress/docker-registry:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: ca-issuer
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-body-size: 8192m
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  rules:
  - host: docker.apps.IPADDR.nip.io
    http:
      paths:
      - backend:
          service:
            name: docker-registry
            port:
              number: 5000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - docker.apps.IPADDR.nip.io
    secretName: ingress-tls-certificate

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/docker-registry:
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/docker-registry:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: docker-registry
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/docker-registry:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: docker-registry
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-registry:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: docker-registry
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-registry:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: docker-registry
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/PersistentVolumeClaim/docker-registry:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  storageClassName: longhorn

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    run: docker-registry
  name: docker-registry-service
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
  selector:
    app: docker-registry

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Deployment/docker-registry:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - env:
        - name: REGISTRY_HTTP_ADDR
          value: :5000
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
        image: registry:2
        name: docker-registry
        ports:
        - containerPort: 5000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/registry
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: docker-registry

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry

skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry
policy drop-all-capabilities -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Deployment/registry-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry-deployment
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - image: registry:2
        name: registry
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /var/lib/registry
          name: registry-storage
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/registry-deployment

skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/registry-deployment
policy drop-all-capabilities -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Deployment/registry-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/registry-service:
apiVersion: v1
kind: Service
metadata:
  name: registry-service
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: registry
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/docker-registry-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-registry-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  local:
    path: /run/desktop/mnt/host/c/docker-registry
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop
  persistentVolumeReclaimPolicy: Delete
  storageClassName: hostpath
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/PersistentVolumeClaim/docker-registry-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
  namespace: docker-registry
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: hostpath

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Pod/docker-registry-pod:
apiVersion: v1
kind: Pod
metadata:
  name: docker-registry-pod
  namespace: docker-registry
spec:
  containers:
  - image: nginx
    name: docker-registry-container
    ports:
    - containerPort: 80
      name: http-server
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: docker-registry-pv
  volumes:
  - name: docker-registry-pv
    persistentVolumeClaim:
      claimName: docker-registry-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Pod/docker-registry-pod

skipped mutate policy add-safe-to-evict -> resource docker-registry/Pod/docker-registry-pod
policy disallow-latest-tag -> resource docker-registry/Pod/docker-registry-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource docker-registry/Pod/docker-registry-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Pod/docker-registry-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Pod/docker-registry-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource docker-registry/Pod/docker-registry-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource docker-registry/Pod/docker-registry-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Pod/docker-registry-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Pod/docker-registry-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Deployment/docker-registry-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-deployment
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - image: registry:2
        name: docker-registry
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/lib/registry
          name: docker-registry
      volumes:
      - name: docker-registry
        persistentVolumeClaim:
          claimName: docker-registry-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry-deployment

skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry-deployment
policy drop-all-capabilities -> resource docker-registry/Deployment/docker-registry-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Deployment/docker-registry-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Deployment/docker-registry-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource docker-registry/Deployment/docker-registry-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Deployment/docker-registry-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Deployment/docker-registry-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: docker-registry
  name: docker-registry-service
  namespace: docker-registry
spec:
  ports:
  - name: http
    nodePort: 30001
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/PersistentVolume/docker-registry-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    volume: nfs
  name: docker-registry-pv
  namespace: docker-registry
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  nfs:
    path: /var/nfs/kubernetes
    server: 192.168.100.150
  storageClassName: nfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-deployment2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/PersistentVolumeClaim/docker-registry-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
  namespace: docker-registry
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry-lb:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry
  name: docker-registry-lb
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/docker-registry:
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/docker-registry:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: docker-registry
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/docker-registry:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: docker-registry
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-registry:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: docker-registry
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/docker-registry:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: docker-registry
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-pv_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/PersistentVolumeClaim/docker-registry:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  storageClassName: longhorn

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/myregistrykey:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImJXRnRkR0ZxT25kcGJtUnZkM014TWc9PSIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuNiAobGludXgpIgoJfQp9
kind: Secret
metadata:
  name: myregistrykey
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/myregistrykey:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImJXRnRkR0ZxT25kcGJtUnZkM014TWc9PSIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuNiAobGludXgpIgoJfQp9
kind: Secret
metadata:
  name: myregistrykey
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-tls.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry-lb:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    metallb.universe.tf/ip-allocated-from-pool: default-pool
    traefik.ingress.kubernetes.io/custom-response-headers: Access-Control-Allow-Origin:http://registry-ui.k3s.kippel.de||Access-Control-Allow-Methods:GET,POST,OPTIONS||Access-Control-Allow-Headers:DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range||Access-Control-Expose-Headers:Content-Length,Content-Range
  labels:
    app: docker-registry
  name: docker-registry-lb
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-tls_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    run: docker-registry
  name: docker-registry-service
  namespace: docker-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
  selector:
    app: docker-registry

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-tls_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Deployment/docker-registry:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-registry
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - env:
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:5000
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /certs/tls.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /certs/tls.key
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        image: registry:2
        name: docker-registry
        ports:
        - containerPort: 5000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/registry
          name: storage
        - mountPath: /certs
          name: certs
        - mountPath: /etc/docker/registry
          name: config
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: docker-registry
      - name: certs
        secret:
          secretName: docker-registry-tls-cert
      - configMap:
          name: docker-registry-config
          optional: false
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry

skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry
policy drop-all-capabilities -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Deployment/docker-registry failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry-ui.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/docker-registry-ui:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-ui
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-ui
  template:
    metadata:
      labels:
        app: docker-registry-ui
    spec:
      containers:
      - env:
        - name: SINGLE_REGISTRY
          value: "true"
        - name: REGISTRY_TITLE
          value: Docker Registry UI
        - name: DELETE_IMAGES
          value: "true"
        - name: SHOW_CONTENT_DIGEST
          value: "true"
        - name: NGINX_PROXY_PASS_URL
          value: http://registry.localhost:5000
        - name: SHOW_CATALOG_NB_TAGS
          value: "true"
        - name: CATALOG_MIN_BRANCHES
          value: "1"
        - name: CATALOG_MAX_BRANCHES
          value: "1"
        - name: TAGLIST_PAGE_SIZE
          value: "100"
        - name: REGISTRY_SECURED
          value: "false"
        - name: CATALOG_ELEMENTS_LIMIT
          value: "1000"
        image: joxit/docker-registry-ui
        imagePullPolicy: IfNotPresent
        name: docker-registry-ui
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-registry-ui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/docker-registry-ui
policy disallow-default-namespace -> resource default/Deployment/docker-registry-ui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/docker-registry-ui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry-ui_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/docker-registry-ui:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry-ui
  name: docker-registry-ui
  namespace: default
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: docker-registry-ui

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-ui_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/docker-registry-ui-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
  name: docker-registry-ui-ingress
  namespace: default
spec:
  rules:
  - host: registry-ui.localhost
    http:
      paths:
      - backend:
          service:
            name: docker-registry-ui
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-registry-web-ui-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Deployment/docker-registry-web-ui-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-web-ui-deployment
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-web-ui
  template:
    metadata:
      labels:
        app: docker-registry-web-ui
    spec:
      containers:
      - env:
        - name: REGISTRY_TITLE
          value: Kubernetes Localhost Image Registry
        - name: REGISTRY_URL
          value: http://192.168.100.101:30001
        image: joxit/docker-registry-ui:static
        name: docker-registry-web-ui
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry-web-ui-deployment

skipped mutate policy add-safe-to-evict -> resource docker-registry/Deployment/docker-registry-web-ui-deployment
policy drop-all-capabilities -> resource docker-registry/Deployment/docker-registry-web-ui-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource docker-registry/Deployment/docker-registry-web-ui-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource docker-registry/Deployment/docker-registry-web-ui-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource docker-registry/Deployment/docker-registry-web-ui-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource docker-registry/Deployment/docker-registry-web-ui-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource docker-registry/Deployment/docker-registry-web-ui-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: docker-registry-web-ui-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to docker-registry/Service/docker-registry-web-ui-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: docker-registry-web-ui
  name: docker-registry-web-ui-service
  namespace: docker-registry
spec:
  ports:
  - name: http
    nodePort: 30002
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: docker-registry-web-ui
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/docker-credentials:
apiVersion: v1
data:
  config.json: efuJAmF1...
kind: Secret
metadata:
  name: docker-credentials
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: null
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSI1NjE2NTYzMDI4MTEuZGtyLmVjci5ldS1jZW50cmFsLTEuYW1hem9uYXdzLmNvbSI6IHsKCQkJImF1dGgiOiAiUVZkVE9tVjVTbmRaV0d4ellqSkdhMGxxYjJsTmJHY3dVbFJzUzAxVE9USmFNRFExVm5rNGVXRkZNVlJPYW1SWVZraE9hazFIVFhkTldHaDBZVVpXU1ZKSWNIZFVWMHBVWWtSS1FtSlljRzFpYWxwSFZtdGtRbGt3TkRGVU0xSmFaVlJvZG1OdVFubFdVemt6V1dwa1dsa3ljRzVoYTJ4b1dqRkNhMlZYT0ROUlZUVndVVmhvZFZvelRtMVBWbWN5WVdrNU0yUkVVbXhoYkZKUFpHNXZNMU5EZERKTE0yaFNWR3BTU0ZScmJ6QmlXRW8yVFZoT1QyVklUbWxWUm1SSlkwZEtibGRGVW14V1IxWjBZa2RXUmxkSGFFWmlWVVpIVmpGS1RWSnJkR0ZSV0ZJelRWUlJNRTVWZEVSWGJteFFXakF4VDFWNlVuWlJhMmhNWkVkNFVrMHhjRFpqYTBWNlRrVkdRMVpxYUZoYVdGWnNZakIwVm1GRldtOWlSa1pTV1RKS00xb3djREpaVldSU1pWWm9NMDlGTlc5U2JrNXlUMU4wY0ZwNlRuRmtSVFZaVm0xbk5FNXNWbWxpVjNNd1ZGUmtVR1J1YURKYU1HeFNUbGhXWVZSRmNIZGhSVEIzVkZoQ2RHUXdOVVZTYkU1aFRYcE9kR1ZYT1V0Uk1qQXlUVzVhVVdKc1RqWmhNRGxMVW5wV2RtRldTVEpTV0d0NlZEQm9ORk16VW10VWVrcFZXWGx6ZUZWdVpFNWlXRlpPWkcxa1QwNUlVa3BqVlRVMFdUSTVjMVZJY0RKWGJURnlVVmRPTUZkc1dUQk9SbFl6VlVWT05XTkdXak5VVjFwWlRtc3hhMUpzY0ZKak1WWlBZa1ZPVEUxdFVqTmpWR3cyWW1wa1RHUnVRa2RVVldNMVRESk5OR05WZUhKamJHUk1VMWRaTTFScVRsbGxWRVo1WlcwMVVGVkZSazFrTTFwWFVUTmFVMUpxVGpOUFdGcHRWMGQwV2xkVVdrNWhSMFl5V2taT2VsbHNRblZQVm14RVZUSjBWV0ZJYkVOaFZWb3dUVlpzVjJFd2NFWlJNMFp6Wld0MGJWZHFiRWRSYm1oNVdXNWFWMWRZYUZSUk0wNWhVMGRXYTFreFVuQlRiVFJ5V2xad1NFMVZkR2xYYlVrd1RVUmtTRTR4Vm1sWFJtUnpVMFpvTmxVelZqVmtWazAwWTFkck5XRkdTbTlaVlhCMlVrUkdVVTFITlhWaFV6bHBWMnRKTVdWSFRtdFNVemgzVFVoc1QxZEdiM2RPUkZKNllsZFdjMW96YUZsa2EyaDJWMFJLZEZKR1ZUTmFhMFkwWWxaQ2MxWlliekpOTUhNMVVteENVVTlHUWtWVU1WVXdUbTVDV2xNemJHcFpiRnB1WVROU2JXUllaRVJOVkdoV1UxUkdVbFJ0VW5OaldGSjBXVEpaTlZwc1NsWlBSM1JoVlVWYVdFd3lXazVpU0dneFYydG9TR1ZWUm01UlYwNXJXbXBLVUZaSWFHRlBSVnB1V2xVNVZXUjZRak5OU0d4SlpHdGFiMlZXYUdoaFZ6bEZVak5vZEU1V1FsTlhSV1F6VjBaVk5FMUhUbEZSYXpnelRqTlNNR1JWZUU1VFIwb3lWVmhLZEUweFNqQlBVemcxVkhwcmVFNVdWazFqVld4b1dXeHNNbFZ0U2tsaWEwNXpZbTFvVVZReFJuZFVTRTVDWWtOek5XTnFValZWVm14WlYwZGtlR0ZZYjNwa1ZWSkNZV3huTldFeFVYcFJNM0JDV2pKU1RtSklXbEpUYWtvMlZYcG9WMVJyWkZkT1ZXeEVVV3BGTVdGRVFubE5NbFl3WTIxU1ExbHNjR2hOVmtKRlZXMTBSbUl6YkRWTGVUZ3hUVlJzV0Zsck9XNU9SWGh6VDFoR1MxbFlhM3BsYlRGVFVqRkdhR1ZITVd0YU1XaEhXbTFHVlZWV1RsTlRWV3cxVkVSQmVGSkhSazlNZWxsNlZWUm9kRmxVVmtKYVdHTjVUbTVDV2xKc2JGUk9NSGhOVEROa1Qxa3laRmhPVXpscVZFTnplRmxWVm5wUFJrWkVXbFJXVlU1RmVFbFhSRlp2VmxkVk1WTnJiSGRTVlZaTFVrVndNR0ZFVVRSTmJFbHlVbXBLUWxkVWF6QlJNVUYzVTJ0ME1tTkZOVlZYYlU1SFdqTnNjRlpJVFhwWFZXUnNZbGROTVZwWFpFSmthWFJKVGtSV1JGWnNSazlaTTBwR1l6TldWVko2WkZGWFZYUTJVVlZLVGxWRVZuUk5hemxJWkVWb1VGZEZSVFJOTURWT1RucG9NMWRYZHpOUFJVNVRXV3hvUjFsNlZtdGhiVlpUVEROVk0wOVhiRlJWZWs1SlpVVnNlVTV1YkRaaWExWkVWbTVhTUdOV2JIVldNR1I0WkZWNFlVMXRiM0pOU0ZKUFUwaEdhVlV4YUVaTlJrSktWSHBOTWs0eWR6VmpNVkowVVZod1ZHRlZPVTlWYmtZMVRtNW9iRkpWVW5GVVJFNXhVWHBTYjJGdVJrWlRSRVpwV2pCb2JrbHBkMmxhUjBZd1dWZDBiR1ZUU1RaSmEwWlNVbFZLUWxOSFozcGxiR3hRV2toU2QxRnJTbFJXYm1OMlYxUkthR0pxYUVOWFJXeEZUa2QwTTFSR1JtMWliVGxWWVdwV05tUXhjREJTTUhCaFlqRndVbEZWUmtKVFJGSXpXbXRHV2xOcmRIWlhhMnh2WkcxT1QxRldSbXBTTWpsSVQwaGthVlZWYkVOUlZWSkRZakJLYm1FelJtOWhNbXhJVDFoamQxRnJTak5TV0dSSldqRnNTMWRWYkdGVFZVWllWbFZTUTFGVlZqRlVWVXBHVWxWU1MxVkhSbGxqU0ZFMFpWaEtSR05WYUVwV1ZGcE1XakJzUTFKVmJFSk9NMEoyVVc1S2VGZEljSGxVYld4VlQxWnNSRm95ZURGamJsSkpUVzFzZEZOVmJGQlBWM0JDVlhwV01VOUhlRWhWVkdONFRXeHNhMVZVUWpKWGEwWjVUWHBPWVdKWFpHeFZTR2hZVFZVNVUyTXpXbTFoYmtGNldWYzVhRTFXU1hKYVNFNXBUV3BSTTFWVVFUbEphWGRwWkcxV2VXTXliSFppYVVrMlNXcEphVXhEU2pCbFdFSnNTV3B2YVZKRlJsVlJWamxNVWxacmFVeERTbXhsU0VKd1kyMUdNR0ZYT1hWSmFtOTRUbnBCTTA5RVkzcE5lbEUwWmxFOVBRPT0iCgkJfQoJfQp9
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: docker-secret9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-registry-key:
apiVersion: v1
data:
  .dockerconfigjson: base64-encoded-contents-of-.docker/config.json-file
kind: Secret
metadata:
  name: my-registry-key
  namespace: default
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockertoken_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dockertoken-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: quay-api-operator
  name: dockertoken-editor-role
  namespace: default
rules:
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - dockertokens
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - dockertokens/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockertoken_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dockertoken-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: quay-api-operator
  name: dockertoken-viewer-role
  namespace: default
rules:
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - dockertokens
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - dockertokens/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockge2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to network/Service/lan-dockge:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: lan-dockge
    app.kubernetes.io/name: lan-dockge
  name: lan-dockge
  namespace: network
spec:
  clusterIP: None
  ports:
  - name: http
    port: ${LAN_SVC_DOCKGE_PORT}
    protocol: TCP
    targetPort: ${LAN_SVC_DOCKGE_PORT}
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockge2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to network/Endpoints/lan-dockge:
apiVersion: v1
kind: Endpoints
metadata:
  labels:
    app.kubernetes.io/instance: lan-dockge
    app.kubernetes.io/name: lan-dockge
  name: lan-dockge
  namespace: network
subsets:
- addresses:
  - ip: ${LAN_SVC_DOCKGE_IP}
  ports:
  - name: http
    port: ${LAN_SVC_DOCKGE_PORT}
    protocol: TCP

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dockge2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to network/Ingress/lan-dockge:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  labels:
    app.kubernetes.io/instance: lan-dockge
    app.kubernetes.io/name: lan-dockge
  name: lan-dockge
  namespace: network
spec:
  ingressClassName: internal
  rules:
  - host: dockge.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: lan-dockge
            port:
              name: http
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: doctor.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydocctor-doctor-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydocctor-doctor-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mydocctor-doctor-service
  template:
    metadata:
      labels:
        app: mydocctor-doctor-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: doctor-service-config
        image: arjun164/mydocctor-doctor:latest
        name: mydocctor-doctor-service
        ports:
        - containerPort: 4003
      imagePullSecrets:
      - name: registry-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydocctor-doctor-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydocctor-doctor-deployment
policy disallow-default-namespace -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydocctor-doctor-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: doctor_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mydocctor-doctor-service:
apiVersion: v1
kind: Service
metadata:
  name: mydocctor-doctor-service
  namespace: default
spec:
  ports:
  - port: 4003
    protocol: TCP
    targetPort: 4003
  selector:
    app: mydocctor-doctor-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: document-store-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/document-store:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-store
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: document-store
  template:
    metadata:
      labels:
        app: document-store
    spec:
      containers:
      - env:
        - name: ConnectionStrings__CosmosDB
        - name: ConnectionStrings__RabbitMQ
        - name: CosmosDB__ContainerName
        - name: CosmosDB__DatabaseName
        image: cloudbordcontainer.azurecr.io/document-store
        name: document-store
        ports:
        - containerPort: 80
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/document-store

skipped mutate policy add-safe-to-evict -> resource default/Deployment/document-store
policy disallow-default-namespace -> resource default/Deployment/document-store failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/document-store failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/document-store failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/document-store failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/document-store failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/document-store failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/document-store failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/document-store failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/document-store failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: document-store-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/document-store:
apiVersion: v1
kind: Service
metadata:
  name: document-store
  namespace: default
spec:
  ports:
  - name: "7230"
    port: 7230
    targetPort: 80
  selector:
    app: document-store

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dogcatapp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dogcat-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogcat-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dogcat
  template:
    metadata:
      labels:
        app: dogcat
    spec:
      containers:
      - env:
        - name: PORT
          value: "9000"
        image: arindam29/dog-cat:ver1
        name: dogcat-container
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: 500m
            memory: 2048M
          requests:
            cpu: 500m
            memory: 2048M
      imagePullSecrets:
      - name: my-ecr-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogcat-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogcat-deployment
policy disallow-default-namespace -> resource default/Deployment/dogcat-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dogcat-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dogcat-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dogcat-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/dogcat-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dogcat-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dogcat-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dogcatapp_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dogcat-service:
apiVersion: v1
kind: Service
metadata:
  name: dogcat-service
  namespace: default
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: dogcat
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/dogcat-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dogpic-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dogpic-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dogpic-web
  name: dogpic-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dogpic-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dogpic-web
    spec:
      containers:
      - image: learncloudnative/dogpic-service:0.1.0
        name: dogpic-container
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web
policy disallow-default-namespace -> resource default/Deployment/dogpic-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dogpic-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dogpic-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: dogpic-web
  name: dogpic-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
  selector:
    app.kubernetes.io/name: dogpic-web

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dogpic-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dogpic-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dogpic-web
  name: dogpic-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dogpic-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dogpic-web
    spec:
      containers:
      - image: learncloudnative/dogpic-service:0.1.0
        name: dogpic-container
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web
policy disallow-default-namespace -> resource default/Deployment/dogpic-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dogpic-app1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dogpic-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: dogpic-web
  name: dogpic-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
  selector:
    app.kubernetes.io/name: dogpic-web

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dogpic-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dogpic-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dogpic-web
  name: dogpic-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dogpic-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dogpic-web
    spec:
      containers:
      - image: learncloudnative/dogpic-service:0.1.0
        name: dogpic-container
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web
policy disallow-default-namespace -> resource default/Deployment/dogpic-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dogpic-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dogpic-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dogpic-web
  name: dogpic-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dogpic-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dogpic-web
    spec:
      containers:
      - image: learncloudnative/dogpic-service:0.1.0
        name: dogpic-container
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dogpic-web
policy disallow-default-namespace -> resource default/Deployment/dogpic-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dogpic-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dogpic-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/postgresql-credentials:
apiVersion: v1
data:
  password: dGVzdA==
  username: dGVzdA==
kind: Secret
metadata:
  name: postgresql-credentials
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dolphinscheduler3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/postgresql-credentials:
apiVersion: v1
data:
  password: dGVzdA==
  username: dGVzdA==
kind: Secret
metadata:
  name: postgresql-credentials
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dolphinscheduler4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/postgresql-credentials:
apiVersion: v1
data:
  password: dGVzdA==
  username: dGVzdA==
kind: Secret
metadata:
  name: postgresql-credentials
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dolphinscheduler-assert.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-master-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-master-default
  namespace: default
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-worker-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-worker-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-api-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-api-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-alert-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-alert-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-master-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-master-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-worker-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-worker-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-api-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-api-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-alert-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-alert-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-master-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-master-default
  namespace: default
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-worker-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-worker-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-api-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-api-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-alert-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-alert-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-master-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-master-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-master-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-master-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/test-dolphinscheduler-worker-default:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-dolphinscheduler-worker-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/test-dolphinscheduler-worker-default
policy disallow-container-sock-mounts -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/test-dolphinscheduler-worker-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-api-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-api-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-api-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-api-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinscheduler-assert3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-dolphinscheduler-alert-default:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dolphinscheduler-alert-default
  namespace: default
status:
  availableReplicas: 1
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-dolphinscheduler-alert-default
policy disallow-container-sock-mounts -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/Deployment/test-dolphinscheduler-alert-default failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dolphinschedulercluster_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dolphinschedulercluster-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: dolphinscheduler-operator
    app.kubernetes.io/instance: dolphinschedulercluster-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: dolphinscheduler-operator
  name: dolphinschedulercluster-editor-role
  namespace: default
rules:
- apiGroups:
  - dolphinscheduler.kubedoop.dev
  resources:
  - dolphinschedulerclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dolphinscheduler.kubedoop.dev
  resources:
  - dolphinschedulerclusters/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dolphinschedulercluster_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dolphinschedulercluster-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: dolphinscheduler-operator
    app.kubernetes.io/instance: dolphinschedulercluster-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: dolphinscheduler-operator
  name: dolphinschedulercluster-viewer-role
  namespace: default
rules:
- apiGroups:
  - dolphinscheduler.kubedoop.dev
  resources:
  - dolphinschedulerclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - dolphinscheduler.kubedoop.dev
  resources:
  - dolphinschedulerclusters/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: "4444"
  PL_DOMAIN_NAME: dev.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: ""
  PL_DOMAIN_NAME: withpixie.ai
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: "4444"
  PL_DOMAIN_NAME: dev.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: ""
  PL_DOMAIN_NAME: staging.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: ""
  PL_DOMAIN_NAME: testing.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: "4444"
  PL_DOMAIN_NAME: dev.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: ""
  PL_DOMAIN_NAME: withpixie.ai
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: "4444"
  PL_DOMAIN_NAME: dev.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: ""
  PL_DOMAIN_NAME: staging.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain_config9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-domain-config:
apiVersion: v1
data:
  PASSTHROUGH_PROXY_PORT: ""
  PL_DOMAIN_NAME: testing.withpixie.dev
kind: ConfigMap
metadata:
  name: pl-domain-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dappmesh/ServiceAccount/dapp-domain-operator:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapp-domain-operator
  namespace: dappmesh

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dapp-domain-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dapp-domain-operator
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  - persistentvolumeclaims
  - pods
  - serviceaccounts
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - dappmesh.io
  resources:
  - dappdomains
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/dapp-domain-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dapp-domain-operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapp-domain-operator
subjects:
- kind: ServiceAccount
  name: dapp-domain-operator
  namespace: dappmesh

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domain1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dappmesh/Deployment/dapp-domain-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dapp-domain-operator
  name: dapp-domain-operator
  namespace: dappmesh
spec:
  selector:
    matchLabels:
      app: dapp-domain-operator
  template:
    metadata:
      labels:
        app: dapp-domain-operator
    spec:
      containers:
      - image: ghcr.io/dappmesh/dapp-domain-operator:latest
        imagePullPolicy: Always
        name: dapp-domain-operator
        ports:
        - containerPort: 4418
        resources:
          limits:
            cpu: 300m
            memory: 200Mi
      serviceAccountName: dapp-domain-operator

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dappmesh/Deployment/dapp-domain-operator

skipped mutate policy add-safe-to-evict -> resource dappmesh/Deployment/dapp-domain-operator
policy disallow-latest-tag -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dappmesh/Deployment/dapp-domain-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: domain-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ai-page-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: wildward-issuer
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: ai-page-ingress
  namespace: default
spec:
  rules:
  - host: domain.com
    http:
      paths:
      - backend:
          service:
            name: ai-page-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - domain.com
    secretName: ai-page-wtls-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: domaintopic-modelgroup01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to splunkuba/ReplicationController/domaintopic-modelgroup01-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: domaintopic-modelgroup01-rc
  namespace: splunkuba
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: domaintopic-modelgroup01
        uba-displayName: UBA_Streaming_Models_domaintopic-modelgroup01
        uba-groupName: ubastreamingmodels
        uba-serviceName: realtimemodels
    spec:
      containers:
      - command:
        - /opt/caspida/bin/UBAFunctionExecutor
        - com.caspida.streaming.docker.KafkaModelFunctionExecutor
        - -n
        - splunkuba
        - -G
        - domaintopic-modelgroup01
        - -f
        - MalwareCommunication
        - -f
        - WebShellDetection
        env:
        - name: UBA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: UBA_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UBA_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: UBA_HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: UBA_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: UBA_POD_MAXHEAP
          value: 4G
        - name: UBA_POD_GROUPNAME
          value: ubastreamingmodels
        - name: RUN_AS_USER
          value: null
        - name: RUN_AS_GROUP
          value: null
        image: sujits-uba53-rhel-k8s-01:5000/ubabase:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - startup
          preStop:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - shutdown
        livenessProbe:
          exec:
            command:
            - /opt/caspida/bin/ContainerLivenessProbe.sh
          failureThreshold: 2
          initialDelaySeconds: 900
          periodSeconds: 900
          timeoutSeconds: 60
        name: domaintopic-modelgroup01
        volumeMounts:
        - mountPath: /var/vcap/sys/log/caspida/containerization
          name: log-volume
          readOnly: false
      hostAliases:
      - hostnames:
        - sujits-uba53-rhel-k8s-01.sv.splunk.com
        - sujits-uba53-rhel-k8s-01
        ip: 10.141.39.46
      - hostnames:
        - sujits-uba53-rhel-k8s-02.sv.splunk.com
        - sujits-uba53-rhel-k8s-02
        ip: 10.141.39.205
      - hostnames:
        - sujits-uba53-rhel-k8s-03.sv.splunk.com
        - sujits-uba53-rhel-k8s-03
        ip: 10.141.39.184
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/vcap/sys/log/caspida/containerization
        name: log-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc
policy disallow-latest-tag -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource splunkuba/ReplicationController/domaintopic-modelgroup01-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: doodle-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to osai-kube/Deployment/doodle-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doodle-deployment
  namespace: osai-kube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: doodle
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: doodle
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/hubs-dev-333333/ocho-osai/browserlab/doodle@sha256:147ab1a673ea53dd3ae4ae3822eaab362fea5e50c294ff3c661e12ddf891f4e4
        name: doodle
        ports:
        - containerPort: 8001
        resources:
          limits:
            nvidia.com/gpu: 1
      - args:
        - --config=/etc/gatekeeper/config.yaml
        - --listen=0.0.0.0:3000
        image: quay.io/keycloak/keycloak-gatekeeper
        name: gatekeeper
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /etc/gatekeeper
          name: gatekeeper-doodle-config
      nodeSelector:
        pool: doodle
      volumes:
      - name: gatekeeper-doodle-config
        secret:
          secretName: gatekeeper-doodle-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource osai-kube/Deployment/doodle-deployment

skipped mutate policy add-safe-to-evict -> resource osai-kube/Deployment/doodle-deployment
policy disallow-latest-tag -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource osai-kube/Deployment/doodle-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: doodle-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to osai-kube/Service/doodle-service:
apiVersion: v1
kind: Service
metadata:
  name: doodle-service
  namespace: osai-kube
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 8001
  - name: gatekeeper
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: doodle

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: do-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/csi-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: do-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/csi-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: do-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/csi-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: doscont.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/doscont:
apiVersion: v1
kind: Pod
metadata:
  name: doscont
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - echo cont1 > index.html && python -m http.server 8082
    image: python:3.6-alpine
    name: cont1
  - command:
    - sh
    - -c
    - echo cont2 > index.html && python -m http.server 8083
    image: python:3.6-alpine
    name: cont2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/doscont

skipped mutate policy add-safe-to-evict -> resource default/Pod/doscont
policy disallow-default-namespace -> resource default/Pod/doscont failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/doscont failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/doscont failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/doscont failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/doscont failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/doscont failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/doscont failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/doscont failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: doscont1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/doscont:
apiVersion: v1
kind: Pod
metadata:
  name: doscont
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - echo cont1 > index.html && python -m http.server 8082
    image: python:3.6-alpine
    name: cont1
  - command:
    - sh
    - -c
    - echo cont2 > index.html && python -m http.server 8083
    image: python:3.6-alpine
    name: cont2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/doscont

skipped mutate policy add-safe-to-evict -> resource default/Pod/doscont
policy disallow-default-namespace -> resource default/Pod/doscont failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/doscont failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/doscont failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/doscont failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/doscont failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/doscont failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/doscont failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/doscont failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: doscontenedores.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/doscontenedores:
apiVersion: v1
kind: Pod
metadata:
  name: doscontenedores
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - echo container1 > index.html && python -m http.server 8082
    image: python:3.6-alpine
    name: container1
  - command:
    - sh
    - -c
    - echo container2 > index.html && python -m http.server 8083
    image: python:3.6-alpine
    name: container2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/doscontenedores

skipped mutate policy add-safe-to-evict -> resource default/Pod/doscontenedores
policy disallow-default-namespace -> resource default/Pod/doscontenedores failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/doscontenedores failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/doscontenedores failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/doscontenedores failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/doscontenedores failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/doscontenedores failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/doscontenedores failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/doscontenedores failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dos-game-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dos-game:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dos-game
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dos-game
  template:
    metadata:
      labels:
        app: dos-game
    spec:
      containers:
      - image: public.ecr.aws/o9r8h0v8/dos-game-repo:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 120
          periodSeconds: 10
        name: dos-game-container
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dos-game

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dos-game
policy disallow-default-namespace -> resource default/Deployment/dos-game failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/dos-game failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/dos-game failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dos-game failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dos-game failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dos-game failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/dos-game failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dos-game failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dos-game-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dos-game:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dos-game
  name: dos-game
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 31000
    port: 80
    targetPort: 80
  selector:
    app: dos-game
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/dos-game failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: dos-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/dos-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: dos-ingress
  namespace: default
spec:
  rules:
  - host: dos.example.com
    http:
      paths:
      - backend:
          service:
            name: dos-svc
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dos-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dos-secret:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMakNDQWhZQ0NRREFPRjl0THNhWFdqQU5CZ2txaGtpRzl3MEJBUXNGQURCYU1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhJVEFmQmdOVkJBb01HRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MApaREViTUJrR0ExVUVBd3dTWTJGbVpTNWxlR0Z0Y0d4bExtTnZiU0FnTUI0WERURTRNRGt4TWpFMk1UVXpOVm9YCkRUSXpNRGt4TVRFMk1UVXpOVm93V0RFTE1Ba0dBMVVFQmhNQ1ZWTXhDekFKQmdOVkJBZ01Ba05CTVNFd0h3WUQKVlFRS0RCaEpiblJsY201bGRDQlhhV1JuYVhSeklGQjBlU0JNZEdReEdUQVhCZ05WQkFNTUVHTmhabVV1WlhoaApiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcDZLbjdzeTgxCnAwanVKL2N5ayt2Q0FtbHNmanRGTTJtdVpOSzBLdGVjcUcyZmpXUWI1NXhRMVlGQTJYT1N3SEFZdlNkd0kyaloKcnVXOHFYWENMMnJiNENaQ0Z4d3BWRUNyY3hkam0zdGVWaVJYVnNZSW1tSkhQUFN5UWdwaW9iczl4N0RsTGM2SQpCQTBaalVPeWwwUHFHOVNKZXhNVjczV0lJYTVyRFZTRjJyNGtTa2JBajREY2o3TFhlRmxWWEgySTVYd1hDcHRDCm42N0pDZzQyZitrOHdnemNSVnA4WFprWldaVmp3cTlSVUtEWG1GQjJZeU4xWEVXZFowZXdSdUtZVUpsc202OTIKc2tPcktRajB2a29QbjQxRUUvK1RhVkVwcUxUUm9VWTNyemc3RGtkemZkQml6Rk8yZHNQTkZ4MkNXMGpYa05MdgpLbzI1Q1pyT2hYQUhBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLSEZDY3lPalp2b0hzd1VCTWRMClJkSEliMzgzcFdGeW5acS9MdVVvdnNWQTU4QjBDZzdCRWZ5NXZXVlZycTVSSWt2NGxaODFOMjl4MjFkMUpINnIKalNuUXgrRFhDTy9USkVWNWxTQ1VwSUd6RVVZYVVQZ1J5anNNL05VZENKOHVIVmhaSitTNkZBK0NuT0Q5cm4yaQpaQmVQQ0k1ckh3RVh3bm5sOHl3aWozdnZRNXpISXV5QmdsV3IvUXl1aTlmalBwd1dVdlVtNG52NVNNRzl6Q1Y3ClBwdXd2dWF0cWpPMTIwOEJqZkUvY1pISWc4SHc5bXZXOXg5QytJUU1JTURFN2IvZzZPY0s3TEdUTHdsRnh2QTgKN1dqRWVxdW5heUlwaE1oS1JYVmYxTjM0OWVOOThFejM4Zk9USFRQYmRKakZBL1BjQytHeW1lK2lHdDVPUWRGaAp5UkU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcWVpcCs3TXZOYWRJN2lmM01wUHJ3Z0pwYkg0N1JUTnBybVRTdENyWG5LaHRuNDFrCkcrZWNVTldCUU5semtzQndHTDBuY0NObzJhN2x2S2wxd2k5cTIrQW1RaGNjS1ZSQXEzTVhZNXQ3WGxZa1YxYkcKQ0pwaVJ6ejBza0lLWXFHN1BjZXc1UzNPaUFRTkdZMURzcGRENmh2VWlYc1RGZTkxaUNHdWF3MVVoZHErSkVwRwp3SStBM0kreTEzaFpWVng5aU9WOEZ3cWJRcCt1eVFvT05uL3BQTUlNM0VWYWZGMlpHVm1WWThLdlVWQ2cxNWhRCmRtTWpkVnhGbldkSHNFYmltRkNaYkp1dmRySkRxeWtJOUw1S0Q1K05SQlAvazJsUkthaTAwYUZHTjY4NE93NUgKYzMzUVlzeFR0bmJEelJjZGdsdEkxNURTN3lxTnVRbWF6b1Z3QndJREFRQUJBb0lCQVFDUFNkU1luUXRTUHlxbApGZlZGcFRPc29PWVJoZjhzSStpYkZ4SU91UmF1V2VoaEp4ZG01Uk9ScEF6bUNMeUw1VmhqdEptZTIyM2dMcncyCk45OUVqVUtiL1ZPbVp1RHNCYzZvQ0Y2UU5SNThkejhjbk9SVGV3Y290c0pSMXBuMWhobG5SNUhxSkpCSmFzazEKWkVuVVFmY1hackw5NGxvOUpIM0UrVXFqbzFGRnM4eHhFOHdvUEJxalpzVjdwUlVaZ0MzTGh4bndMU0V4eUZvNApjeGI5U09HNU9tQUpvelN0Rm9RMkdKT2VzOHJKNXFmZHZ5dGdnOXhiTGFRTC94MGtwUTYyQm9GTUJEZHFPZVBXCktmUDV6WjYvMDcvdnBqNDh5QTFRMzJQem9idWJzQkxkM0tjbjMyamZtMUU3cHJ0V2wrSmVPRmlPem5CUUZKYk4KNHFQVlJ6NWhBb0dCQU50V3l4aE5DU0x1NFArWGdLeWNrbGpKNkY1NjY4Zk5qNUN6Z0ZScUowOXpuMFRsc05ybwpGVExaY3hEcW5SM0hQWU00MkpFUmgySi9xREZaeW5SUW8zY2czb2VpdlVkQlZHWTgrRkkxVzBxZHViL0w5K3l1CmVkT1pUUTVYbUdHcDZyNmpleHltY0ppbS9Pc0IzWm5ZT3BPcmxEN1NQbUJ2ek5MazRNRjZneGJYQW9HQkFNWk8KMHA2SGJCbWNQMHRqRlhmY0tFNzdJbUxtMHNBRzR1SG9VeDBlUGovMnFyblRuT0JCTkU0TXZnRHVUSnp5K2NhVQprOFJxbWRIQ2JIelRlNmZ6WXEvOWl0OHNaNzdLVk4xcWtiSWN1YytSVHhBOW5OaDFUanNSbmU3NFowajFGQ0xrCmhIY3FIMHJpN1BZU0tIVEU4RnZGQ3haWWRidUI4NENtWmlodnhicFJBb0dBSWJqcWFNWVBUWXVrbENkYTVTNzkKWVNGSjFKelplMUtqYS8vdER3MXpGY2dWQ0thMzFqQXdjaXowZi9sU1JxM0hTMUdHR21lemhQVlRpcUxmZVpxYwpSMGlLYmhnYk9jVlZrSkozSzB5QXlLd1BUdW14S0haNnpJbVpTMGMwYW0rUlk5WUdxNVQ3WXJ6cHpjZnZwaU9VCmZmZTNSeUZUN2NmQ21mb09oREN0enVrQ2dZQjMwb0xDMVJMRk9ycW40M3ZDUzUxemM1em9ZNDR1QnpzcHd3WU4KVHd2UC9FeFdNZjNWSnJEakJDSCtULzZzeXNlUGJKRUltbHpNK0l3eXRGcEFOZmlJWEV0LzQ4WGY2ME54OGdXTQp1SHl4Wlp4L05LdER3MFY4dlgxUE9ucTJBNWVpS2ErOGpSQVJZS0pMWU5kZkR1d29seHZHNmJaaGtQaS80RXRUCjNZMThzUUtCZ0h0S2JrKzdsTkpWZXN3WEU1Y1VHNkVEVXNEZS8yVWE3ZlhwN0ZjanFCRW9hcDFMU3crNlRYcDAKWmdybUtFOEFSek00NytFSkhVdmlpcS9udXBFMTVnMGtKVzNzeWhwVTl6WkxPN2x0QjBLSWtPOVpSY21Vam84UQpjcExsSE1BcWJMSjhXWUdKQ2toaVd4eWFsNmhZVHlXWTRjVmtDMHh0VGwvaFVFOUllTktvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: dos-secret
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dos-syslog.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/syslog:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: syslog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: syslog
  template:
    metadata:
      labels:
        app: syslog
    spec:
      containers:
      - image: balabit/syslog-ng:4.3.0
        name: syslog
        ports:
        - containerPort: 514
        - containerPort: 601

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/syslog

skipped mutate policy add-safe-to-evict -> resource default/Deployment/syslog
policy disallow-default-namespace -> resource default/Deployment/syslog failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/syslog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/syslog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/syslog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/syslog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/syslog failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/syslog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/syslog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dos-syslog_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/syslog-svc:
apiVersion: v1
kind: Service
metadata:
  name: syslog-svc
  namespace: default
spec:
  ports:
  - port: 514
    protocol: TCP
    targetPort: 514
  selector:
    app: syslog

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotdotpwn.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dotdotpwn:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotdotpwn
  namespace: default
spec:
  selector:
    matchLabels:
      app: dotdotpwn
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: dotdotpwn
    spec:
      containers:
      - image: gcr.io/istio-testing/dotdotpwn:0.1
        name: dotdotpwn

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotdotpwn

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotdotpwn
policy disallow-default-namespace -> resource default/Deployment/dotdotpwn failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dotdotpwn failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dotdotpwn failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dotdotpwn failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dotdotpwn failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dotdotpwn failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dotdotpwn failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dotdotpwn failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dotfile-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dotfile-secret:
apiVersion: v1
data:
  .secret-file: dmFsdWUtMg0KDQo=
kind: Secret
metadata:
  name: dotfile-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotfile-secret_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/secret-dotfiles-pod:
apiVersion: v1
kind: Pod
metadata:
  name: secret-dotfiles-pod
  namespace: default
spec:
  containers:
  - command:
    - ls
    - -l
    - /etc/secret-volume
    image: registry.k8s.io/busybox
    name: dotfile-test-container
    volumeMounts:
    - mountPath: /etc/secret-volume
      name: secret-volume
      readOnly: true
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/secret-dotfiles-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/secret-dotfiles-pod
policy disallow-default-namespace -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/secret-dotfiles-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dotfile-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dotfile-secret:
apiVersion: v1
data:
  .secret-file: dmFsdWUtMg0KDQo=
kind: Secret
metadata:
  name: dotfile-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotfile-secret1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/secret-dotfiles-pod:
apiVersion: v1
kind: Pod
metadata:
  name: secret-dotfiles-pod
  namespace: default
spec:
  containers:
  - command:
    - ls
    - -l
    - /etc/secret-volume
    image: registry.k8s.io/busybox
    name: dotfile-test-container
    volumeMounts:
    - mountPath: /etc/secret-volume
      name: secret-volume
      readOnly: true
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/secret-dotfiles-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/secret-dotfiles-pod
policy disallow-default-namespace -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/secret-dotfiles-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dotfile-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dotfile-secret:
apiVersion: v1
data:
  .secret-file: dmFsdWUtMg0KDQo=
kind: Secret
metadata:
  name: dotfile-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotfile-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/apikey:
apiVersion: v1
data:
  API_KEY: bm9lZmF2aWVyZmxvcmlhbmhhdmFyZA==
kind: Secret
metadata:
  name: apikey
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotfile-secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/dotfile-secret:
apiVersion: v1
data:
  .secret-file: dmFsdWUtMg0KDQo=
kind: Secret
metadata:
  name: dotfile-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotfile-secret4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/secret-dotfiles-pod:
apiVersion: v1
kind: Pod
metadata:
  name: secret-dotfiles-pod
  namespace: default
spec:
  containers:
  - command:
    - ls
    - -l
    - /etc/secret-volume
    image: registry.k8s.io/busybox
    name: dotfile-test-container
    volumeMounts:
    - mountPath: /etc/secret-volume
      name: secret-volume
      readOnly: true
  volumes:
  - name: secret-volume
    secret:
      secretName: dotfile-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/secret-dotfiles-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/secret-dotfiles-pod
policy disallow-default-namespace -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/secret-dotfiles-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/secret-dotfiles-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/secret-dotfiles-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dotnet_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dotnetapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnetapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnetapp
  template:
    metadata:
      labels:
        app: dotnetapp
        app.newrelic.instrumentation: newrelic-dotnet-agent
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: ghcr.io/open-telemetry/opentelemetry-operator/e2e-test-app-dotnet:main
        name: dotnetapp
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotnetapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotnetapp
policy disallow-default-namespace -> resource default/Deployment/dotnetapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dotnetapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dotnetapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dotnetapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dotnetapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dotnetapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dotnetapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dotnetapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dotnet_deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/dotnetapp-service:
apiVersion: v1
kind: Service
metadata:
  name: dotnetapp-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: dotnetapp
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotnet-api1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elympics/Deployment/dotnet-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-api
  namespace: elympics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-api
  template:
    metadata:
      labels:
        app: dotnet-api
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: ASPNETCORE_URLS
          value: http://*:8001
        - name: GolangServiceConfig__Url
          value: http://golang-api-service:8000
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              key: connection-string
              name: postgres-secret
        image: corey773/elympics-dotnet:latest
        name: dotnet-api
        ports:
        - containerPort: 8001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elympics/Deployment/dotnet-api

skipped mutate policy add-safe-to-evict -> resource elympics/Deployment/dotnet-api
policy disallow-latest-tag -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource elympics/Deployment/dotnet-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: dotnet-api1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elympics/Service/dotnet-api-service:
apiVersion: v1
kind: Service
metadata:
  name: dotnet-api-service
  namespace: elympics
spec:
  ports:
  - nodePort: 30000
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: dotnet-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dotnet-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dotnet-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dotnet-app
  name: dotnet-app-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-app
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-dotnet: otel-autoinstrumentation
      labels:
        app: dotnet-app
    spec:
      containers:
      - image: ghcr.io/practical-otel/dotnet-plain-for-k8s-workshop:latest
        name: dotnet-app
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotnet-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotnet-app-deployment
policy disallow-default-namespace -> resource default/Deployment/dotnet-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dotnet-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dotnet-app-coded-instrumentation.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dotnet-app-coded-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dotnet-app-coded
  name: dotnet-app-coded-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-app-coded
  template:
    metadata:
      labels:
        app: dotnet-app-coded
    spec:
      containers:
      - env:
        - name: OTEL_NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://$(OTEL_NODE_IP):4317
        image: ghcr.io/practical-otel/dotnet-coded-instrumentation-for-k8s-workshop:latest
        name: dotnet-app
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotnet-app-coded-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dotnet-app-coded-deployment
policy disallow-default-namespace -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/dotnet-app-coded-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: dovecot-dict-auth-conf-ext.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/ConfigMap/dovecot-dict-auth-conf-ext:
apiVersion: v1
data:
  dovecot-dict-auth.conf.ext: |
    # This file is commonly accessed via passdb {} or userdb {} section in
    # conf.d/auth-dict.conf.ext

    # Dictionary URI
    #uri =

    # Default password scheme
    default_pass_scheme = MD5

    # Username iteration prefix. Keys under this are assumed to contain usernames.
    iterate_prefix = userdb/

    # Should iteration be disabled for this userdb? If this userdb acts only as a
    # cache there's no reason to try to iterate the (partial & duplicate) users.
    #iterate_disable = no

    # The example here shows how to do multiple dict lookups and merge the replies.
    # The "passdb" and "userdb" keys are JSON objects containing key/value pairs,
    # for example: { "uid": 1000, "gid": 1000, "home": "/home/user" }

    key passdb {
      key = passdb/%!u(MISSING)
      format = json
    }
    key userdb {
      key = userdb/%!u(MISSING)
      format = json
    }
    key quota {
      key = userdb/%!u(MISSING)/quota
      #format = value
      # The default_value is used if the key isn't found. If default_value setting
      # isn't specified at all (even as empty), the passdb/userdb lookup fails with
      # "user doesn't exist".
      default_value = 100M
    }

    # Space separated list of keys whose values contain key/value paired objects.
    # All the key/value pairs inside the object are added as passdb fields.
    passdb_objects = passdb

    #passdb_fields {
    #}

    # Userdb key/value object list.
    userdb_objects = userdb

    userdb_fields {
      # dict:<key> refers to key names
      quota_rule = *:storage=%!{(MISSING)dict:quota}

      # dict:<key>.<objkey> refers to the objkey inside (JSON) object
      mail = maildir:%!{(MISSING)dict:userdb.home}/Maildir
    }
kind: ConfigMap
metadata:
  name: dovecot-dict-auth-conf-ext
  namespace: mailserver

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dovecot-dict-sql-conf-ext.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/ConfigMap/dovecot-dict-sql-conf-ext:
apiVersion: v1
data:
  dovecot-dict-sql.conf.ext: |
    # This file is commonly accessed via dict {} section in dovecot.conf

    #connect = host=localhost dbname=mails user=testuser password=pass

    # CREATE TABLE quota (
    #   username varchar(100) not null,
    #   bytes bigint not null default 0,
    #   messages integer not null default 0,
    #   primary key (username)
    # );

    map {
      pattern = priv/quota/storage
      table = quota
      username_field = username
      value_field = bytes
    }
    map {
      pattern = priv/quota/messages
      table = quota
      username_field = username
      value_field = messages
    }
kind: ConfigMap
metadata:
  name: dovecot-dict-sql-conf-ext
  namespace: mailserver

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dovecot-oauth2-conf-ext.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/ConfigMap/dovecot-oauth2-conf-ext:
apiVersion: v1
data:
  dovecot-oauth2.conf.ext: |
    ### OAuth2 password database configuration

    ## url for verifying token validity. Token is appended to the URL
    # tokeninfo_url = http://endpoint/oauth/tokeninfo?access_token=

    ## introspection endpoint, used to gather extra fields and other information.
    # introspection_url = http://endpoint/oauth/me

    ## How introspection is made, valid values are
    ##   auth = GET request with Bearer authentication
    ##   get  = GET request with token appended to URL
    ##   post = POST request with token=bearer_token as content
    ##   local = perform local validation only
    # introspection_mode = auth

    ## Force introspection even if tokeninfo contains wanted fields
    ## Set this to yes if you are using active_attribute
    # force_introspection = no

    ## Validation key dictionary (e.g. fs:posix:prefix=/etc/dovecot/keys/)
    ## Lookup key is /shared/<azp:default>/<alg>/<kid:default>
    # local_validation_key_dict =

    ## A single wanted scope of validity (optional)
    # scope = something

    ## username attribute in response (default: email)
    # username_attribute = email

    ## username normalization format (default: %!L(MISSING)u)
    # username_format = %!L(MISSING)u

    ## Attribute name for checking whether account is disabled (optional)
    # active_attribute =

    ## Expected value in active_attribute (empty = require present, but anything goes)
    # active_value =

    ## Expected issuer(s) for the token (space separated list)
    # issuers =

    ## URL to RFC 7628 OpenID Provider Configuration Information schema
    # openid_configuration_url =

    ## Extra fields to set in passdb response (in passdb static style)
    # pass_attrs =

    ## Timeout in milliseconds
    # timeout_msecs = 0

    ## Enable debug logging
    # debug = no

    ## Max parallel connections (how many simultaneous connections to open)
    # max_parallel_connections = 10

    ## Max pipelined requests (how many requests to send per connection, requires server-side support)
    # max_pipelined_requests = 1

    ## HTTP request raw log directory
    # rawlog_dir = /tmp/oauth2

    ## TLS settings
    # tls_ca_cert_file = /path/to/ca-certificates.txt
    # tls_ca_cert_dir = /path/to/certs/
    # tls_cert_file = /path/to/client/cert
    # tls_key_file = /path/to/client/key
    # tls_cipher_suite = HIGH:!SSLv2
    # tls_allow_invalid_cert = FALSE
kind: ConfigMap
metadata:
  name: dovecot-oauth2-conf-ext
  namespace: mailserver

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dovecot-openssl-cnf.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/ConfigMap/dovecot-openssl-cnf:
apiVersion: v1
data:
  dovecot-openssl.cnf: |
    [ req ]
    default_bits = 2048
    encrypt_key = yes
    distinguished_name = req_dn
    x509_extensions = cert_type
    prompt = no

    [ req_dn ]
    # country (2 letter code)
    #C=FI

    # State or Province Name (full name)
    #ST=

    # Locality Name (eg. city)
    #L=Helsinki

    # Organization (eg. company)
    #O=Dovecot

    # Organizational Unit Name (eg. section)
    OU=IMAP server

    # Common Name (*.example.com is also possible)
    CN=imap.example.com

    # E-mail contact
    emailAddress=postmaster@example.com

    [ cert_type ]
    nsCertType = server
kind: ConfigMap
metadata:
  name: dovecot-openssl-cnf
  namespace: mailserver

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dovecot-statefulset_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/Service/dovecot:
apiVersion: v1
kind: Service
metadata:
  name: dovecot
  namespace: mailserver
spec:
  ports:
  - name: imap-unenc
    port: 143
    protocol: TCP
    targetPort: 143
  - name: imap-enc
    port: 993
    protocol: TCP
    targetPort: 993
  selector:
    app: dovecot

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dovecot-statefulset_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/Service/lmtp:
apiVersion: v1
kind: Service
metadata:
  name: lmtp
  namespace: mailserver
spec:
  ports:
  - name: lmtp
    port: 24
    protocol: TCP
  selector:
    app: dovecot

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: dovecot-statefulset_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mailserver/Service/sasl-auth:
apiVersion: v1
kind: Service
metadata:
  name: sasl-auth
  namespace: mailserver
spec:
  ports:
  - name: sasl-auth
    port: 13050
    protocol: TCP
  selector:
    app: dovecot

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: downloads-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/downloads:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    velero.io/exclude-from-backup: "true"
  name: downloads
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  - ReadOnlyMany
  - ReadWriteOnce
  capacity:
    storage: 5000Gi
  mountOptions:
  - async
  - nfsvers=4.2
  - noatime
  nfs:
    path: /mnt/HDD_POOL/downloads
    server: 10.0.6.2
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: downloads-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/PersistentVolumeClaim/downloads:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    velero.io/exclude-from-backup: "true"
  name: downloads
  namespace: media
spec:
  accessModes:
  - ReadWriteOnce
  - ReadWriteMany
  - ReadOnlyMany
  resources:
    requests:
      storage: 5000Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: downloads

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: downward-api.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/nodejs-env-config:
apiVersion: v1
data:
  APPLICATION: My Cool Application
  VERSION: 1.0.0
kind: ConfigMap
metadata:
  name: nodejs-env-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: downward-api1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/nodejs-env-config:
apiVersion: v1
data:
  APPLICATION: My Cool Application
  VERSION: 1.0.0
kind: ConfigMap
metadata:
  name: nodejs-env-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: downward-api1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/nodejs-env:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nodejs-env
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nodejs-env
  template:
    metadata:
      labels:
        name: nodejs-env
      name: nodejs-env
    spec:
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        envFrom:
        - configMapRef:
            name: nodejs-env-config
        image: khannedy/nodejs-env
        name: nodejs-env
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/nodejs-env

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/nodejs-env
policy disallow-latest-tag -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/nodejs-env failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: downward-api-env.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/downward:
apiVersion: v1
kind: Pod
metadata:
  name: downward
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "9999999"
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          fieldPath: spec.serviceAccountName
    - name: CONTAINER_CPU_REQUEST_MILLICORES
      valueFrom:
        resourceFieldRef:
          divisor: 1m
          resource: requests.cpu
    - name: CONTAINER_MEMORY_LIMIT_KIBIBYTES
      valueFrom:
        resourceFieldRef:
          divisor: 1Ki
          resource: limits.memory
    image: busybox
    name: main
    resources:
      limits:
        cpu: 100m
        memory: 4Mi
      requests:
        cpu: 15m
        memory: 100Ki

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/downward

skipped mutate policy add-safe-to-evict -> resource default/Pod/downward
policy disallow-default-namespace -> resource default/Pod/downward failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/downward failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/downward failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/downward failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/downward failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/downward failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/downward failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/downward failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: downward-api-env1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/downward:
apiVersion: v1
kind: Pod
metadata:
  name: downward
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "9999999"
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          fieldPath: spec.serviceAccountName
    - name: CONTAINER_CPU_REQUEST_MILLICORES
      valueFrom:
        resourceFieldRef:
          divisor: 1m
          resource: requests.cpu
    - name: CONTAINER_MEMORY_LIMIT_KIBIBYTES
      valueFrom:
        resourceFieldRef:
          divisor: 1Ki
          resource: limits.memory
    image: busybox
    name: main
    resources:
      limits:
        cpu: 100m
        memory: 4Mi
      requests:
        cpu: 15m
        memory: 100Ki

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/downward

skipped mutate policy add-safe-to-evict -> resource default/Pod/downward
policy disallow-default-namespace -> resource default/Pod/downward failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/downward failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/downward failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/downward failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/downward failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/downward failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/downward failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/downward failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: downward-api-volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/downward:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    key1: value1
    key2: |
      multi
      line
      value
  labels:
    foo: bar
  name: downward
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "9999999"
    image: busybox
    name: main
    resources:
      limits:
        cpu: 100m
        memory: 4Mi
      requests:
        cpu: 15m
        memory: 100Ki
    volumeMounts:
    - mountPath: /etc/downward
      name: downward
  volumes:
  - downwardAPI:
      items:
      - fieldRef:
          fieldPath: metadata.name
        path: podName
      - fieldRef:
          fieldPath: metadata.namespace
        path: podNamespace
      - fieldRef:
          fieldPath: metadata.labels
        path: labels
      - fieldRef:
          fieldPath: metadata.annotations
        path: annotations
      - path: containerCpuRequestMilliCores
        resourceFieldRef:
          containerName: main
          divisor: 1m
          resource: requests.cpu
      - path: containerMemoryLimitBytes
        resourceFieldRef:
          containerName: main
          divisor: 1
          resource: limits.memory
    name: downward

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/downward

skipped mutate policy add-safe-to-evict -> resource default/Pod/downward
policy disallow-default-namespace -> resource default/Pod/downward failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/downward failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/downward failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/downward failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/downward failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/downward failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/downward failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/downward failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: downward-api-volume1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/downward:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    key1: value1
    key2: |
      multi
      line
      value
  labels:
    foo: bar
  name: downward
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "9999999"
    image: busybox
    name: main
    resources:
      limits:
        cpu: 100m
        memory: 4Mi
      requests:
        cpu: 15m
        memory: 100Ki
    volumeMounts:
    - mountPath: /etc/downward
      name: downward
  volumes:
  - downwardAPI:
      items:
      - fieldRef:
          fieldPath: metadata.name
        path: podName
      - fieldRef:
          fieldPath: metadata.namespace
        path: podNamespace
      - fieldRef:
          fieldPath: metadata.labels
        path: labels
      - fieldRef:
          fieldPath: metadata.annotations
        path: annotations
      - path: containerCpuRequestMilliCores
        resourceFieldRef:
          containerName: main
          divisor: 1m
          resource: requests.cpu
      - path: containerMemoryLimitBytes
        resourceFieldRef:
          containerName: main
          divisor: 1
          resource: limits.memory
    name: downward

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/downward

skipped mutate policy add-safe-to-evict -> resource default/Pod/downward
policy disallow-default-namespace -> resource default/Pod/downward failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/downward failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/downward failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/downward failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/downward failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/downward failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/downward failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/downward failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

