##### FILE: admin_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/ClusterRole/admin-dubbo-admin-clusterrole:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin-clusterrole
  namespace: dubbo-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - configmaps
  - deployments
  - services
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/ClusterRoleBinding/admin-dubbo-admin-clusterrolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin-clusterrolebinding
  namespace: dubbo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin-dubbo-admin-clusterrole
subjects:
- kind: ServiceAccount
  name: admin-dubbo-admin
  namespace: dubbo-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/ConfigMap/admin-dubbo-admin-config:
apiVersion: v1
data:
  admin.yml: |-
    dubbo:
      application:
        logger: slf4j
        name: null
      enabled: true
      registry:
        address: ${admin.registry.address}
    grafana:
      address: grafana.dubbo-system.svc.cluster.local
    mysql-dsn: root:password@tcp(127.0.0.1:3306)/dubbo-admin?charset=utf8&parseTime=true
    nacos:
      address: nacos://nacos:8848?group=DEFAULT_GROUP&namespace=public
      center: nacos://nacos:8848?group=dubbo
      enabled: false
      group: dubbo
      namespace: public
    prometheus:
      address: prometheus.dubbo-system.svc.cluster.local:3000
    report:
      nacos:
        address: nacos://nacos:8848?group=dubbo
        group: dubbo
        namespace: public
      zookeeper:
        address: zookeeper://zookeeper:2181
    zookeeper:
      address: zookeeper://zookeeper:2181
      center: zookeeper://zookeeper:2181
      enabled: true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin-config
  namespace: dubbo-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/Deployment/admin-dubbo-admin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin
  namespace: dubbo-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: admin
      app.kubernetes.io/name: dubbo-admin
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: admin
        app.kubernetes.io/name: dubbo-admin
    spec:
      containers:
      - env:
        - name: ADMIN_CONFIG_PATH
          value: /config/admin.yml
        image: apache/dubbo-admin:0.5.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: dubbo-admin
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources: {}
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /config
          name: application-properties
          readOnly: true
        - mountPath: /storage
          name: storage
          readOnly: true
      serviceAccountName: admin-dubbo-admin
      volumes:
      - configMap:
          name: admin-dubbo-admin-config
        name: application-properties
      - name: storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dubbo-system/Deployment/admin-dubbo-admin

skipped mutate policy add-safe-to-evict -> resource dubbo-system/Deployment/admin-dubbo-admin
policy drop-all-capabilities -> resource dubbo-system/Deployment/admin-dubbo-admin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dubbo-system/Deployment/admin-dubbo-admin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource dubbo-system/Deployment/admin-dubbo-admin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource dubbo-system/Deployment/admin-dubbo-admin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource dubbo-system/Deployment/admin-dubbo-admin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: admin_component-render_manifest.golden_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/Role/admin-dubbo-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin
  namespace: dubbo-system
rules:
- apiGroups:
  - extensions
  resourceNames:
  - admin-dubbo-admin
  resources:
  - podsecuritypolicies
  verbs:
  - use

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/RoleBinding/admin-dubbo-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin
  namespace: dubbo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: admin-dubbo-admin
subjects:
- kind: ServiceAccount
  name: admin-dubbo-admin
  namespace: dubbo-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/ServiceAccount/admin-dubbo-admin:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin
  namespace: dubbo-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/Service/admin-dubbo-admin-headless:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin-headless
  namespace: dubbo-system
spec:
  clusterIP: None
  ports:
  - name: service
    port: 38080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/name: dubbo-admin
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_component-render_manifest.golden_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dubbo-system/Service/admin-dubbo-admin:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dubbo-admin
    helm.sh/chart: dubbo-admin-0.5.0
  name: admin-dubbo-admin
  namespace: dubbo-system
spec:
  ports:
  - name: service
    port: 38080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: admin
    app.kubernetes.io/name: dubbo-admin
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/admin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/admin-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: admin-role
  namespace: default
rules:
- apiGroups:
  - cloud.encoder.run
  resources:
  - models
  - repositories
  - storages
  - pipelines
  - pipelineexecutions
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_rbac_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/admin-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: admin-role
subjects:
- kind: ServiceAccount
  name: admin
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_rbac_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/pipeline-worker:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-worker
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_rbac_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/pipeline-worker-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pipeline-worker-role
  namespace: default
rules:
- apiGroups:
  - cloud.encoder.run
  resources:
  - storages
  - models
  - repositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_rbac_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/pipeline-worker-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-worker-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipeline-worker-role
subjects:
- kind: ServiceAccount
  name: pipeline-worker
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_role_binding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_role_binding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_service_account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_service_account1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_user.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_user_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_user1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admin_user1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/admin-user:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adminer_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adminer-web:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer-web
  namespace: default
spec:
  selector:
    matchLabels:
      app: adminer-web
  template:
    metadata:
      labels:
        app: adminer-web
    spec:
      containers:
      - args:
        - php
        - -S
        - 0.0.0.0:8080
        - -t
        - /var/www/html
        image: adminer:4.7-standalone
        name: web

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adminer-web

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adminer-web
policy disallow-default-namespace -> resource default/Deployment/adminer-web failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/adminer-web failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/adminer-web failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adminer-web failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/adminer-web failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/adminer-web failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/adminer-web failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/adminer-web failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: adminer_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to adminer-ns/Deployment/adminer:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: adminer-ns
spec:
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
      - image: adminer:latest
        name: adminer
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource adminer-ns/Deployment/adminer

skipped mutate policy add-safe-to-evict -> resource adminer-ns/Deployment/adminer
policy disallow-latest-tag -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource adminer-ns/Deployment/adminer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: adminer_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adminer:
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30001
    port: 8080
    targetPort: 8080
  selector:
    app: adminer
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/adminer failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: adminer9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/wp-adminer:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: adminer
  name: wp-adminer
  namespace: default
spec:
  ports:
  - nodePort: 31500
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: adminer
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/wp-adminer failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: administrator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${namespace}/Secret/${stackname}-da-secrets:
apiVersion: v1
data:
  DM_GR_REGISTRY_PASSWORD: ${dm_gr_registry_password_encoded}
  DM_PREFERENCES_PASSWORD: ${dm_preferences_password_encoded}
  DM_PRESETS_PASSWORD: ${dm_presets_password_encoded}
kind: Secret
metadata:
  name: ${stackname}-da-secrets
  namespace: ${namespace}
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: administrator_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${namespace}/ConfigMap/${stackname}-da-configmap:
apiVersion: v1
data:
  DM_DOCBROKER_HOST: ${stackname}-docbroker-int
  DM_DOCBROKER_PORT: ${dm_docbroker_port}
  DM_GR_REGISTRY_REPO: ${dm_gr_registry_repo}
  DM_PREFERENCES_REPO: ${dm_docbase_name}
kind: ConfigMap
metadata:
  name: ${stackname}-da-configmap
  namespace: ${namespace}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: administrator_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${namespace}/Deployment/${stackname}-da-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${stackname}-da
  name: ${stackname}-da-deployment
  namespace: ${namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${stackname}-da
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${stackname}-da
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: ${stackname}-da-secrets
        - configMapRef:
            name: ${stackname}-da-configmap
        image: ${dm_da_image}
        name: ${stackname}-da
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
      hostname: ${stackname}-da
      initContainers:
      - command:
        - sh
        - -c
        - |
          while true; do
            ready=$(kubectl get pods -l app=${DOLLAR}DM_SERVER_NAME -o jsonpath='{.items[*].status.containerStatuses[*].ready}' | grep -c true)
            echo ${DOLLAR}ready pods ready
            if  [ "${DOLLAR}ready" -gt 0 ]; then
              echo "Starting deployment..."
              break
            fi
            echo "Waiting 60 seconds for Content Server Readiness..."
            sleep 60
          done
        env:
        - name: DM_SERVER_NAME
          value: ${stackname}-server
        image: alpine/k8s:1.29.4
        name: ${stackname}-da-init
      restartPolicy: Always
      serviceAccountName: ${stackname}-resource-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ${namespace}/Deployment/${stackname}-da-deployment

skipped mutate policy add-safe-to-evict -> resource ${namespace}/Deployment/${stackname}-da-deployment
policy disallow-latest-tag -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ${namespace}/Deployment/${stackname}-da-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: administrator_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${namespace}/Service/${stackname}-da:
apiVersion: v1
kind: Service
metadata:
  name: ${stackname}-da
  namespace: ${namespace}
spec:
  ports:
  - name: docbroker
    port: 8080
    targetPort: http
  selector:
    app: ${stackname}-da

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: administrator-cluster-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cluster-administrator:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-administrator
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - get
  - create
  - delete
  - update
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: administrator-cluster-role-binding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/cluster-administrator-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-administrator-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-administrator
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: cluster-administrator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adminRole.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to roboshop/Role/admin-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: admin-role
  namespace: roboshop
rules:
- apiGroup:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adminRole_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to roboshop/RoleBinding/admin-role-rb:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin-role-rb
  namespace: roboshop
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: admin-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: sam

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admins.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/cluster-admins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: entra:Cluster.Admin

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adminuser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/sysadmin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sysadmin
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adminuser1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/admin-user:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/opa-viewer:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opa-viewer
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:opa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/Role/configmap-modifier:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-modifier
  namespace: opa
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/RoleBinding/opa-configmap-modifier:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: opa-configmap-modifier
  namespace: opa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmap-modifier
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:opa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/Service/opa:
apiVersion: v1
kind: Service
metadata:
  name: opa
  namespace: opa
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: opa

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/Deployment/opa:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: opa
  name: opa
  namespace: opa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      labels:
        app: opa
      name: opa
    spec:
      containers:
      - args:
        - run
        - --server
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        - --addr=0.0.0.0:8443
        - --addr=http://127.0.0.1:8181
        - --set=services.default.url=http://host.minikube.internal:8888
        - --set=bundles.default.resource=bundle.tar.gz
        - --log-format=json-pretty
        - --set=status.console=true
        - --set=decision_logs.console=true
        image: openpolicyagent/opa:0.42.2-rootless
        livenessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 5
        name: opa
        readinessProbe:
          httpGet:
            path: /health?plugins&bundle
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 5
        volumeMounts:
        - mountPath: /certs
          name: opa-server
          readOnly: true
      - args:
        - --replicate-cluster=v1/namespaces
        - --replicate=networking.k8s.io/v1/ingresses
        image: openpolicyagent/kube-mgmt:2.0.1
        name: kube-mgmt
      volumes:
      - name: opa-server
        secret:
          secretName: opa-server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource opa/Deployment/opa

skipped mutate policy add-safe-to-evict -> resource opa/Deployment/opa
policy drop-all-capabilities -> resource opa/Deployment/opa failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource opa/Deployment/opa failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource opa/Deployment/opa failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource opa/Deployment/opa failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource opa/Deployment/opa failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource opa/Deployment/opa failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource opa/Deployment/opa failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: admission-controller1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/opa-viewer:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opa-viewer
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:opa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/Role/configmap-modifier:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-modifier
  namespace: opa
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/RoleBinding/opa-configmap-modifier:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: opa-configmap-modifier
  namespace: opa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmap-modifier
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:opa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/Service/opa:
apiVersion: v1
kind: Service
metadata:
  name: opa
  namespace: opa
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: opa

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to opa/Deployment/opa:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: opa
  name: opa
  namespace: opa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      labels:
        app: opa
      name: opa
    spec:
      containers:
      - args:
        - run
        - --server
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        - --addr=0.0.0.0:8443
        - --addr=http://127.0.0.1:8181
        - --set=services.default.url=http://host.minikube.internal:8888
        - --set=bundles.default.resource=bundle.tar.gz
        - --log-format=json-pretty
        - --set=status.console=true
        - --set=decision_logs.console=true
        image: openpolicyagent/opa:0.42.2-rootless
        livenessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 5
        name: opa
        readinessProbe:
          httpGet:
            path: /health?plugins&bundle
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 5
        volumeMounts:
        - mountPath: /certs
          name: opa-server
          readOnly: true
      - args:
        - --replicate-cluster=v1/namespaces
        - --replicate=networking.k8s.io/v1/ingresses
        image: openpolicyagent/kube-mgmt:2.0.1
        name: kube-mgmt
      volumes:
      - name: opa-server
        secret:
          secretName: opa-server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource opa/Deployment/opa

skipped mutate policy add-safe-to-evict -> resource opa/Deployment/opa
policy drop-all-capabilities -> resource opa/Deployment/opa failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource opa/Deployment/opa failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource opa/Deployment/opa failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource opa/Deployment/opa failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource opa/Deployment/opa failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource opa/Deployment/opa failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource opa/Deployment/opa failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: admission-controller2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hwameistor-admission-controller:
apiVersion: v1
kind: Service
metadata:
  name: hwameistor-admission-controller
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: admission-api
  selector:
    app: hwameistor-admission-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/hwameistor-admission-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hwameistor-admission-controller
  name: hwameistor-admission-controller
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hwameistor-admission-controller
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: hwameistor-admission-controller
    spec:
      containers:
      - args:
        - --cert-dir=/etc/webhook/certs
        - --tls-private-key-file=tls.key
        - --tls-cert-file=tls.crt
        env:
        - name: WEBHOOK_NAMESPACE
          value: default
        - name: MUTATE_CONFIG
          value: hwameistor-admission-mutate
        - name: WEBHOOK_SERVICE
          value: hwameistor-admission-controller
        - name: MUTATE_PATH
          value: /mutate
        - name: FAILURE_POLICY
          value: Ignore
        image: ghcr.io/hwameistor/admission:v0.14.1
        imagePullPolicy: IfNotPresent
        name: server
        ports:
        - containerPort: 18443
          name: admission-api
        resources: {}
        volumeMounts:
        - mountPath: /etc/webhook/certs
          name: admission-controller-tls-certs
      serviceAccountName: hwameistor-admin
      volumes:
      - emptyDir: {}
        name: admission-controller-tls-certs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/hwameistor-admission-controller
policy disallow-default-namespace -> resource default/Deployment/hwameistor-admission-controller failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/hwameistor-admission-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: admission-controller2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/MutatingWebhookConfiguration/hwameistor-admission-mutate:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: hwameistor-admission-mutate
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/vpa-admission-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      labels:
        app: vpa-admission-controller
    spec:
      containers:
      - args:
        - --v=4
        - --stderrthreshold=info
        - --reload-cert
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-admission-controller:1.2.0
        imagePullPolicy: Always
        name: admission-controller
        ports:
        - containerPort: 8000
        - containerPort: 8944
          name: prometheus
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: vpa-admission-controller
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-tls-certs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/vpa-admission-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/vpa-admission-controller
policy drop-all-capabilities -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: admission-controller-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/vpa-webhook:
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app: vpa-admission-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/vpa-admission-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      labels:
        app: vpa-admission-controller
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
        imagePullPolicy: Always
        name: admission-controller
        ports:
        - containerPort: 8000
        - containerPort: 8944
          name: prometheus
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: vpa-admission-controller
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-tls-certs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/vpa-admission-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/vpa-admission-controller
policy drop-all-capabilities -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: admission-controller-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/vpa-webhook:
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app: vpa-admission-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-controller-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/vpa-admission-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      labels:
        app: vpa-admission-controller
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
        imagePullPolicy: Always
        name: admission-controller
        ports:
        - containerPort: 8000
        - containerPort: 8944
          name: prometheus
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: vpa-admission-controller
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-tls-certs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/vpa-admission-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/vpa-admission-controller
policy drop-all-capabilities -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/vpa-admission-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: admission-controller-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/vpa-webhook:
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app: vpa-admission-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/MutatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  reinvocationPolicy: 錯ƶ
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.MutatingWebhookConfiguration9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/MutatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  reinvocationPolicy: reinvocationPolicyValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicy9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingAdmissionPolicyBinding9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "39"
  clientConfig:
    caBundle: IQ==
    service:
      name: "22"
      namespace: "21"
      path: "23"
      port: -1971381490
    url: "20"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "19"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "24"
    apiVersions:
    - "25"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "26"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ValidatingWebhookConfiguration/2:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
webhooks:
- admissionReviewVersions:
  - "40"
  clientConfig:
    caBundle: IQ==
    service:
      name: "23"
      namespace: "22"
      path: "24"
      port: -1971381490
    url: "21"
  failurePolicy: VŚ(ĿȊ甞谐颋
  matchPolicy: SǡƏ
  name: "20"
  namespaceSelector:
    matchExpressions:
    - key: 2.-__E_Sv__26KX_R_.-.Nth._--S_4DA_-5_-4lQ42M--n1-5
      operator: In
      values:
      - Ou1.m_.5AW-_S-.3g.7_2fNc5-_.-RX8
    matchLabels:
      2.1.L.l-Y._.-44..d.__Gg8-2_kS91.e5K-_e63_-_3-n-_-__3u-.J: G_.7U-Uo_4_-D7r__.am64
  objectSelector:
    matchExpressions:
    - key: 35--5ht-a-29--0qso79yg--79-e-a74bc-v--0jjy45-17-05-3z-4838/3-H2._67yg-Ln-__.-__2--z.t2w
      operator: Exists
    matchLabels:
      7p_w.e6._.pj5t_k-_v.-6b6.N_-u.---.8-L: k-U.v.4
  rules:
  - apiGroups:
    - "25"
    apiVersions:
    - "26"
    operations:
    - 8衍`Ĩɘ.蘯
    resources:
    - "27"
    scope: 昍řČ扷5ƗǸƢ6/
  sideEffects: Ɵ)Ù
  timeoutSeconds: 1132918207

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingWebhookConfiguration/nameValue:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
webhooks:
- admissionReviewVersions:
  - admissionReviewVersionsValue
  clientConfig:
    caBundle: Ag==
    service:
      name: nameValue
      namespace: namespaceValue
      path: pathValue
      port: 4
    url: urlValue
  failurePolicy: failurePolicyValue
  matchPolicy: matchPolicyValue
  name: nameValue
  namespaceSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  objectSelector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  rules:
  - apiGroups:
    - apiGroupsValue
    apiVersions:
    - apiVersionsValue
    operations:
    - operationsValue
    resources:
    - resourcesValue
    scope: scopeValue
  sideEffects: sideEffectsValue
  timeoutSeconds: 7

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicy/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  auditAnnotations:
  - key: keyValue
    valueExpression: valueExpressionValue
  failurePolicy: failurePolicyValue
  matchConditions:
  - expression: expressionValue
    name: nameValue
  matchConstraints:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramKind:
    apiVersion: apiVersionValue
    kind: kindValue
  validations:
  - expression: expressionValue
    message: messageValue
    messageExpression: messageExpressionValue
    reason: reasonValue
  variables:
  - expression: expressionValue
    name: nameValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  observedGeneration: 1
  typeChecking:
    expressionWarnings:
    - fieldRef: fieldRefValue
      warning: warningValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ValidatingAdmissionPolicyBinding/nameValue:
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  matchResources:
    excludeResourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
    matchPolicy: matchPolicyValue
    namespaceSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    objectSelector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
    resourceRules:
    - apiGroups:
      - apiGroupsValue
      apiVersions:
      - apiVersionsValue
      operations:
      - operationsValue
      resourceNames:
      - resourceNamesValue
      resources:
      - resourcesValue
      scope: scopeValue
  paramRef:
    name: nameValue
    namespace: namespaceValue
    parameterNotFoundAction: parameterNotFoundActionValue
    selector:
      matchExpressions:
      - key: keyValue
        operator: operatorValue
        values:
        - valuesValue
      matchLabels:
        matchLabelsKey: matchLabelsValue
  policyName: policyNameValue
  validationActions:
  - validationActionsValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/admission:
apiVersion: v1
kind: Service
metadata:
  name: admission
  namespace: default
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    name: redis-enterprise-operator

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-service-account1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: AdmissionWebhook.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/pod-policy.example.com:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: pod-policy.example.com
  namespace: default
rules:
- apiGroups:
  - ""
  apiVersions:
  - v1
  operations:
  - CREATE
  resources:
  - pods
  scope: Namespaced
webhooks:
- caBundle: CiøtLSØtQk ...... tLSØK
  clientConfig: null
  name: pod-policy.example.com
  service:
    name: webhook-service
    namespace: webhook-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook
  namespace: config-management-system
spec:
  minReadySeconds: 10
  replicas: 2
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - command:
        - /admission-webhook
        - --graceful-shutdown-timeout=10s
        - --health-probe-bind-addr=:10258
        image: ghcr.io/droot/admission-webhook:gcp-ksa-1.0.1
        name: admission-webhook
        ports:
        - containerPort: 10250
          name: admission
          protocol: TCP
        - containerPort: 10258
          name: readyz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: readyz
            scheme: HTTP
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
      serviceAccountName: admission-webhook
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: admission-webhook-cert

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource config-management-system/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource config-management-system/Deployment/admission-webhook
policy drop-all-capabilities -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
    monitored: "true"
  name: admission-webhook
  namespace: config-management-system
spec:
  ports:
  - name: admission
    port: 443
    targetPort: admission
  selector:
    app: admission-webhook

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/ServiceAccount/admission-webhook:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook
  namespace: config-management-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/configsync.gke.io:admission-webhook:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: configsync.gke.io:admission-webhook
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admission-webhook
  namespace: config-management-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/Secret/admission-webhook-cert:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook-cert
  namespace: config-management-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/admission-webhook.configsync.gke.io:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook.configsync.gke.io
  namespace: default
webhooks: []

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: https
  selector:
    app: admission-webhook
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - env:
        - name: USE_HTTPS
          value: "true"
        - name: PORT
          value: "8443"
        image: kiamol/ch16-admission-webhook
        name: admission-webhook
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /run/secrets/tls
          name: certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: admission-webhook-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook
policy disallow-default-namespace -> resource default/Deployment/admission-webhook failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook
  namespace: config-management-system
spec:
  minReadySeconds: 10
  replicas: 2
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - command:
        - /admission-webhook
        - --graceful-shutdown-timeout=10s
        - --health-probe-bind-addr=:10258
        image: ghcr.io/droot/admission-webhook:gcp-ksa-1.0.1
        name: admission-webhook
        ports:
        - containerPort: 10250
          name: admission
          protocol: TCP
        - containerPort: 10258
          name: readyz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: readyz
            scheme: HTTP
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
      serviceAccountName: admission-webhook
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: admission-webhook-cert

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource config-management-system/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource config-management-system/Deployment/admission-webhook
policy drop-all-capabilities -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource config-management-system/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
    monitored: "true"
  name: admission-webhook
  namespace: config-management-system
spec:
  ports:
  - name: admission
    port: 443
    targetPort: admission
  selector:
    app: admission-webhook

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/ServiceAccount/admission-webhook:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook
  namespace: config-management-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/configsync.gke.io:admission-webhook:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: configsync.gke.io:admission-webhook
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admission-webhook
  namespace: config-management-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook4_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to config-management-system/Secret/admission-webhook-cert:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook-cert
  namespace: config-management-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook4_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/admission-webhook.configsync.gke.io:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: admission-webhook
    configmanagement.gke.io/arch: csmr
    configmanagement.gke.io/system: "true"
  name: admission-webhook.configsync.gke.io
  namespace: default
webhooks: []

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: https
  selector:
    app: admission-webhook
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - env:
        - name: USE_HTTPS
          value: "true"
        - name: PORT
          value: "8443"
        image: kiamol/ch16-admission-webhook
        name: admission-webhook
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /run/secrets/tls
          name: certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: admission-webhook-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook
policy disallow-default-namespace -> resource default/Deployment/admission-webhook failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.courselabs.co: admission
  name: admission-webhook
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: https
  selector:
    app: admission-webhook
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubernetes.courselabs.co: admission
  name: admission-webhook
  namespace: default
spec:
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - env:
        - name: USE_HTTPS
          value: "true"
        - name: PORT
          value: "8443"
        image: kiamol/ch16-admission-webhook
        name: admission-webhook
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /run/secrets/tls
          name: certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: admission-webhook-cert

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook
policy disallow-default-namespace -> resource default/Deployment/admission-webhook failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: https
  selector:
    app: admission-webhook
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - env:
        - name: USE_HTTPS
          value: "true"
        - name: PORT
          value: "8443"
        image: kiamol/ch16-admission-webhook
        name: admission-webhook
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /run/secrets/tls
          name: certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: admission-webhook-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook
policy disallow-default-namespace -> resource default/Deployment/admission-webhook failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/admission-webhook:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: https
  selector:
    app: admission-webhook
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: admission-webhook8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/admission-webhook:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch16
  name: admission-webhook
  namespace: default
spec:
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
    spec:
      containers:
      - env:
        - name: USE_HTTPS
          value: "true"
        - name: PORT
          value: "8443"
        image: kiamol/ch16-admission-webhook
        name: admission-webhook
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /run/secrets/tls
          name: certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: admission-webhook-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook

skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-webhook
policy disallow-default-namespace -> resource default/Deployment/admission-webhook failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/admission-webhook failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/admission-webhook failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/admission-webhook failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: admission-webhook9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/MutatingWebhookConfiguration/bluepill.default.svc:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: bluepill.default.svc
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFERXhSaWJIVmwKY0dsc2JDNWtaV1poZFd4MExuTjJZekFlRncweU5EQTBNamd4T1RNek1UTmFGdzB5TlRBME1qZ3hPVE16TVROYQpNQjh4SFRBYkJnTlZCQU1URkdKc2RXVndhV3hzTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXBNa3lpa2k4bjNGV2FZcysyY1l3MzFWTHZ0SzE4UFpuVW0vMlRGajkKaUZxczdjYkxUcXdWaDNNU2NrWm1MQXRRd3l2dTAzNVU1VVdabURLWi9QMGRieExoNmV4N1RuTVBDQmU2b3F0SwpoRjBNMlczZ09vcEgvNWM0TWpFYjBJeEZySmdqUlRUQkhaUGI0Nzg1bWNyQVVjQW1xbnhVLzhPNE1LZWRZMkhWCnd2aDUvSkY0VENBNHR3cDlaY3A5QmVERml6ZEd5Q0hqeFdjeE5HWEVDK29qc0ZLMUtBUUxZYVdmUnZaSFA4eVEKTVoyeXhMZG9yd1NQbWExMG1Vc09sNmNMM2hhbGxqN1JISHpRMmI5cnI1SXhvNjVtWjhNaWtwMXZ5Y0JPRmdEMwp6UC9KS2p3T0xpOHFLTjRHNEg3dEFKd0tidU5xMXdQVXhNNDIzUk12b3NUM0hRSURBUUFCbzFZd1ZEQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhSRUVHREFXZ2hSaWJIVmxjR2xzYkM1a1pXWmhkV3gwTG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBalk5eXEzMEFGZkZ2SE5GVWN6b0dMSHphZG1RbEc3aDhlc3kwQ0lncHJ2bUhGeTR0aG5ZTkNBSnFrR0hZCkRqeXJzR1FiT1pZRXp0azhPbzNPRjZGYmQ3WWl6Z3JNVHBSWGhPaUNLMmdYdDNoMmFOMlZyWUpkVkJXMmdLZVoKZ1YzRTZ4OUI4UWxsS1ZhK2lKVHp0T3dkV3owNWdVdmpJNnhEUWRRZWF0YXZqWld5eVZNR2lKaUNrQ2NlekpDcgpsUzJiWHRNL3lZREhtLzRXVXBpSVdWMlpxSE5SZXV3TzhQQzkraFk1WnJyeUw5M3VyNVpmR0xVTFlsak9xSlhnCktOZEkyOWFHMVdZWk9XMDI3cGpWSlpuV2RzckRoTkJaRlZsSFBNUG9yWUNFUEEwd0ppQWw1WFowRnJlNjJDY3AKWjVkTGUrM2xGM3Vndjlob0NEaHk1cGVaRXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: bluepill
      namespace: default
      path: /pill
  name: bluepill.default.svc
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
    scope: '*'
  sideEffects: None
  timeoutSeconds: 5

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
        name: adservice
        ports:
        - containerPort: 9555

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/adservice failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/adservice failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/adservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: adservice15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - port: 9555
    protocol: TCP
    targetPort: 9555
  selector:
    app.kubernetes.io/name: adservice

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: adservice19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ngnix-service:
apiVersion: v1
kind: Service
metadata:
  name: ngnix-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ngnix-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: adservice2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.8.1
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: eshopimages.azurecr.io/eshop/adservice:$VERSION
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
      imagePullSecrets:
      - name: acr-secret
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/adservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: adservice20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/adservice:
apiVersion: v1
data:
  DISABLE_PROFILER: "1"
  PORT: "9555"
  PRODUCT_CATALOG_SERVICE_ADDR: productcatalogservice:3550
  PYTHONUNBUFFERED: "1"
kind: ConfigMap
metadata:
  name: adservice
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adservice
      project: hipstershop
      tier: app
  template:
    metadata:
      labels:
        app: adservice
        project: hipstershop
        tier: app
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: adservice
        image: srikanthhg/adservice:v1
        name: adservice
        ports:
        - containerPort: 9555
        resources:
          limits:
            cpu: 200m
            memory: 450Mi
          requests:
            cpu: 100m
            memory: 220Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/adservice failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/adservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: adservice24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - port: 9555
    protocol: TCP
    targetPort: 9555
  selector:
    app: adservice
    project: hipstershop
    tier: app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice26_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice27_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: adservice
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice29_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice29_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/adservice:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adservice
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.10.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: adservice
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice30_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice30_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/adservice:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adservice
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.10.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: adservice
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice31_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice31_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/adservice:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adservice
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.8.1
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: adservice
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/adservice failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: adservice7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        name: server
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          initialDelaySeconds: 20
          periodSeconds: 15
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: adservice8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: adservice-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/adservice:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_TRACKING
          value: "1"
        image: gcr.io/google-samples/microservices-demo/adservice:v0.9.0
        livenessProbe:
          grpc:
            port: 9555
          periodSeconds: 5
        name: service
        ports:
        - containerPort: 9555
        readinessProbe:
          grpc:
            port: 9555
          periodSeconds: 5
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice

skipped mutate policy add-safe-to-evict -> resource default/Deployment/adservice
policy disallow-default-namespace -> resource default/Deployment/adservice failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/adservice failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/adservice failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/adservice failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/adservice failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: adservice-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/adservice:
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - port: 9555
    protocol: TCP
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: advanced-liveness.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/liveness-http:
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-http
  namespace: default
spec:
  containers:
  - args:
    - /server
    image: k8s.gcr.io/liveness
    livenessProbe:
      httpGet:
        httpHeaders:
        - name: X-Custom-Header
          value: Awesome
        path: /healthz
        port: 8080
      initialDelaySeconds: 15
      timeoutSeconds: 1
    name: liveness

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/liveness-http

skipped mutate policy add-safe-to-evict -> resource default/Pod/liveness-http
policy disallow-default-namespace -> resource default/Pod/liveness-http failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/liveness-http failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/liveness-http failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/liveness-http failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/liveness-http failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/liveness-http failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/liveness-http failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/liveness-http failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: advanced-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/advanced-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: advanced-app
    tier: backend
  name: advanced-pod
  namespace: default
spec:
  containers:
  - image: nginx:latest
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /abcd.html
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
    name: nginx
    ports:
    - containerPort: 80
    readinessProbe:
      failureThreshold: 1
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/advanced-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/advanced-pod
policy disallow-default-namespace -> resource default/Pod/advanced-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/advanced-pod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/advanced-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/advanced-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/advanced-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/advanced-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/advanced-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/advanced-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aegle-wildcard-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Secret/aegle-wildcard:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ1ekNDQXM4Q0ZEUExZU001OXlZak8rTXNJamtBYjZ3TytmdmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR3YKTVFzd0NRWURWUVFHRXdKVlV6RUxNQWtHQTFVRUNBd0NUbGt4R3pBWkJnTlZCQW9NRWt4dlkyRnNJRVJsZG1WcwpiM0JsYldWdWRERWJNQmtHQTFVRUJ3d1NURzlqWVd3Z1JHVjJaV3h2Y0dWdFpXNTBNUlV3RXdZRFZRUUREQXdxCkxtRmxaMnhsTG1sdVptOHhHekFaQmdOVkJBc01Fa3h2WTJGc0lFUmxkbVZzYjNCbGJXVnVkREVsTUNNR0NTcUcKU0liM0RRRUpBUllXWjI5d1lXdDFiV0Z5TG01QWRHVjBjbUYwWlM1cGJ6QWVGdzB5TWpBNE1UWXdOVE0yTURaYQpGdzB6TWpBNE1UTXdOVE0yTURaYU1JR3ZNUXN3Q1FZRFZRUUdFd0pWVXpFTE1Ba0dBMVVFQ0F3Q1Rsa3hHekFaCkJnTlZCQW9NRWt4dlkyRnNJRVJsZG1Wc2IzQmxiV1Z1ZERFYk1Ca0dBMVVFQnd3U1RHOWpZV3dnUkdWMlpXeHYKY0dWdFpXNTBNUlV3RXdZRFZRUUREQXdxTG1GbFoyeGxMbWx1Wm04eEd6QVpCZ05WQkFzTUVreHZZMkZzSUVSbApkbVZzYjNCbGJXVnVkREVsTUNNR0NTcUdTSWIzRFFFSkFSWVdaMjl3WVd0MWJXRnlMbTVBZEdWMGNtRjBaUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1TRCszbndIcERHV0szRGoxV3YKaTljZWdmMi9OY1F0dzRVVU9GT0wycENCWExaYk1lWEthRmVDNmx3aUZVVUo1NGsrckg3L21EN3UrNXpUSkhPOQp0djZYbHBUdjZzSGRWUitwSjVuNjRnNUg1V09ueVA1QWpGTThrSDNUSjFzaHBidHlpb0JJYVdFZ0xxWmExOSs3Ckt6d0dZSVJrdEppeFBpZHBpcFN2eFl3TVd6cmpwRWxZdVZlYmFJWC9jM2IrNXp1MGlCNXlJbGw5ditESW52VUYKb0tORURINTBBclp2VEJrcDBmcGYwMi9QbFJDWXplY3N6ZnE5QzdwQXFKUFBZNmFFVlU1ZHMwZWpEVUo1dEg5eQpDQUJ4MTV2WExabkRXV1ZJY2tkOEdRelVIWWFRalNQaU5zZzBKUXRkVklLYTFwZnJEYTRUdXJlVGJhaXEwWXZGClIra0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUZvZTRjYXg3VlJrOW1nRjN1dE1FWDR5ZXEwS0QKNFVrNzBQUzBPd09MSUlSQVN4OGZsNHBEeTh3bk5JdTZQRVFUTHpiN3NYamZMTEVTdVFmVEFTZ1lqV2F0MkxJegpiRmc4cWZld1lQbGVGNFdvTk9XQWRrazI1ZVVwNFh3V0owbk05Q1ViclYycU9UeGNNZUJUbE5sTlZ0OHFDTGJhCjB5UmtYVHB3MzlIcS9CQ0JjK1pYblJVS3o5YTdYWnk0dlI1N1psSUdIY0l4UFcrdGg3MEozSFRRM3pLRkk2UDkKcUFjRWgwMk5qUlRuL1M0ZXQrRWVWd05HaHlUakpYdHFqZ3h6RlFDTm90S3k5NlJmRDFGSkRRTEFYME9qZks2VgpWNTZ5S2lrdjhQN21wOS9RN1dKd2h6eVlZV1J4MlRZcTd1LzE0VVlZdTVsRElHUHJ3bG9vbktoTVB3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeElQN2VmQWVrTVpZcmNPUFZhK0wxeDZCL2I4MXhDM0RoUlE0VTR2YWtJRmN0bHN4CjVjcG9WNExxWENJVlJRbm5pVDZzZnYrWVB1NzduTk1rYzcyMi9wZVdsTy9xd2QxVkg2a25tZnJpRGtmbFk2ZkkKL2tDTVV6eVFmZE1uV3lHbHUzS0tnRWhwWVNBdXBsclgzN3NyUEFaZ2hHUzBtTEUrSjJtS2xLL0ZqQXhiT3VPawpTVmk1VjV0b2hmOXpkdjduTzdTSUhuSWlXWDIvNE1pZTlRV2dvMFFNZm5RQ3RtOU1HU25SK2wvVGI4K1ZFSmpOCjV5ek4rcjBMdWtDb2s4OWpwb1JWVGwyelI2TU5Rbm0wZjNJSUFISFhtOWN0bWNOWlpVaHlSM3daRE5RZGhwQ04KSStJMnlEUWxDMTFVZ3ByV2wrc05yaE82dDVOdHFLclJpOFZINlFJREFRQUJBb0lCQVFDclZqZUlGV2RRNnQ2ZQpnZ2NTdWorK2k0Ymk2amZDbC9RRXI2QjhsMDgwOXRVUzJXZ2o1ZG9ia3JVckp6eE1PVnA2T3Y3Q3E2N2VFQmVvCm9COEVHc0RXTU96RlpualVGbG9GaE1KV2FudDE0QkdNVmRuVWRBcms5OFV6TDByOUZkVWVIYnZNSlZaYnJHZC8KKzJ5RVVQaGRHV0pGakZnNVdTL0x4U1ZpaGU1REwydXJ3cXJtNlY4ZkNDOUcwZFlQREpuVlloYm4zeEdVQ0ZRdApDaWo2elVPY1FuRE1zdldnVzdEa2x5Z1drUGtseEZzcnZIbFMxa0hMeXZyQWllWEtGTExpdVp2OHkvRHgrTFowCkhtR1V2V1g4VGZzeWZhSkNUUFdTanZBZkdZcmxMWFh2cHg3cnRDS0ROK0krT3pCaWdWTzNha3ZEY0VTZ2psdnEKc3RXRVNhQkJBb0dCQU9GbnQrd1hSQWE3TWVNSUw2Q3dIYnVkYjVTOUZXRHorNVVIb0hJT0FzSGpGN2V5dTM1YwpSckw0YldNcUYrWGtnSTlNNzdDZzZrUS9MVUVPOFhadWFiV1g5S3pRY0Y0RmhNc1FadG9PNDR6MjJ0MHF0bzhwCnAzYlJvWWtubVZuVUhFbzBzOFV6TWR2cXFDbmJDQ1RPQ05sa2FybklXOFJDdVZZZ3Jld1NOUWExQW9HQkFOOHcKYTY5b1JienpGS3h3SWhnZ2RFZHd4TDVLTXg1a1h2T3VmcWNRbUhhRUUwRlIwdXdIRWtmeDZKWS84UG9jeEE5SApwa3ZJUW8yWUtoamNObXMwME9EZGZkVW9iVU0wRDQvQTVrSXJkVW9mcXgra3dQakNjT2NCWVIxYTFvaXRFNnlOClNJdTJuSXJjU0JjZU5WUkdPVUMwczdGVVFTb3d2VGdmNUJmSVlpamxBb0dCQUtuZmorWTI5b2FZSjVXeGdxdDQKYjBBSSs2RytDdEdocnRYM0JIMVFmOVY5ZjA5clBSQ1RISmtlenRtd1RJaHVlRkVISzVFVEJOcmdQZ3ZNNWo5YQpJUUxCZloyTURWTmVsMkN1Z01VUCtZQXdQbXYyRjlXM0Q4VmxZWGRMUjdCQ1Fmdk8wampwUjBjMUJ2MWNYRHZZCnB5U25JQ1Baa3dkTFBnQmg2cEdDZTBJTkFvR0FKKzd6OVlpRW9kQWtiTTRMYTZHeTdHMWk1bUZFVURYSlAzU0QKT01VaFltTXpSc2FySkl3SFcxUVBONEx0VFBNRXFXODZjK2k2NzdiQUlYNlZSZzFIS2xTM0JRS2N1aCtBZ1VvVQphTlo1dis5Mm9NekxzamFvR00wSVlVWTFpSExmU0VwbkpvaGY3Z0NIN1lyOEk3NEUxRzBBa2NQdmZPc0hrQmswCnFJU3orM2tDZ1lBaXdTNWtlaFVIVm0zL0YwR25JVVl2Wm9yYnJFcjZVbk1qTjZvK1crczVHNmdNNUNUbWMxbVYKRERYM2lTRG5ad0tDOGQ5bllMUnZtVEZJcTBMRUdtWjdZeUErMTlkVGtzbHJKYVhxVlhpQ1RTV05Takh4YmFibgpLT0tmSXJRK04vTjdlUVdSbGE0VmhSMUZEUjdzZTBaYi9vUU16ZHdrS1BLK2NoOFBlUFhVS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: aegle-wildcard
  namespace: istio-system
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${AERAKI_NAMESPACE}/Deployment/aeraki:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aeraki
  name: aeraki
  namespace: ${AERAKI_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aeraki
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: aeraki
    spec:
      containers:
      - args:
        - --master=true
        - --enable-envoy-filter-namespace-scope=false
        - --log_output_level=all:info
        - --log_rotate=/home/aeraki_run.log
        env:
        - name: AERAKI_IS_MASTER
          value: ${AERAKI_IS_MASTER}
        - name: AERAKI_ISTIOD_ADDR
          value: ${AERAKI_ISTIOD_ADDR}
        - name: AERAKI_CLUSTER_ID
          value: ${AERAKI_CLUSTER_ID}
        - name: AERAKI_ISTIO_CONFIG_STORE_SECRET
          value: ${AERAKI_ISTIO_CONFIG_STORE_SECRET}
        - name: AERAKI_XDS_ADDR
          value: ${AERAKI_XDS_ADDR}
        - name: AERAKI_XDS_PORT
          value: ${AERAKI_XDS_PORT}
        - name: AERAKI_ENABLE_ENVOY_FILTER_NS_SCOPE
          value: ${AERAKI_ENABLE_ENVOY_FILTER_NS_SCOPE}
        - name: AERAKI_LOG_LEVEL
          value: all:debug
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: AERAKI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AERAKI_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ${AERAKI_IMAGE}:${AERAKI_TAG}
        imagePullPolicy: ${AERAKI_IMG_PULL_POLICY}
        name: aeraki
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 15010
          protocol: TCP
        - containerPort: 15017
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 250m
            memory: 1Gi
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
          readOnly: true
      serviceAccountName: aeraki
      volumes:
      - configMap:
          defaultMode: 420
          name: istio-ca-root-cert
        name: istiod-ca-cert

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki

skipped mutate policy add-safe-to-evict -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki
policy drop-all-capabilities -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ${AERAKI_NAMESPACE}/Deployment/aeraki failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: aeraki_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${AERAKI_NAMESPACE}/Service/aeraki:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: aeraki
  name: aeraki
  namespace: ${AERAKI_NAMESPACE}
spec:
  ports:
  - name: grpc-xds
    port: 15010
    protocol: TCP
    targetPort: 15010
  - name: https-validation
    port: 443
    protocol: TCP
    targetPort: 15017
  selector:
    app: aeraki

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${AERAKI_NAMESPACE}/ServiceAccount/aeraki:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aeraki
  namespace: ${AERAKI_NAMESPACE}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${AERAKI_NAMESPACE}/Role/aeraki:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: aeraki
  name: aeraki
  namespace: ${AERAKI_NAMESPACE}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${AERAKI_NAMESPACE}/RoleBinding/aeraki:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: aeraki
  name: aeraki
  namespace: ${AERAKI_NAMESPACE}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: aeraki
subjects:
- kind: ServiceAccount
  name: aeraki

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aeraki:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: aeraki
  name: aeraki
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - namespaces
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - redis.aeraki.io
  - dubbo.aeraki.io
  - metaprotocol.aeraki.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  - destinationrules
  - envoyfilters
  - serviceentries
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/aeraki:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: aeraki
  name: aeraki
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aeraki
subjects:
- kind: ServiceAccount
  name: aeraki
  namespace: ${AERAKI_NAMESPACE}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aeraki-bootstrap-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/aeraki-bootstrap-config:
apiVersion: v1
data:
  custom_bootstrap.json: |-
    {
       "static_resources":{
          "clusters":[
             {
                "name":"aeraki-xds",
                "type":"STRICT_DNS",
                "connect_timeout":"1s",
                "max_requests_per_connection":1,
                "circuit_breakers":{
                   "thresholds":[
                      {
                         "max_connections":100000,
                         "max_pending_requests":100000,
                         "max_requests":100000
                      },
                      {
                         "priority":"HIGH",
                         "max_connections":100000,
                         "max_pending_requests":100000,
                         "max_requests":100000
                      }
                   ]
                },
                "http2_protocol_options":{

                },
                "upstream_connection_options":{
                   "tcp_keepalive":{
                      "keepalive_time":300
                   }
                },
                "load_assignment":{
                   "cluster_name":"aeraki-xds",
                   "endpoints":[
                      {
                         "lb_endpoints":[
                            {
                               "endpoint":{
                                  "address":{
                                     "socket_address":{
                                        "address":"aeraki.istio-system",
                                        "port_value":15010
                                     }
                                  }
                               }
                            }
                         ]
                      }
                   ]
                },
                "transport_socket": {
                   "name": "envoy.transport_sockets.tls",
                   "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
                      "common_tls_context": {
                         "validation_context_sds_secret_config": {
                            "name": "ROOTCA",
                            "sds_config": {
                               "api_config_source": {
                                  "api_type": "GRPC",
                                  "grpc_services": [{
                                     "envoy_grpc": {
                                        "cluster_name": "sds-grpc"
                                     }
                                  }],
                                  "set_node_on_first_message_only": true,
                                  "transport_api_version": "V3"
                               },
                               "initial_fetch_timeout": "0s",
                               "resource_api_version": "V3"
                            }
                         },
                         "tls_certificate_sds_secret_configs": [{
                            "name": "default",
                            "sds_config": {
                               "api_config_source": {
                                  "api_type": "GRPC",
                                  "grpc_services": [{
                                     "envoy_grpc": {
                                        "cluster_name": "sds-grpc"
                                     }
                                  }],
                                  "set_node_on_first_message_only": true,
                                  "transport_api_version": "V3"
                               },
                               "initial_fetch_timeout": "0s",
                               "resource_api_version": "V3"
                            }
                         }]
                      }
                   }
                }
             }
          ]
       }
    }
kind: ConfigMap
metadata:
  annotations: null
  name: aeraki-bootstrap-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: affine.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to affine/Deployment/affine:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: affine
  namespace: affine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: affine
  template:
    metadata:
      labels:
        app: affine
    spec:
      containers:
      - command:
        - sh
        - -c
        - node ./scripts/self-host-predeploy && node ./dist/index.js
        env:
        - name: NODE_OPTIONS
          value: --import=./scripts/register.js
        - name: AFFINE_SERVER_HOST
          value: notes.prayujt.com
        - name: AFFINE_SERVER_PORT
          value: "3010"
        - name: AFFINE_CONFIG_PATH
          value: /root/.affine/config
        - name: AFFINE_SERVER_HTTPS
          value: "true"
        - name: REDIS_SERVER_HOST
          value: affine-redis.affine.svc.cluster.local
        - name: DATABASE_URL
          value: postgres://affine:affine@affine-postgres.affine.svc.cluster.local:5432/affine
        - name: NODE_ENV
          value: production
        - name: AFFINE_ENV
          value: production
        - name: AFFINE_ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              key: email
              name: affine-admin-secret
        - name: AFFINE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: affine-admin-secret
        - name: MAILER_HOST
          valueFrom:
            secretKeyRef:
              key: host
              name: affine-mailer-secret
        - name: MAILER_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: affine-mailer-secret
        - name: MAILER_USER
          valueFrom:
            secretKeyRef:
              key: email
              name: affine-mailer-secret
        - name: MAILER_SENDER
          valueFrom:
            secretKeyRef:
              key: sender
              name: affine-mailer-secret
        - name: MAILER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: affine-mailer-secret
        image: ghcr.io/toeverything/affine-graphql:stable
        name: affine
        ports:
        - containerPort: 3010
        - containerPort: 5555
        volumeMounts:
        - mountPath: /root/.affine/config
          name: config-volume
        - mountPath: /root/.affine/storage
          name: storage-volume
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: affine-config
      - name: storage-volume
        persistentVolumeClaim:
          claimName: affine-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource affine/Deployment/affine

skipped mutate policy add-safe-to-evict -> resource affine/Deployment/affine
policy drop-all-capabilities -> resource affine/Deployment/affine failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource affine/Deployment/affine failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource affine/Deployment/affine failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource affine/Deployment/affine failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource affine/Deployment/affine failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource affine/Deployment/affine failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource affine/Deployment/affine failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: affine_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to affine/Service/affine:
apiVersion: v1
kind: Service
metadata:
  name: affine
  namespace: affine
spec:
  ports:
  - name: port-3010
    port: 3010
    protocol: TCP
    targetPort: 3010
  - name: port-5555
    port: 5555
    protocol: TCP
    targetPort: 5555
  selector:
    app: affine

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: affine_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to affine/Deployment/affine-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: affine-redis
  namespace: affine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: affine-redis
  template:
    metadata:
      labels:
        app: affine-redis
    spec:
      containers:
      - image: redis
        name: affine-redis
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: affine-redis

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource affine/Deployment/affine-redis

skipped mutate policy add-safe-to-evict -> resource affine/Deployment/affine-redis
policy disallow-latest-tag -> resource affine/Deployment/affine-redis failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource affine/Deployment/affine-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource affine/Deployment/affine-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource affine/Deployment/affine-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource affine/Deployment/affine-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource affine/Deployment/affine-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource affine/Deployment/affine-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource affine/Deployment/affine-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: affine_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to affine/Service/affine-redis:
apiVersion: v1
kind: Service
metadata:
  name: affine-redis
  namespace: affine
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: affine-redis

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: affine_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to affine/Deployment/affine-postgres:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: affine-postgres
  namespace: affine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: affine-postgres
  template:
    metadata:
      labels:
        app: affine-postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: affine
        - name: POSTGRES_PASSWORD
          value: affine
        - name: POSTGRES_DB
          value: affine
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:16
        name: affine-postgres
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: affine-postgres

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource affine/Deployment/affine-postgres

skipped mutate policy add-safe-to-evict -> resource affine/Deployment/affine-postgres
policy drop-all-capabilities -> resource affine/Deployment/affine-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource affine/Deployment/affine-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource affine/Deployment/affine-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource affine/Deployment/affine-postgres failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource affine/Deployment/affine-postgres failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource affine/Deployment/affine-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource affine/Deployment/affine-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: affine_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to affine/Service/affine-postgres:
apiVersion: v1
kind: Service
metadata:
  name: affine-postgres
  namespace: affine
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: affine-postgres

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: affinity.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myapp
  name: myapp
  namespace: default
spec:
  affinity:
    requiredDuringSchedulingIgnoredExecution: false
  containers:
  - image: <Image>
    name: myapp
    ports:
    - containerPort: <Port>
    resources:
      limits:
        cpu: 500m
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinity1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/with-node-affinity:
apiVersion: v1
kind: Pod
metadata:
  name: with-node-affinity
  namespace: default
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: metadata.name
            operator: In
            values:
            - node-geektime

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/with-node-affinity

skipped mutate policy add-safe-to-evict -> resource default/Pod/with-node-affinity
policy disallow-default-namespace -> resource default/Pod/with-node-affinity failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Pod/with-node-affinity failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/with-node-affinity failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/

policy require-ro-rootfs -> resource default/Pod/with-node-affinity failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/

policy restrict-image-registries -> resource default/Pod/with-node-affinity failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: affinity2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to maloth/Deployment/nodeaffinity:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    purpose: learning
  name: nodeaffinity
  namespace: maloth
spec:
  replicas: 4
  selector:
    matchLabels:
      type: create
  template:
    metadata:
      labels:
        company: talent
        devops: "18"
        type: create
      name: httpd-test
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: batch
                operator: In
                values:
                - "18"
      containers:
      - image: httpd:latest
        name: httpd
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource maloth/Deployment/nodeaffinity

skipped mutate policy add-safe-to-evict -> resource maloth/Deployment/nodeaffinity
policy disallow-latest-tag -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource maloth/Deployment/nodeaffinity failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: affinity-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinity3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/blue:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      labels:
        run: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: color
                operator: In
                values:
                - blue
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/blue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/blue
policy disallow-default-namespace -> resource default/Deployment/blue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/blue failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/blue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/blue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/blue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/blue failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/blue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/blue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/blue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinity4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myPod
    type: proxy
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx:latest
    name: nginxcontainer
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
  nodeSelector:
    location: frontend

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nginx failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinity5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: region
                operator: In
                values:
                - us-east-1
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinity-p.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/affinity-p:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: affinity-p
  name: affinity-p
  namespace: default
spec:
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            name: podb
        topologyKey: kubernetes.io/hostname
  containers:
  - image: nginx
    name: affinity-c
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/affinity-p

skipped mutate policy add-safe-to-evict -> resource default/Pod/affinity-p
policy disallow-default-namespace -> resource default/Pod/affinity-p failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/affinity-p failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/affinity-p failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/affinity-p failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/affinity-p failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/affinity-p failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/affinity-p failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/affinity-p failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/affinity-p failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinityPreferred.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/affinity-preferred:
apiVersion: v1
kind: Pod
metadata:
  name: affinity-preferred
  namespace: default
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - minikube-m04
        weight: 1
      - preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - minikube-m02
        weight: 2
  containers:
  - image: nginx:latest
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/affinity-preferred

skipped mutate policy add-safe-to-evict -> resource default/Pod/affinity-preferred
policy disallow-default-namespace -> resource default/Pod/affinity-preferred failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/affinity-preferred failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/affinity-preferred failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/affinity-preferred failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/affinity-preferred failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/affinity-preferred failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/affinity-preferred failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/affinity-preferred failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/affinity-preferred failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: affinityRequired.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/affinity-required:
apiVersion: v1
kind: Pod
metadata:
  name: affinity-required
  namespace: default
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - minikube-m02
  containers:
  - image: nginx:latest
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/affinity-required

skipped mutate policy add-safe-to-evict -> resource default/Pod/affinity-required
policy disallow-default-namespace -> resource default/Pod/affinity-required failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/affinity-required failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/affinity-required failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/affinity-required failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/affinity-required failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/affinity-required failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/affinity-required failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/affinity-required failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/affinity-required failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: afterFix.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/targetns:
apiVersion: v1
kind: Namespace
metadata:
  name: targetns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/targetns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: targetns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/targetns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: targetns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/targetns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: targetns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/targetns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: targetns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/ServiceAccount/targetsa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: targetsa
  namespace: targetns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Secret/targetsecret:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: targetsa
  name: targetsecret
  namespace: targetns
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/targetcr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: targetcr
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployment
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/targetcrb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: targetcrb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: targetcr
subjects:
- kind: ServiceAccount
  name: targetsa
  namespace: targetns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Deployment/false-automount:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: false-automount
  namespace: targetns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: false-automount
  template:
    metadata:
      labels:
        app: false-automount
    spec:
      automountServiceAccountToken: false
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: false-automount
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - NET_RAW
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: targetsa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/false-automount

skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/false-automount
policy disallow-latest-tag -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource targetns/Deployment/false-automount failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource targetns/Deployment/false-automount failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: afterFix_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Deployment/true-automount:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: true-automount
  namespace: targetns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        resources: null
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - NET_RAW
          runAsGroup: 10001
          seccompProfile:
            type: RuntimeDefault
      nodeName: w1-k8s
      serviceAccountName: targetsa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/true-automount

skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/true-automount
policy disallow-latest-tag -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource targetns/Deployment/true-automount failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource targetns/Deployment/true-automount failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: afterFix_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Service/targetpod:
apiVersion: v1
kind: Service
metadata:
  name: targetpod
  namespace: targetns
spec:
  externalIPs:
  - 192.168.1.15
  ports:
  - port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: nginx

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource targetns/Service/targetpod failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: afterFix_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/targetpod:
apiVersion: v1
kind: Pod
metadata:
  name: targetpod
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - apt update && apt install gcc vim -y;
    image: ubuntu:20.04
    name: targetpod
    ports:
    - containerPort: 80
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_BIND_SERVICE
        - CAP_CHOWN
        - CAP_SETUID
        - CAP_SETGID
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/targetpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/targetpod
policy disallow-default-namespace -> resource default/Pod/targetpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/targetpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/targetpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/targetpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/targetpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/targetpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/targetpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/targetpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: afterFix1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/targetns:
apiVersion: v1
kind: Namespace
metadata:
  name: targetns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/targetns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: targetns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/targetns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: targetns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/targetns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: targetns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/targetns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: targetns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/ServiceAccount/targetsa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: targetsa
  namespace: targetns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Secret/targetsecret:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: targetsa
  name: targetsecret
  namespace: targetns
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/targetcr:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: targetcr
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployment
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/targetcrb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: targetcrb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: targetcr
subjects:
- kind: ServiceAccount
  name: targetsa
  namespace: targetns

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: afterFix1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Deployment/false-automount:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: false-automount
  namespace: targetns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: false-automount
  template:
    metadata:
      labels:
        app: false-automount
    spec:
      automountServiceAccountToken: false
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: false-automount
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - NET_RAW
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: targetsa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/false-automount

skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/false-automount
policy disallow-latest-tag -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource targetns/Deployment/false-automount failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource targetns/Deployment/false-automount failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource targetns/Deployment/false-automount failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: afterFix1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Deployment/true-automount:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: true-automount
  namespace: targetns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        resources: null
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - NET_RAW
          runAsGroup: 10001
          seccompProfile:
            type: RuntimeDefault
      nodeName: w1-k8s
      serviceAccountName: targetsa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/true-automount

skipped mutate policy add-safe-to-evict -> resource targetns/Deployment/true-automount
policy disallow-latest-tag -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource targetns/Deployment/true-automount failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource targetns/Deployment/true-automount failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource targetns/Deployment/true-automount failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: afterFix1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to targetns/Service/targetpod:
apiVersion: v1
kind: Service
metadata:
  name: targetpod
  namespace: targetns
spec:
  externalIPs:
  - 192.168.1.15
  ports:
  - port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: nginx

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource targetns/Service/targetpod failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: afterFix1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/targetpod:
apiVersion: v1
kind: Pod
metadata:
  name: targetpod
  namespace: default
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - apt update && apt install gcc vim -y;
    image: ubuntu:20.04
    name: targetpod
    ports:
    - containerPort: 80
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_BIND_SERVICE
        - CAP_CHOWN
        - CAP_SETUID
        - CAP_SETGID
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/targetpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/targetpod
policy disallow-default-namespace -> resource default/Pod/targetpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/targetpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/targetpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/targetpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/targetpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/targetpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/targetpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/targetpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ag1-primary-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dag/Service/ag1-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ag1-primary
  name: ag1-primary
  namespace: dag
spec:
  ports:
  - name: db
    port: 1433
    targetPort: 1433
  - name: mirror
    port: 5022
    targetPort: 5022
  selector:
    role: primary
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ag2-primary-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dag/Service/ag2-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ag2-primary
  name: ag2-primary
  namespace: dag
spec:
  ports:
  - name: db
    port: 1433
    targetPort: 1433
  - name: mirror
    port: 5022
    targetPort: 5022
  selector:
    role: primary
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: age-key.secret.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/sops-age:
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBlYm9GSlRnbHBCTVBjK2pP
      WGVXc1VUSEhYV0NIbDhXMC9rTmd1OWJwRkVnCkRJZDNidmNYR0RhRmtaTzBCMllE
      RS9EL2xHeEdrbUJyU3hiWDkzWm9lR0UKLS0tIDR4QVNiMDc5dm1uTlRVYzhzSnpk
      Rm9HTDM0R0Q2d2JFclh0Uy9XRUIyZncKV4A3aNQWhapprNb3msbithgCDx3aOJG+
      v4oxjOEIbS5lFlnmgDyTxAML9hPACa1VAY2YHGMkCkqq0e/9/dVeeg==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1myxsdyjgwefpljpsvf0n6pvjr4n9ygz0nh3zy7wkfjnqdg54jayqwaqqfm
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2023-08-23T09:48:55Z"
  mac: ENC[AES256_GCM,data:f62zn/X+9uyMdv3yWoEZOkKO1eq087W0r1nIA7iZ4K/+1mp6OPiEcMJHyjIwTN4A/R4baOgi/9LpD8zSDqtUG1ZjvnJ6S4k6+ah9erpwImYpW/i6ppPTxj34qbos0N4/juLvs6wPXUghDj/qk3aw0avphnwnO2Fsv/s5Lw2Dwks=,iv:l+o0bynezltdFhVMqm/cRXS9Df/w7TnAYiR1TPrm4dk=,tag:3AtlPs0MUfm6L4RCnSH5BQ==,type:str]
  pgp: []
  version: 3.7.3
stringData:
  age.agekey: ENC[AES256_GCM,data:xVDX7GgSbpHrEi5pm2Yia/3f+Ww/2DGsvETLVxeEKLELaO8PktBaC75C86hwLG/Qu1ahtOT47/cBOMQ26PtlbiuK+2SeZmsJNuy+i0SbRgnP1T8DZMdWZEU5VXcO7S0QmpxZDx4Q2emfFxcZ0albuPI8t5F8HoTN6gQu/+3rd8k59ePPMtj+Pt3s5ilhgYdjivhnqZxo/Tnrk+NXddZsoVH23V+8+0hZHpRv60vXviXIzD0Pgf4bXG9fLjw=,iv:UjMZ3WPl6pHOqI07enGG3Ya6ZTh00pQ3sUiyQ1o2WbA=,tag:y34bxSVV9pwzUrkAVm6Wiw==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: age-key.secret.sops1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/sops-age:
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSArT05rb0hVaFF5K1U4SVpy
      RlJPWVcvRjZyUVRtZHY2TUdHRjFVRmhjdWkwClY2dFA3VWU2OGZ1Z09GQzhPUHdD
      RmZtbmtTRWtTZlRHRWR4SWt6d3dCVFkKLS0tIEN0KytkZGI5ZDF6TzZISnhadkJl
      aUp2SWc5ODdUWUI3b1NiT1ZMVjRTREEKL4yC50YCZOJ/Z89x210kGhHaPpgCTE9L
      cpabMC3xfUE3E5Bo+9S2Fx6EhrwOE+qdB3JOozIqkPm59smnaQvckw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1hc5sdag42jn8z9gw87k67rrnz4qx7m6g7qnjmy9vefd6dxw2xc2q8jnjma
  azure_kv: []
  encrypted_regex: ((?i)(pass|secret($|[^N])|key|token|^data$|^stringData))
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-03-13T13:30:47Z"
  mac: ENC[AES256_GCM,data:bcFkP2eaDnXNmI+QQsemPCu6VR+XbF7RBf2DfLTS8KTXvENjtAs6FlFjTurTgHSN70MnzN9TbwYti0LG2YCrjLvkzf5pB+ByojR79wquDHpGoGMJHe43p1QUTy71Q/FiWmlqqhibCnVpZ1r3AHN4l8cZXL7VE+95XD0r5PIRZyI=,iv:8lYYzUWNSZ0YwwfnmLY3x3ktLXcCoxvnTFehnej62fM=,tag:bWmciN9Hu8se9AyF72ZI3Q==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  age.agekey: ENC[AES256_GCM,data:uCids5aBumRKrDC/SEHd84tG5rLUOcxXzaOFHLKe1WgioUVM8p54vh/63aX3xd8N9hU76MNosEdwNevIGk+LBhWkma6wpIkig40=,iv:Jx1SJeoAc7k6oziiLWZBo7/wAQMMJGMY1pWigKHd5I4=,tag:wb6aQJpV1FHJlaU9BcdePQ==,type:str]
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: age-key.secret.sops2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/sops-age:
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBCR2grOE03Tm9NakFjVDdG
      TTZJNUZiODNJLzVybjkvT2d0azNOMEh0L0hzCjM0Y3dhQzVPNEo4dGpVbE9Kcno4
      ZTh4cS92YzRSdDFtRVlzK0xWekt6MW8KLS0tIHAzaWwyV1J3ME5iYjdSakwrSHlU
      V1hIMUptbkZ2SzFnTTlMQ3kwM1BsRjAKbMQ6mPLsuqEuHvKb1d3eDYQ9z+w0yWeJ
      Gyxw3YGCDaDdDnO7wZZ8hNNrMfy0Zebp1jFSThnJqoctXavlMo3JbQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1zucujcrr89pecplrme76f4vxcc05lg3hm8849mmfggvcvcv4ppls7cquw8
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-03-08T04:11:18Z"
  mac: ENC[AES256_GCM,data:JUoAu9ih2Eygz0s6wljxeKAYiV0ZMAg+KwEeeBXuSDEbK72iDgZRyNegF42Q1jgtUhiWfdnlTdMxwTvHryO4eipAXyqb62Y5mbX14Znt0OvEpCqOSHFMBcTNcJteZ8l3iVb7iM/lDa3rYyAMWyQWIieO5VDs/YZMUj9yIibpZvA=,iv:dlRNT+4WGVLaWJXUT4fciALVm0KOhWMzCkAv+rNa3MQ=,tag:f4Zk3d4pOiQOuihoFKgsNA==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  age.agekey: ENC[AES256_GCM,data:63EA+1idRlZGFQ+JHxrJYd/nlzr/osz2immngs1hEL0dPJPR7swWADg4YV10JfNoY+Sr0u01N0aHMg/3jKGenqrBAzrDCJIPdkKZKYA/GFH1lgFksz/LJv35lsGSejZ3fwQnBDRD+BgqhAlh818sGvrHHgF0i994uCJXjOhZioh7JM9KgpVcC0OyGTAARqttBUjMU4eX+3++Cwz/j0ueHX6wlJ3ZUWlY1d7liB37SkbcoEHcSlbW09QFOgz4,iv:hp91RO7oBkYLwkl33Tk5d3AH/AZlWLWfV8R6GXBGfhY=,tag:rJt+u/LWiO+9un4h9FMgng==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: age-key.secret.sops3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/sops-age:
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA2ek9mSU5PTHg4M09DVWll
      RThhZDBGallISnU3NTdRb3hlV0N1Q1FtUng4CklTcnJFc1NnMW9HN29NSm1CUEo5
      UzdOU3BJQW9ZSnNINVVJVmMyNmdMbFkKLS0tIFo0K1RvTG14S3l5MjBLZFNHaXo1
      ZmtJMEVLRFdTZ1Z1bnJiTmZxOXFMa2MKTvbUX2ofnsum/KsE20+NKzpewgqF0K5k
      uI+lDn1ZKdF1uKKNETLHNu8NOxIA8DfblsnS/GOgEao9d1k7/qV+mA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age16ve7n3m9ucqtxgfv220gdf7wlgp8vhurx5vspw365g797vwy5pds56p93y
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-05-21T14:25:54Z"
  mac: ENC[AES256_GCM,data:22kzlnFfBrl4KXfoxFlgxNtgSsEyzfi05N4XvXn7tolO7VT/aQv/zX2a6R6bLXNBQMrz9DDBVTHDpnzkBbWI9GPr0nTxFlQ8eS9swX8Ho/y8ydJ3sQUIntInAOETsyEdsggpq/ycJXb3Z510Wd6yNtwg+T8dEHd6ry5XyyyyGo4=,iv:r07NqgSEX0aGh+KLo+dXI2WWEXun+bOHsjTAF44ED4c=,tag:q1oo4rGtMdPn1Er5Q3pczw==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  age.agekey: ENC[AES256_GCM,data:4C+y1QibiIYa1hTnftphJg38Zoql30sneBz+teqQeA5nScAcvoQZe2pPyPE4SJd2p4ffrKTIRDZA+MaxRwooUEljw474RLQRpqA=,iv:wNwIFIzIWzRZ80VMm2CMpyIXE/g6RHrqRAhXRRbsgTQ=,tag:uhgucnyDXJVgD1akRdiC0A==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: age-key.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/sops-age:
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAxMURBNzFadmc1ejZ4eStp
      czlYTUtWUk52NzlaZ1NJSzU2R3R4VFB4TWtZCmc2SjZ1OVhNYXlXQ21WT1I0ZjU3
      V2RzRU5PUnYzMWlRcy9vTG5JNkIwVncKLS0tIHdjU0VSaVdBQ3A5ZDlybTBiUVB1
      YVE3NVptM1Q2ZjEyZHE3N2ZIaEtlRFUKQZEkNHDnlnZYXqK62SplHa7gEsEIBVNV
      4TYZQzf+fBmlxmDCwDLTNTJZZJfgLjYPfBStvGSx+VbW2HS6PoXMFQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1g786w8t40g9y29l33rfd4jqlwhrgsxsc7ped6uju60k54j0q3enql3kfve
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2023-08-15T16:24:05Z"
  mac: ENC[AES256_GCM,data:QxME2bUjRTBpPpMR1ZWANlF+EskMRJuyylOiRHcPzWu9Bve1rz+4mkNdlUYzf0gdLi8psRc6ko0Jb6IH9lLZxOkMAh2YYaMrzAf3hMRBytiJKX/nUs9tIJv8Lft21nXibeaT/TcT5YNwNvd3nTZgBJcJ5nYwmU1sTn3/Lay5jrY=,iv:0uVxxRg+Dp8oZ43DnbtEx25rQcJ23Ag13eKfvvXukVk=,tag:/4Ufpkh8DCONTEWy4pc5bw==,type:str]
  pgp: []
  version: 3.7.3
stringData:
  age.agekey: ENC[AES256_GCM,data:DELuczoRtBQW58s5i8Nmb4Hp+XzZ35aiOfwBJDXaqgfQMFY63QXRzBVkTDS0GxFoGt3jvLILJPwde0OHiVrkNEZdDwRr3JZKnTs=,iv:DqAaHlJRT8SUItoceaIQ7smJUcmtTeu51AJt1WM0pKA=,tag:YGbmN4hRhWCCGLPvyDLsnA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: age-key.sops1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/sops-age:
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSArWDdNdVBzZHpaMUZ3K25G
      NlJob25tL0hQRy9sUFhycUt2Y3hjNG5mSlZRCjdvL3dJMHhCdU5VWXFGSXpibzhr
      Y2IrdFdiMEo2V2NtR2k3NmxJUVBZQ0UKLS0tIEFNYlJ1S1hLeWUrYytXUVR1aHpI
      T2tRMEtZMTN2N0Q3QzFjSEJPSVEzUEkKDi1Qs4BoV4p5W4/V0ZnzHKq9LC7Facow
      1RBbZInKHgeEZRLxvpFNSNnlwXIm2kA7U+uVojSn9ogoRitWvKWXYA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1gr4js8ln65khjzjkf9gs5c32a2vrrv6jlv5asuz6hccqq8pddc4sjflprn
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-07-14T17:22:04Z"
  mac: ENC[AES256_GCM,data:kJvNLW5Bi1fcEPQt0jibZ/T82PHdTDU3UatLDjM2uIq7EFWriG25w/WFlCCOeJHKQl7lbUccp71najmsGxUC6Jp0vVpbwfzVSqS9M04eKQNyTTjId9/3jxw0Z3OmIm8WaXf3gN/5DD2vDESMRJqr7ngNyEtxK1I1vwQVTKYSrJY=,iv:7OEaCmL/DY9d+GA/nM7a+Hl4zNrmTdtQSVNstOnOUt8=,tag:LOYiR2ZTB9tUn/mO5wu8MA==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  age.agekey: ENC[AES256_GCM,data:8L4sA+w2MgvnU0NtOV9BYknpSldy0a44pWZMBx2ApbuEpR3wdrS+BSERkBdsMplpbGP3brnsroT+g+O61288In4KIi7KN7NGM8A=,iv:h0FObEI4kdVtZmmsDGPv6ObWYt5A234ko5yxuDKrC0E=,tag:9n3M8bS+UXxK84xVyg/NPA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/fleet-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fleet-server
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic-system/ServiceAccount/fleet-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fleet-server
  namespace: elastic-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/fleet-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fleet-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fleet-server
subjects:
- kind: ServiceAccount
  name: fleet-server
  namespace: elastic-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/elastic-agent:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  - events
  - services
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- nonResourceURLs:
  - /metrics
  verbs:
  - get
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent2_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elastic-system/ServiceAccount/elastic-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: elastic-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent2_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/elastic-agent:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elastic-agent
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: elastic-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/bindplane-agent:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-agent
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/bindplane-agent:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: bindplane-agent
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/bindplane-agent:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: bindplane-agent
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/bindplane-agent:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: bindplane-agent
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/bindplane-agent:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: bindplane-agent
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bindplane-agent/ServiceAccount/bindplane-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-agent
  namespace: bindplane-agent

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/bindplane-agent:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-agent
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - namespaces/status
  - nodes
  - nodes/spec
  - nodes/stats
  - nodes/proxy
  - pods
  - pods/status
  - replicationcontrollers
  - replicationcontrollers/status
  - resourcequotas
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/bindplane-agent:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-agent
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bindplane-agent
subjects:
- kind: ServiceAccount
  name: bindplane-agent
  namespace: bindplane-agent

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent5_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to bindplane-agent/Deployment/bindplane-cluster-agent:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: cluster
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-cluster-agent
  namespace: bindplane-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: cluster
      app.kubernetes.io/name: bindplane-agent
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/job-name: bindplane-cluster-agent
        prometheus.io/path: /metrics
        prometheus.io/port: "8888"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: cluster
        app.kubernetes.io/name: bindplane-agent
    spec:
      containers:
      - env:
        - name: OPAMP_ENDPOINT
          value: wss://app.bindplane.com/v1/opamp
        - name: OPAMP_SECRET_KEY
          value: 01J4ECNCBPNGEC7GWHXXT6K1FG
        - name: OPAMP_AGENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPAMP_LABELS
          value: configuration=K8sCluster,container-platform=kubernetes-deployment,install_id=27a94008-2238-43f6-8714-7ee71e7f430b
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONFIG_YAML_PATH
          value: /etc/otel/config/config.yaml
        - name: MANAGER_YAML_PATH
          value: /etc/otel/config/manager.yaml
        - name: LOGGING_YAML_PATH
          value: /etc/otel/config/logging.yaml
        image: ghcr.io/observiq/observiq-otel-collector:1.56.0
        imagePullPolicy: IfNotPresent
        name: opentelemetry-container
        ports:
        - containerPort: 8888
          name: prometheus
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/otel/config
          name: config
        - mountPath: /etc/otel/storage
          name: storage
      initContainers:
      - command:
        - chown
        - 'otel:'
        - /etc/otel/config
        image: ghcr.io/observiq/observiq-otel-collector:1.56.0
        name: setup-volumes
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/otel/config
          name: config
      - command:
        - sh
        - -c
        - cp config.yaml config/ && cp logging.yaml config/ && chown -R otel:otel
          config/
        image: ghcr.io/observiq/observiq-otel-collector:1.56.0
        name: copy-configs
        volumeMounts:
        - mountPath: /etc/otel/config
          name: config
      serviceAccount: bindplane-agent
      volumes:
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource bindplane-agent/Deployment/bindplane-cluster-agent
policy drop-all-capabilities -> resource bindplane-agent/Deployment/bindplane-cluster-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource bindplane-agent/Deployment/bindplane-cluster-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource bindplane-agent/Deployment/bindplane-cluster-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource bindplane-agent/Deployment/bindplane-cluster-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource bindplane-agent/Deployment/bindplane-cluster-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: agent6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/akri-agent-daemonset:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akri-agent
    app.kubernetes.io/part-of: akri
    app.kubernetes.io/version: 0.12.20
    helm.sh/chart: akri-0.12.20
  name: akri-agent-daemonset
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: akri-agent
      app.kubernetes.io/part-of: akri
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: akri-agent
        app.kubernetes.io/part-of: akri
        app.kubernetes.io/version: 0.12.20
        helm.sh/chart: akri-0.12.20
    spec:
      containers:
      - env:
        - name: HOST_CRICTL_PATH
          value: /usr/local/bin/crictl
        - name: HOST_RUNTIME_ENDPOINT
          value: unix:///host/run/containerd/containerd.sock
        - name: HOST_IMAGE_ENDPOINT
          value: unix:///host/run/containerd/containerd.sock
        - name: AGENT_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DISCOVERY_HANDLERS_DIRECTORY
          value: /var/lib/akri
        image: ghcr.io/project-akri/akri/agent:v0.12.20-dev
        name: akri-agent
        resources:
          limits:
            cpu: 26m
            memory: 79Mi
          requests:
            cpu: 10m
            memory: 11Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/lib/akri
          name: discovery-handlers
        - mountPath: /var/lib/kubelet/device-plugins
          name: device-plugin
        - mountPath: /host/run/containerd/containerd.sock
          name: var-run-dockershim
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: akri-agent-sa
      volumes:
      - hostPath:
          path: /var/lib/akri
        name: discovery-handlers
      - hostPath:
          path: /var/lib/kubelet/device-plugins
        name: device-plugin
      - hostPath:
          path: /run/containerd/containerd.sock
        name: var-run-dockershim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/akri-agent-daemonset
policy disallow-default-namespace -> resource default/DaemonSet/akri-agent-daemonset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/DaemonSet/akri-agent-daemonset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-pod-probes -> resource default/DaemonSet/akri-agent-daemonset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/akri-agent-daemonset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/DaemonSet/akri-agent-daemonset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: agent-dep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to load-balancer/Deployment/agent:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  namespace: load-balancer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        - name: SERVER_TRIGGER_HOST
          value: server-service
        - name: A1
          value: "0.5"
        - name: A2
          value: "0.2"
        - name: A3
          value: "0.3"
        - name: NODE_IP
          value: 10.3.12.5,10.3.12.116,10.3.12.227,10.3.13.82,10.3.13.193,10.3.14.48,10.3.14.161,10.3.12.114
        - name: NODE_PORT
          value: "31194"
        image: firas124578/agent
        name: agent
        ports:
        - containerPort: 3333
        volumeMounts:
        - mountPath: /conf
          name: config-pvv
      volumes:
      - name: config-pvv
        persistentVolumeClaim:
          claimName: config-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource load-balancer/Deployment/agent

skipped mutate policy add-safe-to-evict -> resource load-balancer/Deployment/agent
policy disallow-latest-tag -> resource load-balancer/Deployment/agent failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource load-balancer/Deployment/agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource load-balancer/Deployment/agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource load-balancer/Deployment/agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource load-balancer/Deployment/agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource load-balancer/Deployment/agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource load-balancer/Deployment/agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource load-balancer/Deployment/agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: agent-dep_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to load-balancer/Service/agent-service:
apiVersion: v1
kind: Service
metadata:
  name: agent-service
  namespace: load-balancer
spec:
  ports:
  - port: 3333
    targetPort: 3333
  selector:
    app: agent

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agent-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/agent-statefulset:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agent-statefulset
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: agent-service
  serviceName: agent-service
  template:
    metadata:
      labels:
        app: agent-service
    spec:
      containers:
      - env:
        - name: SERVER_PORT
          value: "8081"
        - name: eureka_client_serviceUrl_defaultZone
          value: http://eureka-service:8761/eureka/
        image: ghkdqhrbals/bm-agent:latest
        imagePullPolicy: Always
        name: bm-agent
        ports:
        - containerPort: 8081

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/agent-statefulset

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/agent-statefulset
policy disallow-default-namespace -> resource default/StatefulSet/agent-statefulset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/agent-statefulset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: agent-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agent-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agent-service
  name: agent-service
  namespace: default
spec:
  ports:
  - name: http
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: agent-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregated-metrics-reader9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:aggregated-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator:
apiVersion: v1
data:
  vector.yaml: |
    api:
      enabled: true
    log_schema:
      host_key: "pod"
    sinks:
      debug_console:
        type: "console"
        inputs:
          - vector
        encoding:
          codec: "json"
    sources:
      vector:
        address: 0.0.0.0:6000
        type: vector
        version: "2"
kind: ConfigMap
metadata:
  name: vector-aggregator
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/vector-aggregator:
apiVersion: v1
kind: Service
metadata:
  name: vector-aggregator
  namespace: default
spec:
  clusterIP: ""
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: vector
    port: 6000
    protocol: TCP
    targetPort: 6000
  selector:
    app.kubernetes.io/component: Aggregator
    app.kubernetes.io/instance: vector-aggregator
    app.kubernetes.io/name: vector
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/vector-aggregator:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  generation: 1
  labels:
    app.kubernetes.io/component: Aggregator
    app.kubernetes.io/instance: vector-aggregator
    app.kubernetes.io/name: vector
  name: vector-aggregator
  namespace: default
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: Aggregator
      app.kubernetes.io/instance: vector-aggregator
      app.kubernetes.io/name: vector
  serviceName: vector-aggregator-headless
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/component: Aggregator
        app.kubernetes.io/instance: vector-aggregator
        app.kubernetes.io/name: vector
        vector.dev/exclude: "true"
    spec:
      containers:
      - args:
        - --config-dir
        - /etc/vector/
        image: timberio/vector:0.38.0-alpine
        imagePullPolicy: IfNotPresent
        name: vector
        ports:
        - containerPort: 6000
          name: vector
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /vector-data-dir
          name: data
        - mountPath: /etc/vector/
          name: config
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: vector-aggregator
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/vector-aggregator
policy disallow-default-namespace -> resource default/StatefulSet/vector-aggregator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: aggregator_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator-discovery:
apiVersion: v1
data:
  ADDRESS: vector-aggregator:6000
kind: ConfigMap
metadata:
  name: vector-aggregator-discovery
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator:
apiVersion: v1
data:
  vector.yaml: |
    api:
      enabled: true
    log_schema:
      host_key: "pod"
    sinks:
      debug_console:
        type: "console"
        inputs:
          - vector
        encoding:
          codec: "json"
      # essink:
      #   type: elasticsearch
      #   inputs:
      #     - vector
      #   api_version: auto
      #   compression: none
      #   doc_type: _doc
      #   endpoints:Copilot features might go through different early access stages, which are typically enabled and configured through settings.


      #     - http://elasticsearch:9200
      #   mode: bulk
      #   # query:
      #   #   X-Powered-By: Vector
    sources:
      vector:
        address: 0.0.0.0:6000
        type: vector
        version: "2"
kind: ConfigMap
metadata:
  name: vector-aggregator
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/vector-aggregator:
apiVersion: v1
kind: Service
metadata:
  name: vector-aggregator
  namespace: default
spec:
  clusterIP: ""
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: vector
    port: 6000
    protocol: TCP
    targetPort: 6000
  selector:
    app.kubernetes.io/component: Aggregator
    app.kubernetes.io/instance: vector-aggregator
    app.kubernetes.io/name: vector
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/vector-aggregator:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  generation: 1
  labels:
    app.kubernetes.io/component: Aggregator
    app.kubernetes.io/instance: vector-aggregator
    app.kubernetes.io/name: vector
  name: vector-aggregator
  namespace: default
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: Aggregator
      app.kubernetes.io/instance: vector-aggregator
      app.kubernetes.io/name: vector
  serviceName: vector-aggregator-headless
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/component: Aggregator
        app.kubernetes.io/instance: vector-aggregator
        app.kubernetes.io/name: vector
        vector.dev/exclude: "true"
    spec:
      containers:
      - args:
        - --config-dir
        - /etc/vector/
        image: timberio/vector:0.38.0-alpine
        imagePullPolicy: IfNotPresent
        name: vector
        ports:
        - containerPort: 6000
          name: vector
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /vector-data-dir
          name: data
        - mountPath: /etc/vector/
          name: config
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: vector-aggregator
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/vector-aggregator
policy disallow-default-namespace -> resource default/StatefulSet/vector-aggregator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-pod-probes -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: aggregator1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator-discovery:
apiVersion: v1
data:
  ADDRESS: vector-aggregator:6000
kind: ConfigMap
metadata:
  name: vector-aggregator-discovery
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator-assert.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator:
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-aggregator
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator-assert_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/vector-aggregator:
apiVersion: v1
kind: Service
metadata:
  name: vector-aggregator
  namespace: default
spec:
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator-assert_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/vector-aggregator:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vector-aggregator
  namespace: default
status:
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/vector-aggregator

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/vector-aggregator
policy disallow-container-sock-mounts -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/vector-aggregator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: aggregator-assert_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator-discovery:
apiVersion: v1
data:
  ADDRESS: vector-aggregator:6000
kind: ConfigMap
metadata:
  name: vector-aggregator-discovery
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator-assert1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/vector-aggregator:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vector-aggregator
  namespace: default
status:
  replicas: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/vector-aggregator

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/vector-aggregator
policy disallow-container-sock-mounts -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/

policy disallow-default-namespace -> resource default/StatefulSet/vector-aggregator failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/

policy require-requests-limits -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/

policy require-ro-rootfs -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/

policy restrict-image-registries -> resource default/StatefulSet/vector-aggregator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: aggregator-assert1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/vector-aggregator-discovery:
apiVersion: v1
data:
  ADDRESS: vector-aggregator:6000
kind: ConfigMap
metadata:
  name: vector-aggregator-discovery
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/wlsm-namespace:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kuma.io/sidecar-injection: enabled
  name: wlsm-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/wlsm-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: wlsm-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/wlsm-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: wlsm-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/wlsm-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: wlsm-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/wlsm-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: wlsm-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aggregator-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wlsm-namespace/Deployment/wlsm-aggregator:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wlsm-aggregator
  namespace: wlsm-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wlsm-aggregator
  template:
    metadata:
      labels:
        app: wlsm-aggregator
    spec:
      containers:
      - image: localhost:5001/wlsm-aggregator-service:latest
        imagePullPolicy: Always
        name: wlsm-aggregator-service
        ports:
        - containerPort: 8082

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource wlsm-namespace/Deployment/wlsm-aggregator

skipped mutate policy add-safe-to-evict -> resource wlsm-namespace/Deployment/wlsm-aggregator
policy disallow-latest-tag -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource wlsm-namespace/Deployment/wlsm-aggregator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aggregator-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wlsm-namespace/Service/wlsm-aggregator-deployment:
apiVersion: v1
kind: Service
metadata:
  name: wlsm-aggregator-deployment
  namespace: wlsm-namespace
spec:
  ports:
  - appProtocol: http
    port: 8082
    protocol: TCP
  selector:
    app: wlsm-aggregator

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agify_Deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/agify:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agify
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agify
  template:
    metadata:
      labels:
        app: agify
    spec:
      containers:
      - image: marcstu2007/agify:1
        name: agify
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/agify

skipped mutate policy add-safe-to-evict -> resource default/Deployment/agify
policy disallow-default-namespace -> resource default/Deployment/agify failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/agify failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/agify failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/agify failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/agify failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/agify failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/agify failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/agify failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: agify_Service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agify-service:
apiVersion: v1
kind: Service
metadata:
  name: agify-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: agify
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/agnhost-a:
apiVersion: v1
kind: Pod
metadata:
  labels:
    agnhost: a
    app: agnhost
  name: agnhost-a
  namespace: kube-system
spec:
  containers:
  - args:
    - serve-hostname
    - --http
    - --port
    - "80"
    command:
    - /agnhost
    image: k8s.gcr.io/e2e-test-images/agnhost:2.36
    name: a1
  nodeName: aks-nodepool1-12809644-vmss000000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-a

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-a
policy drop-all-capabilities -> resource kube-system/Pod/agnhost-a failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/agnhost-a failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/agnhost-a failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Pod/agnhost-a failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/agnhost-a failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/agnhost-a failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/agnhost-a failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: agnhost_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/agnhost-b:
apiVersion: v1
kind: Pod
metadata:
  labels:
    agnhost: b
    app: agnhost
  name: agnhost-b
  namespace: kube-system
spec:
  containers:
  - args:
    - serve-hostname
    - --http
    - --port
    - "80"
    command:
    - /agnhost
    image: k8s.gcr.io/e2e-test-images/agnhost:2.36
    name: b1
  nodeName: aks-nodepool1-12809644-vmss000001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-b

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-b
policy drop-all-capabilities -> resource kube-system/Pod/agnhost-b failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/agnhost-b failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/agnhost-b failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Pod/agnhost-b failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/agnhost-b failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/agnhost-b failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/agnhost-b failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: agnhost_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/agnhost-c:
apiVersion: v1
kind: Pod
metadata:
  labels:
    agnhost: c
    app: agnhost
  name: agnhost-c
  namespace: kube-system
spec:
  containers:
  - args:
    - serve-hostname
    - --http
    - --port
    - "80"
    command:
    - /agnhost
    image: k8s.gcr.io/e2e-test-images/agnhost:2.36
    name: c1
  nodeName: aks-nodepool1-12809644-vmss000002

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-c

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-c
policy drop-all-capabilities -> resource kube-system/Pod/agnhost-c failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/agnhost-c failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/agnhost-c failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Pod/agnhost-c failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/agnhost-c failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/agnhost-c failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/agnhost-c failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: agnhost1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/agnhost-a:
apiVersion: v1
kind: Pod
metadata:
  labels:
    agnhost: a
    app: agnhost
  name: agnhost-a
  namespace: kube-system
spec:
  containers:
  - args:
    - serve-hostname
    - --http
    - --port
    - "80"
    command:
    - /agnhost
    image: k8s.gcr.io/e2e-test-images/agnhost:2.36
    name: a1
  nodeName: aks-nodepool1-12809644-vmss000000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-a

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-a
policy drop-all-capabilities -> resource kube-system/Pod/agnhost-a failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/agnhost-a failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/agnhost-a failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Pod/agnhost-a failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/agnhost-a failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/agnhost-a failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/agnhost-a failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: agnhost1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/agnhost-b:
apiVersion: v1
kind: Pod
metadata:
  labels:
    agnhost: b
    app: agnhost
  name: agnhost-b
  namespace: kube-system
spec:
  containers:
  - args:
    - serve-hostname
    - --http
    - --port
    - "80"
    command:
    - /agnhost
    image: k8s.gcr.io/e2e-test-images/agnhost:2.36
    name: b1
  nodeName: aks-nodepool1-12809644-vmss000001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-b

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-b
policy drop-all-capabilities -> resource kube-system/Pod/agnhost-b failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/agnhost-b failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/agnhost-b failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Pod/agnhost-b failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/agnhost-b failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/agnhost-b failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/agnhost-b failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: agnhost1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/agnhost-c:
apiVersion: v1
kind: Pod
metadata:
  labels:
    agnhost: c
    app: agnhost
  name: agnhost-c
  namespace: kube-system
spec:
  containers:
  - args:
    - serve-hostname
    - --http
    - --port
    - "80"
    command:
    - /agnhost
    image: k8s.gcr.io/e2e-test-images/agnhost:2.36
    name: c1
  nodeName: aks-nodepool1-12809644-vmss000002

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-c

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/agnhost-c
policy drop-all-capabilities -> resource kube-system/Pod/agnhost-c failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/agnhost-c failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/agnhost-c failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Pod/agnhost-c failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/agnhost-c failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/agnhost-c failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/agnhost-c failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: agnhost-master-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-master:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: master
  name: agnhost-master
  namespace: default
spec:
  containers:
  - env:
    - name: MASTER
      value: "true"
    image: gcr.io/kubernetes-e2e-test-images/agnhost:1.0
    name: master
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-master-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: gcr.io/kubernetes-e2e-test-images/agnhost:1.0
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-master
policy disallow-default-namespace -> resource default/Pod/agnhost-master failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-master failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-master failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-master failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-master failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-master failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-master failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-master failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-master-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-master:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: master
    tier: backend
  name: agnhost-master
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: master
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: gcr.io/kubernetes-e2e-test-images/agnhost:1.0
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: gcr.io/kubernetes-e2e-test-images/agnhost:1.0
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: k8s.gcr.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-pod9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agnhost-primary:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    name: agnhost
    role: primary
  name: agnhost-primary
  namespace: default
spec:
  containers:
  - env:
    - name: PRIMARY
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: primary
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /agnhost-primary-data
      name: data
  - env:
    - name: SENTINEL
      value: "true"
    image: registry.k8s.io/e2e-test-images/agnhost:2.32
    name: sentinel
    ports:
    - containerPort: 26379
  volumes:
  - emptyDir: {}
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agnhost-primary
policy disallow-default-namespace -> resource default/Pod/agnhost-primary failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/agnhost-primary failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agnhost-primary failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agnhost-primary failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agnhost-primary failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/agnhost-primary failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agnhost-primary failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agnhost-primary failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: agnhost-primary-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-primary-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-primary:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: primary
    tier: backend
  name: agnhost-primary
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-replica-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-replica:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: replica
    tier: backend
  name: agnhost-replica
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: agnhost-slave-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/agnhost-slave:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agnhost
    role: slave
    tier: backend
  name: agnhost-slave
  namespace: default
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: slave
    tier: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aideployment_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aideployment-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: prem-operator
    app.kubernetes.io/instance: aideployment-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: prem-operator
  name: aideployment-editor-role
  namespace: default
rules:
- apiGroups:
  - premlabs.io
  resources:
  - aideployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - premlabs.io
  resources:
  - aideployments/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aideployment_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aideployment-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: prem-operator
    app.kubernetes.io/instance: aideployment-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: prem-operator
  name: aideployment-viewer-role
  namespace: default
rules:
- apiGroups:
  - premlabs.io
  resources:
  - aideployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - premlabs.io
  resources:
  - aideployment/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aigateway.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/acme-ai-cloud-providers:
apiVersion: v1
kind: Secret
metadata:
  name: acme-ai-cloud-providers
  namespace: default
stringData:
  openai: <INSERT TOKEN HERE>
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aigateway_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aigateway-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kong-gateway-operator
    app.kubernetes.io/instance: aigateway-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kong-gateway-operator
  name: aigateway-editor-role
  namespace: default
rules:
- apiGroups:
  - gateway-operator.konghq.com
  resources:
  - aigateways
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway-operator.konghq.com
  resources:
  - aigateways/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aigateway_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aigateway-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kong-gateway-operator
    app.kubernetes.io/instance: aigateway-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kong-gateway-operator
  name: aigateway-viewer-role
  namespace: default
rules:
- apiGroups:
  - gateway-operator.konghq.com
  resources:
  - aigateways
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway-operator.konghq.com
  resources:
  - aigateways/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ailab-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ailab-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24, 10.244.0.0/16
  name: ailab-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: ailab.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: ailab-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - ailab.inspection.alpha.canada.ca
    secretName: aciacfia-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ailab-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/inspection-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "true"
    nginx.ingress.kubernetes.io/hsts-preload: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16
  name: inspection-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: ailab-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - inspection.alpha.canada.ca
    secretName: apex-domain-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ailab-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ailab-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24, 10.244.0.0/16
  name: ailab-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: ailab.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: ailab-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - ailab.inspection.alpha.canada.ca
    secretName: aciacfia-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ailab-ingress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/inspection-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "true"
    nginx.ingress.kubernetes.io/hsts-preload: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16
  name: inspection-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: ailab-svc
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - inspection.alpha.canada.ca
    secretName: apex-domain-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aimodelmap_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aimodelmap-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: prem-operator
    app.kubernetes.io/instance: aimodelmap-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: prem-operator
  name: aimodelmap-editor-role
  namespace: default
rules:
- apiGroups:
  - premlabs.io
  resources:
  - aimodelmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - premlabs.io
  resources:
  - aimodelmaps/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aimodelmap_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/aimodelmap-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: prem-operator
    app.kubernetes.io/instance: aimodelmap-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: prem-operator
  name: aimodelmap-viewer-role
  namespace: default
rules:
- apiGroups:
  - premlabs.io
  resources:
  - aimodelmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - premlabs.io
  resources:
  - aimodelmaps/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/kubernetes-dashboard:
apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/kubernetes-dashboard:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: kubernetes-dashboard
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/kubernetes-dashboard:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: kubernetes-dashboard
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kubernetes-dashboard:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: kubernetes-dashboard
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/kubernetes-dashboard:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: kubernetes-dashboard
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ServiceAccount/kubernetes-dashboard:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Deployment/kubernetes-dashboard:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      containers:
      - args:
        - --auto-generate-certificates
        - --namespace=kubernetes-dashboard
        image: kubernetesui/dashboard:v2.7.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: kubernetes-dashboard
        ports:
        - containerPort: 8443
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /certs
          name: kubernetes-dashboard-certs
        - mountPath: /tmp
          name: tmp-volume
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard-certs
      - emptyDir: {}
        name: tmp-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard
policy drop-all-capabilities -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource kubernetes-dashboard/Deployment/kubernetes-dashboard failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: aio-recommended-v2.7.0_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Service/dashboard-metrics-scraper:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    k8s-app: dashboard-metrics-scraper

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Deployment/dashboard-metrics-scraper:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: dashboard-metrics-scraper
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        k8s-app: dashboard-metrics-scraper
    spec:
      containers:
      - image: kubernetesui/metrics-scraper:v1.0.8
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: dashboard-metrics-scraper
        ports:
        - containerPort: 8000
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - emptyDir: {}
        name: tmp-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper
policy drop-all-capabilities -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource kubernetes-dashboard/Deployment/dashboard-metrics-scraper failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: aio-recommended-v2.7.0_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Service/kubernetes-dashboard:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    k8s-app: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Secret/kubernetes-dashboard-certs:
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Secret/kubernetes-dashboard-csrf:
apiVersion: v1
data:
  csrf: ""
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: kubernetes-dashboard
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Secret/kubernetes-dashboard-key-holder:
apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-key-holder
  namespace: kubernetes-dashboard
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/ConfigMap/kubernetes-dashboard-settings:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/Role/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-key-holder
  - kubernetes-dashboard-certs
  - kubernetes-dashboard-csrf
  resources:
  - secrets
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-settings
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resourceNames:
  - heapster
  - dashboard-metrics-scraper
  resources:
  - services
  verbs:
  - proxy
- apiGroups:
  - ""
  resourceNames:
  - heapster
  - 'http:heapster:'
  - 'https:heapster:'
  - dashboard-metrics-scraper
  - http:dashboard-metrics-scraper
  resources:
  - services/proxy
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: default
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aio-recommended-v2.7.0_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubernetes-dashboard/RoleBinding/kubernetes-dashboard:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airbyte-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airbyte/Ingress/airbyte-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: airbyte-ingress
  namespace: airbyte
spec:
  ingressClassName: nginx
  rules:
  - host: dataplatform.airbyte.io
    http:
      paths:
      - backend:
          service:
            name: airbyte-airbyte-webapp-svc
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/airflow-spark-dev:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow-spark-dev
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spark-bucket-read-role
subjects:
- kind: ServiceAccount
  name: airflow-dev-worker
  namespace: data-stack-dev

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/airflow-spark-create-application:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: airflow-spark-create-application
  namespace: default
rules:
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - sparkapplications
  - sparkapplications/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/status
  - pods/var
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/airflow-spark-application-creator:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow-spark-application-creator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: airflow-spark-create-application
subjects:
- kind: ServiceAccount
  name: airflow-dev-worker
  namespace: data-stack-dev

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/airflow-spark-dev:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow-spark-dev
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spark-bucket-read-role
subjects:
- kind: ServiceAccount
  name: airflow-dev-worker
  namespace: data-stack-dev

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/airflow-spark-create-application:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: airflow-spark-create-application
  namespace: default
rules:
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - sparkapplications
  - sparkapplications/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/status
  - pods/var
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/airflow-spark-application-creator:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow-spark-application-creator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: airflow-spark-create-application
subjects:
- kind: ServiceAccount
  name: airflow-dev-worker
  namespace: data-stack-dev

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-app/Deployment/airflow-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-deployment
  namespace: airflow-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-app
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: airflow-app
    spec:
      containers:
      - args:
        - scheduler
        env:
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /dags
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: sql_alchemy_conn
              name: airflow-config
        image: apache/airflow:2.2.4
        imagePullPolicy: IfNotPresent
        name: airflow-scheduler
        volumeMounts:
        - mountPath: /dags/
          name: shared
      - args:
        - webserver
        - -p
        - "8090"
        env:
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /dags
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: sql_alchemy_conn
              name: airflow-config
        image: apache/airflow:2.2.4
        imagePullPolicy: IfNotPresent
        name: airflow-webserver
        ports:
        - containerPort: 8090
        volumeMounts:
        - mountPath: /dags/
          name: shared
      initContainers:
      - args:
        - users
        - create
        - -e
        - airflow@airflow.com
        - -f
        - airflow
        - -l
        - airflow
        - -p
        - airflow
        - -r
        - Admin
        - -u
        - airflow
        command:
        - airflow
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: sql_alchemy_conn
              name: airflow-config
        image: apache/airflow:2.2.4
        imagePullPolicy: IfNotPresent
        name: airflow-create-user
      volumes:
      - hostPath:
          path: /dags
          type: DirectoryOrCreate
        name: shared

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-app/Deployment/airflow-deployment
policy drop-all-capabilities -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-app/Deployment/airflow-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-app/Service/airflow-ui-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    xccelerated.io/moritz-project: airflow-app
  name: airflow-ui-service
  namespace: airflow-app
spec:
  ports:
  - port: 8090
    protocol: TCP
    targetPort: 8090
  selector:
    app: airflow-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflowcluster_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/airflowcluster-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: airflow-operator
  name: airflowcluster-editor-role
  namespace: default
rules:
- apiGroups:
  - airflow.kubedoop.dev
  resources:
  - airflowclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - airflow.kubedoop.dev
  resources:
  - airflowclusters/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflowcluster_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/airflowcluster-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: airflow-operator
  name: airflowcluster-viewer-role
  namespace: default
rules:
- apiGroups:
  - airflow.kubedoop.dev
  resources:
  - airflowclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - airflow.kubedoop.dev
  resources:
  - airflowclusters/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-app/ConfigMap/airflow-config:
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: minioadmin
  AWS_SECRET_ACCESS_KEY: minioadmin
  POSTGRES_DB: postgresdb
  POSTGRES_PASSWORD: test123.
  POSTGRES_USER: admin
  executor: KubernetesExecutor
  sql_alchemy_conn: postgresql+psycopg2://admin:test123.@postgres-service:5432/public
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: airflow-app

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/ConfigMap/airflow-config:
apiVersion: v1
data:
  executor: KubernetesExecutor
  multi-namespace-mode: "off"
  sql_alchemy_conn: postgresql://airflow_user:airflow_pass@postgres:5432/airflow_db
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: airflow

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-database.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-database:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-database
metadata:
  name: airflow-database
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-database
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        deployment: airflow-database
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USERNAME
          value: bn_airflow
        - name: POSTGRESQL_PASSWORD
          value: bitnami1
        - name: POSTGRESQL_DATABASE
          value: bitnami_airflow
        hostname: airflow-database
        image: bitnami/postgresql:latest
        name: airflow-database
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /bitnami/postgresql/
          name: generic-database
      volumes:
      - name: generic-database
        persistentVolumeClaim:
          claimName: generic-database
      - emptyDir: {}
        name: empty1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-database
policy disallow-latest-tag -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: airflow-database1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-database:
apiVersion: v1
kind: Service
metadata:
  name: airflow-database
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 5432-tcp
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    deployment: airflow-database
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-database2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-database:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-database
metadata:
  name: airflow-database
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-database
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        deployment: airflow-database
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USERNAME
          value: bn_airflow
        - name: POSTGRESQL_PASSWORD
          value: bitnami1
        - name: POSTGRESQL_DATABASE
          value: bitnami_airflow
        hostname: airflow-database
        image: bitnami/postgresql:latest
        name: airflow-database
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /bitnami/postgresql/
          name: generic-database
      volumes:
      - name: generic-database
        persistentVolumeClaim:
          claimName: generic-database
      - emptyDir: {}
        name: empty1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-database
policy disallow-latest-tag -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-database failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: airflow-database3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-database:
apiVersion: v1
kind: Service
metadata:
  name: airflow-database
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 5432-tcp
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    deployment: airflow-database
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/Deployment/airflow:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      component: webserver
      deploy: airflow
      name: airflow
  template:
    metadata:
      labels:
        component: webserver
        deploy: airflow
        name: airflow
    spec:
      containers:
      - args:
        - scheduler
        command:
        - airflow
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: sql_alchemy_conn
              name: airflow-config
        - name: AIRFLOW__CORE__EXECUTOR
          valueFrom:
            configMapKeyRef:
              key: executor
              name: airflow-config
        image: apache/airflow:2.8.3
        imagePullPolicy: IfNotPresent
        name: airflow-scheduler
        volumeMounts:
        - mountPath: /opt/logs
          name: logs-pv
        - mountPath: /opt/dags
          name: dags-pv
      - args:
        - webserver
        command:
        - airflow
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: sql_alchemy_conn
              name: airflow-config
        - name: AIRFLOW__CORE__EXECUTOR
          valueFrom:
            configMapKeyRef:
              key: executor
              name: airflow-config
        image: apache/airflow:2.8.3
        imagePullPolicy: IfNotPresent
        name: airflow-webserver
        ports:
        - containerPort: 8080
      restartPolicy: Always
      serviceAccountName: airflow-scheduler
      volumes:
      - name: dags-pv
        persistentVolumeClaim:
          claimName: dags-pvc
      - name: logs-pv
        persistentVolumeClaim:
          claimName: logs-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow/Deployment/airflow

skipped mutate policy add-safe-to-evict -> resource airflow/Deployment/airflow
policy drop-all-capabilities -> resource airflow/Deployment/airflow failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow/Deployment/airflow failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow/Deployment/airflow failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow/Deployment/airflow failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource airflow/Deployment/airflow failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow/Deployment/airflow failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow/Deployment/airflow failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: airflow-flower.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-flower:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-flower
metadata:
  name: airflow-flower
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-flower
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        deployment: airflow-flower
    spec:
      containers:
      - args:
        - airflow celery flower -p 5555;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow-webserver
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: "8080"
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        hostname: airflow-flower
        image: apache/airflow:2.3.0
        name: airflow-flower
        ports:
        - containerPort: 8793
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /opt/airflow
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-flower
        - mountPath: /opt/airflow/dags/
          name: generic-flower
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg-flower
          subPath: airflow.cfg
      volumes:
      - name: generic-flower
        persistentVolumeClaim:
          claimName: generic-flower
      - emptyDir: {}
        name: empty1
      - configMap:
          defaultMode: 511
          name: airflow-cfg-flower
        name: airflow-cfg-flower

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-flower
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-flower1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-flower:
apiVersion: v1
kind: Service
metadata:
  name: airflow-flower
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 5555-tcp
    port: 5555
    protocol: TCP
    targetPort: 5555
  selector:
    deployment: airflow-flower
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-flower2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-flower:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-flower
metadata:
  name: airflow-flower
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-flower
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        deployment: airflow-flower
    spec:
      containers:
      - args:
        - airflow celery flower -p 5555;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow-webserver
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: "8080"
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        hostname: airflow-flower
        image: apache/airflow:2.3.0
        name: airflow-flower
        ports:
        - containerPort: 8793
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /opt/airflow
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-flower
        - mountPath: /opt/airflow/dags/
          name: generic-flower
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg-flower
          subPath: airflow.cfg
      volumes:
      - name: generic-flower
        persistentVolumeClaim:
          claimName: generic-flower
      - emptyDir: {}
        name: empty1
      - configMap:
          defaultMode: 511
          name: airflow-cfg-flower
        name: airflow-cfg-flower

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-flower
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-flower failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-flower3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-flower:
apiVersion: v1
kind: Service
metadata:
  name: airflow-flower
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 5555-tcp
    port: 5555
    protocol: TCP
    targetPort: 5555
  selector:
    deployment: airflow-flower
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/Ingress/airflow-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: airflow-ingress
  namespace: airflow
spec:
  ingressClassName: nginx
  rules:
  - host: dataplatform.airflow.io
    http:
      paths:
      - backend:
          service:
            name: airflow-webserver
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-logs-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/PersistentVolumeClaim/airflow-logs-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-logs-pvc
  namespace: airflow
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: hostpath

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/airflow-worker-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: airflow-worker-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/exec
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/airflow-worker-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: airflow-worker-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: airflow-worker-role
subjects:
- kind: ServiceAccount
  name: airflow-worker
  namespace: airflow

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-redis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-redis:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-redis
metadata:
  name: airflow-redis
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-redis
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        deployment: airflow-redis
    spec:
      containers:
      - env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        hostname: airflow-redis
        image: bitnami/redis:latest
        name: airflow-redis
        ports:
        - containerPort: 6379
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /bitnami/
          name: generic-redis
      volumes:
      - name: generic-redis
        persistentVolumeClaim:
          claimName: generic-redis
      - emptyDir: {}
        name: empty1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-redis
policy disallow-latest-tag -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: airflow-redis1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-redis:
apiVersion: v1
kind: Service
metadata:
  name: airflow-redis
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 6379-tcp
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    deployment: airflow-redis
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-redis2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-redis:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-redis
metadata:
  name: airflow-redis
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-redis
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        deployment: airflow-redis
    spec:
      containers:
      - env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        hostname: airflow-redis
        image: bitnami/redis:latest
        name: airflow-redis
        ports:
        - containerPort: 6379
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /bitnami/
          name: generic-redis
      volumes:
      - name: generic-redis
        persistentVolumeClaim:
          claimName: generic-redis
      - emptyDir: {}
        name: empty1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-redis
policy disallow-latest-tag -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: airflow-redis3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-redis:
apiVersion: v1
kind: Service
metadata:
  name: airflow-redis
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 6379-tcp
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    deployment: airflow-redis
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-scheduler.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-scheduler:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-scheduler
metadata:
  name: airflow-scheduler
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-scheduler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        deployment: airflow-scheduler
    spec:
      containers:
      - args:
        - airflow scheduler;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow-webserver
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: "8080"
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_LOAD_EXAMPLES
          value: "yes"
        - name: AIRFLOW_PASSWORD
          value: bitnami123
        - name: AIRFLOW_USERNAME
          value: user
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        hostname: airflow-scheduler
        image: apache/airflow:2.3.0
        name: airflow-scheduler
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 1Gi
        volumeMounts:
        - mountPath: /opt/airflow/
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-scheduler
        - mountPath: /opt/airflow/dags/
          name: generic-scheduler
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg-scheduler
          subPath: airflow.cfg
      volumes:
      - name: generic-scheduler
        persistentVolumeClaim:
          claimName: generic-worker-scheduler
      - emptyDir: {}
        name: empty1
      - configMap:
          defaultMode: 511
          name: airflow-cfg-scheduler
        name: airflow-cfg-scheduler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-scheduler
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-scheduler1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-scheduler:
apiVersion: v1
kind: Service
metadata:
  name: airflow-scheduler
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: airflow-scheduler
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-scheduler2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-scheduler:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-scheduler
metadata:
  name: airflow-scheduler
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-scheduler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        deployment: airflow-scheduler
    spec:
      containers:
      - args:
        - airflow scheduler;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow-webserver
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: "8080"
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_LOAD_EXAMPLES
          value: "yes"
        - name: AIRFLOW_PASSWORD
          value: bitnami123
        - name: AIRFLOW_USERNAME
          value: user
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        hostname: airflow-scheduler
        image: apache/airflow:2.3.0
        name: airflow-scheduler
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 1Gi
        volumeMounts:
        - mountPath: /opt/airflow/
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-scheduler
        - mountPath: /opt/airflow/dags/
          name: generic-scheduler
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg-scheduler
          subPath: airflow.cfg
      volumes:
      - name: generic-scheduler
        persistentVolumeClaim:
          claimName: generic-worker-scheduler
      - emptyDir: {}
        name: empty1
      - configMap:
          defaultMode: 511
          name: airflow-cfg-scheduler
        name: airflow-cfg-scheduler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-scheduler
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-scheduler failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-scheduler3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-scheduler:
apiVersion: v1
kind: Service
metadata:
  name: airflow-scheduler
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: airflow-scheduler
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/Secret/airflow-webserver-secret-key:
apiVersion: v1
data:
  webserver-secret-key: WEBSERVER_SECRET_KEY
kind: Secret
metadata:
  name: airflow-webserver-secret-key
  namespace: airflow
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow/Service/webserver-svc:
apiVersion: v1
kind: Service
metadata:
  name: webserver-svc
  namespace: airflow
spec:
  ports:
  - name: airflow-ui
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: webserver
    deploy: airflow
    name: airflow
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource airflow/Service/webserver-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: airflow-webserver.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-webserver:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-webserver
metadata:
  name: airflow-webserver
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-webserver
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        deployment: airflow-webserver
    spec:
      containers:
      - args:
        - airflow db upgrade;airflow db init;airflow users create -e ersin@airflow.com
          -f ersin -l gulbahar -p 123456 -r Admin -u ersingulbahar; airflow webserver
          ;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_LOAD_EXAMPLES
          value: "yes"
        - name: AIRFLOW_EMAIL
          value: user@example.com
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_PASSWORD
          value: bitnami123
        - name: AIRFLOW_USERNAME
          value: user
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        hostname: airflow-webserver
        image: apache/airflow:2.3.0
        name: airflow-webserver
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
        volumeMounts:
        - mountPath: /opt/airflow
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-webserver
        - mountPath: /opt/airflow/dags/
          name: generic-webserver
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg
          subPath: airflow.cfg
      volumes:
      - configMap:
          defaultMode: 511
          name: airflow-cfg
        name: airflow-cfg
      - name: generic-webserver
        persistentVolumeClaim:
          claimName: generic-webserver
      - emptyDir: {}
        name: empty1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-webserver
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-webserver2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-webserver:
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: airflow-webserver
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-webserver3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-webserver:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-webserver
metadata:
  name: airflow-webserver
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-webserver
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        deployment: airflow-webserver
    spec:
      containers:
      - args:
        - airflow db upgrade;airflow db init;airflow users create -e ersin@airflow.com
          -f ersin -l gulbahar -p 123456 -r Admin -u ersingulbahar; airflow webserver
          ;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_LOAD_EXAMPLES
          value: "yes"
        - name: AIRFLOW_EMAIL
          value: user@example.com
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_PASSWORD
          value: bitnami123
        - name: AIRFLOW_USERNAME
          value: user
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        hostname: airflow-webserver
        image: apache/airflow:2.3.0
        name: airflow-webserver
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
        volumeMounts:
        - mountPath: /opt/airflow
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-webserver
        - mountPath: /opt/airflow/dags/
          name: generic-webserver
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg
          subPath: airflow.cfg
      volumes:
      - configMap:
          defaultMode: 511
          name: airflow-cfg
        name: airflow-cfg
      - name: generic-webserver
        persistentVolumeClaim:
          claimName: generic-webserver
      - emptyDir: {}
        name: empty1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-webserver
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-webserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-webserver5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-webserver:
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: airflow-webserver
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-worker.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-worker:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-worker
metadata:
  name: airflow-worker
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-worker
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        deployment: airflow-worker
    spec:
      containers:
      - args:
        - airflow celery worker;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow-webserver
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: "8080"
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        hostname: airflow-worker
        image: apache/airflow:2.3.0
        name: airflow-worker
        ports:
        - containerPort: 8793
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
        volumeMounts:
        - mountPath: /opt/airflow
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-worker
        - mountPath: /opt/airflow/dags/
          name: generic-worker
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg-scheduler
          subPath: airflow.cfg
      volumes:
      - name: generic-worker
        persistentVolumeClaim:
          claimName: generic-worker-scheduler
      - emptyDir: {}
        name: empty1
      - configMap:
          defaultMode: 511
          name: airflow-cfg-scheduler
        name: airflow-cfg-scheduler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-worker
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-worker1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-worker:
apiVersion: v1
kind: Service
metadata:
  name: airflow-worker
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8793-tcp
    port: 8793
    protocol: TCP
    targetPort: 8793
  selector:
    deployment: airflow-worker
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airflow-worker2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Deployment/airflow-worker:
apiVersion: apps/v1
kind: Deployment
labels:
  deployment: airflow-worker
metadata:
  name: airflow-worker
  namespace: airflow-v10
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: airflow-worker
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        deployment: airflow-worker
    spec:
      containers:
      - args:
        - airflow celery worker;
        command:
        - bash
        - -c
        env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: USER
          value: ${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          value: bitnami1
        - name: AIRFLOW_DATABASE_HOST
          value: airflow-database
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: "5432"
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow-webserver
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: "8080"
        - name: REDIS_HOST
          value: airflow-redis
        - name: REDIS_PORT_NUMBER
          value: "6379"
        hostname: airflow-worker
        image: apache/airflow:2.3.0
        name: airflow-worker
        ports:
        - containerPort: 8793
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
        volumeMounts:
        - mountPath: /opt/airflow
          name: empty1
        - mountPath: /opt/airflow/logs/
          name: generic-worker
        - mountPath: /opt/airflow/dags/
          name: generic-worker
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-cfg-scheduler
          subPath: airflow.cfg
      volumes:
      - name: generic-worker
        persistentVolumeClaim:
          claimName: generic-worker-scheduler
      - emptyDir: {}
        name: empty1
      - configMap:
          defaultMode: 511
          name: airflow-cfg-scheduler
        name: airflow-cfg-scheduler

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airflow-v10/Deployment/airflow-worker
policy drop-all-capabilities -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource airflow-v10/Deployment/airflow-worker failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: airflow-worker3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/Service/airflow-worker:
apiVersion: v1
kind: Service
metadata:
  name: airflow-worker
  namespace: airflow-v10
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8793-tcp
    port: 8793
    protocol: TCP
    targetPort: 8793
  selector:
    deployment: airflow-worker
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: airsonic1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airsonic/Deployment/airsonic:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airsonic
  namespace: airsonic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airsonic
  template:
    metadata:
      labels:
        app: airsonic
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: JAVA_OPTS
          value: -Dserver.forward-headers-strategy=native
        - name: AIRSONIC_PORT
          value: "4040"
        image: airsonicadvanced/airsonic-advanced:latest
        name: airsonic
        ports:
        - containerPort: 4040
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/podcasts
          name: podcasts
        - mountPath: /var/airsonic
          name: data
      volumes:
      - name: podcasts
        persistentVolumeClaim:
          claimName: airsonic-podcasts-pvc
      - name: data
        persistentVolumeClaim:
          claimName: airsonic-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource airsonic/Deployment/airsonic

skipped mutate policy add-safe-to-evict -> resource airsonic/Deployment/airsonic
policy disallow-latest-tag -> resource airsonic/Deployment/airsonic failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource airsonic/Deployment/airsonic failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource airsonic/Deployment/airsonic failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource airsonic/Deployment/airsonic failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource airsonic/Deployment/airsonic failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource airsonic/Deployment/airsonic failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource airsonic/Deployment/airsonic failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource airsonic/Deployment/airsonic failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: airsonic1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airsonic/Service/airsonic:
apiVersion: v1
kind: Service
metadata:
  name: airsonic
  namespace: airsonic
spec:
  ports:
  - port: 4040
    protocol: TCP
    targetPort: 4040
  selector:
    app: airsonic

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ai-service-v2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to aksappga/Deployment/ai-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: aksappga
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
    spec:
      containers:
      - env:
        - name: USE_AZURE_OPENAI
          value: "True"
        - name: AZURE_OPENAI_DEPLOYMENT_NAME
          value: gpt-35-turbo
        - name: AZURE_OPENAI_ENDPOINT
          value: https://openai-rr-dev.openai.azure.com/
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              key: keyopenai
              name: openaisecret
        image: ghcr.io/azure-samples/aks-store-demo/ai-service:latest
        name: ai-service
        ports:
        - containerPort: 5001
        resources:
          limits:
            cpu: 30m
            memory: 85Mi
          requests:
            cpu: 20m
            memory: 50Mi
        volumeMounts:
        - mountPath: /mnt/secrets-store
          name: secrets-store01-inline
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: workload-identity-sa
      volumes:
      - csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: globalazure-wi
        name: secrets-store01-inline

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource aksappga/Deployment/ai-service

skipped mutate policy add-safe-to-evict -> resource aksappga/Deployment/ai-service
policy disallow-latest-tag -> resource aksappga/Deployment/ai-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource aksappga/Deployment/ai-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource aksappga/Deployment/ai-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource aksappga/Deployment/ai-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource aksappga/Deployment/ai-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource aksappga/Deployment/ai-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource aksappga/Deployment/ai-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ai-service-v2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to aksappga/Service/ai-service:
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: aksappga
spec:
  ports:
  - name: http
    port: 5001
    targetPort: 5001
  selector:
    app: ai-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ai-testing-api.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ai-testing-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ai-testing-api
  name: ai-testing-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-testing-api
  template:
    metadata:
      labels:
        app: ai-testing-api
    spec:
      containers:
      - env:
        - name: TGI_API_URL
          value: http://hf-tgi-server.default.svc.cluster.local/v1/chat/completions
        image: ghcr.io/kenahrens/ai-testing-api:latest
        imagePullPolicy: Always
        name: ai-testing-api
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 100m
            ephemeral-storage: 5Gi
            memory: 100Mi
          requests:
            cpu: 100m
            ephemeral-storage: 5Gi
            memory: 100Mi
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Equal
        value: present

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ai-testing-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ai-testing-api
policy disallow-default-namespace -> resource default/Deployment/ai-testing-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ai-testing-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ai-testing-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ai-testing-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ai-testing-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/ai-testing-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ai-testing-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ai-testing-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ai-testing-api_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ai-testing-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ai-testing-api
  name: ai-testing-api
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: ai-testing-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ai-testing-ui.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ai-testing-ui:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ai-testing-ui
  name: ai-testing-ui
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-testing-ui
  template:
    metadata:
      labels:
        app: ai-testing-ui
    spec:
      containers:
      - image: ghcr.io/kenahrens/ai-testing-ui:latest
        imagePullPolicy: Always
        name: ai-testing-ui
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 100m
            ephemeral-storage: 0Mi
            memory: 100Mi
          requests:
            cpu: 100m
            ephemeral-storage: 0Mi
            memory: 100Mi
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Equal
        value: present

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ai-testing-ui

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ai-testing-ui
policy disallow-default-namespace -> resource default/Deployment/ai-testing-ui failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ai-testing-ui failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ai-testing-ui_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ai-testing-ui:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ai-testing-ui
  name: ai-testing-ui
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: ai-testing-ui
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ai-testing-ui_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ai-testing-ui:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.gcp.kubernetes.io/pre-shared-cert: trafficreplay
  name: ai-testing-ui
  namespace: default
spec:
  rules:
  - host: ai-testing.trafficreplay.com
    http:
      paths:
      - backend:
          service:
            name: ai-testing-ui
            port:
              number: 80
        path: /
        pathType: Prefix
  tls: null

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akeyless-credentials-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/akeyless-secret-creds:
apiVersion: v1
kind: Secret
metadata:
  name: akeyless-secret-creds
  namespace: default
stringData:
  accessId: p-XXXX
  accessType: null
  accessTypeParam: null
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akeyless-creds.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to secrets/Secret/akeyless-creds:
apiVersion: v1
data:
  admin-access-id: ENC[AES256_GCM,data:FbCjm3OO5JxqA70M5YQEtLVnjkftf+1t,iv:aKGklvJLsoNfzXhUVYBrYms43lwF+WPyj/F6sSYtpd8=,tag:tHNCptI0QV4wlcE6YQFrzg==,type:str]
  admin-access-key: ENC[AES256_GCM,data:inO7YJ9Rs+r0vhLMFBFRoTNRvtRS4ovSWDZj8HUgFu6q34zvjzedR6+onZqgdu+LZViFp70mYOn3P7of,iv:XT61gl8yvJ1a3Wx/AG2gYX+OHQtmtect5ywyHKlIZMQ=,tag:MXP/Xwa12kGgdYpikRbxgg==,type:str]
kind: Secret
metadata:
  name: akeyless-creds
  namespace: secrets
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAzQVA1L2NXd0RHakRQVjZs
      LzdTaG0xWkRvNEQ2VHVnOTlaNTZxNHhNQnhJCll2VXZtNmlzZ0hsbUlBRDhOUVZx
      MGZBaDB1OUtvTVBsL2ZSaDA0U0dKNWcKLS0tIEpZM3drVUdIbEtERGo1OEZVYmZL
      V3ExQnN3UG53RWhqRWpiN1FwUU1NZWsK3fcx6n9/VZtvt0AB8GGHnm6R6XuWmjWi
      tBZFqxGRoquH6PAeRTA8UX7h/vSFCIz65HdwFdXuqOpiTVVyc9S98A==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1hrzgx8q7u2xtz0yn2sjf2skl6700tnfkwsgvc8384t29mfgxdvxqjxf2eh
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-04-07T23:01:54Z"
  mac: ENC[AES256_GCM,data:WY1fcIw75LhQBBJCNhOvC26WsnteXvnEIbbyXLfz0AdnFoXxRmsQexMB3KoTjI2+uPxODWU/L7HWgs89pvTSkf1dzJtNEO9dCnSQUNY+5zX+pL4/E0kA3iFjBhm+1DYWjwI94/0tkpIKLQeWgw/0cxNbhinFOVzmyS117/P236Y=,iv:5MWlfuUlc5p+bXdKtjSLwugXVn5O8dI8rd3olq4Db4c=,tag:2kZ1dzDqGpO5eM4zf1hYkQ==,type:str]
  pgp: []
  version: 3.8.1
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akhikachmoney-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-akhikachoney:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web-akhikachoney
  name: web-akhikachoney
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: web-akhikachoney
  template:
    metadata:
      labels:
        name: web-akhikachoney
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: moussa
        - name: POSTGRES_PASSWORD
          value: passer
        - name: POSTGRES_DB
          value: akhikachmoney
        image: akhibousokhona1/akhikachmoney:v1.1
        imagePullPolicy: Always
        name: web-akhikachoney
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-akhikachoney

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-akhikachoney
policy disallow-default-namespace -> resource default/Deployment/web-akhikachoney failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-akhikachoney failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: akhikachmoney-deploy-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/web-akhikachmoney:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web-akhikachmoney
  name: web-akhikachmoney
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: web-akhikachmoney
  template:
    metadata:
      labels:
        name: web-akhikachmoney
    spec:
      containers:
      - command:
        - ./manage.py
        - runserver
        - 0.0.0.0:8000
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: django-postgres-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: django-postgres-credentials
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: userdb
              name: django-postgres-credentials
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              key: dbhost
              name: django-postgres-credentials
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: django-postgres-credentials
        image: akhibousokhona1/akhikachmoney:v1.3
        imagePullPolicy: Always
        name: web-akhikachmoney
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-akhikachmoney

skipped mutate policy add-safe-to-evict -> resource default/Deployment/web-akhikachmoney
policy disallow-default-namespace -> resource default/Deployment/web-akhikachmoney failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/web-akhikachmoney failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/web-akhikachmoney failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/web-akhikachmoney failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/web-akhikachmoney failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/web-akhikachmoney failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/web-akhikachmoney failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: akhikachmoney-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/akhikachmoney-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: akhikachmoney-ingress
  namespace: default
spec:
  rules:
  - host: akhikachmoney.fr
    http:
      paths:
      - backend:
          service:
            name: web-akhikachmoney
            port:
              number: 8000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akhikachmoney-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/django-migrations:
apiVersion: batch/v1
kind: Job
metadata:
  name: django-migrations
  namespace: default
spec:
  backoffLimit: 5
  template:
    spec:
      containers:
      - command:
        - python
        - manage.py
        - migrate
        - --fake
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: django-postgres-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: django-postgres-credentials
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: userdb
              name: django-postgres-credentials
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              key: dbhost
              name: django-postgres-credentials
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: django-postgres-credentials
        image: akhibousokhona1/akhikachmoney:v1.3
        name: django-migrations
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/django-migrations

skipped mutate policy add-safe-to-evict -> resource default/Job/django-migrations
policy disallow-default-namespace -> resource default/Job/django-migrations failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/django-migrations failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/django-migrations failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/django-migrations failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/django-migrations failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/django-migrations failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/django-migrations failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: akhikachmoney-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/django-postgres-credentials:
apiVersion: v1
data:
  dbhost: cG9zdGdyZXM=
  password: cGFzc2Vy
  port: NTQzMg==
  user: bW91c3Nh
  userdb: YWtoaWthY2htb25leQ==
kind: Secret
metadata:
  name: django-postgres-credentials
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akhikachmoney-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/web-akhikachmoney:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: web-akhikachmoney
  name: web-akhikachmoney
  namespace: default
spec:
  ports:
  - nodePort: 30003
    port: 80
    targetPort: 8000
  selector:
    name: web-akhikachmoney
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/web-akhikachmoney failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: akri-anomaly-detection-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/akri-anomaly-detection-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: akri-anomaly-detection-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akri-anomaly-detection-app
  template:
    metadata:
      labels:
        app: akri-anomaly-detection-app
    spec:
      containers:
      - env:
        - name: CONFIGURATION_NAME
          value: akri-opcua-monitoring
        image: ghcr.io/project-akri/akri/anomaly-detection-app:latest-dev
        imagePullPolicy: Always
        name: akri-anomaly-detection-app
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-anomaly-detection-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-anomaly-detection-app
policy disallow-default-namespace -> resource default/Deployment/akri-anomaly-detection-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/akri-anomaly-detection-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/akri-anomaly-detection-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/akri-anomaly-detection-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/akri-anomaly-detection-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/akri-anomaly-detection-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: akri-anomaly-detection-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/akri-anomaly-detection-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: akri-anomaly-detection-app
  name: akri-anomaly-detection-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: akri-anomaly-detection-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/akri-anomaly-detection-app failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/akri-video-streaming-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: akri-video-streaming-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akri-video-streaming-app
  template:
    metadata:
      labels:
        app: akri-video-streaming-app
    spec:
      containers:
      - env:
        - name: CONFIGURATION_NAME
          value: akri-onvif
        image: ghcr.io/project-akri/akri/video-streaming-app:latest-dev
        imagePullPolicy: Always
        name: akri-video-streaming-app
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: akri-video-streaming-app-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-video-streaming-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-video-streaming-app
policy disallow-default-namespace -> resource default/Deployment/akri-video-streaming-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: akri-video-streaming-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/akri-video-streaming-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: akri-video-streaming-app
  name: akri-video-streaming-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: akri-video-streaming-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/akri-video-streaming-app failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/akri-video-streaming-app-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: akri-video-streaming-app-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/akri-video-streaming-app-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akri-video-streaming-app-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/akri-video-streaming-app-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akri-video-streaming-app-binding
  namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: akri-video-streaming-app-role
subjects:
- kind: ServiceAccount
  name: akri-video-streaming-app-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/akri-video-streaming-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: akri-video-streaming-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akri-video-streaming-app
  template:
    metadata:
      labels:
        app: akri-video-streaming-app
    spec:
      containers:
      - env:
        - name: CONFIGURATION_NAME
          value: akri-onvif
        image: ghcr.io/project-akri/akri/video-streaming-app:latest-dev
        imagePullPolicy: Always
        name: akri-video-streaming-app
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: akri-video-streaming-app-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-video-streaming-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-video-streaming-app
policy disallow-default-namespace -> resource default/Deployment/akri-video-streaming-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: akri-video-streaming-app1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/akri-video-streaming-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: akri-video-streaming-app
  name: akri-video-streaming-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: akri-video-streaming-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/akri-video-streaming-app failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/akri-video-streaming-app-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: akri-video-streaming-app-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/akri-video-streaming-app-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akri-video-streaming-app-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/akri-video-streaming-app-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akri-video-streaming-app-binding
  namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: akri-video-streaming-app-role
subjects:
- kind: ServiceAccount
  name: akri-video-streaming-app-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/akri-video-streaming-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: akri-video-streaming-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akri-video-streaming-app
  template:
    metadata:
      labels:
        app: akri-video-streaming-app
    spec:
      containers:
      - env:
        - name: CONFIGURATION_NAME
          value: akri-udev-video
        image: ghcr.io/project-akri/akri/video-streaming-app:latest-dev
        imagePullPolicy: Always
        name: akri-video-streaming-app
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
      serviceAccountName: akri-video-streaming-app-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-video-streaming-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/akri-video-streaming-app
policy disallow-default-namespace -> resource default/Deployment/akri-video-streaming-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/akri-video-streaming-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: akri-video-streaming-app2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/akri-video-streaming-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: akri-video-streaming-app
  name: akri-video-streaming-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: akri-video-streaming-app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/akri-video-streaming-app failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/akri-video-streaming-app-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: akri-video-streaming-app-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/akri-video-streaming-app-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akri-video-streaming-app-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: akri-video-streaming-app2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/akri-video-streaming-app-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akri-video-streaming-app-binding
  namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: akri-video-streaming-app-role
subjects:
- kind: ServiceAccount
  name: akri-video-streaming-app-sa
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy1_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy1_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy1_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy1_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy-from-acr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-springboot-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - image: myacrrepo4321.azurecr.io/akannan1087/springboot-app:#{Build.BuildId}#
        imagePullPolicy: Always
        name: my-springboot-app
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment
policy disallow-default-namespace -> resource default/Deployment/my-springboot-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy-from-acr_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/springboot-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  selector:
    app: springboot-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy-from-acr1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-springboot-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - image: myacrrepo4321.azurecr.io/akannan1087/springboot-app:#{Build.BuildId}#
        imagePullPolicy: Always
        name: my-springboot-app
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment
policy disallow-default-namespace -> resource default/Deployment/my-springboot-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy-from-acr1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/springboot-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  selector:
    app: springboot-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-deploy-from-acr2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-springboot-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - image: azuredb2acr.azurecr.io/abcd:307
        imagePullPolicy: Always
        name: azuredb2acr
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment
policy disallow-default-namespace -> resource default/Deployment/my-springboot-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-deploy-from-acr2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/springboot-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  selector:
    app: springboot-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-one.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - env:
        - name: TITLE
          value: Welcome to Azure Kubernetes Service (AKS)
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-one
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-one_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-one:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-one1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - env:
        - name: TITLE
          value: Welcome to Azure Kubernetes Service (AKS)
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-one
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-one1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-one:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-one2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - env:
        - name: TITLE
          value: Welcome to Azure Kubernetes Service (AKS)
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-one
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-one2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-one:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-one4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - env:
        - name: TITLE
          value: Welcome to Azure Kubernetes Service (AKS)
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-one
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-one4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-one:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-one5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - env:
        - name: TITLE
          value: Welcome to Azure Kubernetes Service (AKS)
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-one
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-one5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-one:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-one6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-one:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - env:
        - name: TITLE
          value: Welcome to Azure Kubernetes Service (AKS)
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-one
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-one
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-one failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-one failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-one6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-one:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-two.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-two
  template:
    metadata:
      labels:
        app: aks-helloworld-two
    spec:
      containers:
      - env:
        - name: TITLE
          value: AKS Ingress Demo
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-two
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-two_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-two:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-two
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-two1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-two
  template:
    metadata:
      labels:
        app: aks-helloworld-two
    spec:
      containers:
      - env:
        - name: TITLE
          value: AKS Ingress Demo
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-two
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-two1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-two:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-two
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-two2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-two
  template:
    metadata:
      labels:
        app: aks-helloworld-two
    spec:
      containers:
      - env:
        - name: TITLE
          value: AKS Ingress Demo
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-two
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-two2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-two:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-two
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-two4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-two
  template:
    metadata:
      labels:
        app: aks-helloworld-two
    spec:
      containers:
      - env:
        - name: TITLE
          value: AKS Ingress Demo
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-two
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-two4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-two:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-two
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-two5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-two
  template:
    metadata:
      labels:
        app: aks-helloworld-two
    spec:
      containers:
      - env:
        - name: TITLE
          value: AKS Ingress Demo
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-two
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-two5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-two:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-two
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-helloworld-two6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aks-helloworld-two:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-two
  template:
    metadata:
      labels:
        app: aks-helloworld-two
    spec:
      containers:
      - env:
        - name: TITLE
          value: AKS Ingress Demo
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        name: aks-helloworld-two
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aks-helloworld-two
policy disallow-default-namespace -> resource default/Deployment/aks-helloworld-two failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aks-helloworld-two failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-helloworld-two6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aks-helloworld-two:
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-two
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: aks-helloworld-two
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aksrbac-clusteradmin.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/aksrbac-cluster-admins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aksrbac-cluster-admins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: aksadmin@<AZUREAD-DOMAIN>.onmicrosoft.com

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aksrbac-viewdefault.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/default-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: default-reader
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - serviceaccounts
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - statefulsets
  - daemonsets
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aksrbac-viewdefault_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/khaksrbac-viewdefault:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: khaksrbac-viewdefault
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: default-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: aksuser@<AZUREAD-DOMAIN>.onmicrosoft.com

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/rabbitmq:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: username
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
        name: rabbitmq
        ports:
        - containerPort: 5672
          name: rabbitmq-amqp
        - containerPort: 15672
          name: rabbitmq-http
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/rabbitmq/enabled_plugins
          name: rabbitmq-enabled-plugins
          subPath: enabled_plugins
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          items:
          - key: rabbitmq_enabled_plugins
            path: enabled_plugins
          name: rabbitmq-enabled-plugins
        name: rabbitmq-enabled-plugins

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/rabbitmq

skipped mutate policy add-safe-to-evict -> resource default/Deployment/rabbitmq
policy disallow-default-namespace -> resource default/Deployment/rabbitmq failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/rabbitmq failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/rabbitmq failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/rabbitmq failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/rabbitmq-enabled-plugins:
apiVersion: v1
data:
  rabbitmq_enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].
kind: ConfigMap
metadata:
  name: rabbitmq-enabled-plugins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rabbitmq:
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
spec:
  ports:
  - name: rabbitmq-amqp
    port: 5672
    targetPort: 5672
  - name: rabbitmq-http
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/order-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - env:
        - name: ORDER_QUEUE_HOSTNAME
          value: rabbitmq
        - name: ORDER_QUEUE_PORT
          value: "5672"
        - name: ORDER_QUEUE_USERNAME
          value: username
        - name: ORDER_QUEUE_PASSWORD
          value: password
        - name: ORDER_QUEUE_NAME
          value: orders
        - name: FASTIFY_ADDRESS
          value: 0.0.0.0
        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
        name: order-service
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      initContainers:
      - command:
        - sh
        - -c
        - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
        image: busybox
        name: wait-for-rabbitmq
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service
policy disallow-default-namespace -> resource default/Deployment/order-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/order-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/order-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/order-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/order-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/order-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/order-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/order-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/order-service:
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: order-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/product-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
        name: product-service
        ports:
        - containerPort: 3002
        resources:
          limits:
            cpu: 1m
            memory: 7Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service
policy disallow-default-namespace -> resource default/Deployment/product-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/product-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/product-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/product-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/product-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/product-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/product-service:
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3002
    targetPort: 3002
  selector:
    app: product-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/store-front:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      containers:
      - env:
        - name: VUE_APP_ORDER_SERVICE_URL
          value: http://order-service:3000/
        - name: VUE_APP_PRODUCT_SERVICE_URL
          value: http://product-service:3002/
        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
        name: store-front
        ports:
        - containerPort: 8080
          name: store-front
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 200Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/store-front

skipped mutate policy add-safe-to-evict -> resource default/Deployment/store-front
policy disallow-default-namespace -> resource default/Deployment/store-front failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/store-front failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/store-front failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/store-front failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/store-front failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/store-front failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/store-front failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/store-front failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/store-front:
apiVersion: v1
kind: Service
metadata:
  name: store-front
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: store-front
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/rabbitmq:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: username
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
        name: rabbitmq
        ports:
        - containerPort: 5672
          name: rabbitmq-amqp
        - containerPort: 15672
          name: rabbitmq-http
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/rabbitmq/enabled_plugins
          name: rabbitmq-enabled-plugins
          subPath: enabled_plugins
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          items:
          - key: rabbitmq_enabled_plugins
            path: enabled_plugins
          name: rabbitmq-enabled-plugins
        name: rabbitmq-enabled-plugins

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/rabbitmq

skipped mutate policy add-safe-to-evict -> resource default/Deployment/rabbitmq
policy disallow-default-namespace -> resource default/Deployment/rabbitmq failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/rabbitmq failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/rabbitmq failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/rabbitmq failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/rabbitmq-enabled-plugins:
apiVersion: v1
data:
  rabbitmq_enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].
kind: ConfigMap
metadata:
  name: rabbitmq-enabled-plugins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rabbitmq:
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
spec:
  ports:
  - name: rabbitmq-amqp
    port: 5672
    targetPort: 5672
  - name: rabbitmq-http
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/order-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - env:
        - name: ORDER_QUEUE_HOSTNAME
          value: rabbitmq
        - name: ORDER_QUEUE_PORT
          value: "5672"
        - name: ORDER_QUEUE_USERNAME
          value: username
        - name: ORDER_QUEUE_PASSWORD
          value: password
        - name: ORDER_QUEUE_NAME
          value: orders
        - name: FASTIFY_ADDRESS
          value: 0.0.0.0
        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
        name: order-service
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      initContainers:
      - command:
        - sh
        - -c
        - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
        image: busybox
        name: wait-for-rabbitmq
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service
policy disallow-default-namespace -> resource default/Deployment/order-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/order-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/order-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/order-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/order-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/order-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/order-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/order-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/order-service:
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: order-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/product-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
        name: product-service
        ports:
        - containerPort: 3002
        resources:
          limits:
            cpu: 1m
            memory: 7Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service
policy disallow-default-namespace -> resource default/Deployment/product-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/product-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/product-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/product-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/product-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/product-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/product-service:
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3002
    targetPort: 3002
  selector:
    app: product-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/store-front:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      containers:
      - env:
        - name: VUE_APP_ORDER_SERVICE_URL
          value: http://order-service:3000/
        - name: VUE_APP_PRODUCT_SERVICE_URL
          value: http://product-service:3002/
        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
        name: store-front
        ports:
        - containerPort: 8080
          name: store-front
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 200Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/store-front

skipped mutate policy add-safe-to-evict -> resource default/Deployment/store-front
policy disallow-default-namespace -> resource default/Deployment/store-front failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/store-front failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/store-front failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/store-front failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/store-front failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/store-front failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/store-front failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/store-front failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/store-front:
apiVersion: v1
kind: Service
metadata:
  name: store-front
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: store-front
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/rabbitmq:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: username
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
        name: rabbitmq
        ports:
        - containerPort: 5672
          name: rabbitmq-amqp
        - containerPort: 15672
          name: rabbitmq-http
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/rabbitmq/enabled_plugins
          name: rabbitmq-enabled-plugins
          subPath: enabled_plugins
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          items:
          - key: rabbitmq_enabled_plugins
            path: enabled_plugins
          name: rabbitmq-enabled-plugins
        name: rabbitmq-enabled-plugins

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/rabbitmq

skipped mutate policy add-safe-to-evict -> resource default/Deployment/rabbitmq
policy disallow-default-namespace -> resource default/Deployment/rabbitmq failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/rabbitmq failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/rabbitmq failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/rabbitmq failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/rabbitmq failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/rabbitmq-enabled-plugins:
apiVersion: v1
data:
  rabbitmq_enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].
kind: ConfigMap
metadata:
  name: rabbitmq-enabled-plugins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rabbitmq:
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
spec:
  ports:
  - name: rabbitmq-amqp
    port: 5672
    targetPort: 5672
  - name: rabbitmq-http
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/order-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - env:
        - name: ORDER_QUEUE_HOSTNAME
          value: rabbitmq
        - name: ORDER_QUEUE_PORT
          value: "5672"
        - name: ORDER_QUEUE_USERNAME
          value: username
        - name: ORDER_QUEUE_PASSWORD
          value: password
        - name: ORDER_QUEUE_NAME
          value: orders
        - name: FASTIFY_ADDRESS
          value: 0.0.0.0
        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
        name: order-service
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      initContainers:
      - command:
        - sh
        - -c
        - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
        image: busybox
        name: wait-for-rabbitmq
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/order-service
policy disallow-default-namespace -> resource default/Deployment/order-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/order-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/order-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/order-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/order-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/order-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/order-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/order-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/order-service:
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: order-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/product-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
        name: product-service
        ports:
        - containerPort: 3002
        resources:
          limits:
            cpu: 1m
            memory: 7Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service
policy disallow-default-namespace -> resource default/Deployment/product-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/product-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/product-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/product-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/product-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/product-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart2_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/product-service:
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: default
spec:
  ports:
  - name: http
    port: 3002
    targetPort: 3002
  selector:
    app: product-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aks-store-quickstart2_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/store-front:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      containers:
      - env:
        - name: VUE_APP_ORDER_SERVICE_URL
          value: http://order-service:3000/
        - name: VUE_APP_PRODUCT_SERVICE_URL
          value: http://product-service:3002/
        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
        name: store-front
        ports:
        - containerPort: 8080
          name: store-front
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 200Mi
      nodeSelector:
        kubernetes.io/os: linux

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/store-front

skipped mutate policy add-safe-to-evict -> resource default/Deployment/store-front
policy disallow-default-namespace -> resource default/Deployment/store-front failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/store-front failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/store-front failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/store-front failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/store-front failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/store-front failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/store-front failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/store-front failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: aks-store-quickstart2_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/store-front:
apiVersion: v1
kind: Service
metadata:
  name: store-front
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: store-front
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: al2023.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/al2023-test:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: al2023-test
    manage: server-side
  name: al2023-test
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - infinity
    image: public.ecr.aws/amazonlinux/amazonlinux:2023-minimal
    name: al2023-test

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/al2023-test

skipped mutate policy add-safe-to-evict -> resource default/Pod/al2023-test
policy disallow-default-namespace -> resource default/Pod/al2023-test failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/al2023-test failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/al2023-test failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/al2023-test failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/al2023-test failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/al2023-test failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/al2023-test failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/al2023-test failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alb_ingress_controller.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/alb-ingress-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: alb-ingress-controller
  name: alb-ingress-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: alb-ingress-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alb-ingress-controller
    spec:
      containers:
      - args:
        - --ingress-class=alb
        - --cluster-name=eks-demo
        - --aws-region=us-east-1
        env: null
        image: docker.io/amazon/aws-alb-ingress-controller:v1.1.6
        name: alb-ingress-controller
      serviceAccountName: alb-ingress-controller

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/alb-ingress-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/alb-ingress-controller
policy drop-all-capabilities -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: alb_ingress_controller1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/alb-ingress-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: alb-ingress-controller
  name: alb-ingress-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: alb-ingress-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alb-ingress-controller
    spec:
      containers:
      - args:
        - --ingress-class=alb
        - --cluster-name=eks-demo
        - --aws-region=us-east-1
        env: null
        image: docker.io/amazon/aws-alb-ingress-controller:v1.1.6
        name: alb-ingress-controller
      serviceAccountName: alb-ingress-controller

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/alb-ingress-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/alb-ingress-controller
policy drop-all-capabilities -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/alb-ingress-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: alb-ing.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/alb-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: yc-clusterissuer
    ingress.alb.yc.io/external-ipv4-address: <IP>
    ingress.alb.yc.io/group-name: alb
    ingress.alb.yc.io/group-order: "1"
    ingress.alb.yc.io/security-groups: <SGID>,<SGID>
    ingress.alb.yc.io/subnets: <SUBNETID>
  name: alb-ingress
  namespace: default
spec:
  ingressClassName: alb
  rules:
  - host: app.alb.<DOMAIN>
    http:
      paths:
      - backend:
          service:
            name: alb-demo-1
            port:
              number: 80
        path: /app1
        pathType: Prefix
      - backend:
          service:
            name: alb-demo-2
            port:
              number: 80
        path: /app2
        pathType: Prefix
      - backend:
          service:
            name: alb-demo-2
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - app.alb.<DOMAIN>
    secretName: example-com-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ipask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: ${AWS_IAM_CERT_ARN}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
  name: ipask-ingress
  namespace: default
spec:
  ingressClassName: alb
  rules:
  - host: ipask.me
    http:
      paths:
      - backend:
          service:
            name: ipask-svc
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ipask-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: ${AWS_IAM_CERT_ARN}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
  name: ipask-ingress
  namespace: default
spec:
  ingressClassName: alb
  rules:
  - host: ipask.me
    http:
      paths:
      - backend:
          service:
            name: ipask-svc
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/alb-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:793006016449:certificate/953fc513-3dfd-41c8-baa7-67e0fb4c41e7
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
  name: alb-ingress
  namespace: default
spec:
  ingressClassName: alb
  rules:
  - host: www.formapp.me
    http:
      paths:
      - backend:
          service:
            name: formapp-svc
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/aks-votingapp:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: null
  name: aks-votingapp
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to app/Ingress/cvapp-alb:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  name: cvapp-alb
  namespace: app
spec:
  ingressClassName: alb
  rules:
  - host: app.cvapplication.xyz
    http:
      paths:
      - backend:
          service:
            name: cvapp-api-svc
            port:
              number: 5000
        path: /api/v1
        pathType: Prefix
      - backend:
          service:
            name: cvapp-web-svc
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to workshop/Ingress/ingress-locust-dashboard:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/inbound-cidrs: 183.82.98.176/32,103.252.147.189/32,103.87.143.171/32
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  finalizers:
  - ingress.k8s.aws/resources
  labels:
    app: ingress
  name: ingress-locust-dashboard
  namespace: workshop
spec:
  defaultBackend:
    service:
      name: awsblog-locust
      port:
        number: 8089

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress-basics.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-nginx-app:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "10"
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/load-balancer-name: app-ingress-lb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
  labels:
    app: nginx-app
  name: ingress-nginx-app
  namespace: default
spec:
  defaultBackend:
    service:
      name: nginx-app-service
      port:
        number: 80
  ingressClassName: aws-ingress-class

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress-basics1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-nginx-app:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "10"
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/load-balancer-name: app-ingress-lb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
  labels:
    app: nginx-app
  name: ingress-nginx-app
  namespace: default
spec:
  ingressClassName: aws-ingress-class
  rules:
  - http:
      paths:
      - backend:
          service:
            name: nginx-app-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/ingress-nginx-app failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alb-ingress-class.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/alb:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  labels:
    app.kubernetes.io/component: controller
  name: alb
  namespace: default
spec:
  controller: ingress.alb.yc.io/yc-alb-ingress-controller

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alert-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/alertmanager-config:
apiVersion: v1
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 1m
      slack_api_url: 'API_URL'
    route:
      receiver: 'slack-notifications'
    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#monitoring-instances'
        send_resolved: true
        api_url: 'API_URL'
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertcontact_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/alertcontact-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: uptime-robot-operator
    app.kubernetes.io/instance: alertcontact-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: uptime-robot-operator
  name: alertcontact-editor-role
  namespace: default
rules:
- apiGroups:
  - uptimerobot.com
  resources:
  - alertcontacts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - uptimerobot.com
  resources:
  - alertcontacts/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertcontact_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/alertcontact-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: uptime-robot-operator
    app.kubernetes.io/instance: alertcontact-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: uptime-robot-operator
  name: alertcontact-viewer-role
  namespace: default
rules:
- apiGroups:
  - uptimerobot.com
  resources:
  - alertcontacts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - uptimerobot.com
  resources:
  - alertcontacts/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alert-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alertmanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager-server
  template:
    metadata:
      labels:
        app: alertmanager-server
    spec:
      containers:
      - image: prom/alertmanager:latest
        name: alertmanager
        ports:
        - containerPort: 9093
        volumeMounts:
        - mountPath: /etc/alertmanager
          name: alertmanager-config-volume
      volumes:
      - configMap:
          items:
          - key: alertmanager.yml
            path: alertmanager.yml
          name: alertmanager-config
        name: alertmanager-config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager-deployment
policy disallow-default-namespace -> resource default/Deployment/alertmanager-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alert-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Deployment/alertmanager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: alertmanager
      name: alertmanager
    spec:
      containers:
      - args:
        - --config.file=/etc/alertmanager/config.yml
        - --storage.path=/alertmanager
        image: prom/alertmanager:latest
        name: alertmanager
        ports:
        - containerPort: 9093
          name: alertmanager
        resources:
          limits:
            cpu: 300m
            memory: 400M
          requests:
            cpu: 200m
            memory: 300M
        volumeMounts:
        - mountPath: /etc/alertmanager
          name: config-volume
        - mountPath: /alertmanager
          name: alertmanager
      volumes:
      - configMap:
          name: alertmanager-config
        name: config-volume
      - emptyDir: {}
        name: alertmanager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager
policy disallow-latest-tag -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: alert-manager.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/ConfigMap/prom-prometheus-alertmanager:
apiVersion: v1
data:
  alertmanager.yaml: |
    global:
      resolve_timeout: 1m
      slack_api_rul: 'https://hooks.slack.com/services/your/slack/webhook/url'
    receivers:
    - name: 'slack-notifications'
      slack_configs:
        - channel: '#notifications'
          send_resolved: true
    route:
      receiver: 'slack-notifications'
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: prom
    meta.helm.sh/release-namespace: monitoring
  labels:
    app: prometheus
    app.kubernetes.io/managed-by: Helm
    chart: prometheus-15.0.1
    component: alertmanager
    heritage: Helm
    release: prom
  name: prom-prometheus-alertmanager
  namespace: monitoring

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-base.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/ServiceAccount/alertmanager:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alertmanager
  namespace: monitoring

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-base_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/alertmanager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alertmanager
  namespace: default
rules: []

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-base_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/alertmanager:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alertmanager
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alertmanager
subjects:
- kind: ServiceAccount
  name: alertmanager
  namespace: monitoring

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-config4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Secret/alertmanager-main:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: alert-router
    app.kubernetes.io/instance: main
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 0.26.0
  name: alertmanager-main
  namespace: monitoring
stringData:
  alertmanager.yaml: |-
    "global":
      "resolve_timeout": "5m"
    "inhibit_rules":
    - "equal":
      - "namespace"
      - "alertname"
      "source_matchers":
      - "severity = critical"
      "target_matchers":
      - "severity =~ warning|info"
    - "equal":
      - "namespace"
      - "alertname"
      "source_matchers":
      - "severity = warning"
      "target_matchers":
      - "severity = info"
    - "equal":
      - "namespace"
      "source_matchers":
      - "alertname = InfoInhibitor"
      "target_matchers":
      - "severity = info"
    "receivers":
    - "name": "Default"
    - "name": "Watchdog"
    - "name": "Critical"
    - "name": "null"
    "route":
      "group_by":
      - "namespace"
      "group_interval": "5m"
      "group_wait": "30s"
      "receiver": "Default"
      "repeat_interval": "12h"
      "routes":
      - "matchers":
        - "alertname = Watchdog"
        "receiver": "Watchdog"
      - "matchers":
        - "alertname = InfoInhibitor"
        "receiver": "null"
      - "matchers":
        - "severity = critical"
        "receiver": "Critical"
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/alertmanager-config:
apiVersion: v1
data:
  alertmanager.yml: |
    global: null
    receivers:
    - name: default-receiver
    route:
      group_interval: 5m
      group_wait: 10s
      receiver: default-receiver
      repeat_interval: 3h
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/cluster-service: "true"
  name: alertmanager-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-configmap4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/ConfigMap/alertmanager-configmap:
apiVersion: v1
data:
  config.yml: |-
    global:
    templates:
      - '/etc/alertmanager/*.tmpl'
    route:
      receiver: slack

    receivers:
      - name: alert-emailer
        email_configs:
          - to: jferrer@ebi.ac.uk
            send_resolved: false
            from: simple-k8s@ebi.ac.uk
            smarthost: some-smtp-server:25
            require_tls: false
      - name: slack
        slack_configs:
          - send_resolved: true
            channel: '#k8s-simple-alerts'
            api_url: 'https://hooks.slack.com/services/XXXXXXXXX/XXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXX'
kind: ConfigMap
metadata:
  name: alertmanager-configmap
  namespace: monitoring

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-cr-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/alertmanager-example:
apiVersion: v1
kind: Service
metadata:
  name: alertmanager-example
  namespace: default
spec:
  ports:
  - name: web
    nodePort: 30903
    port: 9093
    protocol: TCP
    targetPort: web
  selector:
    alertmanager: example
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/alertmanager-example failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-dep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alertmanager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
      name: alertmanager
    spec:
      containers:
      - args:
        - -config.file=/etc/alertmanager/config.yml
        - -storage.path=/alertmanager
        command:
        - /bin/sh
        - /etc/alertmanager/configure_secret.sh
        env:
        - name: SLACK_HOOK_URL
          valueFrom:
            secretKeyRef:
              key: slack-hook-url
              name: slack-hook-url
        image: prom/alertmanager:latest
        name: alertmanager
        ports:
        - containerPort: 9093
          name: alertmanager
        volumeMounts:
        - mountPath: /etc/alertmanager
          name: config-volume
      nodeSelector:
        beta.kubernetes.io/os: linux
      volumes:
      - configMap:
          name: alertmanager
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager
policy disallow-default-namespace -> resource default/Deployment/alertmanager failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alertmanager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alertmanager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alertmanager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-dep1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alertmanager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
      name: alertmanager
    spec:
      containers:
      - args:
        - -config.file=/etc/alertmanager/config.yml
        - -storage.path=/alertmanager
        command:
        - /bin/sh
        - /etc/alertmanager/configure_secret.sh
        env:
        - name: SLACK_HOOK_URL
          valueFrom:
            secretKeyRef:
              key: slack-hook-url
              name: slack-hook-url
        image: prom/alertmanager:latest
        name: alertmanager
        ports:
        - containerPort: 9093
          name: alertmanager
        volumeMounts:
        - mountPath: /etc/alertmanager
          name: config-volume
      nodeSelector:
        beta.kubernetes.io/os: linux
      volumes:
      - configMap:
          name: alertmanager
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager
policy disallow-default-namespace -> resource default/Deployment/alertmanager failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alertmanager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alertmanager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alertmanager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-dep2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alertmanager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
      name: alertmanager
    spec:
      containers:
      - args:
        - -config.file=/etc/alertmanager/config.yml
        - -storage.path=/alertmanager
        command:
        - /bin/sh
        - /etc/alertmanager/configure_secret.sh
        env:
        - name: SLACK_HOOK_URL
          valueFrom:
            secretKeyRef:
              key: slack-hook-url
              name: slack-hook-url
        image: prom/alertmanager:latest
        name: alertmanager
        ports:
        - containerPort: 9093
          name: alertmanager
        volumeMounts:
        - mountPath: /etc/alertmanager
          name: config-volume
      nodeSelector:
        beta.kubernetes.io/os: linux
      volumes:
      - configMap:
          name: alertmanager
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager
policy disallow-default-namespace -> resource default/Deployment/alertmanager failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alertmanager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alertmanager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alertmanager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alertmanager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Deployment/alertmanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alertmanager-server
  name: alertmanager-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: alertmanager-server
    spec:
      containers:
      - args:
        - --config.file=/etc/alertmanager/alertmanager.yml
        - --web.external-url=https://alertmanager.ing.k3s.brickyard.whitestar.systems
        image: prom/alertmanager:v0.28.1
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
        name: alertmanager
        ports:
        - containerPort: 9093
        readinessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsUser: 65534
        volumeMounts:
        - mountPath: /etc/alertmanager/
          name: alertmanager-config-volume
        - mountPath: /alertmanager
          name: alertmanager-storage-volume
      initContainers:
      - command:
        - sh
        - -c
        - chown nobody:nobody /data
        image: busybox:1.37
        name: volume-permissions
        volumeMounts:
        - mountPath: /data
          name: alertmanager-storage-volume
      volumes:
      - configMap:
          defaultMode: 420
          name: alertmanager-server-conf
        name: alertmanager-config-volume
      - name: alertmanager-storage-volume
        persistentVolumeClaim:
          claimName: am-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager-deployment

skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager-deployment
policy drop-all-capabilities -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy restrict-image-registries -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/PersistentVolumeClaim/am-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: am-pvc
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Deployment/alertmanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alertmanager-server
  name: alertmanager-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: alertmanager-server
    spec:
      containers:
      - args:
        - --config.file=/etc/alertmanager/alertmanager.yml
        - --web.external-url=https://alertmanager.ing.k3s.brickyard.whitestar.systems
        image: prom/alertmanager:v0.28.1
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
        name: alertmanager
        ports:
        - containerPort: 9093
        readinessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsUser: 65534
        volumeMounts:
        - mountPath: /etc/alertmanager/
          name: alertmanager-config-volume
        - mountPath: /alertmanager
          name: alertmanager-storage-volume
      initContainers:
      - command:
        - sh
        - -c
        - chown nobody:nobody /data
        image: busybox:1.37
        name: volume-permissions
        volumeMounts:
        - mountPath: /data
          name: alertmanager-storage-volume
      volumes:
      - configMap:
          defaultMode: 420
          name: alertmanager-server-conf
        name: alertmanager-config-volume
      - name: alertmanager-storage-volume
        persistentVolumeClaim:
          claimName: am-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager-deployment

skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager-deployment
policy drop-all-capabilities -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy restrict-image-registries -> resource monitoring/Deployment/alertmanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/PersistentVolumeClaim/am-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: am-pvc
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/alertmanager:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: alertmanager
    kubernetes.io/cluster-service: "true"
    version: v0.14.0
  name: alertmanager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: alertmanager
      version: v0.14.0
  template:
    metadata:
      labels:
        k8s-app: alertmanager
        version: v0.14.0
    spec:
      containers:
      - args:
        - --config.file=/etc/config/alertmanager.yml
        - --storage.path=/data
        - --web.external-url=/
        image: prom/alertmanager:v0.14.0
        imagePullPolicy: IfNotPresent
        name: prometheus-alertmanager
        ports:
        - containerPort: 9093
        readinessProbe:
          httpGet:
            path: /#/status
            port: 9093
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data
          name: storage-volume
          subPath: ""
      - args:
        - --volume-dir=/etc/config
        - --webhook-url=http://localhost:9093/-/reload
        image: jimmidyson/configmap-reload:v0.1
        imagePullPolicy: IfNotPresent
        name: prometheus-alertmanager-configmap-reload
        resources:
          limits:
            cpu: 10m
            memory: 10Mi
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
      priorityClassName: system-cluster-critical
      volumes:
      - configMap:
          name: alertmanager-config
        name: config-volume
      - name: storage-volume
        persistentVolumeClaim:
          claimName: alertmanager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/alertmanager

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/alertmanager
policy drop-all-capabilities -> resource kube-system/Deployment/alertmanager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/alertmanager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/alertmanager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource kube-system/Deployment/alertmanager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Deployment/alertmanager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/alertmanager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alertmanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - image: prom/alertmanager:latest
        name: alertmanager
        ports:
        - containerPort: 9093
        volumeMounts:
        - mountPath: /etc/alertmanager/alertmanager.yml
          name: alertmanager-config
      volumes:
      - configMap:
          name: alertmanager-configmap
        name: alertmanager-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alertmanager-deployment
policy disallow-default-namespace -> resource default/Deployment/alertmanager-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alertmanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alertmanager-deployment4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/alertmanager-configmap:
apiVersion: v1
data:
  alertmanager.yml: |
    global:
      slack_api_url: '${SLACK_WEBHOOK_URL}'

    route:
      group_by: ['alertname', 'severity']

    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#assignment2slack-am-mj'
        send_resolved: true
kind: ConfigMap
metadata:
  name: alertmanager-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Ingress/alertmanager-ui:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager-ui
  namespace: monitoring
spec:
  rules:
  - host: alertmanager.ing.k3s.brickyard.whitestar.systems
    http:
      paths:
      - backend:
          service:
            name: alertmanager
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Ingress/alertmanager-ui:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager-ui
  namespace: monitoring
spec:
  rules:
  - host: alertmanager.ing.k3s.brickyard.whitestar.systems
    http:
      paths:
      - backend:
          service:
            name: alertmanager
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertmanager-ingress1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Ingress/alertmanager-ui-ext:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web-ext
    traefik.ingress.kubernetes.io/router.middlewares: monitoring-am-jwt-verification@kubernetescrd
  name: alertmanager-ui-ext
  namespace: monitoring
spec:
  rules:
  - host: alertmanager.auth-ing.k3s.brickyard.whitestar.systems
    http:
      paths:
      - backend:
          service:
            name: alertmanager
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertM-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/ConfigMap/alertmanager-config:
apiVersion: v1
data:
  alertmanager.yml: "global:\n  resolve_timeout: 5m\n\nroute:\n  receiver: 'Mail Alert'\n
    \ group_by: [ alertname ]\n  repeat_interval: 30s\n  group_wait: 15s\n  group_interval:
    15s\n\nreceivers:\n  - name: 'Mail Alert'\n    email_configs:\n      - smarthost:
    smtp.gmail.com:587\n        auth_username: 'your-email-id@gmail.com' # REPLACE
    IT \n        auth_password: 'xxxx xxxx xxxx xxxx' # REPLACE IT \n        from:
    'your-email-id@gmail.com' # REPLACE IT \n        to: 'receiver-email-id@gmail.com'
    # REPLACE IT \n        headers:\n          subject: 'Prometheus Mail Alerts'\ninhibit_rules:\n
    \ - source_match:\n      severity: 'critical'\n    target_match:\n      severity:
    'warning'\n    equal: ['alertname', 'dev', 'instance']\n"
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alertM-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Deployment/alertmanager:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alertmanager
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - args:
        - --config.file=/etc/alertmanager/alertmanager.yml
        image: prom/alertmanager:v0.25.0
        name: alertmanager
        ports:
        - containerPort: 9093
        volumeMounts:
        - mountPath: /etc/alertmanager
          name: config-volume
      volumes:
      - configMap:
          name: alertmanager-config
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager

skipped mutate policy add-safe-to-evict -> resource monitoring/Deployment/alertmanager
policy drop-all-capabilities -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource monitoring/Deployment/alertmanager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alertM-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Service/alertmanager:
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  ports:
  - nodePort: 30016
    port: 9093
    targetPort: 9093
  selector:
    app: alertmanager
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource monitoring/Service/alertmanager failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alert-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Service/alertmanager:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9093"
    prometheus.io/scrape: "true"
  name: alertmanager
  namespace: monitoring
spec:
  ports:
  - nodePort: 30002
    port: 9093
    targetPort: 9093
  selector:
    app: alertmanager
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource monitoring/Service/alertmanager failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: al-nafi-dev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/al-nafi-development-webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: development
    tier: production
  name: al-nafi-development-webapp
  namespace: default
spec:
  containers:
  - image: kodekloud/webapp-delayed-start
    livenessProbe:
      httpGet:
        path: /live
        port: 8080
      periodSeconds: 1
    name: development-webapp
    ports:
    - containerPort: 8080
      protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/al-nafi-development-webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/al-nafi-development-webapp
policy disallow-default-namespace -> resource default/Pod/al-nafi-development-webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/al-nafi-development-webapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/al-nafi-development-webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/al-nafi-development-webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/al-nafi-development-webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/al-nafi-development-webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/al-nafi-development-webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/al-nafi-development-webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: al-nafi-prod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/al-nafi-production-webapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: development
    tier: production
  name: al-nafi-production-webapp
  namespace: default
spec:
  containers:
  - env:
    - name: APP_START_DELAY
      value: "120"
    image: kodekloud/webapp-delayed-start
    livenessProbe:
      httpGet:
        path: /live
        port: 8080
      initialDelaySeconds: 130
      periodSeconds: 3
    name: production-webapp
    ports:
    - containerPort: 8080
      protocol: TCP
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/al-nafi-production-webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/al-nafi-production-webapp
policy disallow-default-namespace -> resource default/Pod/al-nafi-production-webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/al-nafi-production-webapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/al-nafi-production-webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/al-nafi-production-webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/al-nafi-production-webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/al-nafi-production-webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/al-nafi-production-webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/al-nafi-production-webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

