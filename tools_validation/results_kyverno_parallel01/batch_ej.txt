##### FILE: ipask.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ipask:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: ${IPASK_VERSION}
  labels:
    app: ipask
  name: ipask
  namespace: default
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: ipask
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ipask
    spec:
      containers:
      - env:
        - name: IPASK_PROD
          value: "true"
        - name: GEOIP
          value: "true"
        - name: REVERSE_DNS_LOOKUP
          value: "true"
        image: prestigen/ipask:${IPASK_VERSION}
        imagePullPolicy: Always
        name: ipask-ctr
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ipask

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ipask
policy disallow-default-namespace -> resource default/Deployment/ipask failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ipask failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ipask failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ipask failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ipask failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ipask failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ipask failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ipask failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipask_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ipask-svc:
apiVersion: v1
kind: Service
metadata:
  name: ipask-svc
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: ipask
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipask1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ipask:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: ${IPASK_VERSION}
  labels:
    app: ipask
  name: ipask
  namespace: default
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: ipask
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ipask
    spec:
      containers:
      - env:
        - name: IPASK_PROD
          value: "true"
        - name: GEOIP
          value: "true"
        - name: REVERSE_DNS_LOOKUP
          value: "true"
        image: prestigen/ipask:${IPASK_VERSION}
        imagePullPolicy: Always
        name: ipask-ctr
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ipask

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ipask
policy disallow-default-namespace -> resource default/Deployment/ipask failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ipask failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ipask failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ipask failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ipask failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ipask failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ipask failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ipask failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipask1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ipask-svc:
apiVersion: v1
kind: Service
metadata:
  name: ipask-svc
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: ipask
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipblock.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/deny-traffic-to-8.8.8.8-443:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-traffic-to-8.8.8.8-443
  namespace: default
spec:
  egress:
  - ports:
    - port: 443
      protocol: TCP
  - to:
    - ipBlock:
        cidr: 8.8.8.8/32
  ingress: []
  podSelector:
    matchLabels:
      app: ubuntu
  policyTypes:
  - Egress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipcidr_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipcidr-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubipam
  name: ipcidr-editor-role
  namespace: default
rules:
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipcidrs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipcidrs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipcidr_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipcidr-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubipam
  name: ipcidr-viewer-role
  namespace: default
rules:
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipcidrs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipcidrs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipclaim_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipclaim-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubipam
  name: ipclaim-editor-role
  namespace: default
rules:
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipclaims/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipclaim_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipclaim-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubipam
  name: ipclaim-viewer-role
  namespace: default
rules:
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ipam.didactiklabs.io
  resources:
  - ipclaims/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: iperf.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to limited/Service/iperf-service:
apiVersion: v1
kind: Service
metadata:
  name: iperf-service
  namespace: limited
spec:
  ports:
  - name: tcp-port
    nodePort: 30004
    port: 5201
    protocol: TCP
    targetPort: 5201
  - name: udp-port
    nodePort: 30004
    port: 5201
    protocol: UDP
    targetPort: 5201
  selector:
    app: iperf_app
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource limited/Service/iperf-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: iperf_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to limited/Deployment/iperf-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iperf_app
  name: iperf-deployment
  namespace: limited
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iperf_app
  template:
    metadata:
      labels:
        app: iperf_app
    spec:
      containers:
      - args:
        - -s
        image: $REGISTRY_IP_DOMAIN/mfranzil/custom-iperf:2
        name: iperf-container
        ports:
        - containerPort: 5201
          protocol: TCP
        - containerPort: 5201
          protocol: UDP
        resources:
          limits:
            cpu: 500m
            memory: 0.5G

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource limited/Deployment/iperf-deployment

skipped mutate policy add-safe-to-evict -> resource limited/Deployment/iperf-deployment
policy drop-all-capabilities -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource limited/Deployment/iperf-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: iperf1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iperf:
apiVersion: v1
kind: Pod
metadata:
  name: iperf
  namespace: default
spec:
  containers:
  - image: bookofkubernetes/iperf3:stable
    name: iperf
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 250m
        memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iperf

skipped mutate policy add-safe-to-evict -> resource default/Pod/iperf
policy disallow-default-namespace -> resource default/Pod/iperf failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/iperf failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iperf failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iperf failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/iperf failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iperf failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iperf failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: iperf-limit.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iperf-limit:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/egress-bandwidth: 1M
    kubernetes.io/ingress-bandwidth: 1M
  name: iperf-limit
  namespace: default
spec:
  containers:
  - image: bookofkubernetes/iperf3:stable
    name: iperf
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 250m
        memory: 64Mi
  nodeName: host01

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iperf-limit

skipped mutate policy add-safe-to-evict -> resource default/Pod/iperf-limit
policy disallow-default-namespace -> resource default/Pod/iperf-limit failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/iperf-limit failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iperf-limit failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iperf-limit failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/iperf-limit failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iperf-limit failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iperf-limit failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: iperf-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iperf-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iperf-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iperf-server
  template:
    metadata:
      labels:
        app: iperf-server
    spec:
      containers:
      - env:
        - name: IPERF_SERVER
          value: "1"
        image: bookofkubernetes/iperf3:stable
        name: iperf
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iperf-server

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iperf-server
policy disallow-default-namespace -> resource default/Deployment/iperf-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iperf-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iperf-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iperf-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: iperf-server_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/iperf-server:
apiVersion: v1
kind: Service
metadata:
  name: iperf-server
  namespace: default
spec:
  ports:
  - port: 5201
    protocol: TCP
    targetPort: 5201
  selector:
    app: iperf-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipf-client.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iperf:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iperf
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: iperf
  template:
    metadata:
      labels:
        app: iperf
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - iperf-server
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - iperf
            topologyKey: kubernetes.io/hostname
      containers:
      - image: bookofkubernetes/iperf3:1.0.0
        name: iperf

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iperf

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iperf
policy disallow-default-namespace -> resource default/Deployment/iperf failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iperf failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iperf failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iperf failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iperf failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iperf failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iperf failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iperf failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipfs-cluster.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/ipfs-cluster:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ipfs-cluster
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ipfs-cluster
  serviceName: ipfs-cluster
  template:
    metadata:
      labels:
        app: ipfs-cluster
    spec:
      containers:
      - env:
        - name: IPFS_FD_MAX
          value: "4096"
        image: ipfs/kubo:release
        imagePullPolicy: IfNotPresent
        name: ipfs
        ports:
        - containerPort: 4001
          name: swarm
          protocol: TCP
        - containerPort: 4002
          name: swarm-udp
          protocol: UDP
        - containerPort: 5001
          name: api
          protocol: TCP
        - containerPort: 8081
          name: ws
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /data/ipfs
          name: ipfs-storage
        - mountPath: /custom
          name: configure-script
      - command:
        - sh
        - /custom/entrypoint.sh
        env:
        - name: BOOTSTRAP_PEER_ID
          valueFrom:
            configMapKeyRef:
              key: bootstrap-peer-id
              name: env-config
        - name: BOOTSTRAP_PEER_PRIV_KEY
          valueFrom:
            secretKeyRef:
              key: bootstrap-peer-priv-key
              name: secret-config
        - name: CLUSTER_SECRET
          valueFrom:
            secretKeyRef:
              key: cluster-secret
              name: secret-config
        - name: CLUSTER_MONITOR_PING_INTERVAL
          value: 3m
        - name: SVC_NAME
          value: ipfs-cluster
        envFrom:
        - configMapRef:
            name: env-config
        image: ipfs/ipfs-cluster:latest
        imagePullPolicy: IfNotPresent
        name: ipfs-cluster
        ports:
        - containerPort: 9094
          name: api-http
          protocol: TCP
        - containerPort: 9095
          name: proxy-http
          protocol: TCP
        - containerPort: 9096
          name: cluster-swarm
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /data/ipfs-cluster
          name: cluster-storage
        - mountPath: /custom
          name: configure-script
      initContainers:
      - command:
        - sh
        - /custom/configure-ipfs.sh
        image: ipfs/kubo:release
        name: configure-ipfs
        volumeMounts:
        - mountPath: /data/ipfs
          name: ipfs-storage
        - mountPath: /custom
          name: configure-script
      volumes:
      - configMap:
          name: ipfs-cluster-set-bootstrap-conf
        name: configure-script
  volumeClaimTemplates:
  - metadata:
      name: cluster-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: do-block-storage
  - metadata:
      name: ipfs-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: do-block-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/ipfs-cluster

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/ipfs-cluster
policy disallow-default-namespace -> resource default/StatefulSet/ipfs-cluster failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/ipfs-cluster failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: ipfs-data-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/PersistentVolumeClaim/ipfs-data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ipfs-data-pvc
  namespace: dataspace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipfs-data-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/PersistentVolumeClaim/ipfs-data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ipfs-data-pvc
  namespace: dataspace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipfs-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/Deployment/ipfs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ipfs
  name: ipfs
  namespace: dataspace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ipfs
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ipfs
    spec:
      containers:
      - image: ipfs/go-ipfs:latest
        name: ipfs
        ports:
        - containerPort: 5001
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /data/ipfs
          name: ipfs-data
      restartPolicy: Always
      volumes:
      - name: ipfs-data
        persistentVolumeClaim:
          claimName: ipfs-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dataspace/Deployment/ipfs

skipped mutate policy add-safe-to-evict -> resource dataspace/Deployment/ipfs
policy disallow-latest-tag -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dataspace/Deployment/ipfs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dataspace/Deployment/ipfs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dataspace/Deployment/ipfs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipfs-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/Deployment/ipfs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ipfs
  name: ipfs
  namespace: dataspace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ipfs
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ipfs
    spec:
      containers:
      - image: ipfs/go-ipfs:latest
        name: ipfs
        ports:
        - containerPort: 5001
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /data/ipfs
          name: ipfs-data
      restartPolicy: Always
      volumes:
      - name: ipfs-data
        persistentVolumeClaim:
          claimName: ipfs-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dataspace/Deployment/ipfs

skipped mutate policy add-safe-to-evict -> resource dataspace/Deployment/ipfs
policy disallow-latest-tag -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource dataspace/Deployment/ipfs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dataspace/Deployment/ipfs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dataspace/Deployment/ipfs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dataspace/Deployment/ipfs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipf-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iperf-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iperf-server
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: iperf-server
  template:
    metadata:
      labels:
        app: iperf-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - iperf-server
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: IPERF_SERVER
          value: "1"
        image: bookofkubernetes/iperf3:1.0.0
        name: iperf

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iperf-server

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iperf-server
policy disallow-default-namespace -> resource default/Deployment/iperf-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iperf-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iperf-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iperf-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iperf-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipfs-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/Ingress/ipfs:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ipfs
  namespace: dataspace
spec:
  ingressClassName: nginx
  rules:
  - host: ipfs.local
    http:
      paths:
      - backend:
          service:
            name: ipfs
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipfs-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/Ingress/ipfs:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ipfs
  namespace: dataspace
spec:
  ingressClassName: nginx
  rules:
  - host: ipfs.local
    http:
      paths:
      - backend:
          service:
            name: ipfs
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipfs-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/Service/ipfs:
apiVersion: v1
kind: Service
metadata:
  name: ipfs
  namespace: dataspace
spec:
  ports:
  - name: ipfs5001
    port: 5001
    targetPort: 5001
  - name: ipfs8080
    port: 8080
    targetPort: 8080
  selector:
    app: ipfs

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipfs-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dataspace/Service/ipfs:
apiVersion: v1
kind: Service
metadata:
  name: ipfs
  namespace: dataspace
spec:
  ports:
  - name: ipfs5001
    port: 5001
    targetPort: 5001
  - name: ipfs8080
    port: 8080
    targetPort: 8080
  selector:
    app: ipfs

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipfs-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ipfs-cluster:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ipfs-cluster
  name: ipfs-cluster
  namespace: default
spec:
  ports:
  - name: swarm
    port: 4001
    targetPort: swarm
  - name: swarm-udp
    port: 4002
    targetPort: swarm-udp
  - name: ws
    port: 8081
    targetPort: ws
  - name: http
    port: 8080
    targetPort: http
  - name: api-http
    port: 9094
    targetPort: api-http
  - name: proxy-http
    port: 9095
    targetPort: proxy-http
  - name: cluster-swarm
    port: 9096
    targetPort: cluster-swarm
  selector:
    app: ipfs-cluster
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipf-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/iperf-server:
apiVersion: v1
kind: Service
metadata:
  name: iperf-server
  namespace: default
spec:
  ports:
  - port: 5201
    protocol: TCP
    targetPort: 5201
  selector:
    app: iperf-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipmap_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipmap-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: dns-resolution-operator
    app.kubernetes.io/instance: ipmap-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: dns-resolution-operator
  name: ipmap-editor-role
  namespace: default
rules:
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - ipmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - ipmaps/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipmap_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipmap-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: dns-resolution-operator
    app.kubernetes.io/instance: ipmap-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: dns-resolution-operator
  name: ipmap-viewer-role
  namespace: default
rules:
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - ipmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - dns.k8s.delta10.nl
  resources:
  - ipmaps/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: k8s.gcr.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.1
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.1
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.1
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: k8s.gcr.io/ip-masq-agent-amd64:v2.4.1
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: k8s.gcr.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: registry.k8s.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: k8s.gcr.io/ip-masq-agent-amd64:v2.4.1
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ip-masq-agent9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/ip-masq-agent:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: ip-masq-agent
    kubernetes.io/cluster-service: "true"
  name: ip-masq-agent
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-masq-agent9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/ip-masq-agent:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: ip-masq-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: ip-masq-agent
  template:
    metadata:
      labels:
        k8s-app: ip-masq-agent
    spec:
      containers:
      - args:
        - --masq-chain=IP-MASQ
        - --nomasq-all-reserved-ranges
        image: k8s.gcr.io/networking/ip-masq-agent-amd64:v2.6.0
        name: ip-masq-agent
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: config
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/masq-agent-ds-ready: "true"
      priorityClassName: system-node-critical
      serviceAccountName: ip-masq-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config
            path: ip-masq-agent
          name: ip-masq-agent
          optional: true
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/ip-masq-agent
policy drop-all-capabilities -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/ip-masq-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: iporting.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iporting-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iporting
  name: iporting-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iporting
  template:
    metadata:
      labels:
        app: iporting
    spec:
      containers:
      - image: tamildocker212121/iporting:1.2
        name: iporting

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iporting-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iporting-deployment
policy disallow-default-namespace -> resource default/Deployment/iporting-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iporting-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iporting-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iporting-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: iporting1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iporting-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iporting
  name: iporting-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iporting
  template:
    metadata:
      labels:
        app: iporting
    spec:
      containers:
      - image: tamildocker212121/iporting:1.2
        name: iporting
        volumeMounts:
        - mountPath: /etc/ddtcfg/iporting.json
          name: myconfigtest
          subPath: iporting.json
      volumes:
      - configMap:
          name: my-config-map
        name: myconfigtest

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iporting-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iporting-deployment
policy disallow-default-namespace -> resource default/Deployment/iporting-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/iporting-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iporting-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iporting-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iporting-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ipsec_secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/cilium-ipsec-keys:
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ipsec-keys
  namespace: default
stringData:
  keys: 6 rfc4106(gcm(aes)) 44434241343332312423222114131211f4f3f2f1 128
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ip-service:
apiVersion: v1
kind: Service
metadata:
  name: ip-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ip-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ip-service:
apiVersion: v1
kind: Service
metadata:
  name: ip-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipxebootconfig_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipxebootconfig-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: ipxe-operator
    app.kubernetes.io/instance: ipxebootconfig-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: ipxe-operator
  name: ipxebootconfig-editor-role
  namespace: default
rules:
- apiGroups:
  - boot.ironcore.dev
  resources:
  - ipxebootconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - boot.ironcore.dev
  resources:
  - ipxebootconfigs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ipxebootconfig_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ipxebootconfig-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: ipxe-operator
    app.kubernetes.io/instance: ipxebootconfig-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: ipxe-operator
  name: ipxebootconfig-viewer-role
  namespace: default
rules:
- apiGroups:
  - boot.ironcore.dev
  resources:
  - ipxebootconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - boot.ironcore.dev
  resources:
  - ipxebootconfigs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: iris-app-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/iris-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iris-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: iris-app
  template:
    metadata:
      labels:
        app: iris-app
    spec:
      containers:
      - image: localhost/iris-app:latest
        name: iris-app
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/iris-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/iris-app-deployment
policy disallow-default-namespace -> resource default/Deployment/iris-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/iris-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iris-app-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/iris-app-service:
apiVersion: v1
kind: Service
metadata:
  name: iris-app-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: iris-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: irongallery-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: iron-gallery
  name: iron-gallery-deployment-nautilus
  namespace: iron-namespace-nautilus
spec:
  replicas: 1
  selector:
    matchLabels:
      run: iron-gallery
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        run: iron-gallery
    spec:
      containers:
      - image: kodekloud/irongallery:2.0
        name: iron-gallery-container-nautilus
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html/data
          name: config
        - mountPath: /usr/share/nginx/html/uploads
          name: images
      volumes:
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: images

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus
policy drop-all-capabilities -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource iron-namespace-nautilus/Deployment/iron-gallery-deployment-nautilus failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: ironic.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ironic:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ironic
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      name: ironic
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        name: ironic
    spec:
      containers:
      - command:
        - /bin/rundnsmasq
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        image: quay.io/metal3-io/ironic
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - ss -lun | grep :67 && ss -lun | grep :69
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: ironic-dnsmasq
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - ss -lun | grep :67 && ss -lun | grep :69
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_BIND_SERVICE
            - NET_RAW
            drop:
            - ALL
          privileged: false
          runAsGroup: 994
          runAsUser: 997
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runironic
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        image: quay.io/metal3-io/ironic
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: ironic
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 994
          runAsUser: 997
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runlogwatch.sh
        image: quay.io/metal3-io/ironic
        imagePullPolicy: Always
        name: ironic-log-watch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 994
          runAsUser: 997
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runhttpd
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        image: quay.io/metal3-io/ironic
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSfk http://127.0.0.1:6180/images
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: ironic-httpd
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -sSfk http://127.0.0.1:6180/images
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 994
          runAsUser: 997
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      hostNetwork: true
      initContainers:
      - command:
        - /usr/local/bin/get-resource.sh
        envFrom:
        - configMapRef:
            name: ironic-bmo-configmap
        image: quay.io/metal3-io/ironic-ipa-downloader
        imagePullPolicy: Always
        name: ironic-ipa-downloader
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 994
          runAsUser: 997
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      securityContext:
        fsGroup: 994
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: ironic-data-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ironic
policy disallow-default-namespace -> resource default/Deployment/ironic failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ironic failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Deployment/ironic failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ironic failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ironic failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/ironic failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ironic failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/ironic failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: ironic-patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ironic:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ironic
  namespace: default
spec:
  template:
    spec:
      containers:
      - $patch: delete
        name: ironic-dnsmasq

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ironic

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ironic
policy disallow-default-namespace -> resource default/Deployment/ironic failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Deployment/ironic failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Deployment/ironic failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ironic failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ironic failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ironic failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/ironic failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ironic failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ironic failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ironic failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 11, warn: 0, error: 0, skip: 2 

##### FILE: is.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/is-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: is
  name: is-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: is
  template:
    metadata:
      labels:
        app: is
    spec:
      containers:
      - image: acrasgardeomainrnd001.azurecr.io/is7.0:latest
        imagePullPolicy: IfNotPresent
        name: is
        ports:
        - containerPort: 9443

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/is-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/is-deployment
policy disallow-default-namespace -> resource default/Deployment/is-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/is-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/is-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/is-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/is-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/is-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/is-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/is-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/is-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: is_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/is-service:
apiVersion: v1
kind: Service
metadata:
  name: is-service
  namespace: default
spec:
  ports:
  - port: 9443
    protocol: TCP
    targetPort: 9443
  selector:
    app: is
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: is-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wso2is/ConfigMap/identity-server-conf:
apiVersion: v1
data:
  deployment.toml: "# Deployment config for Identity Server deployment\n[server]\nhostname
    = \"wso2.is\"\nnode_ip = \"$env{NODE_IP}\"\nbase_path = \"https://$ref{server.hostname}:${carbon.management.port}\"\nforce_local_cache
    = true\n\n[super_admin] \nusername = \"admin\"\npassword = \"admin\"\ncreate_admin_account
    = true\n\n[user_store]\ntype = \"database_unique_id\"\n\n[database.identity_db]\ntype
    = \"mssql\"\nurl = \"jdbc:sqlserver://wso2is-db-secondary.database.windows.net:1433\"\ndatabase
    = \"ismssqldb-primary\"\nusername = \"regadmin\"\npassword = \"nimdager@123\"\n\n[database.shared_db]\ntype
    = \"mssql\"\nurl = \"jdbc:sqlserver://wso2is-db-secondary.database.windows.net:1433\"\ndatabase
    = \"ismssqldb-primary\"\nusername = \"regadmin\"\npassword = \"nimdager@123\"\n\n[database.identity_db.pool_options]\nmaxActive
    = \"80\"\nmaxWait = \"360000\"\nminIdle =\"5\"\ntestOnBorrow = true\nvalidationQuery=\"SELECT
    1\"\nvalidationInterval=\"30000\"\ndefaultAutoCommit=false\ncommitOnReturn=true\n\n[database.shared_db.pool_options]\nmaxActive
    = \"80\"\nmaxWait = \"360000\"\nminIdle =\"5\"\ntestOnBorrow = true\nvalidationQuery=\"SELECT
    1\"\nvalidationInterval=\"30000\"\ndefaultAutoCommit=false\ncommitOnReturn=true\n\n[clustering]\nmembership_scheme
    = \"kubernetes\"\ndomain = \"wso2.carbon.domain\"\n\n[clustering.properties]\nmembershipSchemeClassName
    = \"org.wso2.carbon.membership.scheme.kubernetes.KubernetesMembershipScheme\"\nKUBERNETES_NAMESPACE
    = \"wso2is\"\nKUBERNETES_SERVICES = \"identity-service\"\nKUBERNETES_MASTER_SKIP_SSL_VERIFICATION
    = true\nUSE_DNS = false\n\n[hazelcast]\n\"hazelcast.shutdownhook.enabled\" = \"false\"\n\"hazelcast.logging.type\"=
    \"log4j2\"\n\n[transport.http.properties]\nproxyPort = 80\n[transport.https.properties]\nproxyPort
    = 443\n\n[keystore.primary]\nfile_name = \"wso2carbon.jks\"\npassword = \"wso2carbon\"\n\n[truststore]\nfile_name=\"client-truststore.jks\"\npassword=\"wso2carbon\"\ntype=\"JKS\"\n\n[account_recovery.endpoint.auth]\nhash=
    \"66cd9688a2ae068244ea01e70f0e230f5623b7fa4cdecb65070a09ec06452262\"\n\n[identity.auth_framework.endpoint]\napp_password=
    \"dashboard\"\n\n[cors]\nallow_generic_http_requests = true\nallow_any_origin
    = true\nallow_subdomains = true\nsupported_methods = [\n\"GET\",\n\"POST\",\n\"HEAD\",\n\"OPTIONS\"\n]\nsupport_any_header
    = true\nsupported_headers = []\nexposed_headers = []\nsupports_credentials = true\nmax_age
    = 3600\ntag_requests = false\n\n# from configmap"
kind: ConfigMap
metadata:
  name: identity-server-conf
  namespace: wso2is

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: iscsi.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iscsipd:
apiVersion: v1
kind: Pod
metadata:
  name: iscsipd
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: iscsipd-rw
    volumeMounts:
    - mountPath: /mnt/iscsipd
      name: iscsipd-rw
  volumes:
  - iscsi:
      fsType: ext4
      iqn: iqn.2001-04.com.example:storage.kube.sys1.xyz
      lun: 0
      portals:
      - 10.0.2.16:3260
      - 10.0.2.17:3260
      readOnly: true
      targetPortal: 10.0.2.15:3260
    name: iscsipd-rw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd

skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd
policy disallow-default-namespace -> resource default/Pod/iscsipd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/iscsipd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/iscsipd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iscsipd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iscsipd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/iscsipd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/iscsipd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iscsipd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iscsipd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iscsi1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iscsipd:
apiVersion: v1
kind: Pod
metadata:
  name: iscsipd
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: iscsipd-rw
    volumeMounts:
    - mountPath: /mnt/iscsipd
      name: iscsipd-rw
  volumes:
  - iscsi:
      fsType: ext4
      iqn: iqn.2001-04.com.example:storage.kube.sys1.xyz
      lun: 0
      portals:
      - 10.0.2.16:3260
      - 10.0.2.17:3260
      readOnly: true
      targetPortal: 10.0.2.15:3260
    name: iscsipd-rw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd

skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd
policy disallow-default-namespace -> resource default/Pod/iscsipd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/iscsipd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/iscsipd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iscsipd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iscsipd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/iscsipd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/iscsipd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iscsipd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iscsipd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iscsi2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/longhorn-iscsi-installation:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    command: OS=$(grep -E "^ID_LIKE=" /etc/os-release | cut -d '=' -f 2); if [[ -z
      "${OS}" ]]; then OS=$(grep -E "^ID=" /etc/os-release | cut -d '=' -f 2); fi;
      if [[ "${OS}" == *"debian"* ]]; then sudo apt-get update -q -y && sudo apt-get
      install -q -y open-iscsi && sudo systemctl -q enable iscsid && sudo systemctl
      start iscsid && sudo modprobe iscsi_tcp; elif [[ "${OS}" == *"suse"* ]]; then
      sudo zypper --gpg-auto-import-keys -q refresh && sudo zypper --gpg-auto-import-keys
      -q install -y open-iscsi && sudo systemctl -q enable iscsid && sudo systemctl
      start iscsid && sudo modprobe iscsi_tcp; else sudo yum makecache -q -y && sudo
      yum --setopt=tsflags=noscripts install -q -y iscsi-initiator-utils && echo "InitiatorName=$(/sbin/iscsi-iname)"
      > /etc/iscsi/initiatorname.iscsi && sudo systemctl -q enable iscsid && sudo
      systemctl start iscsid && sudo modprobe iscsi_tcp; fi && if [ $? -eq 0 ]; then
      echo "iscsi install successfully"; else echo "iscsi install failed error code
      $?"; fi
  labels:
    app: longhorn-iscsi-installation
  name: longhorn-iscsi-installation
  namespace: default
spec:
  selector:
    matchLabels:
      app: longhorn-iscsi-installation
  template:
    metadata:
      labels:
        app: longhorn-iscsi-installation
    spec:
      containers:
      - image: registry.k8s.io/pause:3.1
        name: sleep
      hostNetwork: true
      hostPID: true
      initContainers:
      - command:
        - nsenter
        - --mount=/proc/1/ns/mnt
        - --
        - bash
        - -c
        - OS=$(grep -E "^ID_LIKE=" /etc/os-release | cut -d '=' -f 2); if [[ -z "${OS}"
          ]]; then OS=$(grep -E "^ID=" /etc/os-release | cut -d '=' -f 2); fi; if
          [[ "${OS}" == *"debian"* ]]; then sudo apt-get update -q -y && sudo apt-get
          install -q -y open-iscsi && sudo systemctl -q enable iscsid && sudo systemctl
          start iscsid && sudo modprobe iscsi_tcp; elif [[ "${OS}" == *"suse"* ]];
          then sudo zypper --gpg-auto-import-keys -q refresh && sudo zypper --gpg-auto-import-keys
          -q install -y open-iscsi && sudo systemctl -q enable iscsid && sudo systemctl
          start iscsid && sudo modprobe iscsi_tcp; else sudo yum makecache -q -y &&
          sudo yum --setopt=tsflags=noscripts install -q -y iscsi-initiator-utils
          && echo "InitiatorName=$(/sbin/iscsi-iname)" > /etc/iscsi/initiatorname.iscsi
          && sudo systemctl -q enable iscsid && sudo systemctl start iscsid && sudo
          modprobe iscsi_tcp; fi && if [ $? -eq 0 ]; then echo "iscsi install successfully";
          else echo "iscsi install failed error code $?"; fi
        image: alpine:3.17
        name: iscsi-installation
        securityContext:
          privileged: true
  updateStrategy:
    type: RollingUpdate

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/longhorn-iscsi-installation

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/longhorn-iscsi-installation
policy disallow-default-namespace -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/longhorn-iscsi-installation failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: iscsi3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iscsipd:
apiVersion: v1
kind: Pod
metadata:
  name: iscsipd
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: iscsipd-rw
    volumeMounts:
    - mountPath: /mnt/iscsipd
      name: iscsipd-rw
  volumes:
  - iscsi:
      fsType: ext4
      iqn: iqn.2001-04.com.example:storage.kube.sys1.xyz
      lun: 0
      portals:
      - 10.0.2.16:3260
      - 10.0.2.17:3260
      readOnly: true
      targetPortal: 10.0.2.15:3260
    name: iscsipd-rw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd

skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd
policy disallow-default-namespace -> resource default/Pod/iscsipd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/iscsipd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/iscsipd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iscsipd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iscsipd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/iscsipd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/iscsipd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iscsipd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iscsipd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iscsi-chap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iscsipd:
apiVersion: v1
kind: Pod
metadata:
  name: iscsipd
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: iscsipd-ro
    volumeMounts:
    - mountPath: /mnt/iscsipd
      name: iscsivol
  volumes:
  - iscsi:
      chapAuthDiscovery: true
      chapAuthSession: true
      fsType: ext4
      iqn: iqn.2015-02.example.com:test
      lun: 0
      readOnly: true
      secretRef:
        name: chap-secret
      targetPortal: 127.0.0.1
    name: iscsivol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd

skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd
policy disallow-default-namespace -> resource default/Pod/iscsipd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/iscsipd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/iscsipd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iscsipd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iscsipd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/iscsipd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/iscsipd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iscsipd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iscsipd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iscsi-chap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iscsipd:
apiVersion: v1
kind: Pod
metadata:
  name: iscsipd
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: iscsipd-ro
    volumeMounts:
    - mountPath: /mnt/iscsipd
      name: iscsivol
  volumes:
  - iscsi:
      chapAuthDiscovery: true
      chapAuthSession: true
      fsType: ext4
      iqn: iqn.2015-02.example.com:test
      lun: 0
      readOnly: true
      secretRef:
        name: chap-secret
      targetPortal: 127.0.0.1
    name: iscsivol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd

skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd
policy disallow-default-namespace -> resource default/Pod/iscsipd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/iscsipd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/iscsipd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iscsipd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iscsipd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/iscsipd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/iscsipd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iscsipd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iscsipd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iscsi-chap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/iscsipd:
apiVersion: v1
kind: Pod
metadata:
  name: iscsipd
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: iscsipd-ro
    volumeMounts:
    - mountPath: /mnt/iscsipd
      name: iscsivol
  volumes:
  - iscsi:
      chapAuthDiscovery: true
      chapAuthSession: true
      fsType: ext4
      iqn: iqn.2015-02.example.com:test
      lun: 0
      readOnly: true
      secretRef:
        name: chap-secret
      targetPortal: 127.0.0.1
    name: iscsivol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd

skipped mutate policy add-safe-to-evict -> resource default/Pod/iscsipd
policy disallow-default-namespace -> resource default/Pod/iscsipd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/iscsipd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/iscsipd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/iscsipd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/iscsipd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/iscsipd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/iscsipd failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/iscsipd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/iscsipd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: iscsi-dependency.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/longhorn-os-dependency:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: longhorn-os-dependency
  namespace: default
spec:
  selector:
    matchLabels:
      app: longhorn-os-dependency
  template:
    metadata:
      labels:
        app: longhorn-os-dependency
    spec:
      containers:
      - image: public.ecr.aws/eks-distro/kubernetes/pause:3.8
        name: pause
      hostNetwork: true
      hostPID: true
      initContainers:
      - args:
        - -c
        - nsenter --mount=/proc/1/ns/mnt -- sh -c 'yum -y install iscsi-initiator-utils'
        command:
        - /bin/sh
        image: alpine:latest
        name: dependency-install
        securityContext:
          privileged: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/longhorn-os-dependency

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/longhorn-os-dependency
policy disallow-default-namespace -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/longhorn-os-dependency failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: isolated-pods.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nw1-pod:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    ovn.kubernetes.io/logical_switch: nw1
  name: nw1-pod
  namespace: default
spec:
  containers:
  - args:
    - 8.8.8.8
    command:
    - ping
    image: alpine:3.17
    name: nw1-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nw1-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/nw1-pod
policy disallow-default-namespace -> resource default/Pod/nw1-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nw1-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nw1-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nw1-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nw1-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nw1-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nw1-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nw1-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: isolated-pods_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nw10-pod:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    ovn.kubernetes.io/logical_switch: nw10
  name: nw10-pod
  namespace: default
spec:
  containers:
  - args:
    - 8.8.8.8
    command:
    - ping
    image: alpine:3.17
    name: nw10-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nw10-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/nw10-pod
policy disallow-default-namespace -> resource default/Pod/nw10-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nw10-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nw10-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nw10-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/nw10-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nw10-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nw10-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nw10-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: is-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wso2is/Role/endpoint-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: endpoint-reader
  namespace: wso2is
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: is-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wso2is/Service/identity-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    deployment: wso2is
  name: identity-service
  namespace: wso2is
spec:
  ports:
  - name: servlet-http
    port: 9763
    protocol: TCP
    targetPort: 9763
  - name: servlet-https
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    deployment: wso2is
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Istio13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/product-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: product-service
    spec:
      containers:
      - image: your-docker-repo/product-service:latest
        name: product-service
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/product-service
policy disallow-default-namespace -> resource default/Deployment/product-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/product-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/product-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/product-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/product-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/product-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/product-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/product-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Istio13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/product-service:
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
  selector:
    app: product-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-mixer:
apiVersion: v1
kind: Service
metadata:
  labels:
    istio: mixer
  name: istio-mixer
  namespace: default
spec:
  ports:
  - name: tcp
    port: 9091
  - name: configapi
    port: 9094
  - name: prometheus
    port: 42422
  selector:
    istio: mixer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/istio:
apiVersion: v1
data:
  mesh: |-
    # Uncomment the following line to enable mutual TLS between proxies
    # authPolicy: MUTUAL_TLS
    mixerAddress: istio-mixer:9091
    discoveryAddress: istio-manager:8080
    ingressService: istio-ingress
    zipkinAddress: zipkin:9411
kind: ConfigMap
metadata:
  name: istio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-manager:
apiVersion: v1
kind: Service
metadata:
  labels:
    istio: manager
  name: istio-manager
  namespace: default
spec:
  ports:
  - name: http-discovery
    port: 8080
  - name: http-apiserver
    port: 8081
  selector:
    istio: manager

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/istio-manager-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-manager-service-account
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-ingress:
apiVersion: v1
kind: Service
metadata:
  labels:
    istio: ingress
  name: istio-ingress
  namespace: default
spec:
  ports:
  - name: http
    port: 80
  - name: https
    port: 443
  selector:
    istio: ingress

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/istio-ingress-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingress-service-account
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio14_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-egress:
apiVersion: v1
kind: Service
metadata:
  name: istio-egress
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    istio: egress

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/ServiceAccount/istio-reader-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/ServiceAccount/istiod-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - config.istio.io
  - security.istio.io
  - networking.istio.io
  - authentication.istio.io
  - rbac.istio.io
  - telemetry.istio.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries/status
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - services
  - namespaces
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  - certificatesigningrequests/approval
  - certificatesigningrequests/status
  verbs:
  - update
  - create
  - get
  - delete
  - watch
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/legacy-unknown
  resources:
  - signers
  verbs:
  - approve
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - networking.x-k8s.io
  - gateway.networking.k8s.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.x-k8s.io
  - gateway.networking.k8s.io
  resources:
  - '*'
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceexports
  verbs:
  - get
  - watch
  - list
  - create
  - delete
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/istio-reader-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-istio-system
  namespace: default
rules:
- apiGroups:
  - config.istio.io
  - security.istio.io
  - networking.istio.io
  - authentication.istio.io
  - rbac.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - nodes
  - replicationcontrollers
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceexports
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/istio-reader-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-istio-system
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader-istio-system
subjects:
- kind: ServiceAccount
  name: istio-reader-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-istio-system
subjects:
- kind: ServiceAccount
  name: istiod-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Role/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: istio-system
rules:
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - watch
  - list
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/RoleBinding/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiod-istio-system
subjects:
- kind: ServiceAccount
  name: istiod-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/istiod-default-validator:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: istiod
    istio: istiod
    istio.io/rev: default
    release: istio
  name: istiod-default-validator
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /validate
  failurePolicy: Ignore
  name: validation.istio.io
  rules:
  - apiGroups:
    - security.istio.io
    - networking.istio.io
    - telemetry.istio.io
    - extensions.istio.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*'
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/ServiceAccount/istio-reader-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/ServiceAccount/istiod-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - config.istio.io
  - security.istio.io
  - networking.istio.io
  - authentication.istio.io
  - rbac.istio.io
  - telemetry.istio.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries/status
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - services
  - namespaces
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  - certificatesigningrequests/approval
  - certificatesigningrequests/status
  verbs:
  - update
  - create
  - get
  - delete
  - watch
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/legacy-unknown
  resources:
  - signers
  verbs:
  - approve
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - networking.x-k8s.io
  - gateway.networking.k8s.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.x-k8s.io
  - gateway.networking.k8s.io
  resources:
  - '*'
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceexports
  verbs:
  - get
  - watch
  - list
  - create
  - delete
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/istio-reader-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-istio-system
  namespace: default
rules:
- apiGroups:
  - config.istio.io
  - security.istio.io
  - networking.istio.io
  - authentication.istio.io
  - rbac.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - nodes
  - replicationcontrollers
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceexports
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/istio-reader-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-istio-system
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader-istio-system
subjects:
- kind: ServiceAccount
  name: istio-reader-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-istio-system
subjects:
- kind: ServiceAccount
  name: istiod-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Role/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: istio-system
rules:
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - watch
  - list
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/RoleBinding/istiod-istio-system:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-istio-system
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiod-istio-system
subjects:
- kind: ServiceAccount
  name: istiod-service-account
  namespace: istio-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cluster1_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/istiod-default-validator:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: istiod
    istio: istiod
    istio.io/rev: default
    release: istio
  name: istiod-default-validator
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /validate
  failurePolicy: Ignore
  name: validation.istio.io
  rules:
  - apiGroups:
    - security.istio.io
    - networking.istio.io
    - telemetry.istio.io
    - extensions.istio.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*'
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/istio:
apiVersion: v1
data:
  mesh: |-
    defaultConfig:
      discoveryAddress: istiod.istio-system.svc:15012
      tracing:
        zipkin:
          address: zipkin.istio-system:9411
    enablePrometheusMerge: true
    enableTracing: false
    outboundTrafficPolicy:
      mode: ALLOW_ANY
    trustDomain: cluster.local
    extensionProviders:
    - name: oauth2-proxy
      envoyExtAuthzHttp:
        service: oauth2-proxy.oauth2-proxy.svc.cluster.local
        port: 80
        timeout: 1.5s
        includeHeadersInCheck: ["authorization", "cookie"]
        headersToUpstreamOnAllow: ["x-forwarded-access-token", "authorization", "path", "x-auth-request-user", "x-auth-request-email", "x-auth-request-access-token"]
        headersToDownstreamOnDeny: ["content-type", "set-cookie"]
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: istiod
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
  name: istio
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/ConfigMap/istio:
apiVersion: v1
data:
  mesh: "defaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  proxyMetadata:
    {}\n  tracing:\n    zipkin:\n      address: http://tracing.istio-system.svc.cluster.local:80
    \ndefaultProviders:\n  metrics:\n  - prometheus\nenablePrometheusMerge: true\nrootNamespace:
    istio-system\ntrustDomain: cluster.local"
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  creationTimestamp: "2023-12-29T17:45:32Z"
  labels:
    install.operator.istio.io/owning-resource: example-istiocontrolplane
    install.operator.istio.io/owning-resource-namespace: istio-system
    istio.io/rev: default
    operator.istio.io/component: Pilot
    operator.istio.io/managed: Reconcile
    operator.istio.io/version: 1.19.3
    release: istio
  name: istio
  namespace: istio-system
  resourceVersion: "77394"
  uid: 5d7b094f-b697-4e68-b554-5dbb683ef526

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/ConfigMap/istio:
apiVersion: v1
data:
  mesh: "defaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  proxyMetadata:
    {}\n  tracing:\n    zipkin:\n      address: http://tracing.istio-system.svc.cluster.local:80
    \ndefaultProviders:\n  metrics:\n  - prometheus\nenablePrometheusMerge: true\nrootNamespace:
    istio-system\ntrustDomain: cluster.local"
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  creationTimestamp: "2023-12-29T17:45:32Z"
  labels:
    install.operator.istio.io/owning-resource: example-istiocontrolplane
    install.operator.istio.io/owning-resource-namespace: istio-system
    istio.io/rev: default
    operator.istio.io/component: Pilot
    operator.istio.io/managed: Reconcile
    operator.istio.io/version: 1.19.3
    release: istio
  name: istio
  namespace: istio-system
  resourceVersion: "77394"
  uid: 5d7b094f-b697-4e68-b554-5dbb683ef526

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-crds.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: disabled
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-crds1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: disabled
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-default-profile.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/minikube-addons: istio
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-gateways.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-gateways:
apiVersion: v1
kind: Namespace
metadata:
  name: istio-gateways
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-gateways:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-gateways
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-gateways:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-gateways
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-gateways:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-gateways
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-gateways:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-gateways
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/istio:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  name: istio
  namespace: default
spec:
  controller: istio.io/ingress-controller

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-ingressgateway.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/istio-ingressgateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
      labels:
        app: istio-ingressgateway
        istio: ingressgateway
    spec:
      containers:
      - image: auto
        name: istio-proxy
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
      serviceAccountName: istio-ingressgateway

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/istio-ingressgateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/istio-ingressgateway
policy disallow-default-namespace -> resource default/Deployment/istio-ingressgateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/istio-ingressgateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: istio-ingressgateway_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/istio-ingressgateway:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
  name: istio-ingressgateway
  namespace: default
spec:
  ports:
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  - name: http2
    port: 80
  - name: https
    port: 443
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-ingressgateway_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/istio-ingressgateway:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingressgateway
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-ingressgateway_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/istio-ingressgateway:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istio-ingressgateway
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-ingressgateway_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/istio-ingressgateway:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istio-ingressgateway
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway
subjects:
- kind: ServiceAccount
  name: istio-ingressgateway

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-ingressgateway2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${ISTIO_NAMESPACE}/Service/istio-ingressgateway:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    install.operator.istio.io/owning-resource-namespace: ${ISTIO_NAMESPACE}
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    operator.istio.io/managed: Reconcile
    operator.istio.io/version: 1.8.0
    release: istio
  name: istio-ingressgateway
  namespace: ${ISTIO_NAMESPACE}
spec:
  ports:
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  - name: http2
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  - name: tcp-istiod
    port: 15012
    protocol: TCP
    targetPort: 15012
  - name: tls
    port: 15443
    protocol: TCP
    targetPort: 15443
  - name: tcp-kaili
    port: 20001
    protocol: TCP
  - name: tcp-grafna
    port: 3000
    protocol: TCP
  - name: tcp-prometheus
    port: 9090
    protocol: TCP
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-services.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/grafana-np:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
    chart: grafana
    heritage: Tiller
    release: istio
  name: grafana-np
  namespace: istio-system
spec:
  ports:
  - name: http
    nodePort: 32493
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/grafana-np failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: istio-services_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/prometheus-np:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
    chart: prometheus
    heritage: Tiller
    release: istio
  name: prometheus-np
  namespace: istio-system
spec:
  ports:
  - name: http
    nodePort: 32494
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus
  sessionAffinity: None
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/prometheus-np failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: istio-services_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing-np:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    chart: tracing
    heritage: Tiller
    release: istio
  name: tracing-np
  namespace: istio-system
spec:
  ports:
  - name: http-tracing
    nodePort: 32495
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger
  sessionAffinity: None
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/tracing-np failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: istio-services_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/kiali-np:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kiali
    chart: kiali
    heritage: Tiller
    release: istio
  name: kiali-np
  namespace: istio-system
spec:
  ports:
  - name: http-kiali
    nodePort: 32496
    port: 20001
    protocol: TCP
    targetPort: 20001
  selector:
    app: kiali
  sessionAffinity: None
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/kiali-np failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: istio-system.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-azure-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Secret/azure-secret:
apiVersion: v1
kind: Secret
metadata:
  name: azure-secret
  namespace: istio-system
stringData:
  client-secret: <your_azure_client_secret>
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    monitoring: prometheus
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-ns2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    monitoring: prometheus
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-ns3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-ns4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    monitoring: prometheus
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: istio-system-ns5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    monitoring: prometheus
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: item-keeper-admin-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/item-keeper-admin:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: item-keeper-admin
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: item-keeper-admin-app
  template:
    metadata:
      labels:
        app: item-keeper-admin-app
    spec:
      containers:
      - env:
        - name: GRAPHQL_CLIENT_URL
          value: http://item-keeper:8080/graphql
        image: mmanakhova/item-keeper-admin:latest
        name: item-keeper-admin
        ports:
        - containerPort: 8081
          hostPort: 8081
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/item-keeper-admin

skipped mutate policy add-safe-to-evict -> resource default/Deployment/item-keeper-admin
policy disallow-default-namespace -> resource default/Deployment/item-keeper-admin failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/item-keeper-admin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: item-keeper-admin-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/item-keeper-admin:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /item-keeper-admin/swagger_ui.html
  name: item-keeper-admin
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: item-keeper-admin-cds.com
    http:
      paths:
      - backend:
          service:
            name: item-keeper-admin
            port:
              number: 8081
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: item-keeper-admin-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/item-keeper-admin:
apiVersion: v1
kind: Service
metadata:
  name: item-keeper-admin
  namespace: default
spec:
  ports:
  - port: 8081
    targetPort: 8081
  selector:
    app: item-keeper-admin-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: item-keeper-data-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/item-keeper-data-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: item-keeper-data-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: item-keeper-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/item-keeper:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: item-keeper
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: item-keeper-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: item-keeper-app
    spec:
      containers:
      - env:
        - name: DB_URL
          value: ${DB_URL}
        - name: POSTGRES_PASSWORD
          value: ${POSTGRES_PASSWORD}
        - name: POSTGRES_USER
          value: ${POSTGRES_USER}
        - name: QUARTZ_CRON_EXPRESSION
          value: ${QUARTZ_CRON_EXPRESSION}
        image: mmanakhova/item-keeper:latest
        name: item-keeper
        ports:
        - containerPort: 8080
          hostPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /mapping_configs
          name: item-keeper-data
      restartPolicy: Always
      volumes:
      - name: item-keeper-data
        persistentVolumeClaim:
          claimName: item-keeper-data-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/item-keeper

skipped mutate policy add-safe-to-evict -> resource default/Deployment/item-keeper
policy disallow-default-namespace -> resource default/Deployment/item-keeper failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/item-keeper failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/item-keeper failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/item-keeper failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/item-keeper failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/item-keeper failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/item-keeper failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/item-keeper failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/item-keeper failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: item-keeper-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/item-keeper:
apiVersion: v1
kind: Service
metadata:
  name: item-keeper
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: item-keeper-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: items-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/items-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: items-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: items
  template:
    metadata:
      labels:
        app: items
    spec:
      containers:
      - env:
        - name: MONGO_URI
          value: mongodb://items-mongo-srv:27017/items
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_KEY
              name: jwt-secret
        - name: KAFKA_CLIENT_ID
          value: items
        - name: KAFKA_BROKER
          value: kafka-srv:9092
        image: yonrazticketing/items
        name: items

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/items-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/items-depl
policy disallow-default-namespace -> resource default/Deployment/items-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/items-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/items-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/items-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/items-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/items-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/items-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/items-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/items-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: items-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/items-srv:
apiVersion: v1
kind: Service
metadata:
  name: items-srv
  namespace: default
spec:
  ports:
  - name: items
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: items

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: items-depl1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/items-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: items-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: items
  template:
    metadata:
      labels:
        app: items
    spec:
      containers:
      - env:
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_URL
          value: http://nats-srv:4222
        - name: NATS_CLUSTER_ID
          value: ebarter
        - name: MONGO_URI
          value: mongodb://items-mongo-srv:27017/items
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_KEY
              name: jwt-secret
        image: alexmelia41/items
        name: items

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/items-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/items-depl
policy disallow-default-namespace -> resource default/Deployment/items-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/items-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/items-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/items-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/items-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/items-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/items-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/items-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/items-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: items-depl1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/items-srv:
apiVersion: v1
kind: Service
metadata:
  name: items-srv
  namespace: default
spec:
  ports:
  - name: items
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: items

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: items-mongo-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/items-mongo-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: items-mongo-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: items-mongo
  template:
    metadata:
      labels:
        app: items-mongo
    spec:
      containers:
      - image: mongo
        name: items-mongo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/items-mongo-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/items-mongo-depl
policy disallow-default-namespace -> resource default/Deployment/items-mongo-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/items-mongo-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: items-mongo-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/items-mongo-srv:
apiVersion: v1
kind: Service
metadata:
  name: items-mongo-srv
  namespace: default
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: items-mongo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: itframe-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/itframe-config:
apiVersion: v1
data:
  itframe-config: ewogICJwb3J0IjogODA4MCwKICAidHJ1c3RYRkYiOiB0cnVlLAogICJtb25nb0hvc3QiOiAibW9uZ29kYitzcnY6Ly9tb25nby1pdGZyYW1lLTA5YTM5Y2I2Lm1vbmdvLm9uZGlnaXRhbG9jZWFuLmNvbSIsCiAgIm1vbmdvU1NMIjogZmFsc2UsCiAgIm1vbmdvRGF0YWJhc2UiOiAiaXRmcmFtZSIsCiAgIm1vbmdvVXNlcm5hbWUiOiAiZG9hZG1pbiIsCiAgIm1vbmdvUGFzc3dvcmQiOiAiNTFCTzBYNzkyYWN3NjR2aCIsCiAgIm1vbmdvQXV0aE1lY2hhbmlzbSI6ICJTQ1JBTS1TSEEtMSIsCiAgIm1heWFIb3N0IjogZmFsc2UsCiAgIm1heWFUb2tlbiI6ICJ4b3hiLTQzNTg1NDkzMjYtTlF4U2o0UlBJYWdmUVFMU2d5OEpxTFZIIiwKICAibWF5YVRyaWdnZXIiOiAiPEBVMDRBSkc1OUw+OiIsCiAgImNvbnRyb2xBdXRoQ2xhc3MiOiAiL2NvbXBvbmVudHMvbGVnYWN5L3dobWNzLmpzIiwKICAid2htY3NVc2VybmFtZSI6ICJJVEZSQU1FIiwKICAid2htY3NQYXNzd29yZCI6ICIzNzk1YTJhZDhkMDc0ZDA4ZmMwMWUwMGViNGZjYTY5ZSIsCiAgIndobWNzS2V5IjogIklubm92YXRlTW9iaWxlIiwKICAid2htY3NJZGVudGlmaWVyIjogIm5GWWMzNXRFNTVYZm5TRW9yZjVTUjU3djZsYkNXYnd5IiwKICAid2htY3NTZWNyZXQiOiAiNFladENQaTRUVko4ZGhVOE1hcUFFQUthaXhPV0U4c1kiLAogICJ3aG1jc0FQSSI6ICJodHRwczovL215LnN0cmVhbWVyci5jby9pbmNsdWRlcy9hcGkucGhwIiwKICAid2htY3NVUkwiOiAiaHR0cHM6Ly9teS5zdHJlYW1lcnIuY28vIiwKICAiczNBY2Nlc3NLZXkiOiAiTjVTREcyMlZQUFlORzk2TTJDT0wiLAogICJzM1NlY3JldEtleSI6ICJYazFsZDFRS1VpVW9BNTRBbklIWXlDTGhaa3F2Qm1uQzhidUR5RVNsIiwKICAiczNFbmRwb2ludCI6ICJodHRwczovL3MzLmV1LXdlc3QtMS53YXNhYmlzeXMuY29tIiwKICAiczNSZWdpb24iOiAiZXUtd2VzdC0xIiwKICAia2V5c3RvbmVVUkwiOiAiaHR0cHM6Ly9rZXlzdG9uZS51bm11dGVkdGUuY2giLAogICJzd2lmdFVzZXJuYW1lIjogIklURnJhbWUiLAogICJzd2lmdFBhc3N3b3JkIjogIngwVDNRR2NJTzVTM2tXc2xFSDQwWTgyVVFmSWhpR09xVHljQ29yVTY4VFliZXB0SkpZZkNtN3l2Y2dXTTdpMiIsCiAgInN3aWZ0VGVuYW50IjogIklURnJhbWUiLAogICJzd2lmdFJlZ2lvbiI6ICJQQVIiLAogICJhcHBJbWFnZXNVcGxvYWRDb250YWluZXIiOiAiaW1hZ2VzLnNob3V0Y2Euc3QiLAogICJhcHBzVXNlcm5hbWUiOiAiaXRmcmFtZSIsCiAgImFwcHNQYXNzd29yZCI6ICJXMmFlV093Mkdia3RJN3NETGEwNFN0OU1PRUdsMHhyNyIsCiAgImFwcHNUb2tlbiI6ICI5dmV4MmpVV01UUDRGdFZmYkVZak1mM1FIZXhaamFycyIsCiAgInNlbmRMb2dzVG9FeHRlcm5hbCI6IGZhbHNlLAogICJsb2dzVXNlcm5hbWUiOiAiaXRmcmFtZSIsCiAgImxvZ3NQYXNzd29yZCI6ICJTN0lIOXd2czg4M3JkNWtRc25VSjhCRUN3SUN6VlptYyIsCiAgImxvZ3NIb3N0bmFtZSI6ICJsb2dzLnVubXV0ZWR0ZS5jaCIsCiAgInR1bmVzVXBsb2FkQ29udGFpbmVyIjogInR1bmVzLXVzLWVhc3QtMS5zaG91dGNhLnN0IiwKICAiZ2l0TGFiS2V5IjogInBzdGpjZUdoNFdncXBUYUNybXUzdWx5ME1ZZkllalBzaDJ0MGRhNjAyTFdSa2pYQXRRZk5LcEN5T1B1RER6SyIsCiAgInR1bmVzS2V5IjogInZwZzdUMWtQMHhKYXZtMndzOTJieHNwYllaVGM4dXZRa1VTbTUyNnNaVkVkV3JQc2VaeFdRd1pWczJzM0wwbSIsCiAgImlPU0tleSI6ICJMdXExdDk3eVo4eTU3a1ZpVFBJeGlUVWhaRWVITHZnYTBGSHdMNUQzIiwKICAiY29ubmVjdEtleSI6ICJ5b0xLd0pLbmdXd3RCM1ZvVU1oZ0t4ZXJBWE5YelpoVEtOQmYzZWJZcUZTdnl5NWtHV1NhMllxN05KRUVIakxROU0yQkdZRk4yQnk1OW5mVW5EcVlHUnB2eXNXeEhBUDZldnRnIiwKICAid2htY3NDYXN0S2V5IjogIjl2ZWF6Y1JLYUU1aTZnTWoyZVFGR1BKSjllRmhxMm1DdXc4M0xBaEpvUW5vSGdjZFNBRkg1N3d3bUJERSIsCiAgInNlbmRMb2dzVG9TdGFja2RyaXZlciI6IGZhbHNlLAogICJ0dW5lc0hlbG1ldFVSTCI6ICJodHRwczovL3R1bmVzLWNvbnRyb2xsZXIudW5tdXRlZHRlLmNoIiwKICAiY2FzdEhlbG1ldFVSTCI6ICJodHRwOi8vY2FzdC1jb250cm9sbGVyLnVubXV0ZWR0ZS5jaCIsCiAgImRqSGVsbWV0VVJMIjogImh0dHBzOi8vZGotY29udHJvbGxlci51bm11dGVkdGUuY2giLAogICJjYXN0SGVsbWV0S2V5IjogInhDbTFKQ29kWVZ5RGdGaUlMSmNIVFFaSFExNlk3enVQcmJseGVEdnBVY3dJYW9XS3lOVUVoOGRST2c3MTJXViIsCiAgInR1bmVzSGVsbWV0S2V5IjogIlZsMmVHVXBZakRvcWNuWXBnUFNQeFQxazhnOHJLWnVKeDM3RFFkYzNUR1lhUmJpNGVvUzUybEwwVUlhYmRQdiIsCiAgImRqSGVsbWV0S2V5IjogIjJ3ZVZiRXdXSnZGTW0zZlBnM1h5Tmg0NE5qWVBRdUVlUlZVa1JGWHNtdkhPckh1SzN0RTdjTzJaR0ZXRlFLYSIsCiAgInJlZGlzVXJsIjogInJlZGlzOi8vMTI3LjAuMC4xOjYzNzkiLAogICJldGNkIjogewogICAgInVybCI6IFsKICAgICAgImh0dHBzOi8vZXRjZC0wLnVubXV0ZWR0ZS5jaDoyMzc5IgogICAgXSwKICAgICJ1c2VybmFtZSI6ICJkaXNwYXRjaCIsCiAgICAicGFzc3dvcmQiOiAiQ2dkZjVIbW42aE93Wjcwa1dmYXBjWDhmUCIsCiAgICAiY2FDZXJ0aWZpY2F0ZSI6ICIvZXRjL2NlcnRzL2NhLnBlbSIsCiAgICAiY2xpZW50Q2VydGlmaWNhdGUiOiAiL2V0Yy9jZXJ0cy9jbGllbnQtc2VydmVyL2V0Y2QtMC51bm11dGVkdGUuY2gucGVtIiwKICAgICJwcml2YXRlS2V5IjogIi9ldGMvY2VydHMvY2xpZW50LXNlcnZlci9ldGNkLTAudW5tdXRlZHRlLmNoLWtleS5wZW0iCiAgfSwKICAic2xhY2tBbGV4YVNpZ25pbmdTZWNyZXQiOiAiNGVkY2I0Yjc4ZDI3ZGQ3ZGY3MmQ4MmJjMmY0NTVmMzciLAogICJzbGFja0FsZXhhVG9rZW4iOiAieG94Yi0yMTUxMjIyODU2LTQyMTU0ODA2MjQwNy1sMk9VaGJ4bDg3Njh0OUl2MWpIV29FczUiLAogICJzZW50cnlEU04iOiAiaHR0cHM6Ly8xYzg4ZjJkY2JjZTg0NzlkOTMwODNhYTkxNzFkMmVjZkBvMTA4NDgyNy5pbmdlc3Quc2VudHJ5LmlvLzYwOTQ5MzciCn0K
kind: Secret
metadata:
  name: itframe-config
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: itframe-redis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/rfs-itframe-redis:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/managed-by: redis-operator
    app.kubernetes.io/name: itframe-redis
    app.kubernetes.io/part-of: redis-failover
    redisfailovers.databases.spotahome.com/name: itframe-redis
  name: rfs-itframe-redis
  namespace: default
spec:
  ports:
  - name: sentinel
    port: 26379
    protocol: TCP
    targetPort: 6379
  selector:
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/name: itframe-redis
    app.kubernetes.io/part-of: redis-failover
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: itframe-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/itframe:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s: itframe-prod
  name: itframe
  namespace: default
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 10.245.178.54
  clusterIPs:
  - 10.245.178.54
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30657
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    k8s: itframe-prod
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 206.189.245.175

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: itop-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-itop:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: pv-itop
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /mnt/data
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: itop-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-itop:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-itop
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ix-device-plugin.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/ix-config:
apiVersion: v1
data:
  ix-config: |-
    version: "4.2.0"
    flags:
      splitboard: false
kind: ConfigMap
metadata:
  name: ix-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ix-device-plugin_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/iluvatar-device-plugin:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: iluvatar-device-plugin
  name: iluvatar-device-plugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: iluvatar-device-plugin
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app.kubernetes.io/name: iluvatar-device-plugin
    spec:
      containers:
      - image: ix-device-plugin:4.2.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - ls
            - /var/lib/kubelet/device-plugins/iluvatar-gpu.sock
          periodSeconds: 5
        name: iluvatar-device-plugin
        resources: {}
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        startupProbe:
          exec:
            command:
            - ls
            - /var/lib/kubelet/device-plugins/iluvatar-gpu.sock
          periodSeconds: 5
        volumeMounts:
        - mountPath: /var/lib/kubelet/device-plugins
          name: device-plugin
        - mountPath: /run/udev
          name: udev-ctl
          readOnly: true
        - mountPath: /sys
          name: sys
          readOnly: true
        - mountPath: /dev
          name: dev
        - mountPath: /ixconfig
          name: ixc
      priorityClassName: system-node-critical
      securityContext: null
      volumes:
      - hostPath:
          path: /var/lib/kubelet/device-plugins
        name: device-plugin
      - hostPath:
          path: /run/udev
        name: udev-ctl
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /etc/udev/
        name: udev-etc
      - hostPath:
          path: /dev
        name: dev
      - configMap:
          name: ix-config
        name: ixc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/iluvatar-device-plugin
policy drop-cap-net-raw -> resource kube-system/DaemonSet/iluvatar-device-plugin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource kube-system/DaemonSet/iluvatar-device-plugin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource kube-system/DaemonSet/iluvatar-device-plugin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/iluvatar-device-plugin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 4, warn: 0, error: 0, skip: 1 

##### FILE: ixon-client-key.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/ixon-client-key:
apiVersion: v1
data:
  ixon-client-key: |
    <VALUE>
kind: Secret
metadata:
  name: ixon-client-key
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ixon-client-key1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/ixon-client-key:
apiVersion: v1
data:
  ixon-client-key: |
    <VALUE>
kind: Secret
metadata:
  name: ixon-client-key
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: j1bW.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/config-server-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: config-server-app
  name: config-server-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-server-app
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: config-server-app
    spec:
      containers:
      - env:
        - name: ACCEPT_EULA
          value: true
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: MSSQL_SA_PASSWORD
              name: config-server-app
        image: 123joker/configserver:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 5
        name: config-server-app
        ports:
        - containerPort: 80
          name: config-server-app
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /_status/healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Taipei
        name: localtime

---


Mutation:
Mutation has been applied successfully.policy disallow-default-namespace -> resource default/Deployment/config-server-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/config-server-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/config-server-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/config-server-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/config-server-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/config-server-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 6, warn: 0, error: 0, skip: 0 

##### FILE: jackett-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jackett-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: jackett-claim0
  name: jackett-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jackett-claim1-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jackett-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: jackett-claim1
  name: jackett-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jackett-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jackett:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: jackett
  name: jackett
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: jackett
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: jackett
    spec:
      containers:
      - env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        image: linuxserver/jackett
        name: jackett
        resources: {}
        volumeMounts:
        - mountPath: /config
          name: jackett-claim0
        - mountPath: /torrents
          name: jackett-claim1
      restartPolicy: Always
      volumes:
      - name: jackett-claim0
        persistentVolumeClaim:
          claimName: jackett-claim0
      - name: jackett-claim1
        persistentVolumeClaim:
          claimName: jackett-claim1
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jackett

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jackett
policy disallow-default-namespace -> resource default/Deployment/jackett failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jackett failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jackett failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jackett failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jackett failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jackett failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/jackett failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jackett failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jackett failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jackett-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jackett-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jackett
  name: jackett-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jaeger-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: jaeger
    app.kubernetes.io/instance: jaeger-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: jaeger
  name: jaeger-editor-role
  namespace: default
rules:
- apiGroups:
  - tracing.orange.io
  resources:
  - jaegers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tracing.orange.io
  resources:
  - jaegers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jaeger-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: jaeger
    app.kubernetes.io/instance: jaeger-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: jaeger
  name: jaeger-viewer-role
  namespace: default
rules:
- apiGroups:
  - tracing.orange.io
  resources:
  - jaegers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tracing.orange.io
  resources:
  - jaegers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger11_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          value: "9411"
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.20
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    nodePort: 31001
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/tracing failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger12_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
      - image: jaegertracing/all-in-one:latest
        name: jaeger
        ports:
        - containerPort: 16686
        - containerPort: 14268

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger
policy disallow-default-namespace -> resource default/Deployment/jaeger failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jaeger failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jaeger failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jaeger16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger16_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger16_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: default
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger
policy disallow-default-namespace -> resource default/Deployment/jaeger failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: jaeger17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: default
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger17_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: default
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger17_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: default
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger19_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitor/Service/jaeger-agent:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger-agent
  name: jaeger-agent
  namespace: monitor
spec:
  clusterIP: None
  ports:
  - name: tcp
    port: 14271
    protocol: TCP
  - name: udp
    port: 6831
    protocol: UDP
  selector:
    app: jaeger-agent

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitor/DaemonSet/jaeger-agent-pods:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: jaeger-agent
  name: jaeger-agent-pods
  namespace: monitor
spec:
  selector:
    matchLabels:
      app: jaeger-agent
  template:
    metadata:
      labels:
        app: jaeger-agent
    spec:
      containers:
      - args:
        - --reporter.grpc.host-port=jaeger-collector:14250
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        image: jaegertracing/jaeger-agent:REVISION_ID
        livenessProbe:
          initialDelaySeconds: 120
          tcpSocket:
            port: 14271
        name: jaeger-agent-cont
        ports:
        - containerPort: 14271
          name: tcp
          protocol: TCP
        - containerPort: 6831
          name: udp
          protocol: UDP
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 2
          tcpSocket:
            port: 14271

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitor/DaemonSet/jaeger-agent-pods

skipped mutate policy add-safe-to-evict -> resource monitor/DaemonSet/jaeger-agent-pods
policy drop-all-capabilities -> resource monitor/DaemonSet/jaeger-agent-pods failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitor/DaemonSet/jaeger-agent-pods failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitor/DaemonSet/jaeger-agent-pods failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitor/DaemonSet/jaeger-agent-pods failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource monitor/DaemonSet/jaeger-agent-pods failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource monitor/DaemonSet/jaeger-agent-pods failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jaeger23_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitor/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger-collector
  name: jaeger-collector
  namespace: monitor
spec:
  clusterIP: None
  ports:
  - name: default
    port: 14250
  selector:
    app: jaeger-collector

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger23_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitor/Pod/jaeger-collector-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: jaeger-collector
  name: jaeger-collector-pod
  namespace: monitor
spec:
  containers:
  - args:
    - --es.server-urls=http://elasticsearch:9200
    - --es.num-shards=1
    - --es.num-replicas=0
    - --log-level=error
    env:
    - name: SPAN_STORAGE_TYPE
      value: elasticsearch
    image: jaegertracing/jaeger-collector:latest
    imagePullPolicy: Always
    livenessProbe:
      initialDelaySeconds: 120
      tcpSocket:
        port: 14250
    name: jaeger-collector-cont
    ports:
    - containerPort: 14250
      protocol: TCP
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 2
      tcpSocket:
        port: 14250
  initContainers:
  - command:
    - sh
    - -c
    - until curl http://elasticsearch:9200; do echo Waiting for ES; sleep 2; done;
    image: curlimages/curl
    name: wait-for-elasticsearch

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitor/Pod/jaeger-collector-pod

skipped mutate policy add-safe-to-evict -> resource monitor/Pod/jaeger-collector-pod
policy disallow-latest-tag -> resource monitor/Pod/jaeger-collector-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/
2 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource monitor/Pod/jaeger-collector-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitor/Pod/jaeger-collector-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitor/Pod/jaeger-collector-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitor/Pod/jaeger-collector-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-ro-rootfs -> resource monitor/Pod/jaeger-collector-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource monitor/Pod/jaeger-collector-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jaeger23_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitor/Service/jaeger-query:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger-query
  name: jaeger-query
  namespace: monitor
spec:
  ports:
  - name: ui
    nodePort: 32102
    port: 16686
    protocol: TCP
    targetPort: 16686
  - name: exporter
    port: 16687
    protocol: TCP
    targetPort: 16687
  selector:
    app: jaeger-query
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource monitor/Service/jaeger-query failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger23_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitor/Pod/jaeger-query-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: jaeger-query
  name: jaeger-query-pod
  namespace: monitor
spec:
  containers:
  - args:
    - --es.server-urls=http://elasticsearch:9200
    - --span-storage.type=elasticsearch
    - --log-level=debug
    env:
    - name: SPAN_STORAGE_TYPE
      value: elasticsearch
    image: jaegertracing/jaeger-query:latest
    imagePullPolicy: Always
    livenessProbe:
      httpGet:
        path: /
        port: 16686
      initialDelaySeconds: 120
    name: jaeger-query-cont
    ports:
    - containerPort: 16686
      protocol: TCP
    readinessProbe:
      httpGet:
        path: /
        port: 16686
      initialDelaySeconds: 30
      periodSeconds: 2
  initContainers:
  - command:
    - sh
    - -c
    - until curl http://elasticsearch:9200; do echo Waiting for ES; sleep 2; done;
    image: curlimages/curl
    name: wait-for-elasticsearch

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitor/Pod/jaeger-query-pod

skipped mutate policy add-safe-to-evict -> resource monitor/Pod/jaeger-query-pod
policy disallow-latest-tag -> resource monitor/Pod/jaeger-query-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/
2 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource monitor/Pod/jaeger-query-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource monitor/Pod/jaeger-query-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitor/Pod/jaeger-query-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitor/Pod/jaeger-query-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-ro-rootfs -> resource monitor/Pod/jaeger-query-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource monitor/Pod/jaeger-query-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jaeger27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger27_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger27_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger27_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger28_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger28_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger28_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          value: "9411"
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.20
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger29_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    nodePort: 31001
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/tracing failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger29_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger29_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          value: "9411"
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.20
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger30_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    nodePort: 31001
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource istio-system/Service/tracing failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger30_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger30_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger31_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger31_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger31_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger32_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger32_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger32_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger43_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger43_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger43_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.35
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger44_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger44_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger44_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.58
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger45_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger45_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger45_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.56
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger46_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger46_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger46_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.56
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger47_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger47_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger47_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.29
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger48_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger48_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger48_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${ISTIO_NAMESPACE}/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: ${ISTIO_NAMESPACE}
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.29
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger
policy drop-all-capabilities -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ${ISTIO_NAMESPACE}/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger50_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${ISTIO_NAMESPACE}/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: ${ISTIO_NAMESPACE}
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger50_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${ISTIO_NAMESPACE}/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: ${ISTIO_NAMESPACE}
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger50_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ${ISTIO_NAMESPACE}/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: ${ISTIO_NAMESPACE}
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger51_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger51_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger51_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.56
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger52_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger52_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger52_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.46
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - emptyDir: {}
        name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: jaeger6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger6_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  - name: grpc-otel
    port: 4317
  - name: http-otel
    port: 4318
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/ServiceAccount/jaeger-operator:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: jaeger-operator
  name: jaeger-operator
  namespace: observability

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/manager-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    name: jaeger-operator
  name: manager-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: jaeger-operator
  namespace: observability

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/Service/jaeger-operator-metrics:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics
    name: jaeger-operator
  name: jaeger-operator-metrics
  namespace: observability
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    name: jaeger-operator

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/Service/jaeger-operator-webhook-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: jaeger-operator
  name: jaeger-operator-webhook-service
  namespace: observability
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    name: jaeger-operator

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/Deployment/jaeger-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: jaeger-operator
  name: jaeger-operator
  namespace: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jaeger-operator
  strategy: {}
  template:
    metadata:
      labels:
        name: jaeger-operator
    spec:
      containers:
      - args:
        - start
        - --health-probe-bind-address=:8081
        - --leader-elect
        command:
        - /jaeger-operator
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.targetNamespaces']
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          value: jaeger-operator
        - name: LOG-LEVEL
          value: DEBUG
        - name: KAFKA-PROVISIONING-MINIMAL
          value: "true"
        image: quay.io/jaegertracing/jaeger-operator:1.60.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: jaeger-operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8383/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: jaeger-operator
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: jaeger-operator-service-cert

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource observability/Deployment/jaeger-operator

skipped mutate policy add-safe-to-evict -> resource observability/Deployment/jaeger-operator
policy drop-all-capabilities -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource observability/Deployment/jaeger-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-crds_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/MutatingWebhookConfiguration/jaeger-operator-mutating-webhook-configuration:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: observability/jaeger-operator-serving-cert
  labels:
    name: jaeger-operator
  name: jaeger-operator-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: jaeger-operator-webhook-service
      namespace: observability
      path: /mutate-v1-deployment
  failurePolicy: Ignore
  name: deployment.sidecar-injector.jaegertracing.io
  objectSelector:
    matchExpressions:
    - key: name
      operator: NotIn
      values:
      - jaeger-operator
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - deployments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: jaeger-operator-webhook-service
      namespace: observability
      path: /mutate-jaegertracing-io-v1-jaeger
  failurePolicy: Fail
  name: mjaeger.kb.io
  rules:
  - apiGroups:
    - jaegertracing.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - jaegers
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/jaeger-operator-validating-webhook-configuration:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: observability/jaeger-operator-serving-cert
  labels:
    name: jaeger-operator
  name: jaeger-operator-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: jaeger-operator-webhook-service
      namespace: observability
      path: /validate-jaegertracing-io-v1-jaeger
  failurePolicy: Fail
  name: vjaeger.kb.io
  rules:
  - apiGroups:
    - jaegertracing.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - jaegers
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/Role/leader-election-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    name: jaeger-operator
  name: leader-election-role
  namespace: observability
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/Role/prometheus:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
  labels:
    name: jaeger-operator
  name: prometheus
  namespace: observability
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jaeger-operator-metrics-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    name: jaeger-operator
  name: jaeger-operator-metrics-reader
  namespace: default
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/manager-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    name: jaeger-operator
  name: manager-role
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - console.openshift.io
  resources:
  - consolelinks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jaegertracing.io
  resources:
  - jaegers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jaegertracing.io
  resources:
  - jaegers/finalizers
  verbs:
  - update
- apiGroups:
  - jaegertracing.io
  resources:
  - jaegers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkas
  - kafkausers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - logging.openshift.io
  resources:
  - elasticsearch
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - logging.openshift.io
  resources:
  - elasticsearches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes/custom-host
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/proxy-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    name: jaeger-operator
  name: proxy-role
  namespace: default
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/RoleBinding/leader-election-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    name: jaeger-operator
  name: leader-election-rolebinding
  namespace: observability
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: jaeger-operator
  namespace: observability

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to observability/RoleBinding/prometheus:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
  labels:
    name: jaeger-operator
  name: prometheus
  namespace: observability
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: openshift-monitoring

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-crds_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jaeger-operator-proxy-rolebinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    name: jaeger-operator
  name: jaeger-operator-proxy-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role
subjects:
- kind: ServiceAccount
  name: jaeger-operator
  namespace: observability

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/PersistentVolumeClaim/jaeger-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jaeger-pvc
  namespace: istio-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: /jaeger
        image: docker.io/jaegertracing/all-in-one:1.23
        livenessProbe:
          httpGet:
            path: /
            port: 14269
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /badger
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: jaeger-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger

skipped mutate policy add-safe-to-evict -> resource istio-system/Deployment/jaeger
policy drop-all-capabilities -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource istio-system/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource istio-system/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource istio-system/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/tracing:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: tracing
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 80
    protocol: TCP
    targetPort: 16686
  - name: grpc-query
    port: 16685
    protocol: TCP
    targetPort: 16685
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/zipkin:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
  - name: http-query
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to istio-system/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
  name: jaeger-collector
  namespace: istio-system
spec:
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http-zipkin
    port: 9411
    targetPort: 9411
  selector:
    app: jaeger
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to s-otel-demo/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: s-otel-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      annotations:
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
    spec:
      containers:
      - args:
        - --memory.max-traces=8000
        - --query.base-path=/jaeger/ui
        image: jaegertracing/all-in-one:latest
        name: jaeger
        ports:
        - containerPort: 16686
        - containerPort: 14268
        - containerPort: 16685
        - containerPort: 14250
        - containerPort: 4317
        - containerPort: 4318

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource s-otel-demo/Deployment/jaeger

skipped mutate policy add-safe-to-evict -> resource s-otel-demo/Deployment/jaeger
policy disallow-latest-tag -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource s-otel-demo/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to s-otel-demo/Service/jaeger:
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: s-otel-demo
spec:
  ports:
  - name: http-query
    nodePort: 30012
    port: 16686
    targetPort: 16686
  - name: grpc-query
    port: 16685
    targetPort: 16685
  selector:
    app: jaeger
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource s-otel-demo/Service/jaeger failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to s-otel-demo/Service/jaeger-collector:
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: s-otel-demo
spec:
  ports:
  - name: grpc-http
    port: 14250
    targetPort: 0
  - name: c-tchan-trft
    port: 14267
    targetPort: 0
  - name: http-c-binary-trft
    port: 14268
    targetPort: 0
  - name: otlp-grpc
    port: 4317
    targetPort: 0
  - name: otlp-http
    port: 4318
    targetPort: 0
  selector:
    app: jaeger
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource s-otel-demo/Service/jaeger-collector failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
      - env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        image: jaegertracing/all-in-one:1.42.0
        name: jaeger
        ports:
        - containerPort: 16686

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger
policy disallow-default-namespace -> resource default/Deployment/jaeger failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jaeger failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jaeger failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jaeger:
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: default
spec:
  ports:
  - port: 16686
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jaeger:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: null
  name: jaeger
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      id: jaeger
  template:
    metadata:
      labels:
        id: jaeger
    spec:
      containers:
      - env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        image: dynamic_parameters:dynamic_parameters
        imagePullPolicy: dynamic_parameters
        name: jaeger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jaeger
policy disallow-default-namespace -> resource default/Deployment/jaeger failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jaeger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jaeger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/jaeger failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jaeger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-example.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/hotrod-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hotrod
  name: hotrod-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotrod
  template:
    metadata:
      labels:
        app: hotrod
    spec:
      containers:
      - image: jaegertracing/example-hotrod:latest
        name: hotrod
        ports:
        - containerPort: 8080
          name: port1
      - command:
        - /go/bin/agent-linux
        - --collector.host-port=jaeger-collector.default.svc:14267
        image: jaegertracing/jaeger-agent
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
      - image: karthequian/helloworld:latest
        name: hw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/hotrod-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/hotrod-deployment
policy disallow-default-namespace -> resource default/Deployment/hotrod-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-example_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hotrod-service:
apiVersion: v1
kind: Service
metadata:
  name: hotrod-service
  namespace: default
spec:
  ports:
  - name: hotrod-port
    port: 8080
    protocol: TCP
  selector:
    app: hotrod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/hotrod-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jaeger-example1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/hotrod-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hotrod
  name: hotrod-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotrod
  template:
    metadata:
      labels:
        app: hotrod
    spec:
      containers:
      - image: jaegertracing/example-hotrod:latest
        name: hotrod
        ports:
        - containerPort: 8080
          name: port1
      - command:
        - /go/bin/agent-linux
        - --collector.host-port=jaeger-collector.default.svc:14267
        image: jaegertracing/jaeger-agent
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
      - image: karthequian/helloworld:latest
        name: hw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/hotrod-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/hotrod-deployment
policy disallow-default-namespace -> resource default/Deployment/hotrod-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/hotrod-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: jaeger-example1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hotrod-service:
apiVersion: v1
kind: Service
metadata:
  name: hotrod-service
  namespace: default
spec:
  ports:
  - name: hotrod-port
    port: 8080
    protocol: TCP
  selector:
    app: hotrod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/hotrod-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jane.scr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CertificateSigningRequest/jane:
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: jane
  namespace: default
spec:
  expirationSeconds: 600
  request: dlasjdklKJDSKJksdeKLKELKNZXMNZkhJKLQKLQWOPAXMQSVBLSKADLKDLSAKFKAD32904KS37c
    J90231274KBEHDHN434341khjnJHJHKLKLHJLKHklhklerkjekrjekWEWIOEWMKMWkldskdlWLK
  usages:
  - digital signature
  - key encipherment
  - server auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jasper-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to awsdc-kns-flt-dev-snet/Deployment/jasper:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jasper
  namespace: awsdc-kns-flt-dev-snet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jasper
  template:
    metadata:
      labels:
        app: jasper
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: 172.21.119.67
        - name: DB_USER
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_PASSWORD
          value: postgres
        image: 678121868393.dkr.ecr.ap-northeast-2.amazonaws.com/awsdc-ecr-flt-dev-snet:jasper-server
        name: jasper-testest
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 4000m
            memory: 4Gi
          requests:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - mountPath: /usr/local/share/jasperserver-pro
          name: jasper-license
      volumes:
      - name: jasper-license
        persistentVolumeClaim:
          claimName: awsdc-efs-flt-dev-snet-pvc-jasper
          readOnly: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource awsdc-kns-flt-dev-snet/Deployment/jasper

skipped mutate policy add-safe-to-evict -> resource awsdc-kns-flt-dev-snet/Deployment/jasper
policy drop-all-capabilities -> resource awsdc-kns-flt-dev-snet/Deployment/jasper failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource awsdc-kns-flt-dev-snet/Deployment/jasper failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource awsdc-kns-flt-dev-snet/Deployment/jasper failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource awsdc-kns-flt-dev-snet/Deployment/jasper failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource awsdc-kns-flt-dev-snet/Deployment/jasper failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource awsdc-kns-flt-dev-snet/Deployment/jasper failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jasper-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to awsdc-kns-flt-dev-snet/Service/jasper-service:
apiVersion: v1
kind: Service
metadata:
  name: jasper-service
  namespace: awsdc-kns-flt-dev-snet
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: jasper
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: java_app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/java-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-boot
    service: java-app
  name: java-app
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: java-app
  template:
    metadata:
      labels:
        app: java-app
        network: "true"
        service: java-app
    spec:
      containers:
      - env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DATABASE_PASSWORD
              name: secret-kb-values
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: config-kub-values
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: config-kub-values
        image: <your-image>
        name: java-app
        ports:
        - containerPort: 8080
          hostPort: 0
          protocol: TCP
      initContainers:
      - command:
        - sh
        - -c
        - |-
          until nc -zv java-db 5432; do
            sleep 1
          done
        image: busybox:latest
        name: wait-for-postgres

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-app
policy disallow-default-namespace -> resource default/Deployment/java-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/java-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/java-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/java-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/java-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/java-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/java-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/java-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/java-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: java_app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/java-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-boot
  name: java-app
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: java-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: java_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/javaapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javaapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javaapp
  template:
    metadata:
      labels:
        app: javaapp
        app.newrelic.instrumentation: newrelic-java-agent
    spec:
      containers:
      - image: ghcr.io/open-telemetry/opentelemetry-operator/e2e-test-app-java:main
        name: javaapp
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/javaapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/javaapp
policy disallow-default-namespace -> resource default/Deployment/javaapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/javaapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/javaapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/javaapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/javaapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/javaapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/javaapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/javaapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: java_deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/javaapp-service:
apiVersion: v1
kind: Service
metadata:
  name: javaapp-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: javaapp
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: java-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/java-app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: java-app
  name: java-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: java-app
  template:
    metadata:
      labels:
        app: java-app
    spec:
      containers:
      - env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db_user
              name: db-secret
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              key: db_pwd
              name: db-secret
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: db_name
              name: db-secret
        - name: DB_SERVER
          valueFrom:
            configMapKeyRef:
              key: db_server
              name: db-config
        image: nanatwn/demo-app:mysql-app
        name: javamysqlapp
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: my-registry-key

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-app-deployment
policy disallow-default-namespace -> resource default/Deployment/java-app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/java-app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/java-app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/java-app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/java-app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/java-app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/java-app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/java-app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: java-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/java-app-service:
apiVersion: v1
kind: Service
metadata:
  name: java-app-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: java-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: java-app-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/java-app-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: java-app-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: my-java-app.com
    http:
      paths:
      - backend:
          service:
            name: java-app-service
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: java-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to services/Deployment/java:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: java
  name: java
  namespace: services
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: java
  template:
    metadata:
      labels:
        app.kubernetes.io/name: java
    spec:
      containers:
      - args:
        - "9999999"
        command:
        - /bin/sleep
        image: docker.io/library/openjdk:latest
        imagePullPolicy: Always
        name: java
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: false
      imagePullSecrets:
      - name: docker-io

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource services/Deployment/java

skipped mutate policy add-safe-to-evict -> resource services/Deployment/java
policy disallow-latest-tag -> resource services/Deployment/java failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource services/Deployment/java failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource services/Deployment/java failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource services/Deployment/java failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource services/Deployment/java failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource services/Deployment/java failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: java-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/java-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: java
  name: java-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java
  template:
    metadata:
      labels:
        app: java
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: app-secrets
        image: testify876/microservices-ecommerce-java_service:latest2
        name: java
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
      imagePullSecrets:
      - name: regcred

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-deployment
policy disallow-default-namespace -> resource default/Deployment/java-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/java-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/java-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/java-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/java-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/java-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/java-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/java-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: javaobservabilitypoc-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/javaobservabilitypoc:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javaobservabilitypoc
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javaobservabilitypoc
  template:
    metadata:
      labels:
        app: javaobservabilitypoc
    spec:
      containers:
      - image: javaobservabilitypoc:first
        name: javaobservabilitypoc
        ports:
        - containerPort: 7101

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/javaobservabilitypoc

skipped mutate policy add-safe-to-evict -> resource default/Deployment/javaobservabilitypoc
policy disallow-default-namespace -> resource default/Deployment/javaobservabilitypoc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: javaobservabilitypoc-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/javaobservabilitypoc:
apiVersion: v1
kind: Service
metadata:
  name: javaobservabilitypoc
  namespace: default
spec:
  ports:
  - port: 7101
    protocol: TCP
    targetPort: 7101
  selector:
    app: javaobservabilitypoc
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/javaobservabilitypoc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: javaobservabilitypoc-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/javaobservabilitypoc:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javaobservabilitypoc
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javaobservabilitypoc
  template:
    metadata:
      labels:
        app: javaobservabilitypoc
    spec:
      containers:
      - image: javaobservabilitypoc:first
        name: javaobservabilitypoc
        ports:
        - containerPort: 7101

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/javaobservabilitypoc

skipped mutate policy add-safe-to-evict -> resource default/Deployment/javaobservabilitypoc
policy disallow-default-namespace -> resource default/Deployment/javaobservabilitypoc failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/javaobservabilitypoc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: javaobservabilitypoc-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/javaobservabilitypoc:
apiVersion: v1
kind: Service
metadata:
  name: javaobservabilitypoc
  namespace: default
spec:
  ports:
  - port: 7101
    protocol: TCP
    targetPort: 7101
  selector:
    app: javaobservabilitypoc
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/javaobservabilitypoc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: java-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nd-1/Pod/javapod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-app
  name: javapod
  namespace: nd-1
spec:
  containers:
  - image: 8983795200/java-web-app:1
    name: maven-container
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource nd-1/Pod/javapod

skipped mutate policy add-safe-to-evict -> resource nd-1/Pod/javapod
policy drop-all-capabilities -> resource nd-1/Pod/javapod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource nd-1/Pod/javapod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource nd-1/Pod/javapod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource nd-1/Pod/javapod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource nd-1/Pod/javapod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource nd-1/Pod/javapod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource nd-1/Pod/javapod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: java-pod_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nd-1/Service/java-svc:
apiVersion: v1
kind: Service
metadata:
  name: java-svc
  namespace: nd-1
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: java-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: java-rc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to manjulika/ReplicationController/java-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: java-rc
  namespace: manjulika
spec:
  replicas: 5
  selector:
    app: royal-c
  template:
    metadata:
      labels:
        app: royal-c
      name: java-pod
      namespace: manjulika
    spec:
      containers:
      - image: 8983795200/java-web-app:1
        name: java-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource manjulika/ReplicationController/java-rc

skipped mutate policy add-safe-to-evict -> resource manjulika/ReplicationController/java-rc
policy drop-all-capabilities -> resource manjulika/ReplicationController/java-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource manjulika/ReplicationController/java-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource manjulika/ReplicationController/java-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource manjulika/ReplicationController/java-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource manjulika/ReplicationController/java-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource manjulika/ReplicationController/java-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: java-rc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to manjulika/Service/rc-service:
apiVersion: v1
kind: Service
metadata:
  name: rc-service
  namespace: manjulika
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: royal-c
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource manjulika/Service/rc-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: java-rc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project-2/ReplicationController/java-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: java-rc
  namespace: project-2
spec:
  replicas: 5
  selector:
    app: java
  template:
    metadata:
      labels:
        app: java
      name: java-pod
      namespace: project-2
    spec:
      containers:
      - image: 8983795200/java-web-app:1
        name: java-c
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project-2/ReplicationController/java-rc

skipped mutate policy add-safe-to-evict -> resource project-2/ReplicationController/java-rc
policy drop-all-capabilities -> resource project-2/ReplicationController/java-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project-2/ReplicationController/java-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project-2/ReplicationController/java-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource project-2/ReplicationController/java-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project-2/ReplicationController/java-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project-2/ReplicationController/java-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: java-rc1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project-2/Service/java-np-svc:
apiVersion: v1
kind: Service
metadata:
  name: java-np-svc
  namespace: project-2
spec:
  ports:
  - nodePort: 30032
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: java
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource project-2/Service/java-np-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: java-rs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project-2/ReplicaSet/java-rs:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: java-rs
  namespace: project-2
spec:
  replicas: 3
  selector:
    matchLabel:
      app: java
  template:
    metadata:
      labels:
        app: java
      name: java-pod
      namespace: project-2
    spec:
      containers:
      - image: 8983795200/java-web-app:1
        name: java-c
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource project-2/ReplicaSet/java-rs

skipped mutate policy add-safe-to-evict -> resource project-2/ReplicaSet/java-rs
policy drop-all-capabilities -> resource project-2/ReplicaSet/java-rs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource project-2/ReplicaSet/java-rs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource project-2/ReplicaSet/java-rs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource project-2/ReplicaSet/java-rs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource project-2/ReplicaSet/java-rs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource project-2/ReplicaSet/java-rs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: java-rs_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to project-2/Service/java-np-svc-rs:
apiVersion: v1
kind: Service
metadata:
  name: java-np-svc-rs
  namespace: project-2
spec:
  ports:
  - nodePort: 30032
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: java
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource project-2/Service/java-np-svc-rs failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: java-servcie.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/java-service:
apiVersion: v1
kind: Service
metadata:
  name: java-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: java
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: javaweb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/javaweb:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: javaweb
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - /root/apache-tomcat-7.0.42-v2/bin/start.sh
    image: resouer/mytomcat:7.0
    name: tomcat
    ports:
    - containerPort: 8080
      hostPort: 8001
    volumeMounts:
    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps
      name: app-volume
  initContainers:
  - command:
    - cp
    - /sample.war
    - /app
    image: resouer/sample:v1
    name: war
    volumeMounts:
    - mountPath: /app
      name: app-volume
  volumes:
  - emptyDir: {}
    name: app-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/javaweb
policy disallow-default-namespace -> resource default/Pod/javaweb failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/javaweb failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/javaweb failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/javaweb failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/javaweb failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/javaweb failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/javaweb failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/javaweb failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: javaweb1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/javaweb:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: javaweb
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - /root/apache-tomcat-7.0.42-v2/bin/start.sh
    image: resouer/mytomcat:7.0
    name: tomcat
    ports:
    - containerPort: 8080
      hostPort: 8001
    volumeMounts:
    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps
      name: app-volume
  initContainers:
  - command:
    - cp
    - /sample.war
    - /app
    image: resouer/sample:v1
    name: war
    volumeMounts:
    - mountPath: /app
      name: app-volume
  volumes:
  - emptyDir: {}
    name: app-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/javaweb
policy disallow-default-namespace -> resource default/Pod/javaweb failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/javaweb failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/javaweb failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/javaweb failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/javaweb failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/javaweb failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/javaweb failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/javaweb failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: javaweb2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/javaweb:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: javaweb
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - /root/apache-tomcat-7.0.42-v2/bin/start.sh
    image: resouer/mytomcat:7.0
    name: tomcat
    ports:
    - containerPort: 8080
      hostPort: 8001
    volumeMounts:
    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps
      name: app-volume
  initContainers:
  - command:
    - cp
    - /sample.war
    - /app
    image: resouer/sample:v1
    name: war
    volumeMounts:
    - mountPath: /app
      name: app-volume
  volumes:
  - emptyDir: {}
    name: app-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/javaweb
policy disallow-default-namespace -> resource default/Pod/javaweb failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/javaweb failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/javaweb failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/javaweb failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/javaweb failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/javaweb failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/javaweb failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/javaweb failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: javaweb-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/javaweb-2:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: javaweb-2
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - /root/apache-tomcat-7.0.42-v2/bin/start.sh
    image: resouer/mytomcat:7.0
    name: tomcat
    ports:
    - containerPort: 8080
      hostPort: 8001
    volumeMounts:
    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps
      name: app-volume
  initContainers:
  - command:
    - cp
    - /sample.war
    - /app
    image: resouer/sample:v2
    name: war
    volumeMounts:
    - mountPath: /app
      name: app-volume
  volumes:
  - emptyDir: {}
    name: app-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/javaweb-2
policy disallow-default-namespace -> resource default/Pod/javaweb-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/javaweb-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/javaweb-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/javaweb-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/javaweb-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/javaweb-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/javaweb-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/javaweb-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: javaweb-21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/javaweb-2:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: javaweb-2
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - /root/apache-tomcat-7.0.42-v2/bin/start.sh
    image: resouer/mytomcat:7.0
    name: tomcat
    ports:
    - containerPort: 8080
      hostPort: 8001
    volumeMounts:
    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps
      name: app-volume
  initContainers:
  - command:
    - cp
    - /sample.war
    - /app
    image: resouer/sample:v2
    name: war
    volumeMounts:
    - mountPath: /app
      name: app-volume
  volumes:
  - emptyDir: {}
    name: app-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/javaweb-2
policy disallow-default-namespace -> resource default/Pod/javaweb-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/javaweb-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/javaweb-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/javaweb-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/javaweb-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/javaweb-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/javaweb-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/javaweb-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: javaweb-22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/javaweb-2:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: javaweb-2
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - /root/apache-tomcat-7.0.42-v2/bin/start.sh
    image: resouer/mytomcat:7.0
    name: tomcat
    ports:
    - containerPort: 8080
      hostPort: 8001
    volumeMounts:
    - mountPath: /root/apache-tomcat-7.0.42-v2/webapps
      name: app-volume
  initContainers:
  - command:
    - cp
    - /sample.war
    - /app
    image: resouer/sample:v2
    name: war
    volumeMounts:
    - mountPath: /app
      name: app-volume
  volumes:
  - emptyDir: {}
    name: app-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/javaweb-2
policy disallow-default-namespace -> resource default/Pod/javaweb-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/javaweb-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/javaweb-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/javaweb-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/javaweb-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/javaweb-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/javaweb-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/javaweb-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: javawebapp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-ns/Pod/javawebapppod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: javawebapp
  name: javawebapppod
  namespace: test-ns
spec:
  containers:
  - image: sudipto243/java-web-app:12
    name: javawebappcontainer
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test-ns/Pod/javawebapppod

skipped mutate policy add-safe-to-evict -> resource test-ns/Pod/javawebapppod
policy drop-all-capabilities -> resource test-ns/Pod/javawebapppod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test-ns/Pod/javawebapppod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test-ns/Pod/javawebapppod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource test-ns/Pod/javawebapppod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource test-ns/Pod/javawebapppod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource test-ns/Pod/javawebapppod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource test-ns/Pod/javawebapppod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: javawebapp_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-ns/Service/javawebappsvc:
apiVersion: v1
kind: Service
metadata:
  name: javawebappsvc
  namespace: test-ns
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: javawebapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource test-ns/Service/javawebappsvc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: javawebappconfigfile.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/javawebappdeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: javawebapp
  name: javawebappdeployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: javawebapp
  template:
    metadata:
      labels:
        app: javawebapp
    spec:
      containers:
      - image: nomrajdevops/java-web-app-docker:17
        name: javawebappcontainer
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 300m
            memory: 356Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /usr/local/tomcat/conf/tomcat-users.xml
          name: javawebappvol
          subPath: tomcat-users.xml
      volumes:
      - configMap:
          items:
          - key: tomcat-users.xml
            path: tomcat-users.xml
          name: javawebappconf
        name: javawebappvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/javawebappdeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/javawebappdeployment
policy disallow-default-namespace -> resource default/Deployment/javawebappdeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: javawebappconfigfile_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/javawebappsvc:
apiVersion: v1
kind: Service
metadata:
  name: javawebappsvc
  namespace: default
spec:
  ports:
  - nodePort: 30007
    port: 80
    targetPort: 8080
  selector:
    app: javawebapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/javawebappsvc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: javawebappconfigfile_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/javawebappconf:
apiVersion: v1
data:
  tomcat-users.xml: |
    <?xml version='1.0' encoding='utf-8'?>
    <tomcat-users xmlns="http://tomcat.apache.org/xml"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
              version="1.0">
    <user username="nomraj" password="bujjikanna" roles="admin-gui,manager-gui"/>
    </tomcat-users>
kind: ConfigMap
metadata:
  name: javawebappconf
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: javawebappconfigfile1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/javawebappdeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: javawebapp
  name: javawebappdeployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: javawebapp
  template:
    metadata:
      labels:
        app: javawebapp
    spec:
      containers:
      - image: nomrajdevops/java-web-app-docker:17
        name: javawebappcontainer
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 300m
            memory: 356Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /usr/local/tomcat/conf/tomcat-users.xml
          name: javawebappvol
          subPath: tomcat-users.xml
      volumes:
      - configMap:
          items:
          - key: tomcat-users.xml
            path: tomcat-users.xml
          name: javawebappconf
        name: javawebappvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/javawebappdeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/javawebappdeployment
policy disallow-default-namespace -> resource default/Deployment/javawebappdeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/javawebappdeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: javawebappconfigfile1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/javawebappsvc:
apiVersion: v1
kind: Service
metadata:
  name: javawebappsvc
  namespace: default
spec:
  ports:
  - nodePort: 30007
    port: 80
    targetPort: 8080
  selector:
    app: javawebapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/javawebappsvc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: javawebappconfigfile1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/javawebappconf:
apiVersion: v1
data:
  tomcat-users.xml: |
    <?xml version='1.0' encoding='utf-8'?>
    <tomcat-users xmlns="http://tomcat.apache.org/xml"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
              version="1.0">
    <user username="nomraj" password="bujjikanna" roles="admin-gui,manager-gui"/>
    </tomcat-users>
kind: ConfigMap
metadata:
  name: javawebappconf
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jbarbier-webtop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jbarbier-webtop
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jbarbier-webtop
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jbarbier-webtop
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        envFrom:
        - secretRef:
            name: jbarbier-webtop-secrets
        image: ghcr.io/ai-cfia/webtop-ubuntu-kde:main
        name: webtop
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --host=tcp://0.0.0.0:2375
        - --tls=false
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:dind
        name: docker-dind
        ports:
        - containerPort: 2375
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jbarbier-webtop-config-pvc
      - emptyDir: {}
        name: docker-graph-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jbarbier-webtop
policy disallow-default-namespace -> resource default/Deployment/jbarbier-webtop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jbarbier-webtop-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jbarbier-webtop-service:
apiVersion: v1
kind: Service
metadata:
  name: jbarbier-webtop-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: jbarbier-webtop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jbarbier-webtop-config-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jbarbier-webtop-config-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jbarbier-webtop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jbarbier-webtop
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jbarbier-webtop
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jbarbier-webtop
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        envFrom:
        - secretRef:
            name: jbarbier-webtop-secrets
        image: ghcr.io/ai-cfia/webtop-ubuntu-kde:main
        name: webtop
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --host=tcp://0.0.0.0:2375
        - --tls=false
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:dind
        name: docker-dind
        ports:
        - containerPort: 2375
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jbarbier-webtop-config-pvc
      - emptyDir: {}
        name: docker-graph-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jbarbier-webtop
policy disallow-default-namespace -> resource default/Deployment/jbarbier-webtop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jbarbier-webtop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jbarbier-webtop-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jbarbier-webtop-service:
apiVersion: v1
kind: Service
metadata:
  name: jbarbier-webtop-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: jbarbier-webtop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jbarbier-webtop-config-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jbarbier-webtop-config-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jbarbier-webtop-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: jbarbier-webtop-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: jbarbier-webtop.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: jbarbier-webtop-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jbarbier-webtop.inspection.alpha.canada.ca
    secretName: jbarbier-webtop-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jbarbier-webtop-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: jbarbier-webtop-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: jbarbier-webtop.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: jbarbier-webtop-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jbarbier-webtop.inspection.alpha.canada.ca
    secretName: jbarbier-webtop-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/jbarbier-webtop-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/webtop/test
    avp.kubernetes.io/secret-version: "1"
  name: jbarbier-webtop-secrets
  namespace: default
stringData:
  CUSTOM_USER: <CUSTOM_USER>
  PASSWORD: <PASSWORD>
  PGID: <PGID>
  PUID: <PUID>
  TITLE: <TITLE>
  TZ: <TZ>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jbarbier-webtop-secrets1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/jbarbier-webtop-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/webtop/test
    avp.kubernetes.io/secret-version: "1"
  name: jbarbier-webtop-secrets
  namespace: default
stringData:
  CUSTOM_USER: <CUSTOM_USER>
  PASSWORD: <PASSWORD>
  PGID: <PGID>
  PUID: <PUID>
  TITLE: <TITLE>
  TZ: <TZ>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-node-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Service/jekyll:
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  ports:
  - nodePort: 30097
    port: 8080
    targetPort: 4000
  selector:
    run: jekyll
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource development/Service/jekyll failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-node-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Service/jekyll:
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  ports:
  - nodePort: 30097
    port: 8080
    targetPort: 4000
  selector:
    run: jekyll
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource development/Service/jekyll failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-node-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Service/jekyll:
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  ports:
  - nodePort: 30097
    port: 8080
    targetPort: 4000
  selector:
    run: jekyll
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource development/Service/jekyll failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-node-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Service/jekyll:
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  ports:
  - nodePort: 30097
    port: 8080
    targetPort: 4000
  selector:
    run: jekyll
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource development/Service/jekyll failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Pod/jekyll:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jekyll
  name: jekyll
  namespace: development
spec:
  containers:
  - image: kodekloud/jekyll-serve
    name: jekyll
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - command:
    - jekyll
    - new
    - /site
    image: kodekloud/jekyll
    name: copy-jekyll-site
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll

skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll
policy disallow-latest-tag -> resource development/Pod/jekyll failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Pod/jekyll failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Pod/jekyll failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Pod/jekyll failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Pod/jekyll failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource development/Pod/jekyll failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Pod/jekyll failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Pod/jekyll failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jekyll-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Pod/jekyll:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jekyll
  name: jekyll
  namespace: development
spec:
  containers:
  - image: kodekloud/jekyll-serve
    name: jekyll
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - command:
    - jekyll
    - new
    - /site
    image: kodekloud/jekyll
    name: copy-jekyll-site
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll

skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll
policy disallow-latest-tag -> resource development/Pod/jekyll failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Pod/jekyll failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Pod/jekyll failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Pod/jekyll failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Pod/jekyll failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource development/Pod/jekyll failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Pod/jekyll failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Pod/jekyll failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jekyll-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Pod/jekyll:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jekyll
  name: jekyll
  namespace: development
spec:
  containers:
  - image: kodekloud/jekyll-serve
    name: jekyll
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - command:
    - jekyll
    - new
    - /site
    image: kodekloud/jekyll
    name: copy-jekyll-site
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll

skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll
policy disallow-latest-tag -> resource development/Pod/jekyll failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Pod/jekyll failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Pod/jekyll failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Pod/jekyll failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Pod/jekyll failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource development/Pod/jekyll failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Pod/jekyll failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Pod/jekyll failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jekyll-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Pod/jekyll:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jekyll
  name: jekyll
  namespace: development
spec:
  containers:
  - image: kodekloud/jekyll-serve
    name: jekyll
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - command:
    - jekyll
    - new
    - /site
    image: kodekloud/jekyll
    name: copy-jekyll-site
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll

skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll
policy disallow-latest-tag -> resource development/Pod/jekyll failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Pod/jekyll failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Pod/jekyll failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Pod/jekyll failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Pod/jekyll failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource development/Pod/jekyll failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Pod/jekyll failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Pod/jekyll failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jekyll-pod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Pod/jekyll:
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jekyll
  name: jekyll
  namespace: development
spec:
  containers:
  - image: kodekloud/jekyll-serve
    name: jekyll
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - command:
    - jekyll
    - new
    - /site
    image: kodekloud/jekyll
    name: copy-jekyll-site
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll

skipped mutate policy add-safe-to-evict -> resource development/Pod/jekyll
policy disallow-latest-tag -> resource development/Pod/jekyll failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Pod/jekyll failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Pod/jekyll failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Pod/jekyll failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Pod/jekyll failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource development/Pod/jekyll failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource development/Pod/jekyll failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Pod/jekyll failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jekyll-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/PersistentVolumeClaim/jekyll-site:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/PersistentVolumeClaim/jekyll-site:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/PersistentVolumeClaim/jekyll-site:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/PersistentVolumeClaim/jekyll-site:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jekyll-pvc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/PersistentVolumeClaim/jekyll-site:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin.deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/PersistentVolumeClaim/jellyfin-media:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-media
  namespace: jellyfin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin.deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/PersistentVolumeClaim/jellyfin-config:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  namespace: jellyfin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin.deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/Deployment/jellyfin:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - image: jellyfin/jellyfin:10.8.13
        name: jellyfin
        ports:
        - containerPort: 8096
        volumeMounts:
        - mountPath: /media
          name: jellyfin-media
        - mountPath: /config
          name: jellyfin-config
      dnsConfig:
        nameservers:
        - 8.8.8.8
        - 8.8.4.4
      volumes:
      - name: jellyfin-media
        persistentVolumeClaim:
          claimName: jellyfin-media
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jellyfin/Deployment/jellyfin

skipped mutate policy add-safe-to-evict -> resource jellyfin/Deployment/jellyfin
policy drop-all-capabilities -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin.service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/Service/jellyfin-service:
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: jellyfin
spec:
  ports:
  - name: jellyfin-service
    port: 8096
    protocol: TCP
    targetPort: 8096
  selector:
    app: jellyfin
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource jellyfin/Service/jellyfin-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-nfs-jellyfin-media:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-nfs-jellyfin-media
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 500Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: nfs
    readOnly: false
    volumeAttributes:
      node_attach_driver: nfs
      provisioner_driver: node-manual
      server: truenas-master.lan.stamx.nl
      share: /mnt/hdd/containers/k8s/plex-media
    volumeHandle: pv-nfs-jellyfin-media
  mountOptions:
  - nfsvers=4
  - nolock
  - noatime
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-nfs-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-nfs-jellyfin-music:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-nfs-jellyfin-music
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Ti
  csi:
    driver: org.democratic-csi.node-manual
    fsType: nfs
    readOnly: false
    volumeAttributes:
      node_attach_driver: nfs
      provisioner_driver: node-manual
      server: truenas-master.lan.stamx.nl
      share: /mnt/hdd/music
    volumeHandle: pv-nfs-jellyfin-music
  mountOptions:
  - nfsvers=4
  - nolock
  - noatime
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-nfs-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jellyfin:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
  labels:
    app: jellyfin
  name: jellyfin
  namespace: default
spec:
  ingressClassName: nginx-private
  rules:
  - host: jellyfin.lan.stamx.nl
    http:
      paths:
      - backend:
          service:
            name: jellyfin-service
            port:
              name: http
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-iscsi-jellyfin-config:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-iscsi-jellyfin-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 5Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: xfs
    readOnly: false
    volumeAttributes:
      iqn: iqn.2005-10.org.freenas.ctl:jellyfin-config
      lun: "0"
      node_attach_driver: iscsi
      portal: truenas-master.lan.stamx.nl:3260
      provisioner_driver: node-manual
    volumeHandle: pv-iscsi-jellyfin-config
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-iscsi-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-iscsi-jellyfin-cache:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-iscsi-jellyfin-cache
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: xfs
    readOnly: false
    volumeAttributes:
      iqn: iqn.2005-10.org.freenas.ctl:jellyfin-cache
      lun: "0"
      node_attach_driver: iscsi
      portal: truenas-master.lan.stamx.nl:3260
      provisioner_driver: node-manual
    volumeHandle: pv-iscsi-jellyfin-cache
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-iscsi-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-nfs-jellyfin-media:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-nfs-jellyfin-media
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
  storageClassName: freenas-nfs-manual-csi
  volumeName: pv-nfs-jellyfin-media

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-nfs-jellyfin-music:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-nfs-jellyfin-music
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  storageClassName: freenas-nfs-manual-csi
  volumeName: pv-nfs-jellyfin-music

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-iscsi-jellyfin-config:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-iscsi-jellyfin-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: freenas-iscsi-manual-csi
  volumeName: pv-iscsi-jellyfin-config

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-iscsi-jellyfin-cache:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-iscsi-jellyfin-cache
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: freenas-iscsi-manual-csi
  volumeName: pv-iscsi-jellyfin-cache

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jellyfin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - image: docker.io/jellyfin/jellyfin:10
        name: jellyfin
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        - containerPort: 8920
          name: https
          protocol: TCP
        - containerPort: 1900
          name: svc-discovery
          protocol: UDP
        - containerPort: 7359
          name: cl-discovery
          protocol: UDP
        resources: {}
        volumeMounts:
        - mountPath: /media
          name: media
        - mountPath: /music/organized
          name: music
          subPath: organized
        - mountPath: /config
          name: config
        - mountPath: /cache
          name: cache
      restartPolicy: Always
      securityContext:
        fsGroup: 2000
        runAsGroup: 2000
        runAsUser: 1000
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: pvc-nfs-jellyfin-media
      - name: music
        persistentVolumeClaim:
          claimName: pvc-nfs-jellyfin-music
      - name: config
        persistentVolumeClaim:
          claimName: pvc-iscsi-jellyfin-config
      - name: cache
        persistentVolumeClaim:
          claimName: pvc-iscsi-jellyfin-cache

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyfin

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyfin
policy disallow-default-namespace -> resource default/Deployment/jellyfin failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jellyfin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyfin-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
  name: jellyfin-service
  namespace: default
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 10.0.100.241
  ports:
  - name: http
    port: 8096
    protocol: TCP
    targetPort: http
  - name: https
    port: 8920
    protocol: TCP
    targetPort: https
  - name: svc-discovery
    port: 1900
    protocol: UDP
    targetPort: svc-discovery
  - name: cl-discovery
    port: 7359
    protocol: UDP
    targetPort: cl-discovery
  selector:
    app: jellyfin
  sessionAffinity: None
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-nfs-jellyfin-media:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-nfs-jellyfin-media
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 500Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: nfs
    readOnly: false
    volumeAttributes:
      node_attach_driver: nfs
      provisioner_driver: node-manual
      server: truenas-master.lan.stamx.nl
      share: /mnt/hdd/containers/k8s/plex-media
    volumeHandle: pv-nfs-jellyfin-media
  mountOptions:
  - nfsvers=4
  - nolock
  - noatime
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-nfs-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-nfs-jellyfin-music:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-nfs-jellyfin-music
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Ti
  csi:
    driver: org.democratic-csi.node-manual
    fsType: nfs
    readOnly: false
    volumeAttributes:
      node_attach_driver: nfs
      provisioner_driver: node-manual
      server: truenas-master.lan.stamx.nl
      share: /mnt/hdd/music
    volumeHandle: pv-nfs-jellyfin-music
  mountOptions:
  - nfsvers=4
  - nolock
  - noatime
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-nfs-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jellyfin:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
  labels:
    app: jellyfin
  name: jellyfin
  namespace: default
spec:
  ingressClassName: nginx-private
  rules:
  - host: jellyfin.lan.stamx.nl
    http:
      paths:
      - backend:
          service:
            name: jellyfin-service
            port:
              name: http
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-iscsi-jellyfin-config:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-iscsi-jellyfin-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 5Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: xfs
    readOnly: false
    volumeAttributes:
      iqn: iqn.2005-10.org.freenas.ctl:jellyfin-config
      lun: "0"
      node_attach_driver: iscsi
      portal: truenas-master.lan.stamx.nl:3260
      provisioner_driver: node-manual
    volumeHandle: pv-iscsi-jellyfin-config
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-iscsi-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-iscsi-jellyfin-cache:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyfin
  name: pv-iscsi-jellyfin-cache
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: xfs
    readOnly: false
    volumeAttributes:
      iqn: iqn.2005-10.org.freenas.ctl:jellyfin-cache
      lun: "0"
      node_attach_driver: iscsi
      portal: truenas-master.lan.stamx.nl:3260
      provisioner_driver: node-manual
    volumeHandle: pv-iscsi-jellyfin-cache
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-iscsi-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-nfs-jellyfin-media:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-nfs-jellyfin-media
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
  storageClassName: freenas-nfs-manual-csi
  volumeName: pv-nfs-jellyfin-media

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-nfs-jellyfin-music:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-nfs-jellyfin-music
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  storageClassName: freenas-nfs-manual-csi
  volumeName: pv-nfs-jellyfin-music

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-iscsi-jellyfin-config:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-iscsi-jellyfin-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: freenas-iscsi-manual-csi
  volumeName: pv-iscsi-jellyfin-config

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-iscsi-jellyfin-cache:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: pvc-iscsi-jellyfin-cache
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: freenas-iscsi-manual-csi
  volumeName: pv-iscsi-jellyfin-cache

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jellyfin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - image: docker.io/jellyfin/jellyfin:10
        name: jellyfin
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        - containerPort: 8920
          name: https
          protocol: TCP
        - containerPort: 1900
          name: svc-discovery
          protocol: UDP
        - containerPort: 7359
          name: cl-discovery
          protocol: UDP
        resources: {}
        volumeMounts:
        - mountPath: /media
          name: media
        - mountPath: /music/organized
          name: music
          subPath: organized
        - mountPath: /config
          name: config
        - mountPath: /cache
          name: cache
      restartPolicy: Always
      securityContext:
        fsGroup: 2000
        runAsGroup: 2000
        runAsUser: 1000
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: pvc-nfs-jellyfin-media
      - name: music
        persistentVolumeClaim:
          claimName: pvc-nfs-jellyfin-music
      - name: config
        persistentVolumeClaim:
          claimName: pvc-iscsi-jellyfin-config
      - name: cache
        persistentVolumeClaim:
          claimName: pvc-iscsi-jellyfin-cache

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyfin

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyfin
policy disallow-default-namespace -> resource default/Deployment/jellyfin failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jellyfin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin1_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyfin-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
  name: jellyfin-service
  namespace: default
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 10.0.100.241
  ports:
  - name: http
    port: 8096
    protocol: TCP
    targetPort: http
  - name: https
    port: 8920
    protocol: TCP
    targetPort: https
  - name: svc-discovery
    port: 1900
    protocol: UDP
    targetPort: svc-discovery
  - name: cl-discovery
    port: 7359
    protocol: UDP
    targetPort: cl-discovery
  selector:
    app: jellyfin
  sessionAffinity: None
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/Deployment/jellyfin:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - env:
        - name: JELLYFIN_PublishedServerUrl
          value: https://tv.prayujt.com
        image: jellyfin/jellyfin
        name: jellyfin
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /cache
          name: cache
        - mountPath: /media
          name: media
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config
      - name: cache
        persistentVolumeClaim:
          claimName: jellyfin-cache
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jellyfin/Deployment/jellyfin

skipped mutate policy add-safe-to-evict -> resource jellyfin/Deployment/jellyfin
policy disallow-latest-tag -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/Service/jellyfin:
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  ports:
  - port: 8096
    protocol: TCP
    targetPort: 8096
  selector:
    app: jellyfin
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyfin:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: web-ui
  selector:
    app: jellyfin

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/jellyfin:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  serviceName: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - image: jellyfin/jellyfin:10.10.6
        name: jellyfin
        ports:
        - containerPort: 8096
          name: web-ui
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: data
        - mountPath: /media/tv
          name: tv
        - mountPath: /media/movies
          name: movies
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      volumes:
      - name: tv
        persistentVolumeClaim:
          claimName: pvc-jellyfin-tv
      - name: movies
        persistentVolumeClaim:
          claimName: pvc-jellyfin-movies
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: jellyfin
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 16Gi
      storageClassName: freenas-api-iscsi-csi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/jellyfin

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/jellyfin
policy disallow-default-namespace -> resource default/StatefulSet/jellyfin failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/jellyfin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/Deployment/jellyfin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/name: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
        app.kubernetes.io/name: jellyfin
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/London
        image: jellyfin/jellyfin
        imagePullPolicy: Always
        name: jellyfin
        ports:
        - containerPort: 8096
          name: web
          protocol: TCP
        resources:
          limits:
            gpu.intel.com/i915: "1"
        volumeMounts:
        - mountPath: /config
          name: jellyfin
          subPath: config
        - mountPath: /cache
          name: jellyfin
          subPath: cache
      nodeSelector:
        worker: "true"
      volumes:
      - name: jellyfin
        persistentVolumeClaim:
          claimName: jellyfin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jellyfin/Deployment/jellyfin

skipped mutate policy add-safe-to-evict -> resource jellyfin/Deployment/jellyfin
policy disallow-latest-tag -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jellyfin/Deployment/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jellyfin/Service/jellyfin:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  ports:
  - name: web-tcp
    port: 8096
    protocol: TCP
    targetPort: 8096
  - name: web-udp
    port: 8096
    protocol: UDP
    targetPort: 8096
  selector:
    app: jellyfin

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jellyfin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: jellyfin
  name: jellyfin
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Los_Angeles
        - name: PUID
          value: "1024"
        - name: PGID
          value: "100"
        image: linuxserver/jellyfin:10.10.3
        name: jellfyin
        ports:
        - containerPort: 8096
          name: http-tcp
          protocol: TCP
        - containerPort: 8920
          name: https-tcp
          protocol: TCP
        - containerPort: 1900
          name: dlna-udp
          protocol: UDP
        - containerPort: 7359
          name: discovery-udp
          protocol: UDP
        volumeMounts:
        - mountPath: /config
          name: jellyfin-config
        - mountPath: /cache
          name: jellyfin-cache
        - mountPath: /data
          name: jellyfin-data
      restartPolicy: Always
      volumes:
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config-claim
      - name: jellyfin-cache
        persistentVolumeClaim:
          claimName: jellyfin-cache-claim
      - name: jellyfin-data
        persistentVolumeClaim:
          claimName: nfs-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyfin

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyfin
policy disallow-default-namespace -> resource default/Deployment/jellyfin failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jellyfin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jellyfin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jellyfin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jellyfin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyfin:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: jellyfin
  name: jellyfin
  namespace: default
spec:
  ports:
  - name: jellyfin-http
    port: 80
    protocol: TCP
    targetPort: http-tcp
  - name: jellyfin-https
    port: 443
    protocol: TCP
    targetPort: https-tcp
  selector:
    app: jellyfin
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jellyfin failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jellyfin-cache-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: longhorn

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jellyfin-config-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: longhorn

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/PersistentVolumeClaim/jellyfin-config-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-claim
  namespace: tools
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      disk: c
      type: usb-drive
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/PersistentVolumeClaim/jellyfin-cache-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache-claim
  namespace: tools
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  selector:
    matchLabels:
      disk: c
      type: usb-drive
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/PersistentVolumeClaim/jellyfin-media-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-media-claim
  namespace: tools
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 414Gi
  selector:
    matchLabels:
      disk: c
      type: usb-drive
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin7_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/Deployment/jellyfin-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin-deployment
  namespace: tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin-app
  template:
    metadata:
      labels:
        app: jellyfin-app
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disktype
                operator: In
                values:
                - hdd
      containers:
      - image: jellyfin/jellyfin
        name: jellyfin-container
        ports:
        - containerPort: 8096
          name: http-server
        volumeMounts:
        - mountPath: /config
          name: jellyfin-config-storage
        - mountPath: /cache
          name: jellyfin-cache-storage
        - mountPath: /media
          name: jellyfin-media-storage
      dnsPolicy: ClusterFirst
      volumes:
      - name: jellyfin-config-storage
        persistentVolumeClaim:
          claimName: jellyfin-config-claim
      - name: jellyfin-cache-storage
        persistentVolumeClaim:
          claimName: jellyfin-cache-claim
      - name: jellyfin-media-storage
        persistentVolumeClaim:
          claimName: jellyfin-media-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource tools/Deployment/jellyfin-deployment

skipped mutate policy add-safe-to-evict -> resource tools/Deployment/jellyfin-deployment
policy disallow-latest-tag -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource tools/Deployment/jellyfin-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jellyfin7_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tools/Service/jellyfin-service:
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: tools
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http-default
    port: 80
    protocol: TCP
    targetPort: 8096
  selector:
    app: jellyfin-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin-ingress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to public/Secret/jellyfin-conn-info:
apiVersion: v1
data:
  password: Q3JlbWUwLUNob3AtTHVja2luZXNz
  username: amVsbHlmaW4=
kind: Secret
metadata:
  name: jellyfin-conn-info
  namespace: public
type: kubernetes.io/basic-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyfin-ingress1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to public/Service/jellyfin:
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: public
spec:
  externalName: orange.rainbow.tuckerthomas.com
  ports:
  - port: 8096
    protocol: TCP
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-iscsi-jellyseerr-config:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyseerr
  name: pv-iscsi-jellyseerr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 5Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: xfs
    readOnly: false
    volumeAttributes:
      iqn: iqn.2005-10.org.freenas.ctl:jellyseerr-config
      lun: "0"
      node_attach_driver: iscsi
      portal: truenas-master.lan.stamx.nl:3260
      provisioner_driver: node-manual
    volumeHandle: pv-iscsi-jellyseerr-config
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-iscsi-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-iscsi-jellyseerr-config:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyseerr
  name: pvc-iscsi-jellyseerr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: freenas-iscsi-manual-csi
  volumeName: pv-iscsi-jellyseerr-config

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jellyseerr:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyseerr
  name: jellyseerr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyseerr
  template:
    metadata:
      labels:
        app: jellyseerr
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: info
        - name: TZ
          value: Europe/Amsterdam
        - name: PORT
          value: "5055"
        image: fallenbagel/jellyseerr:latest
        name: jellyseerr
        ports:
        - containerPort: 5055
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /app/config
          name: config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pvc-iscsi-jellyseerr-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyseerr

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyseerr
policy disallow-default-namespace -> resource default/Deployment/jellyseerr failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jellyseerr failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jellyseer_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyseerr-service:
apiVersion: v1
kind: Service
metadata:
  name: jellyseerr-service
  namespace: default
spec:
  ports:
  - name: http
    port: 5055
    protocol: TCP
    targetPort: http
  selector:
    app: jellyseerr
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jellyseerr:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: jellyseerr
  name: jellyseerr
  namespace: default
spec:
  ingressClassName: nginx-private
  rules:
  - host: jellyseerr.lan.stamx.nl
    http:
      paths:
      - backend:
          service:
            name: jellyseerr-service
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jellyseerr.lan.stamx.nl
    secretName: tls-wildcard-lan-stamx-nl

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-iscsi-jellyseerr-config:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: jellyseerr
  name: pv-iscsi-jellyseerr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 5Gi
  csi:
    driver: org.democratic-csi.node-manual
    fsType: xfs
    readOnly: false
    volumeAttributes:
      iqn: iqn.2005-10.org.freenas.ctl:jellyseerr-config
      lun: "0"
      node_attach_driver: iscsi
      portal: truenas-master.lan.stamx.nl:3260
      provisioner_driver: node-manual
    volumeHandle: pv-iscsi-jellyseerr-config
  persistentVolumeReclaimPolicy: Retain
  storageClassName: freenas-iscsi-manual-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-iscsi-jellyseerr-config:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyseerr
  name: pvc-iscsi-jellyseerr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: freenas-iscsi-manual-csi
  volumeName: pv-iscsi-jellyseerr-config

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jellyseerr:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyseerr
  name: jellyseerr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyseerr
  template:
    metadata:
      labels:
        app: jellyseerr
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: info
        - name: TZ
          value: Europe/Amsterdam
        - name: PORT
          value: "5055"
        image: fallenbagel/jellyseerr:latest
        name: jellyseerr
        ports:
        - containerPort: 5055
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /app/config
          name: config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pvc-iscsi-jellyseerr-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyseerr

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyseerr
policy disallow-default-namespace -> resource default/Deployment/jellyseerr failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jellyseerr failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jellyseer1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyseerr-service:
apiVersion: v1
kind: Service
metadata:
  name: jellyseerr-service
  namespace: default
spec:
  ports:
  - name: http
    port: 5055
    protocol: TCP
    targetPort: http
  selector:
    app: jellyseerr
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseer1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jellyseerr:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: jellyseerr
  name: jellyseerr
  namespace: default
spec:
  ingressClassName: nginx-private
  rules:
  - host: jellyseerr.lan.stamx.nl
    http:
      paths:
      - backend:
          service:
            name: jellyseerr-service
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jellyseerr.lan.stamx.nl
    secretName: tls-wildcard-lan-stamx-nl

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseerr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jellyseerr:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: jellyseerr
  name: jellyseerr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyseerr
  template:
    metadata:
      labels:
        app: jellyseerr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Los_Angeles
        - name: PUID
          value: "1024"
        - name: PGID
          value: "100"
        - name: LOG_LEVEL
          value: DEBUG
        image: fallenbagel/jellyseerr
        name: jellfyin
        ports:
        - containerPort: 5055
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /app/config
          name: jellyseerr-config
      volumes:
      - name: jellyseerr-config
        persistentVolumeClaim:
          claimName: jellyseerr-config-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyseerr

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jellyseerr
policy disallow-default-namespace -> resource default/Deployment/jellyseerr failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jellyseerr failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jellyseerr failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jellyseerr failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jellyseerr2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jellyseerr:
apiVersion: v1
kind: Service
metadata:
  name: jellyseerr
  namespace: default
spec:
  ports:
  - name: jellyseerr-http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: jellyseerr
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jellyseerr failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jellyseerr3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jellyseerr-config:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyseerr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  nfs:
    path: /volume1/Media/Lab/jellyseerr/
    readOnly: false
    server: hesiod.lab.janissary.xyz
  storageClassName: nfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jellyseerr3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jellyseerr-config-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyseerr-config-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs
  volumeName: jellyseerr-config

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        image: jenkins/jenkins:2.235.1-lts-alpine
        imagePullPolicy: IfNotPresent
        name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      serviceAccountName: jenkins
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins
        persistentVolumeClaim:
          claimName: jenkins-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins.deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        image: jenkins/jenkins:2.235.1-lts-alpine
        imagePullPolicy: IfNotPresent
        name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      serviceAccountName: jenkins
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins
        persistentVolumeClaim:
          claimName: jenkins-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins.pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 5Gi
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-92b853aa
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.pv3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 5Gi
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-92b853aa
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: efs-sc

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: efs-sc

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.rbac_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.rbac1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.rbac1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.rbac1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  ports:
  - name: ui
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: slave
    port: 50000
    protocol: TCP
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins.service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  ports:
  - name: ui
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: slave
    port: 50000
    protocol: TCP
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
          hostPort: 8092
          name: ui-port
        - containerPort: 50000
          name: agent-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: dubareddy/jenkins-master:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: http-port
        - containerPort: 50000
          name: jnlp-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8090
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
          hostPort: 8092
          name: ui-port
        - containerPort: 50000
          name: agent-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: dubareddy/jenkins-master:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: http-port
        - containerPort: 50000
          name: jnlp-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8090
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
          hostPort: 8092
          name: ui-port
        - containerPort: 50000
          name: agent-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: dubareddy/jenkins-master:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: http-port
        - containerPort: 50000
          name: jnlp-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8090
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: ui-port
        - containerPort: 50000
          name: agent-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - name: ui-port
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: dubareddy/jenkins-master:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: http-port
        - containerPort: 50000
          name: jnlp-port
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - hostPath:
          path: /mnt/jenkins_home
          type: DirectoryOrCreate
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins_deployment7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8090
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_sc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/goal-jenkins-sc:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    for: mongodb
  name: goal-jenkins-sc
  namespace: default
parameters:
  directoryPerms: "755"
  fileSystemId: null
  gid: "1000"
  provisioningMode: efs-ap
  uid: "1000"
provisioner: efs.csi.aws.com
reclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins_sc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/goal-jenkins-sc:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    for: mongodb
  name: goal-jenkins-sc
  namespace: default
parameters:
  directoryPerms: "755"
  fileSystemId: null
  gid: "1000"
  provisioningMode: efs-ap
  uid: "1000"
provisioner: efs.csi.aws.com
reclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: jenkins
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: kiamol/ch11-jenkins
        name: jenkins
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - mountPath: /root/.docker
          name: registry-creds
          readOnly: true
      serviceAccountName: jenkins
      volumes:
      - name: registry-creds
        secret:
          defaultMode: 256
          items:
          - key: .dockerconfigjson
            path: config.json
          secretName: registry-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log"
  verbs:
  - get"
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: infra
spec:
  ports:
  - nodePort: 30007
    port: 8080
    targetPort: jenkins
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource infra/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: infra
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: build-config
        image: kiamol/ch11-jenkins:2.319.1
        name: jenkins
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - mountPath: /data/init.groovy.d
          name: scripts
        - mountPath: /root/.docker
          name: registry-creds
          readOnly: true
      serviceAccountName: jenkins
      volumes:
      - configMap:
          name: jenkins-setup
        name: scripts
      - name: registry-creds
        secret:
          defaultMode: 256
          items:
          - key: .dockerconfigjson
            path: config.json
          secretName: registry-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource infra/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource infra/Deployment/jenkins
policy drop-all-capabilities -> resource infra/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource infra/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource infra/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins10_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: infra

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins10_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log"
  verbs:
  - get"
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - configmaps
  - namespaces
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins10_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: infra

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins10_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/ConfigMap/jenkins-setup:
apiVersion: v1
data:
  admin.groovy: |-
    #!groovy

    import jenkins.install.*;
    import jenkins.model.*
    import jenkins.security.s2m.AdminWhitelistRule
    import hudson.security.*
    import hudson.util.*;

    def instance = Jenkins.getInstance()

    def username = "kiamol"
    def password = "kiamol"

    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount(username, password)
    instance.setSecurityRealm(hudsonRealm)

    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    instance.setAuthorizationStrategy(strategy)
    instance.setInstallState(InstallState.INITIAL_SETUP_COMPLETED)
    instance.save()

    Jenkins.instance.getInjector().getInstance(AdminWhitelistRule.class).setMasterKillSwitch(false)
  install-plugins.groovy: |-
    #!groovy

    import jenkins.model.Jenkins;

    pm = Jenkins.instance.pluginManager
    uc = Jenkins.instance.updateCenter

    pm.doCheckUpdatesServer()

    ["git", "workflow-aggregator"].each {
        if (! pm.getPlugin(it)) {
        deployment = uc.getPlugin(it).deploy(true)
        deployment.get()
        }
    }
  pipelines.groovy: |-
    import jenkins.*
    import jenkins.model.*
    import hudson.*
    import hudson.model.*

    import hudson.plugins.git.*;
    import hudson.triggers.SCMTrigger;
    import org.jenkinsci.plugins.workflow.job.WorkflowJob;
    import org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition;

    def gitUser = "kiamol"
    def gitRepo = "kiamol"
    def gitUrl = "http://gogs:3000/kiamol/kiamol.git"

    def jenkins = Jenkins.instance;

    def scm = new GitSCM(gitUrl)
    scm.branches = [new BranchSpec("*/main")];
    def workflowJob = new WorkflowJob(jenkins, "widgetario");
    workflowJob.definition = new CpsScmFlowDefinition(scm, "hackathon/project/Jenkinsfile");
    def gitTrigger = new SCMTrigger("* * * * *");
    workflowJob.addTrigger(gitTrigger);
    workflowJob.disabled = true;
    workflowJob.save();

    jenkins.reload()
kind: ConfigMap
metadata:
  name: jenkins-setup
  namespace: infra

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: infra
spec:
  ports:
  - nodePort: 30008
    port: 8080
    targetPort: jenkins
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource infra/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: infra
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: build-config
        image: kiamol/ch11-jenkins:2.319.1
        name: jenkins
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - mountPath: /data/init.groovy.d
          name: scripts
        - mountPath: /root/.docker
          name: registry-creds
          readOnly: true
      serviceAccountName: jenkins
      volumes:
      - configMap:
          name: jenkins-setup
        name: scripts
      - name: registry-creds
        secret:
          defaultMode: 256
          items:
          - key: .dockerconfigjson
            path: config.json
          secretName: registry-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource infra/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource infra/Deployment/jenkins
policy drop-all-capabilities -> resource infra/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource infra/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource infra/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource infra/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: infra

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins11_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log"
  verbs:
  - get"
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - configmaps
  - namespaces
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins11_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    team: infrastructure
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: infra

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins11_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/ConfigMap/jenkins-setup:
apiVersion: v1
data:
  admin.groovy: |-
    #!groovy

    import jenkins.install.*;
    import jenkins.model.*
    import jenkins.security.s2m.AdminWhitelistRule
    import hudson.security.*
    import hudson.util.*;

    def instance = Jenkins.getInstance()

    def username = "kiamol"
    def password = "kiamol"

    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount(username, password)
    instance.setSecurityRealm(hudsonRealm)

    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    instance.setAuthorizationStrategy(strategy)
    instance.setInstallState(InstallState.INITIAL_SETUP_COMPLETED)
    instance.save()

    Jenkins.instance.getInjector().getInstance(AdminWhitelistRule.class).setMasterKillSwitch(false)
  install-plugins.groovy: |-
    #!groovy

    import jenkins.model.Jenkins;

    pm = Jenkins.instance.pluginManager
    uc = Jenkins.instance.updateCenter

    pm.doCheckUpdatesServer()

    ["git", "workflow-aggregator"].each {
        if (! pm.getPlugin(it)) {
        deployment = uc.getPlugin(it).deploy(true)
        deployment.get()
        }
    }
  pipelines.groovy: |-
    import jenkins.*
    import jenkins.model.*
    import hudson.*
    import hudson.model.*

    import hudson.plugins.git.*;
    import hudson.triggers.SCMTrigger;
    import org.jenkinsci.plugins.workflow.job.WorkflowJob;
    import org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition;

    def gitUser = "kiamol"
    def gitRepo = "kiamol"
    def gitUrl = "http://gogs:3000/kiamol/kiamol.git"

    def jenkins = Jenkins.instance;

    def scm = new GitSCM(gitUrl)
    scm.branches = [new BranchSpec("*/main")];
    def workflowJob = new WorkflowJob(jenkins, "kiamol");
    workflowJob.definition = new CpsScmFlowDefinition(scm, "labs/jenkins/project/Jenkinsfile");
    def gitTrigger = new SCMTrigger("* * * * *");
    workflowJob.addTrigger(gitTrigger);
    workflowJob.disabled = true;
    workflowJob.save();

    jenkins.reload()
kind: ConfigMap
metadata:
  name: jenkins-setup
  namespace: infra

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: jenkins
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: kiamol/ch11-jenkins
        name: jenkins
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - mountPath: /root/.docker
          name: registry-creds
          readOnly: true
      serviceAccountName: jenkins
      volumes:
      - name: registry-creds
        secret:
          defaultMode: 256
          items:
          - key: .dockerconfigjson
            path: config.json
          secretName: registry-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins12_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log"
  verbs:
  - get"
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins12_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tail2-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tail2-deploy
  namespace: default
spec:
  minReadySeconds: 30
  replicas: 10
  selector:
    matchLabels:
      app: jenkins

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tail2-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tail2-deploy
policy disallow-container-sock-mounts -> resource default/Deployment/tail2-deploy failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/tail2-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/tail2-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/tail2-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/tail2-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/tail2-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jenkins:
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jenkins
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jenkins
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jenkins
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jenkins
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: http-port
        - containerPort: 50000
          name: jnlp-port
        volumeMounts:
        - mountPath: /var/jenkins_vol
          name: jenkins-vol
      volumes:
      - emptyDir: {}
        name: jenkins-vol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: jenkins14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  ports:
  - nodePort: 30000
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource jenkins/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins14_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-jnlp:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp
  namespace: jenkins
spec:
  ports:
  - port: 50000
    targetPort: 50000
  selector:
    app: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins14_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/lb-jenkins:
apiVersion: v1
kind: Service
metadata:
  name: lb-jenkins
  namespace: jenkins
spec:
  clusterIP: 10.96.35.148
  ports:
  - port: 50000
    protocol: TCP
    targetPort: 8080
  selector:
    app: jenkins
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 172.16.1.10

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: jenkins
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: kiamol/ch11-jenkins
        name: jenkins
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - mountPath: /root/.docker
          name: registry-creds
          readOnly: true
      serviceAccountName: jenkins
      volumes:
      - name: registry-creds
        secret:
          defaultMode: 256
          items:
          - key: .dockerconfigjson
            path: config.json
          secretName: registry-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins15_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins15_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log"
  verbs:
  - get"
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
    environment: prod
  name: jenkins
  namespace: default
spec:
  minReadySeconds: 5
  replicas: 8
  strategy:
    rollingUpdate:
      maxSurge: 50%!
(MISSING)      maxUnavailable: 50%!
(MISSING)  template:
    metadata:
      labels:
        app: jenkins
        environment: prod
      name: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts-jdk11
        name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nodeselector:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx
    purpose: nodeselector
  name: nodeselector
  namespace: default
spec:
  containers:
  - image: jenkins/jenkins:jdk11
    name: jenkins
    ports:
    - containerPort: 8080
  nodeName: aks-nodepool1-32808340-vmss000000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nodeselector

skipped mutate policy add-safe-to-evict -> resource default/Pod/nodeselector
policy disallow-default-namespace -> resource default/Pod/nodeselector failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/nodeselector failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nodeselector failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nodeselector failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nodeselector failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nodeselector failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nodeselector failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nodeselector failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/PersistentVolumeClaim/jenkins-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: goalapp
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: goal-jenkins-sc

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Pod/jenkins:
apiVersion: v1
kind: Pod
metadata:
  labels:
    for: jenkins
    to: agent
  name: jenkins
  namespace: goalapp
spec:
  containers:
  - image: jenkins/jenkins:lts
    name: jenkins
    ports:
    - containerPort: 8080
    - containerPort: 31999
    resources:
      limits:
        cpu: 1000m
        memory: 1.5Gi
      requests:
        cpu: 700m
        memory: 1Gi
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-vol
  volumes:
  - name: jenkins-vol
    persistentVolumeClaim:
      claimName: jenkins-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource goalapp/Pod/jenkins

skipped mutate policy add-safe-to-evict -> resource goalapp/Pod/jenkins
policy drop-all-capabilities -> resource goalapp/Pod/jenkins failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource goalapp/Pod/jenkins failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource goalapp/Pod/jenkins failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource goalapp/Pod/jenkins failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource goalapp/Pod/jenkins failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource goalapp/Pod/jenkins failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jenkins2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Service/jenkins-svc:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: goalapp
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    for: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Service/agent-svc:
apiVersion: v1
kind: Service
metadata:
  name: agent-svc
  namespace: goalapp
spec:
  ports:
  - nodePort: 31999
    port: 31999
    protocol: TCP
    targetPort: 31999
  selector:
    to: agent
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource goalapp/Service/agent-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: codercata5/jenkins
        name: jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
        - mountPath: /var/run/docker.sock
          name: docker-socket
          readOnly: true
      volumes:
      - hostPath:
          path: /home/CC/jenkins
        name: jenkins-home
      - hostPath:
          path: /var/run/docker.sock
        name: docker-socket

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-container-sock-mounts -> resource default/Deployment/jenkins failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/spec/volumes/1/hostPath/path/

policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 10, warn: 0, error: 0, skip: 1 

##### FILE: jenkins24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deploy
  namespace: default
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  replicas: 4
  selector:
    matchLabels:
      app: jenkins
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jenkins
        version: v1.0
    spec:
      containers:
      - image: jenkins/jenkins:2.454-jdk11
        name: jenkins-c
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 2
            memory: 2Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deploy
policy disallow-default-namespace -> resource default/Deployment/jenkins-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-svc:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: default
spec:
  ports:
  - name: jenkins-port
    nodePort: 30001
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/trail4:
apiVersion: v1
kind: Pod
metadata:
  name: trail4
  namespace: default
spec:
  containers:
  - image: jenkins/jenkins:lts-jdk17
    name: jenkins
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/trail4

skipped mutate policy add-safe-to-evict -> resource default/Pod/trail4
policy disallow-default-namespace -> resource default/Pod/trail4 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/trail4 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/trail4 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/trail4 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/trail4 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/trail4 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/trail4 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: TZ
          value: Asia/Shanghai
        - name: LANG
          value: zh_CN.UTF-8
        - name: JENKINS_OPTS
          value: --prefix=/jenkins
        image: jenkins/jenkins:2.440.3-lts-jdk17
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /jenkins/login
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
        name: jenkins
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 50000
          name: agent
          protocol: TCP
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /jenkins/login
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-vol
          subPath: jenkins-vol
      initContainers:
      - command:
        - sh
        - -c
        - chown 1000.1000 /var/jenkins_home
        image: alpine:3.19.1
        name: chown-root-dir
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-vol
          subPath: jenkins-vol
      - command:
        - sh
        - -c
        - find /var/jenkins_home -type d -type f -not -user jenkins -and -not -group
          jenkins -exec chown 1000.1000 {} \;
        image: jenkins/jenkins:2.440.3-lts-jdk17
        name: chown-owner
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-vol
          subPath: jenkins-vol
      volumes:
      - configMap:
          defaultMode: 493
          name: jenkins
        name: jenkins
      - name: jenkins-vol
        persistentVolumeClaim:
          claimName: infra

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: jenkins
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: kiamol/ch11-jenkins
        name: jenkins
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - mountPath: /root/.docker
          name: registry-creds
          readOnly: true
      serviceAccountName: jenkins
      volumes:
      - name: registry-creds
        secret:
          defaultMode: 256
          items:
          - key: .dockerconfigjson
            path: config.json
          secretName: registry-creds

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kiamol: ch11
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log"
  verbs:
  - get"
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/PersistentVolumeClaim/jenkins-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: goalapp
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: goal-jenkins-sc

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Pod/jenkins:
apiVersion: v1
kind: Pod
metadata:
  labels:
    for: jenkins
    to: agent
  name: jenkins
  namespace: goalapp
spec:
  containers:
  - image: jenkins/jenkins:lts
    name: jenkins
    ports:
    - containerPort: 8080
    - containerPort: 31999
    resources:
      limits:
        cpu: 1000m
        memory: 1.5Gi
      requests:
        cpu: 700m
        memory: 1Gi
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-vol
  volumes:
  - name: jenkins-vol
    persistentVolumeClaim:
      claimName: jenkins-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource goalapp/Pod/jenkins

skipped mutate policy add-safe-to-evict -> resource goalapp/Pod/jenkins
policy drop-all-capabilities -> resource goalapp/Pod/jenkins failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource goalapp/Pod/jenkins failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource goalapp/Pod/jenkins failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource goalapp/Pod/jenkins failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource goalapp/Pod/jenkins failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource goalapp/Pod/jenkins failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jenkins5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Service/jenkins-svc:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: goalapp
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    for: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Service/agent-svc:
apiVersion: v1
kind: Service
metadata:
  name: agent-svc
  namespace: goalapp
spec:
  ports:
  - nodePort: 31999
    port: 31999
    protocol: TCP
    targetPort: 31999
  selector:
    to: agent
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource goalapp/Service/agent-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
          name: http-port
        - containerPort: 50000
          name: jnlp-port
        volumeMounts:
        - mountPath: /var/jenkins_home/
          name: jenkins-storage
      securityContext:
        fsGroup: 1000
        runAsUser: 0
      volumes:
      - name: jenkins-storage
        persistentVolumeClaim:
          claimName: jenkins-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: Jenkins8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: your-docker-registry/your-jenkins-image:latest
        name: jenkins
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Jenkins8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /path/on/host

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Jenkins8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinsaccount.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins-integration:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: jenkins-image-builder
  name: jenkins-integration
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-account_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-account_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-account_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins-crb:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-crb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkinsclusterrole
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-account_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkinsclusterrole:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkinsclusterrole
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-agent.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/jenkins-agent:
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-agent
  namespace: default
spec:
  containers:
  - image: ezezeasy/ez-docker-helm-build:1.41
    imagePullPolicy: Always
    name: ez-docker-helm-build
    securityContext:
      privileged: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/jenkins-agent

skipped mutate policy add-safe-to-evict -> resource default/Pod/jenkins-agent
policy disallow-default-namespace -> resource default/Pod/jenkins-agent failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/jenkins-agent failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/jenkins-agent failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/jenkins-agent failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/jenkins-agent failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/jenkins-agent failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/jenkins-agent failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/jenkins-agent failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-agent-buildkit.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/buildkitd:
apiVersion: v1
kind: Pod
metadata:
  name: buildkitd
  namespace: default
spec:
  containers:
  - image: piky/buildkit
    livenessProbe:
      exec:
        command:
        - buildctl
        - debug
        - workers
      initialDelaySeconds: 5
      periodSeconds: 30
    name: buildkitd
    readinessProbe:
      exec:
        command:
        - buildctl
        - debug
        - workers
      initialDelaySeconds: 5
      periodSeconds: 30
    securityContext:
      privileged: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/buildkitd

skipped mutate policy add-safe-to-evict -> resource default/Pod/buildkitd
policy disallow-default-namespace -> resource default/Pod/buildkitd failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/buildkitd failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/buildkitd failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/buildkitd failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/buildkitd failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/buildkitd failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/buildkitd failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/buildkitd failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-agent-node.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/agent-nodejs:
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins-agent: jnlp-agent-nodejs
  name: agent-nodejs
  namespace: default
spec:
  containers:
  - command:
    - cat
    image: piky/jnlp-agent-nodejs:latest
    name: nodejs
    tty: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/agent-nodejs

skipped mutate policy add-safe-to-evict -> resource default/Pod/agent-nodejs
policy disallow-default-namespace -> resource default/Pod/agent-nodejs failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/agent-nodejs failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/agent-nodejs failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/agent-nodejs failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/agent-nodejs failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/agent-nodejs failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/agent-nodejs failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/agent-nodejs failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/agent-nodejs failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-aks-deploy-from-acr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-springboot-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - image: myacrrepo3210.azurecr.io/myacrrepo3210:latest
        imagePullPolicy: Always
        name: my-springboot-app
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment
policy disallow-default-namespace -> resource default/Deployment/my-springboot-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-aks-deploy-from-acr_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/springboot-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  selector:
    app: springboot-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-aks-deploy-from-acr1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-springboot-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - image: myacrrepo3210.azurecr.io/myacrrepo3210:latest
        imagePullPolicy: Always
        name: my-springboot-app
        ports:
        - containerPort: 8085

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-springboot-deployment
policy disallow-default-namespace -> resource default/Deployment/my-springboot-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-springboot-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-aks-deploy-from-acr1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/springboot-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  selector:
    app: springboot-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-dep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins-master-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins-master
    group: jenkins
    version: latest
  name: jenkins-master-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
      group: jenkins
      version: latest
  template:
    metadata:
      labels:
        app: jenkins-master
        group: jenkins
        version: latest
    spec:
      containers:
      - image: keaz/jenkins-master:alpine
        imagePullPolicy: IfNotPresent
        name: jenkins-master

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-master-deployment

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-master-deployment
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-dep1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins-master-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins-master
    group: jenkins
    version: latest
  name: jenkins-master-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
      group: jenkins
      version: latest
  template:
    metadata:
      labels:
        app: jenkins-master
        group: jenkins
        version: latest
    spec:
      containers:
      - image: keaz/jenkins-master:alpine
        imagePullPolicy: IfNotPresent
        name: jenkins-master

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-master-deployment

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-master-deployment
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-dep2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins-master-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins-master
    group: jenkins
    version: latest
  name: jenkins-master-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
      group: jenkins
      version: latest
  template:
    metadata:
      labels:
        app: jenkins-master
        group: jenkins
        version: latest
    spec:
      containers:
      - image: keaz/jenkins-master:alpine
        imagePullPolicy: IfNotPresent
        name: jenkins-master

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-master-deployment

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-master-deployment
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins-master-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      containers:
      - image: jenkins/jenkins:lts
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
        name: jenkins
        ports:
        - containerPort: 8080
          name: httpport
        - containerPort: 50000
          name: jnlpport
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 700m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-data
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: jenkinsdeployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkinsdeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkinsdeployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkinsdeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkinsdeployment
policy disallow-default-namespace -> resource default/Deployment/jenkinsdeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:latest
        name: jenkins-container
        ports:
        - containerPort: 8080
        - containerPort: 50000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-deployment

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-deployment
policy disallow-latest-tag -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkinsdeployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkinsdeployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkinsdeployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkinsdeployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkinsdeployment
policy disallow-default-namespace -> resource default/Deployment/jenkinsdeployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkinsdeployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: joyvinensius/jenkins:latest
        name: jenkins
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-deployment-ephemeral:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment-ephemeral
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-ephemeral
  template:
    metadata:
      labels:
        app: jenkins-ephemeral
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment-ephemeral

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-deployment-ephemeral
policy disallow-default-namespace -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-deployment-ephemeral failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8080
  selector:
    app: jenkins-ephemeral
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f C:\Users\hao\Desktop\存放\project-root\docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: jenkins
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: jenkins
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f C:\Users\hao\Desktop\存放\project-root\docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-root-default: "true"
        io.kompose.service: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:latest
        name: jenkins
        ports:
        - containerPort: 8080
          hostPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      restartPolicy: Always
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-home
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins-controller-kubernetes:1.0
        name: jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - emptyDir: {}
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins-controller-kubernetes:1.0
        name: jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - emptyDir: {}
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jenkins:
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jenkins
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jenkins
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jenkins
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jenkins
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-deployment7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins
        name: jenkins-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-deployment

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-deployment
policy disallow-latest-tag -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-deployment7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  ports:
  - nodePort: 30008
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource jenkins/Service/jenkins-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /mnt/data-jenkins2
          name: jenkins-home
      volumes:
      - emptyDir: {}
        name: jenkins-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins
policy disallow-default-namespace -> resource default/Deployment/jenkins failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jenkins-dp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-dp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: production
  name: jenkins-dp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: production
  template:
    metadata:
      labels:
        app: production
      name: jenkins-prod
    spec:
      containers:
      - image: jenkins:2.60.3-alpine
        name: jenkins

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-dp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-dp
policy disallow-default-namespace -> resource default/Deployment/jenkins-dp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jenkins-dp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-dp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-dp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-dp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jenkins-dp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-dp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-dp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-graalvm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jenkins-graalvm:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-graalvm
  namespace: default
spec:
  selector:
    matchLabels:
      app: jenkins-graalvm
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jenkins-graalvm
    spec:
      containers:
      - image: docker.local:5000/jenkins-graalvm:latest
        name: jenkins-graalvm
        ports:
        - containerPort: 8080
          name: httpport
        - containerPort: 50000
          name: jnlpport
        resources:
          limits:
            memory: 6Gi
          requests:
            memory: 1Gi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-data
        - mountPath: /usr/bin/docker
          name: docker-bin
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /root/.gradle
          name: gradle-home
      securityContext:
        fsGroup: 1000
        runAsUser: 0
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-pv-claim
      - hostPath:
          path: /usr/bin/docker
        name: docker-bin
      - hostPath:
          path: /var/run/docker.sock
        name: docker-sock
      - hostPath:
          path: /mnt/data/jenkins/.gradle
        name: gradle-home

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jenkins-graalvm
policy disallow-container-sock-mounts -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/spec/volumes/2/hostPath/path/

policy disallow-default-namespace -> resource default/Deployment/jenkins-graalvm failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-pod-probes -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jenkins-graalvm failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 10, warn: 0, error: 0, skip: 1 

##### FILE: jenkins-graalvm_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-graalvm-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-graalvm-service
  namespace: default
spec:
  ports:
  - nodePort: 31080
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins-graalvm
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-graalvm-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-graalvm_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-graalvm-jnlp:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-graalvm-jnlp
  namespace: default
spec:
  ports:
  - port: 50000
    targetPort: 50000
  selector:
    app: jenkins-graalvm
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-home-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-home:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: jenkins-home
  name: jenkins-home
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Ingress/jenkins-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels:
    name: jenkins-ingress
  name: jenkins-ingress
  namespace: jenkins
spec:
  ingressClassName: nginx
  rules:
  - host: jenkins.kkamji.net
    http:
      paths:
      - backend:
          service:
            name: jenkins-service
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jenkins.kkamji.net
    secretName: jenkins-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Ingress/jenkins:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  name: jenkins
  namespace: jenkins
spec:
  rules:
  - host: jenkins.gaenari.kr
    http:
      paths:
      - backend:
          service:
            name: jenkins
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jenkins.gaenari.kr
    secretName: jenkins-ingress-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-jnlp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-tools/Service/jenkins-jnlp:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp
  namespace: devops-tools
spec:
  ports:
  - port: 50000
    targetPort: 50000
  selector:
    app: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins-server
  name: jenkins
  namespace: jenkins
spec:
  ports:
  - name: jenkins-http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: jnlp
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    app: jenkins-server
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jenkins:
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jenkins
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jenkins
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jenkins
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jenkins
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-namespace1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jenkins:
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jenkins
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jenkins
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jenkins
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jenkins
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-namespace2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jwang1568cicd:
apiVersion: v1
kind: Namespace
metadata:
  name: jwang1568cicd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jwang1568cicd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jwang1568cicd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jwang1568cicd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jwang1568cicd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jwang1568cicd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jwang1568cicd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jwang1568cicd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jwang1568cicd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jenkins:
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jenkins
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jenkins
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jenkins
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jenkins
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/parcial3:
apiVersion: v1
kind: Namespace
metadata:
  name: parcial3
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/parcial3:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: parcial3
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/parcial3:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: parcial3
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/parcial3:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: parcial3
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/parcial3:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: parcial3
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/:
apiVersion: v1
kind: Pod
metadata:
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - 99d
    image: maven:3.8.3-jdk-11-slim
    imagePullPolicy: Always
    name: maven
    tty: true
  - command:
    - cat
    image: hadolint/hadolint:latest-debian
    imagePullPolicy: Always
    name: hadolint
    tty: true
  - command:
    - sleep
    - 99d
    env:
    - name: DOCKER_HOST
      value: tcp://localhost:2375
    image: docker:20.10.12
    name: docker
  - env:
    - name: DOCKER_TLS_CERTDIR
      value: ""
    image: docker:20.10.12-dind
    name: docker-daemon
    securityContext:
      privileged: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/

skipped mutate policy add-safe-to-evict -> resource default/Pod/
policy disallow-default-namespace -> resource default/Pod/ failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/ failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/ failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/ failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/ failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/ failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/ failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/ failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: jenkins-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /home/deekshithsn/jenkins
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: jenkins-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /home/deekshithsn/jenkins
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pv2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: jenkins-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /home/deekshithsn/jenkins
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pv3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/PersistentVolume/jenkins-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-volume
  namespace: jenkins
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/jenkins/
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pv4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to parcial3/PersistentVolume/jenkins-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-volume
  namespace: parcial3
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/jenkins/
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinspvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/devops-ns:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: devops
  name: devops-ns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/devops-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: devops-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/devops-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: devops-ns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-ns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: devops-ns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-ns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: devops-ns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/PersistentVolumeClaim/jenkins-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
  namespace: jenkins
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinspvc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-ns/Deployment/jenkinsapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkinsapp
  namespace: devops-ns
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkinscontainer
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkinsvol
      volumes:
      - name: jenkinsvol
        persistentVolumeClaim:
          claimName: jenkinspvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource devops-ns/Deployment/jenkinsapp

skipped mutate policy add-safe-to-evict -> resource devops-ns/Deployment/jenkinsapp
policy drop-all-capabilities -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jenkinspvc_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-ns/PersistentVolumeClaim/jenkinspvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkinspvc
  namespace: devops-ns
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinspvc_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-ns/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: devops-ns
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource devops-ns/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkinspvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/devops-ns:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: devops
  name: devops-ns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/devops-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: devops-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/devops-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: devops-ns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-ns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: devops-ns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-ns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: devops-ns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-volume-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-volume-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinspvc1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-ns/Deployment/jenkinsapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkinsapp
  namespace: devops-ns
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkinscontainer
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkinsvol
      volumes:
      - name: jenkinsvol
        persistentVolumeClaim:
          claimName: jenkinspvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource devops-ns/Deployment/jenkinsapp

skipped mutate policy add-safe-to-evict -> resource devops-ns/Deployment/jenkinsapp
policy drop-all-capabilities -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource devops-ns/Deployment/jenkinsapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jenkinspvc1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-ns/PersistentVolumeClaim/jenkinspvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkinspvc
  namespace: devops-ns
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinspvc1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devops-ns/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: devops-ns
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource devops-ns/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-volume-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-volume-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins-volume-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-volume-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pvc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/PersistentVolumeClaim/jenkins-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: jenkins
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-pvc5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to parcial3/PersistentVolumeClaim/jenkins-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: parcial3
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/jenkins:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    koeppster.net/aws_enabled: "true"
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: jenkins
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/jenkins:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: jenkins
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: jenkins
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/jenkins:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: jenkins
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/PersistentVolumeClaim/jenkins-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
  namespace: jenkins
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: kube-nfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/ServiceAccount/jenkins-admin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-admin
  namespace: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Role/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: jenkins
  name: jenkins
  namespace: jenkins
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/RoleBinding/jenkins-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins-role-binding
  namespace: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins-admin
  namespace: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Deployment/jenkins-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
        name: jenkins
        ports:
        - containerPort: 8080
          name: httpport
        - containerPort: 50000
          name: jnlpport
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-data
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-deployment

skipped mutate policy add-safe-to-evict -> resource jenkins/Deployment/jenkins-deployment
policy drop-all-capabilities -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/Deployment/jenkins-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-resources_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  ports:
  - name: jenkins-service
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: jnlpport
    port: 50000
    targetPort: 50000
  selector:
    app: jenkins
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-resources_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Secret/jenkins-admin-secret:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: jenkins-admin
    kubernetes.io/service-account.namespace: jenkins
  name: jenkins-admin-secret
  namespace: jenkins
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-role-binding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-role-binding_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-role-binding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-role-binding1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-sa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins:
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinsservice.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins-integration:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: jenkins-image-builder
  name: jenkins-integration
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: jenkins

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: jnlp
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30000
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-service:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-master-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins-master
    group: jenkins
    version: latest
  name: jenkins-master-service
  namespace: jenkins
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: jnlp
    port: 50000
    targetPort: 50000
  selector:
    app: jenkins-master
    group: jenkins
    version: latest
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource jenkins/Service/jenkins-master-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f C:\Users\hao\Desktop\存放\project-root\docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: jenkins
  name: jenkins
  namespace: default
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: jenkins
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-master-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins-master
    group: jenkins
    version: latest
  name: jenkins-master-service
  namespace: jenkins
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: jnlp
    port: 50000
    targetPort: 50000
  selector:
    app: jenkins-master
    group: jenkins
    version: latest
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource jenkins/Service/jenkins-master-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins:
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
spec:
  ports:
  - nodePort: 30808
    port: 8080
    targetPort: 8080
  selector:
    app: jenkins
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/Service/jenkins-master-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins-master
    group: jenkins
    version: latest
  name: jenkins-master-service
  namespace: jenkins
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: jnlp
    port: 50000
    targetPort: 50000
  selector:
    app: jenkins-master
    group: jenkins
    version: latest
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource jenkins/Service/jenkins-master-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/jenkins-admin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-admin
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service-account_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkins:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: jenkins
  name: jenkins
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - delete
  - list
  - watch
- apiGroups:
  - extensions
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-service-account_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/jenkins-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins-admin
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-statefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jenkins/StatefulSet/jenkins:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  serviceName: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: jenkins/jenkins:lts
        name: jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jenkins/StatefulSet/jenkins

skipped mutate policy add-safe-to-evict -> resource jenkins/StatefulSet/jenkins
policy drop-all-capabilities -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jenkins/StatefulSet/jenkins failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jenkins-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jenkins-svc:
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: default
spec:
  ports:
  - nodePort: 30005
    port: 8080
    targetPort: 8080
  selector:
    app: production
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jenkins-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jenkinstoken.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/jenkins:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: jenkins
  name: jenkins
  namespace: default
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinstoken1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/jenkins:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: jenkins
  name: jenkins
  namespace: default
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  nfs:
    path: /nfs_shared/jenkins
    server: 192.168.1.10
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-volume_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-volume1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/jenkins:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  nfs:
    path: /nfs_shared/jenkins
    server: 192.168.1.10
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-volume1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jenkins:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-volume2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jwang1568cicd/PersistentVolume/jenkins-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv
  namespace: jwang1568cicd
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 20Gi
  hostPath:
    path: /data/jenkins-volume/
  persistentVolumeReclaimPolicy: Retain
  storageClassName: jenkins-pv

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkinsx-aggregate-view-clusterrole.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jenkinsx-aggregate-view:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: jxboot-helmfile-resources
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: jenkins-x
    gitops.jenkins-x.io/pipeline: cluster
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: jenkinsx-aggregate-view
  namespace: default
rules:
- apiGroups:
  - jenkins.io
  - comcast.github.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-x-controllerbuild-sa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jx/ServiceAccount/jenkins-x-controllerbuild:
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: jx-build-controller
  labels:
    app: jx-build-controller
    chart: jx-build-controller-0.5.6
    gitops.jenkins-x.io/pipeline: namespaces
    heritage: Helm
    release: jx-build-controller
  name: jenkins-x-controllerbuild
  namespace: jx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-x-docker-registry-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jx/ConfigMap/jenkins-x-docker-registry:
apiVersion: v1
data:
  docker.registry: ghcr.io
  kaniko.flags: --skip-unused-stages --snapshotMode=redo
kind: ConfigMap
metadata:
  annotations:
    expose.config.fabric8.io/clusterip-port-if-empty-key: docker.registry
    meta.helm.sh/release-name: jxboot-helmfile-resources
  labels:
    gitops.jenkins-x.io/pipeline: namespaces
  name: jenkins-x-docker-registry
  namespace: jx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jenkins-x-extensions-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jx/ConfigMap/jenkins-x-extensions:
apiVersion: v1
data:
  knownRepositories: |
    repositories:
    - chart: {}
      github: jenkins-x/jenkins-x-extensions
  repository: |
    chart: {}
    github: jenkins-x/jenkins-x-extensions
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: jxboot-helmfile-resources
  labels:
    gitops.jenkins-x.io/pipeline: namespaces
  name: jenkins-x-extensions
  namespace: jx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetlag-core.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jetlag/Deployment/jetlag-core:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jetlag-core
  name: jetlag-core
  namespace: jetlag
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jetlag-core
  template:
    metadata:
      labels:
        app: jetlag-core
    spec:
      containers:
      - env:
        - name: GAME_REDIS_HOST
          value: jetlag-redis.jetlag.svc.cluster.local
        image: ghcr.io/marcindz88/jetlag/jetlag-core:latest
        imagePullPolicy: Always
        name: jetlag-core
        ports:
        - containerPort: 9999
        resources:
          limits:
            cpu: 250m
            ephemeral-storage: 512Mi
            memory: 512Mi
          requests:
            cpu: 100m
            ephemeral-storage: 256Mi
            memory: 256Mi
      imagePullSecrets:
      - name: marcindz88-docker-registry

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jetlag/Deployment/jetlag-core

skipped mutate policy add-safe-to-evict -> resource jetlag/Deployment/jetlag-core
policy disallow-latest-tag -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jetlag/Deployment/jetlag-core failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jetlag-core_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jetlag-core-service:
apiVersion: v1
kind: Service
metadata:
  name: jetlag-core-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 9999
  selector:
    app: jetlag-core
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetlag-core_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jetlag-core-service:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jetlag-core-service
  namespace: default
spec:
  rules:
  - host: www.api.jetlag.gg
    http:
      paths:
      - backend:
          service:
            name: jetlag-core-service
            port:
              number: 80
        path: /
        pathType: Prefix
  - host: api.jetlag.gg
    http:
      paths:
      - backend:
          service:
            name: jetlag-core-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - www.api.jetlag.gg
    - api.jetlag.gg
    secretName: jetlag-cert

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetlag-frontend.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to jetlag/Deployment/jetlag-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jetlag-frontend
  name: jetlag-frontend
  namespace: jetlag
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jetlag-frontend
  template:
    metadata:
      labels:
        app: jetlag-frontend
    spec:
      containers:
      - image: ghcr.io/marcindz88/jetlag/jetlag-frontend:latest
        imagePullPolicy: Always
        name: frontend
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 125m
            ephemeral-storage: 512Mi
            memory: 512Mi
          requests:
            cpu: 50m
            ephemeral-storage: 256Mi
            memory: 256Mi
      imagePullSecrets:
      - name: marcindz88-docker-registry

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource jetlag/Deployment/jetlag-frontend

skipped mutate policy add-safe-to-evict -> resource jetlag/Deployment/jetlag-frontend
policy disallow-latest-tag -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource jetlag/Deployment/jetlag-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jetlag-frontend_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jetlag-frontend-service:
apiVersion: v1
kind: Service
metadata:
  name: jetlag-frontend-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: jetlag-frontend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetlag-frontend_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jetlag-frontend-service:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jetlag-frontend-service
  namespace: default
spec:
  rules:
  - host: www.jetlag.gg
    http:
      paths:
      - backend:
          service:
            name: jetlag-frontend-service
            port:
              number: 80
        path: /
        pathType: Prefix
  - host: jetlag.gg
    http:
      paths:
      - backend:
          service:
            name: jetlag-frontend-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - www.jetlag.gg
    - jetlag.gg
    secretName: jetlag-cert

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetlag-redis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/jetlag-redis:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: jetlag-redis
  name: jetlag-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jetlag-redis
  template:
    metadata:
      labels:
        app: jetlag-redis
    spec:
      containers:
      - args:
        - --appendonly
        - "yes"
        command:
        - redis-server
        image: redis:7.0.2
        imagePullPolicy: Always
        name: jetlag-redis
        resources:
          limits:
            cpu: 125m
            ephemeral-storage: 512Mi
            memory: 512Mi
          requests:
            cpu: 100m
            ephemeral-storage: 100Mi
            memory: 100Mi
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/jetlag-redis

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/jetlag-redis
policy disallow-default-namespace -> resource default/StatefulSet/jetlag-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/jetlag-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/jetlag-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/jetlag-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/StatefulSet/jetlag-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/jetlag-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/jetlag-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: jetlag-redis_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/redis-data:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: redis-data
  name: redis-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetlag-redis_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jetlag-redis:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jetlag-redis
  name: jetlag-redis
  namespace: default
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: jetlag-redis
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetstream_config_patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-jetstream-config:
apiVersion: v1
data:
  PL_JETSTREAM_CLUSTER_SIZE: "3"
kind: ConfigMap
metadata:
  name: pl-jetstream-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetstream_config_patch1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-jetstream-config:
apiVersion: v1
data:
  PL_JETSTREAM_CLUSTER_SIZE: "3"
kind: ConfigMap
metadata:
  name: pl-jetstream-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetstream_config_patch2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-jetstream-config:
apiVersion: v1
data:
  PL_JETSTREAM_CLUSTER_SIZE: "3"
kind: ConfigMap
metadata:
  name: pl-jetstream-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jetstream_config_patch3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-jetstream-config:
apiVersion: v1
data:
  PL_JETSTREAM_CLUSTER_SIZE: "3"
kind: ConfigMap
metadata:
  name: pl-jetstream-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jfrog-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to artifactory/Deployment/artifactory:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artifactory
  namespace: artifactory
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artifactory
  template:
    metadata:
      labels:
        app: artifactory
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: postgresql-service.artifactory.svc.cluster.local
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: artifactory
        - name: DB_USERNAME
          value: artifactory
        - name: DB_PASSWORD
          value: Passw0rd
        image: docker.bintray.io/jfrog/artifactory-oss:latest
        name: artifactory
        ports:
        - containerPort: 8081
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-data
      volumes:
      - name: artifactory-data
        persistentVolumeClaim:
          claimName: jfrog

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource artifactory/Deployment/artifactory

skipped mutate policy add-safe-to-evict -> resource artifactory/Deployment/artifactory
policy disallow-latest-tag -> resource artifactory/Deployment/artifactory failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource artifactory/Deployment/artifactory failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource artifactory/Deployment/artifactory failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource artifactory/Deployment/artifactory failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource artifactory/Deployment/artifactory failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource artifactory/Deployment/artifactory failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource artifactory/Deployment/artifactory failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource artifactory/Deployment/artifactory failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: jfrog-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to artifactory/Ingress/jfrog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.org/client-max-body-size: 100m
  name: jfrog-ingress
  namespace: artifactory
spec:
  ingressClassName: nginx
  rules:
  - host: jfrog-maayan.octopus.lab
    http:
      paths:
      - backend:
          service:
            name: artifactory
            port:
              number: 8082
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jfrog-postgres-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/artifactory:
apiVersion: v1
kind: Namespace
metadata:
  name: artifactory
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/artifactory:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: artifactory
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/artifactory:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: artifactory
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/artifactory:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: artifactory
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/artifactory:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: artifactory
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jfrog-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to artifactory/Service/artifactory:
apiVersion: v1
kind: Service
metadata:
  name: artifactory
  namespace: artifactory
spec:
  ports:
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  selector:
    app: artifactory

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jindoruntime_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jindoruntime-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jindoruntime-editor-role
  namespace: default
rules:
- apiGroups:
  - data.fluid.io
  resources:
  - jindoruntimes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - data.fluid.io
  resources:
  - jindoruntimes/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jindoruntime_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/jindoruntime-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jindoruntime-viewer-role
  namespace: default
rules:
- apiGroups:
  - data.fluid.io
  resources:
  - jindoruntimes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - data.fluid.io
  resources:
  - jindoruntimes/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jlopez-webtop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jlopez-webtop
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jlopez-webtop
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jlopez-webtop
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        envFrom:
        - secretRef:
            name: jlopez-webtop-secrets
        image: ghcr.io/ai-cfia/webtop-ubuntu-kde:main
        name: webtop
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --host=tcp://0.0.0.0:2375
        - --tls=false
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:dind
        name: docker-dind
        ports:
        - containerPort: 2375
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jlopez-webtop-config-pvc
      - emptyDir: {}
        name: docker-graph-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jlopez-webtop
policy disallow-default-namespace -> resource default/Deployment/jlopez-webtop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jlopez-webtop-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jlopez-webtop-service:
apiVersion: v1
kind: Service
metadata:
  name: jlopez-webtop-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: jlopez-webtop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jlopez-webtop-config-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jlopez-webtop-config-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/jlopez-webtop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jlopez-webtop
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jlopez-webtop
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jlopez-webtop
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        envFrom:
        - secretRef:
            name: jlopez-webtop-secrets
        image: ghcr.io/ai-cfia/webtop-ubuntu-kde:main
        name: webtop
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --host=tcp://0.0.0.0:2375
        - --tls=false
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:dind
        name: docker-dind
        ports:
        - containerPort: 2375
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jlopez-webtop-config-pvc
      - emptyDir: {}
        name: docker-graph-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/jlopez-webtop
policy disallow-default-namespace -> resource default/Deployment/jlopez-webtop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/jlopez-webtop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: jlopez-webtop-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jlopez-webtop-service:
apiVersion: v1
kind: Service
metadata:
  name: jlopez-webtop-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: jlopez-webtop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/jlopez-webtop-config-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jlopez-webtop-config-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jlopez-webtop-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: jlopez-webtop-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: jlopez-webtop.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: jlopez-webtop-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jlopez-webtop.inspection.alpha.canada.ca
    secretName: jlopez-webtop-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/jlopez-webtop-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: jlopez-webtop-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: jlopez-webtop.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: jlopez-webtop-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jlopez-webtop.inspection.alpha.canada.ca
    secretName: jlopez-webtop-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/jlopez-webtop-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/webtop/test
    avp.kubernetes.io/secret-version: "1"
  name: jlopez-webtop-secrets
  namespace: default
stringData:
  CUSTOM_USER: <CUSTOM_USER>
  PASSWORD: <PASSWORD>
  PGID: <PGID>
  PUID: <PUID>
  TITLE: <TITLE>
  TZ: <TZ>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jlopez-webtop-secrets1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/jlopez-webtop-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/webtop/test
    avp.kubernetes.io/secret-version: "1"
  name: jlopez-webtop-secrets
  namespace: default
stringData:
  CUSTOM_USER: <CUSTOM_USER>
  PASSWORD: <PASSWORD>
  PGID: <PGID>
  PUID: <PUID>
  TITLE: <TITLE>
  TZ: <TZ>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jmeter.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test/Job/jmeter:
apiVersion: batch/v1
kind: Job
metadata:
  name: jmeter
  namespace: test
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - env:
        - name: TEST_HOST
          value: gateway-svc.service
        - name: TEST_PORT
          value: "80"
        - name: USER_NUM
          value: "20"
        - name: LOOP_NUM
          value: "20"
        - name: LOG_LEVEL
          value: ERROR
        - name: LOG_LEVEL_HTTP
          value: INFO
        image: IMAGE_REGISTRY_PATH/jmeter:REVISION_ID
        imagePullPolicy: Always
        name: jmeter
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test/Job/jmeter

skipped mutate policy add-safe-to-evict -> resource test/Job/jmeter
policy drop-all-capabilities -> resource test/Job/jmeter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test/Job/jmeter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test/Job/jmeter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource test/Job/jmeter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource test/Job/jmeter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test/Job/jmeter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: jmeter_grafana_reporter_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jmeter-reporter:
apiVersion: v1
kind: Service
metadata:
  labels:
    jmeter_mode: reporter
  name: jmeter-reporter
  namespace: default
spec:
  ports:
  - port: 8686
    targetPort: 8686
  selector:
    jmeter_mode: reporter
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/jmeter-reporter failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: jmeter_grafana_svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jmeter-grafana:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jmeter-grafana
  name: jmeter-grafana
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 80
    targetPort: 3000
  selector:
    app: jmeter-grafana
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jmeter_influxdb_configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/influxdb-config:
apiVersion: v1
data:
  influxdb.conf: |
    [meta]
      dir = "/var/lib/influxdb/meta"

    [data]
      dir = "/var/lib/influxdb/data"
      engine = "tsm1"
      wal-dir = "/var/lib/influxdb/wal"

    # Configure the graphite api
    [[graphite]]
    enabled = true
    bind-address = ":2003" # If not set, is actually set to bind-address.
    database = "jmeter"  # store graphite data in this database
kind: ConfigMap
metadata:
  labels:
    app: influxdb-jmeter
  name: influxdb-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jmeter_influxdb_svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jmeter-influxdb:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: influxdb-jmeter
  name: jmeter-influxdb
  namespace: default
spec:
  ports:
  - name: http
    port: 8083
    targetPort: 8083
  - name: api
    port: 8086
    targetPort: 8086
  - name: graphite
    port: 2003
    targetPort: 2003
  selector:
    app: influxdb-jmeter

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jmeter_master_configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/jmeter-load-test:
apiVersion: v1
data:
  load_test: |
    #!/bin/bash
    #Script created to invoke jmeter test script with the slave POD IP addresses
    #Script should be run like: ./load_test "path to the test script in jmx format"
    /jmeter/apache-jmeter-*/bin/jmeter -n -t $1 -Dserver.rmi.ssl.disable=true -R `getent ahostsv4 jmeter-slaves-svc | cut -d' ' -f1 | sort -u | awk -v ORS=, '{print $1}' | sed 's/,$//'`
kind: ConfigMap
metadata:
  labels:
    app: influxdb-jmeter
  name: jmeter-load-test
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: jmeter_slaves_svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/jmeter-slaves-svc:
apiVersion: v1
kind: Service
metadata:
  labels:
    jmeter_mode: slave
  name: jmeter-slaves-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: first
    port: 1099
    targetPort: 1099
  - name: second
    port: 50000
    targetPort: 50000
  selector:
    jmeter_mode: slave

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: job-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/math-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: math-job
  namespace: default
spec:
  completions: 3
  template:
    spec:
      containers:
      - command:
        - expr
        - "3"
        - +
        - "4"
        image: ubuntu
        name: math-add
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/math-job

skipped mutate policy add-safe-to-evict -> resource default/Job/math-job
policy disallow-default-namespace -> resource default/Job/math-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/math-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/math-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/math-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/math-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/math-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/math-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/math-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-abnormal-end.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-abnormal-end:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-abnormal-end
  namespace: default
spec:
  backoffLimit: 3
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 5; exit 1
        image: docker.io/busybox
        name: busybox
      imagePullSecrets:
      - name: regcred
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-abnormal-end

skipped mutate policy add-safe-to-evict -> resource default/Job/job-abnormal-end
policy disallow-default-namespace -> resource default/Job/job-abnormal-end failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-abnormal-end failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-abnormal-end failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-abnormal-end failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-abnormal-end failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job-abnormal-end failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-abnormal-end failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-abnormal-end failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-apple.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/process-item-apple:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    jobgroup: jobexample
  name: process-item-apple
  namespace: default
spec:
  template:
    metadata:
      labels:
        jobgroup: jobexample
      name: jobexample
    spec:
      containers:
      - command:
        - sh
        - -c
        - echo Processing item apple && sleep 5
        image: busybox
        name: c
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/process-item-apple

skipped mutate policy add-safe-to-evict -> resource default/Job/process-item-apple
policy disallow-default-namespace -> resource default/Job/process-item-apple failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/process-item-apple failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/process-item-apple failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/process-item-apple failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/process-item-apple failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/process-item-apple failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/process-item-apple failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/process-item-apple failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-argocd-reboot.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Job/argocd-bouncer:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
  labels:
    app.kubernetes.io/part-of: argocd
  name: argocd-bouncer
  namespace: argocd
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
      - args:
        - rollout
        - restart
        - deployment
        - argocd-applicationset-controller
        - argocd-notifications-controller
        - argocd-redis
        - argocd-repo-server
        - argocd-server
        image: rancher/kubectl:v1.20.15
        name: argocd-bouncer
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: OnFailure
      serviceAccountName: argocd-bouncer

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argocd/Job/argocd-bouncer

skipped mutate policy add-safe-to-evict -> resource argocd/Job/argocd-bouncer
policy drop-all-capabilities -> resource argocd/Job/argocd-bouncer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource argocd/Job/argocd-bouncer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argocd/Job/argocd-bouncer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy restrict-image-registries -> resource argocd/Job/argocd-bouncer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: Job-argocd-redis-secret-init.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Job/argocd-redis-secret-init:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/component: redis-secret-init
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-redis-secret-init
    app.kubernetes.io/part-of: argocd
  name: argocd-redis-secret-init
  namespace: argocd
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis-secret-init
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-redis-secret-init
        app.kubernetes.io/part-of: argocd
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-redis-secret-init
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - argocd
        - admin
        - redis-initial-password
        image: quay.io/argoproj/argocd:v2.14.7
        imagePullPolicy: IfNotPresent
        name: secret-init
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: argocd-redis-secret-init
  ttlSecondsAfterFinished: 60

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argocd/Job/argocd-redis-secret-init

skipped mutate policy add-safe-to-evict -> resource argocd/Job/argocd-redis-secret-init
policy drop-cap-net-raw -> resource argocd/Job/argocd-redis-secret-init failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource argocd/Job/argocd-redis-secret-init failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource argocd/Job/argocd-redis-secret-init failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: job-azurekeyvault.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.137
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.137
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.138
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.138
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.142
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.142
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.146
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.146
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.nju.edu.cn/jenkins-x/jx-boot:3.10.131
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.nju.edu.cn/jenkins-x/jx-boot:3.10.131
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.131
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.131
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.134
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.134
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-azurekeyvault9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-banana.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/process-item-banana:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    jobgroup: jobexample
  name: process-item-banana
  namespace: default
spec:
  template:
    metadata:
      labels:
        jobgroup: jobexample
      name: jobexample
    spec:
      containers:
      - command:
        - sh
        - -c
        - echo Processing item banana && sleep 5
        image: busybox
        name: c
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/process-item-banana

skipped mutate policy add-safe-to-evict -> resource default/Job/process-item-banana
policy disallow-default-namespace -> resource default/Job/process-item-banana failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/process-item-banana failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/process-item-banana failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/process-item-banana failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/process-item-banana failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/process-item-banana failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/process-item-banana failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/process-item-banana failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-busy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/Job/greets3:
apiVersion: batch/v1
kind: Job
metadata:
  name: greets3
  namespace: student
spec:
  backoffLimit: 3
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "echo Hello, Student! Start job... \nsleep 15 \necho Job is done, by!\n#exit
          1 \n"
        image: busybox:1.36
        name: greets
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/Job/greets3

skipped mutate policy add-safe-to-evict -> resource student/Job/greets3
policy drop-all-capabilities -> resource student/Job/greets3 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/Job/greets3 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/Job/greets3 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource student/Job/greets3 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource student/Job/greets3 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/Job/greets3 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: job-busy1-cron.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/CronJob/greets-cron:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: greets-cron
  namespace: student
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      activeDeadlineSeconds: 60
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - echo Hello, Andrei! Start job at `date` ... && sleep 11 && echo Job
              is fininished, by!
            command:
            - /bin/sh
            image: busybox:1.36
            name: greets-cron
          restartPolicy: Never
  schedule: '*/10 * * * 1-5'
  successfulJobsHistoryLimit: 3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/CronJob/greets-cron

skipped mutate policy add-safe-to-evict -> resource student/CronJob/greets-cron
policy drop-all-capabilities -> resource student/CronJob/greets-cron failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/CronJob/greets-cron failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/CronJob/greets-cron failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource student/CronJob/greets-cron failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource student/CronJob/greets-cron failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/CronJob/greets-cron failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: job-busy1-error.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/greets2-err:
apiVersion: batch/v1
kind: Job
metadata:
  name: greets2-err
  namespace: default
spec:
  activeDeadlineSeconds: 60
  backoffLimit: 3
  template:
    spec:
      containers:
      - args:
        - -c
        - echo Hello, Andrei! Start job... && sleep 15 && echo ..its done, by! &&
          exit 1
        command:
        - /bin/sh
        image: busybox
        name: greets2
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/greets2-err

skipped mutate policy add-safe-to-evict -> resource default/Job/greets2-err
policy disallow-default-namespace -> resource default/Job/greets2-err failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/greets2-err failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/greets2-err failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/greets2-err failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/greets2-err failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/greets2-err failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/greets2-err failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/greets2-err failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-busy1-multy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/Job/greets-multi:
apiVersion: batch/v1
kind: Job
metadata:
  name: greets-multi
  namespace: student
spec:
  backoffLimit: 3
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - "echo Hello, Student! Start job... \nsleep 25 \necho Job is done, by!\n"
        image: busybox:1.36.1
        name: greets
      restartPolicy: Never
  ttlSecondsAfterFinished: 125

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/Job/greets-multi

skipped mutate policy add-safe-to-evict -> resource student/Job/greets-multi
policy drop-all-capabilities -> resource student/Job/greets-multi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/Job/greets-multi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/Job/greets-multi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource student/Job/greets-multi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource student/Job/greets-multi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/Job/greets-multi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: job-busy-cron.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to student/CronJob/greets-cron1:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: greets-cron1
  namespace: student
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      activeDeadlineSeconds: 60
      backoffLimit: 2
      template:
        spec:
          containers:
          - args:
            - -c
            - echo Hello, Andrei! Start job at `date` ... && sleep 11 && echo Job
              is fininished, by!
            command:
            - /bin/sh
            image: dock01:5001/bbox:oct
            name: greets-cron
          imagePullSecrets:
          - name: dock5001
          restartPolicy: Never
  schedule: '*/10 * * * 1-5'
  successfulJobsHistoryLimit: 3

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource student/CronJob/greets-cron1

skipped mutate policy add-safe-to-evict -> resource student/CronJob/greets-cron1
policy drop-all-capabilities -> resource student/CronJob/greets-cron1 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource student/CronJob/greets-cron1 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource student/CronJob/greets-cron1 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource student/CronJob/greets-cron1 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource student/CronJob/greets-cron1 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource student/CronJob/greets-cron1 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: job-cherry.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/process-item-cherry:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    jobgroup: jobexample
  name: process-item-cherry
  namespace: default
spec:
  template:
    metadata:
      labels:
        jobgroup: jobexample
      name: jobexample
    spec:
      containers:
      - command:
        - sh
        - -c
        - echo Processing item cherry && sleep 5
        image: busybox
        name: c
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/process-item-cherry

skipped mutate policy add-safe-to-evict -> resource default/Job/process-item-cherry
policy disallow-default-namespace -> resource default/Job/process-item-cherry failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/process-item-cherry failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/process-item-cherry failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/process-item-cherry failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/process-item-cherry failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/process-item-cherry failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/process-item-cherry failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/process-item-cherry failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-cleanup1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/hello-world-cleanup:
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-cleanup
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - "i=0 \n while [ $i -lt 10 ]\ndo \n /bin/echo hola en linea $i\n let i=$i+1
          \n sleep 1; done"
        command:
        - /bin/bash
        - -c
        image: ubuntu:14.04
        name: test
      restartPolicy: Never
  ttlSecondsAfterFinished: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-cleanup

skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-cleanup
policy disallow-default-namespace -> resource default/Job/hello-world-cleanup failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/hello-world-cleanup failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/hello-world-cleanup failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/hello-world-cleanup failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/hello-world-cleanup failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/hello-world-cleanup failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/hello-world-cleanup failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-container-failed.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-container-failed:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-container-failed
  namespace: default
spec:
  backoffLimit: 2
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 5; exit 0
        image: docker.io/busybox
        name: busybox-normal
      - command:
        - sh
        - -c
        - sleep 5; exit 1
        image: docker.io/busybox
        name: busybox-abnormal
      imagePullSecrets:
      - name: regcred
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-container-failed

skipped mutate policy add-safe-to-evict -> resource default/Job/job-container-failed
policy disallow-default-namespace -> resource default/Job/job-container-failed failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-container-failed failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-container-failed failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-container-failed failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-container-failed failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job-container-failed failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-container-failed failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-container-failed failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-createSecret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Job/kube-prometheus-stack-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission-create
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 47.1.0
    chart: kube-prometheus-stack-47.1.0
    heritage: Helm
    release: kube-prometheus-stack
  name: kube-prometheus-stack-admission-create
  namespace: monitoring
spec:
  template:
    metadata:
      labels:
        app: kube-prometheus-stack-admission-create
        app.kubernetes.io/instance: kube-prometheus-stack
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kube-prometheus-stack
        app.kubernetes.io/version: 47.1.0
        chart: kube-prometheus-stack-47.1.0
        heritage: Helm
        release: kube-prometheus-stack
      name: kube-prometheus-stack-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=kube-prometheus-stack-operator,kube-prometheus-stack-operator.monitoring.svc
        - --namespace=monitoring
        - --secret-name=kube-prometheus-stack-admission
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
        imagePullPolicy: IfNotPresent
        name: create
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-prometheus-stack-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-create

skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-create
policy drop-cap-net-raw -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: job-createSecret15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress/Job/my-ing-ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: my-ing
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.48.1
    helm.sh/chart: ingress-nginx-3.35.0
  name: my-ing-ingress-nginx-admission-create
  namespace: ingress
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: my-ing
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.48.1
        helm.sh/chart: ingress-nginx-3.35.0
      name: my-ing-ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=my-ing-ingress-nginx-controller-admission,my-ing-ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=my-ing-ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/jettech/kube-webhook-certgen:v1.5.1
        imagePullPolicy: IfNotPresent
        name: create
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: my-ing-ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-createSecret23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress/Job/my-ing-ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: my-ing
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.48.1
    helm.sh/chart: ingress-nginx-3.35.0
  name: my-ing-ingress-nginx-admission-create
  namespace: ingress
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: my-ing
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.48.1
        helm.sh/chart: ingress-nginx-3.35.0
      name: my-ing-ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=my-ing-ingress-nginx-controller-admission,my-ing-ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=my-ing-ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/jettech/kube-webhook-certgen:v1.5.1
        imagePullPolicy: IfNotPresent
        name: create
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: my-ing-ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-create
policy drop-all-capabilities -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress/Job/my-ing-ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-createSecret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Job/kube-prometheus-stack-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission-create
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 47.1.0
    chart: kube-prometheus-stack-47.1.0
    heritage: Helm
    release: kube-prometheus-stack
  name: kube-prometheus-stack-admission-create
  namespace: monitoring
spec:
  template:
    metadata:
      labels:
        app: kube-prometheus-stack-admission-create
        app.kubernetes.io/instance: kube-prometheus-stack
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kube-prometheus-stack
        app.kubernetes.io/version: 47.1.0
        chart: kube-prometheus-stack-47.1.0
        heritage: Helm
        release: kube-prometheus-stack
      name: kube-prometheus-stack-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=kube-prometheus-stack-operator,kube-prometheus-stack-operator.monitoring.svc
        - --namespace=monitoring
        - --secret-name=kube-prometheus-stack-admission
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
        imagePullPolicy: IfNotPresent
        name: create
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-prometheus-stack-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-create

skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-create
policy drop-cap-net-raw -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource monitoring/Job/kube-prometheus-stack-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: job-creator-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dena/ClusterRole/job-creator-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: job-creator-role
  namespace: dena
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - get
  - list
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: job-creator-rolebinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/job-creator-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: job-creator-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: job-creator-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: dena

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: job-deadline.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/hello-world-deadline:
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-deadline
  namespace: default
spec:
  activeDeadlineSeconds: 20
  completions: 2
  parallelism: 4
  template:
    metadata: null
    spec:
      containers:
      - args:
        - "i=0 \n while [ $i -lt 100 ]\ndo \n /bin/echo hola en linea $i\n let i=$i+1
          \n sleep 1; done"
        command:
        - /bin/bash
        - -c
        image: ubuntu:latest
        name: test
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-deadline

skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-deadline
policy disallow-default-namespace -> resource default/Job/hello-world-deadline failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/hello-world-deadline failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/hello-world-deadline failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/hello-world-deadline failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/hello-world-deadline failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/hello-world-deadline failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/hello-world-deadline failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/hello-world-deadline failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-default.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/bad-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: bad-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3000"
        image: busybox:v1.35
        name: busybox
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job

skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job
policy disallow-default-namespace -> resource default/Job/bad-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/bad-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/bad-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/bad-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/bad-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/bad-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/bad-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-default1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/bad-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: bad-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3000"
        image: busybox:v1.35
        name: busybox
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job

skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job
policy disallow-default-namespace -> resource default/Job/bad-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/bad-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/bad-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/bad-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/bad-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/bad-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/bad-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-default2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/bad-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: bad-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3000"
        image: busybox:v1.35
        name: busybox
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job

skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job
policy disallow-default-namespace -> resource default/Job/bad-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/bad-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/bad-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/bad-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/bad-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/bad-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/bad-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-default3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/bad-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: bad-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3000"
        image: busybox:v1.35
        name: busybox
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job

skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job
policy disallow-default-namespace -> resource default/Job/bad-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/bad-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/bad-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/bad-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/bad-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/bad-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/bad-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-default4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/bad-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: bad-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3000"
        image: busybox:v1.35
        name: busybox
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job

skipped mutate policy add-safe-to-evict -> resource default/Job/bad-job
policy disallow-default-namespace -> resource default/Job/bad-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/bad-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/bad-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/bad-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/bad-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/bad-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/bad-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-definition.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/math-add-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: math-add-job
  namespace: default
spec:
  completions: 3
  parallelism: 3
  template:
    spec:
      containers:
      - command:
        - expr
        - "3"
        - +
        - "2"
        image: ubuntu
        name: math-add-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job

skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job
policy disallow-default-namespace -> resource default/Job/math-add-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/math-add-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/math-add-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/math-add-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/math-add-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/math-add-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-definition1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/math-add-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: math-add-job
  namespace: default
spec:
  completions: 3
  parallelism: 3
  template:
    spec:
      containers:
      - command:
        - expr
        - "3"
        - +
        - "2"
        image: ubuntu
        name: math-add
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job

skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job
policy disallow-default-namespace -> resource default/Job/math-add-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/math-add-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/math-add-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/math-add-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/math-add-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/math-add-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-definition2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/math-add-job:
apiVersion: batch/v1
kind: Job
metadata:
  creationTimestamp: null
  name: math-add-job
  namespace: default
spec:
  completion: 4
  parallelism: 4
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
      - command:
        - expr
        - "3"
        - +
        - "2"
        image: ubuntu
        name: math-add-job
        resources: {}
      restartPolicy: Never
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job

skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job
policy disallow-default-namespace -> resource default/Job/math-add-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/math-add-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/math-add-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/math-add-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Job/math-add-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/math-add-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-definition3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/demo-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: demo-job
  namespace: default
spec:
  backoffLimit: 3
  completions: 3
  parallelism: 3
  template:
    spec:
      containers:
      - command:
        - expr
        - "3"
        - +
        - "2"
        image: ubuntu
        name: demo-job-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/demo-job

skipped mutate policy add-safe-to-evict -> resource default/Job/demo-job
policy disallow-default-namespace -> resource default/Job/demo-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/demo-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/demo-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/demo-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/demo-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/demo-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/demo-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/demo-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-definition4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/math-add-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: math-add-job
  namespace: default
spec:
  backoffLimit: 4
  completions: 3
  parallelism: 3
  template:
    spec:
      containers:
      - command:
        - expr
        - "3"
        - +
        - "2"
        image: ubuntu
        name: math-add
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job

skipped mutate policy add-safe-to-evict -> resource default/Job/math-add-job
policy disallow-default-namespace -> resource default/Job/math-add-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/math-add-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/math-add-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/math-add-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/math-add-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/math-add-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/math-add-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-demo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-demo:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-demo
  namespace: default
spec:
  template:
    metadata:
      name: job-demo
    spec:
      containers:
      - command:
        - bin/sh
        - -c
        - for i in 9 8 7 6 5 4 3 2 1; do echo $i; done
        image: busybox
        name: counter
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-demo

skipped mutate policy add-safe-to-evict -> resource default/Job/job-demo
policy disallow-default-namespace -> resource default/Job/job-demo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-demo failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-demo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-demo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-demo failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/job-demo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-demo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-demo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-job-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-job-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-job
  template:
    metadata:
      labels:
        app: my-job
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - stress-ng --cpu 1 --timeout 120s
        image: your-stress-ng-image:tag
        name: my-job-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-job-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-job-deployment
policy disallow-default-namespace -> resource default/Deployment/my-job-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-job-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-job-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-job-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-job-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-job-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-job-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-job-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/job:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: job
  template:
    metadata:
      labels:
        app: job
    spec:
      containers:
      - env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres:5432/guru
        - name: SPRING_DATASOURCE_USERNAME
          value: postgres
        - name: SPRING_DATASOURCE_PASSWORD
          value: postgres
        - name: RABBITMQ_HOST
          value: rabbitmq
        - name: RABBITMQ_PORT
          value: "5672"
        image: minamo0o2/scalabol:job-service
        name: job
        ports:
        - containerPort: 8081
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 750m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/job

skipped mutate policy add-safe-to-evict -> resource default/Deployment/job
policy disallow-default-namespace -> resource default/Deployment/job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: job-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/job:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job
  template:
    metadata:
      labels:
        app: job
    spec:
      containers:
      - env:
        - name: SPRING_PROFILE_ACTIVE
          value: k8s
        image: gpalve/jobms:latest
        imagePullPolicy: Always
        name: job
        ports:
        - containerPort: 8082
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/job

skipped mutate policy add-safe-to-evict -> resource default/Deployment/job
policy disallow-default-namespace -> resource default/Deployment/job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/job failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: job-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/job:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: job
  name: job
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job
  template:
    metadata:
      labels:
        app: job
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: k8s
        - name: JAVA_TOOL_OPTIONS
          value: -Xmx512m
        image: collins6299/job-service:latest
        imagePullPolicy: Always
        name: job
        ports:
        - containerPort: 8082
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/job

skipped mutate policy add-safe-to-evict -> resource default/Deployment/job
policy disallow-default-namespace -> resource default/Deployment/job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/job failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: job-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/job:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: job
  name: job
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job
  template:
    metadata:
      labels:
        app: job
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: k8s
        image: ashlesh1910/jobms:latest
        imagePullPolicy: Always
        name: job
        ports:
        - containerPort: 8082
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/job

skipped mutate policy add-safe-to-evict -> resource default/Deployment/job
policy disallow-default-namespace -> resource default/Deployment/job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/job failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: job-eks.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/kube-bench-weekly:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kube-bench-weekly
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - command:
            - kube-bench
            image: docker.io/aquasec/kube-bench:v0.6.8
            name: kube-bench
            volumeMounts:
            - mountPath: /var/lib/etcd
              name: var-lib-etcd
              readOnly: true
            - mountPath: /var/lib/kubelet
              name: var-lib-kubelet
              readOnly: true
            - mountPath: /var/lib/kube-scheduler
              name: var-lib-kube-scheduler
              readOnly: true
            - mountPath: /var/lib/kube-controller-manager
              name: var-lib-kube-controller-manager
              readOnly: true
            - mountPath: /etc/systemd
              name: etc-systemd
              readOnly: true
            - mountPath: /lib/systemd/
              name: lib-systemd
              readOnly: true
            - mountPath: /srv/kubernetes/
              name: srv-kubernetes
              readOnly: true
            - mountPath: /etc/kubernetes
              name: etc-kubernetes
              readOnly: true
            - mountPath: /usr/local/mount-from-host/bin
              name: usr-bin
              readOnly: true
            - mountPath: /etc/cni/net.d/
              name: etc-cni-netd
              readOnly: true
            - mountPath: /opt/cni/bin/
              name: opt-cni-bin
              readOnly: true
          hostPID: true
          restartPolicy: Never
          volumes:
          - hostPath:
              path: /var/lib/etcd
            name: var-lib-etcd
          - hostPath:
              path: /var/lib/kubelet
            name: var-lib-kubelet
          - hostPath:
              path: /var/lib/kube-scheduler
            name: var-lib-kube-scheduler
          - hostPath:
              path: /var/lib/kube-controller-manager
            name: var-lib-kube-controller-manager
          - hostPath:
              path: /etc/systemd
            name: etc-systemd
          - hostPath:
              path: /lib/systemd
            name: lib-systemd
          - hostPath:
              path: /srv/kubernetes
            name: srv-kubernetes
          - hostPath:
              path: /etc/kubernetes
            name: etc-kubernetes
          - hostPath:
              path: /usr/bin
            name: usr-bin
          - hostPath:
              path: /etc/cni/net.d/
            name: etc-cni-netd
          - hostPath:
              path: /opt/cni/bin/
            name: opt-cni-bin
  schedule: 2 * * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/kube-bench-weekly
policy drop-all-capabilities -> resource default/CronJob/kube-bench-weekly failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/kube-bench-weekly failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/kube-bench-weekly failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/kube-bench-weekly failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/kube-bench-weekly failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/kube-bench-weekly failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: job-exam.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/centos-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: centos-job
  namespace: default
spec:
  activeDeadlineSeconds: 5
  template:
    spec:
      containers:
      - args:
        - -c
        - echo 'Hello World'; sleep 25; echo 'Bye'
        command:
        - bash
        image: centos:7
        name: centos-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job

skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job
policy disallow-default-namespace -> resource default/Job/centos-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/centos-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/centos-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/centos-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/centos-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/centos-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/centos-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-exam1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/centos-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: centos-job
  namespace: default
spec:
  activeDeadlineSeconds: 5
  template:
    spec:
      containers:
      - args:
        - -c
        - echo 'Hello World'; sleep 25; echo 'Bye'
        command:
        - bash
        image: centos:7
        name: centos-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job

skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job
policy disallow-default-namespace -> resource default/Job/centos-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/centos-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/centos-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/centos-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/centos-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/centos-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/centos-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-exam2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/centos-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: centos-job
  namespace: default
spec:
  activeDeadlineSeconds: 5
  template:
    spec:
      containers:
      - args:
        - -c
        - echo 'Hello World'; sleep 25; echo 'Bye'
        command:
        - bash
        image: centos:7
        name: centos-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job

skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job
policy disallow-default-namespace -> resource default/Job/centos-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/centos-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/centos-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/centos-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/centos-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/centos-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/centos-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-exam3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/centos-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: centos-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - args:
        - -c
        - echo 'Hello World'; sleep 50; echo 'Bye'
        command:
        - bash
        image: centos:7
        name: centos-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job

skipped mutate policy add-safe-to-evict -> resource default/Job/centos-job
policy disallow-default-namespace -> resource default/Job/centos-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/centos-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/centos-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/centos-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/centos-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/centos-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/centos-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-example.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-example:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-example
  namespace: default
spec:
  completions: 2
  parallelism: 2
  template:
    metadata:
      name: counter
    spec:
      containers:
      - args:
        - -c
        - for i in {1..10}; do echo $i; done
        command:
        - bash
        image: ubuntu
        name: counter
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-example

skipped mutate policy add-safe-to-evict -> resource default/Job/job-example
policy disallow-default-namespace -> resource default/Job/job-example failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-example failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-example failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-example failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-example failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/job-example failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-example failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-example failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-example1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-example:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-example
  namespace: default
spec:
  completions: 2
  parallelism: 2
  template:
    metadata:
      name: counter
    spec:
      containers:
      - args:
        - -c
        - for i in {1..10}; do echo $i; done
        command:
        - bash
        image: ubuntu
        name: counter
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-example

skipped mutate policy add-safe-to-evict -> resource default/Job/job-example
policy disallow-default-namespace -> resource default/Job/job-example failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-example failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-example failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-example failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-example failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/job-example failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-example failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-example failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-failed.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argoci-workflows/Job/fail:
apiVersion: batch/v1
kind: Job
metadata:
  creationTimestamp: "2018-12-02T08:09:25Z"
  labels:
    controller-uid: 95052288-f609-11e8-aa53-42010a80021b
    job-name: fail
  name: fail
  namespace: argoci-workflows
  resourceVersion: "46534173"
  selfLink: /apis/batch/v1/namespaces/argoci-workflows/jobs/fail
  uid: 95052288-f609-11e8-aa53-42010a80021b
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  selector:
    matchLabels:
      controller-uid: 95052288-f609-11e8-aa53-42010a80021b
  template:
    metadata:
      creationTimestamp: null
      labels:
        controller-uid: 95052288-f609-11e8-aa53-42010a80021b
        job-name: fail
    spec:
      containers:
      - command:
        - sh
        - -c
        - exit 1
        image: alpine:latest
        imagePullPolicy: Always
        name: fail
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastProbeTime: "2018-12-02T08:09:27Z"
    lastTransitionTime: "2018-12-02T08:09:27Z"
    message: Job has reached the specified backoff limit
    reason: BackoffLimitExceeded
    status: "True"
    type: Failed
  failed: 1
  startTime: "2018-12-02T08:09:25Z"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argoci-workflows/Job/fail

skipped mutate policy add-safe-to-evict -> resource argoci-workflows/Job/fail
policy disallow-latest-tag -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource argoci-workflows/Job/fail failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource argoci-workflows/Job/fail failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argoci-workflows/Job/fail failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-failed1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argoci-workflows/Job/fail:
apiVersion: batch/v1
kind: Job
metadata:
  creationTimestamp: "2018-12-02T08:09:25Z"
  labels:
    controller-uid: 95052288-f609-11e8-aa53-42010a80021b
    job-name: fail
  name: fail
  namespace: argoci-workflows
  resourceVersion: "46534173"
  selfLink: /apis/batch/v1/namespaces/argoci-workflows/jobs/fail
  uid: 95052288-f609-11e8-aa53-42010a80021b
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  selector:
    matchLabels:
      controller-uid: 95052288-f609-11e8-aa53-42010a80021b
  template:
    metadata:
      creationTimestamp: null
      labels:
        controller-uid: 95052288-f609-11e8-aa53-42010a80021b
        job-name: fail
    spec:
      containers:
      - command:
        - sh
        - -c
        - exit 1
        image: alpine:latest
        imagePullPolicy: Always
        name: fail
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastProbeTime: "2018-12-02T08:09:27Z"
    lastTransitionTime: "2018-12-02T08:09:27Z"
    message: Job has reached the specified backoff limit
    reason: BackoffLimitExceeded
    status: "True"
    type: Failed
  failed: 1
  startTime: "2018-12-02T08:09:25Z"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argoci-workflows/Job/fail

skipped mutate policy add-safe-to-evict -> resource argoci-workflows/Job/fail
policy disallow-latest-tag -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource argoci-workflows/Job/fail failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource argoci-workflows/Job/fail failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argoci-workflows/Job/fail failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource argoci-workflows/Job/fail failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-gsm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.137
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.137
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.138
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.138
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.142
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.142
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.146
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.146
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.125
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.nju.edu.cn/jenkins-x/jx-boot:3.10.131
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.nju.edu.cn/jenkins-x/jx-boot:3.10.131
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.131
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.131
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.126
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.134
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.134
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-gsm9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: jx-boot
    jenkins-x.io/kind: jx-git-operator
  namespace: default
spec:
  backoffLimit: 4
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: jx-boot
        jenkins-x.io/kind: jx-git-operator
    spec:
      containers:
      - args:
        - apply
        command:
        - make
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        imagePullPolicy: Always
        name: job
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace/source
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - gitops
        - git
        - clone
        command:
        - jx
        env:
        - name: XDG_CONFIG_HOME
          value: /workspace/xdg_config
        envFrom:
        - secretRef:
            name: jx-boot-job-env-vars
            optional: true
        image: ghcr.io/jenkins-x/jx-boot:3.10.136
        name: git-clone
        volumeMounts:
        - mountPath: /workspace
          name: workspace-volume
        workingDir: /workspace
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: jx-boot-job
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: workspace-volume
  ttlSecondsAfterFinished: 86400

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/
policy disallow-default-namespace -> resource default/Job/ failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/ failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/ failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/ failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/ failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Job/ failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/ failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: job-history-limit-cronjob.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/history-limit-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: history-limit-cronjob
  namespace: default
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - echo
            - Hello from the history-limit CronJob
            image: busybox
            name: history-limit-container
          restartPolicy: Never
  schedule: '*/1 * * * *'
  successfulJobsHistoryLimit: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/history-limit-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/history-limit-cronjob
policy disallow-latest-tag -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/history-limit-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: job-HPA.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/job-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: job-hpa
  namespace: default
spec:
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 60
        type: Pods
        value: 1
      stabilizationWindowSeconds: 60
    scaleUp:
      policies:
      - periodSeconds: 60
        type: Pods
        value: 1
      stabilizationWindowSeconds: 0
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: job

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: Job-hubble-generate-certs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Job/hubble-generate-certs:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
  labels:
    app.kubernetes.io/name: hubble-generate-certs
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-generate-certs
  name: hubble-generate-certs
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        k8s-app: hubble-generate-certs
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --ca-generate=true
        - --ca-reuse-secret
        - --ca-secret-namespace=kube-system
        - --ca-secret-name=cilium-ca
        - --ca-common-name=Cilium CA
        command:
        - /usr/bin/cilium-certgen
        env:
        - name: CILIUM_CERTGEN_CONFIG
          value: |
            certs:
            - name: hubble-server-certs
              namespace: kube-system
              commonName: "*.default.hubble-grpc.cilium.io"
              hosts:
              - "*.default.hubble-grpc.cilium.io"
              usage:
              - signing
              - key encipherment
              - server auth
              - client auth
              validity: 8760h
            - name: hubble-relay-client-certs
              namespace: kube-system
              commonName: "*.hubble-relay.cilium.io"
              hosts:
              - "*.hubble-relay.cilium.io"
              usage:
              - signing
              - key encipherment
              - client auth
              validity: 8760h
        image: quay.io/cilium/certgen:v0.2.1@sha256:ab6b1928e9c5f424f6b0f51c68065b9fd85e2f8d3e5f21fbd1a3cb27e6fb9321
        imagePullPolicy: IfNotPresent
        name: certgen
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      hostNetwork: false
      restartPolicy: OnFailure
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: hubble-generate-certs
      serviceAccountName: hubble-generate-certs
  ttlSecondsAfterFinished: 1800

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Job/hubble-generate-certs

skipped mutate policy add-safe-to-evict -> resource kube-system/Job/hubble-generate-certs
policy drop-cap-net-raw -> resource kube-system/Job/hubble-generate-certs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Job/hubble-generate-certs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Job/hubble-generate-certs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kube-system/Job/hubble-generate-certs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/Job/hubble-generate-certs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-image-gen-store.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gen/Job/image-gen-store-$RANDOM_STRING:
apiVersion: batch/v1
kind: Job
metadata:
  name: image-gen-store-$RANDOM_STRING
  namespace: gen
spec:
  template:
    spec:
      containers:
      - args:
        - $PROMPT
        image: $IMAGE_GEN_STORE_IMAGE
        name: image-gen-store
        volumeMounts:
        - mountPath: /etc/secret-volume
          name: secret-volume
      restartPolicy: Never
      volumes:
      - name: secret-volume
        secret:
          secretName: open-api-key

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource gen/Job/image-gen-store-$RANDOM_STRING

skipped mutate policy add-safe-to-evict -> resource gen/Job/image-gen-store-$RANDOM_STRING
policy disallow-latest-tag -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource gen/Job/image-gen-store-$RANDOM_STRING failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/job-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: job-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: scalabol.job
    http:
      paths:
      - backend:
          service:
            name: job
            port:
              number: 8081
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: job-init.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/init-postgres-job:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    job-name: init-postgres-job
  name: init-postgres-job
  namespace: default
spec:
  backoffLimit: 5
  template:
    metadata:
      labels:
        job-name: init-postgres-job
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - psql -h postgres-service -U admin -d log -f /config/init.sql -W password
        image: postgres:latest
        name: init-postgres
        volumeMounts:
        - mountPath: /config
          name: config
      restartPolicy: Never
      volumes:
      - configMap:
          name: postgres-init-script
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/init-postgres-job

skipped mutate policy add-safe-to-evict -> resource default/Job/init-postgres-job
policy disallow-default-namespace -> resource default/Job/init-postgres-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/init-postgres-job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/init-postgres-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/init-postgres-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/init-postgres-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/init-postgres-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/init-postgres-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/init-postgres-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/multinode-svc:
apiVersion: v1
kind: Service
metadata:
  name: multinode-svc
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: nccl
    port: 29500
    targetPort: 29500
  selector:
    job-name: multinode-job

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: job-manifest_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/multinode-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: multinode-job
  namespace: default
spec:
  completionMode: Indexed
  completions: 2
  parallelism: 2
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - python3 -m torch.distributed.run --nnodes=$NNODES --node_rank=$JOB_COMPLETION_INDEX
          --nproc_per_node=$NGPUS --master_addr $MASTER_ADDR --master_port $MASTER_PORT  job_test.py
        env:
        - name: MASTER_ADDR
          value: multinode-job-0.multinode-svc.default.svc.cluster.local
        - name: MASTER_PORT
          value: "29500"
        - name: NNODES
          value: "2"
        - name: NGPUS
          value: "1"
        image: kato0209/load_model:latest
        name: multinode
        ports:
        - containerPort: 29500
          name: nccl
        resources:
          limits:
            nvidia.com/gpu: 1
      restartPolicy: Never
      subdomain: multinode-svc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/multinode-job

skipped mutate policy add-safe-to-evict -> resource default/Job/multinode-job
policy disallow-default-namespace -> resource default/Job/multinode-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/multinode-job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/multinode-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/multinode-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/multinode-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/multinode-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-ro-rootfs -> resource default/Job/multinode-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/multinode-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-master.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/kube-bench-master:
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench-master
  namespace: default
spec:
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - command:
        - kube-bench
        - master
        - --version
        - "1.11"
        - --check=1.1.1,1.1.2,1.1.3,1.1.4,1.1.5,1.1.6,1.1.7,1.1.8,1.1.9,1.1.10,1.1.11,1.1.12,1.1.13,1.1.14,1.1.15,1.1.16,1.1.17,1.1.18,1.1.19,1.1.20,1.1.21,1.1.22,1.1.23,1.1.24,1.1.25,1.1.26,1.1.27,1.1.28,1.1.29,1.1.30,1.1.31,1.1.32,1.1.33,1.1.34,1.1.35,1.1.36,1.1.37,1.1.38,1.1.39,1.2.1,1.2.2,1.3.1,1.3.2,1.3.3,1.3.4,1.3.5,1.3.6,1.3.7,1.4.1,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,1.4.8,1.4.9,1.4.10,1.4.13,1.4.14,1.4.15,1.4.16,1.4.17,1.4.18,1.5.1,1.5.2,1.5.3,1.5.4,1.5.5,1.5.6,1.5.7,1.6.1,1.6.2,1.6.3,1.6.4,1.6.5,1.6.6,1.6.7,1.6.8,1.7.1,1.7.2,1.7.3,1.7.4,1.7.5,1.7.6,1.7.7
        image: aquasec/kube-bench:latest
        name: kube-bench
        volumeMounts:
        - mountPath: /var/lib/etcd
          name: var-lib-etcd
        - mountPath: /etc/kubernetes
          name: etc-kubernetes
        - mountPath: /usr/bin
          name: usr-bin
      hostPID: true
      nodeSelector:
        kubernetes.io/role: master
      restartPolicy: Never
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/etcd
        name: var-lib-etcd
      - hostPath:
          path: /etc/kubernetes
        name: etc-kubernetes
      - hostPath:
          path: /opt/kubernetes/bin
        name: usr-bin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/kube-bench-master
policy disallow-default-namespace -> resource default/Job/kube-bench-master failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/kube-bench-master failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/kube-bench-master failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/kube-bench-master failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/kube-bench-master failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/kube-bench-master failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/kube-bench-master failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/kube-bench-master failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: job-mq.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-wq-1:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-wq-1
  namespace: default
spec:
  completions: 8
  parallelism: 2
  template:
    metadata:
      name: job-wq-1
    spec:
      containers:
      - env:
        - name: BROKER_URL
          value: amqp://guest:guest@rabbitmq-service:5672
        - name: QUEUE
          value: job1
        image: siramkarthik/job-wq-1
        name: c
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-wq-1

skipped mutate policy add-safe-to-evict -> resource default/Job/job-wq-1
policy disallow-default-namespace -> resource default/Job/job-wq-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-wq-1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-wq-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-wq-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-wq-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/job-wq-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-wq-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-wq-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-mq1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-wq-1:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-wq-1
  namespace: default
spec:
  completions: 8
  parallelism: 2
  template:
    metadata:
      name: job-wq-1
    spec:
      containers:
      - env:
        - name: BROKER_URL
          value: amqp://guest:guest@rabbitmq-service:5672
        - name: QUEUE
          value: job1
        image: siramkarthik/job-wq-1
        name: c
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-wq-1

skipped mutate policy add-safe-to-evict -> resource default/Job/job-wq-1
policy disallow-default-namespace -> resource default/Job/job-wq-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-wq-1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-wq-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-wq-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-wq-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/job-wq-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-wq-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-wq-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/kube-bench-node:
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench-node
  namespace: default
spec:
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - command:
        - kube-bench
        - --version
        - "1.11"
        image: aquasec/kube-bench:latest
        imagePullPolicy: Always
        name: kube-bench
        volumeMounts:
        - mountPath: /var/lib/kubelet
          name: var-lib-kubelet
        - mountPath: /etc/systemd
          name: etc-systemd
        - mountPath: /etc/kubernetes
          name: etc-kubernetes
        - mountPath: /usr/bin
          name: usr-bin
      hostPID: true
      restartPolicy: Never
      volumes:
      - hostPath:
          path: /var/lib/kubelet
        name: var-lib-kubelet
      - hostPath:
          path: /etc/systemd
        name: etc-systemd
      - hostPath:
          path: /etc/kubernetes
        name: etc-kubernetes
      - hostPath:
          path: /opt/kubernetes/bin
        name: usr-bin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/kube-bench-node
policy disallow-default-namespace -> resource default/Job/kube-bench-node failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/kube-bench-node failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/kube-bench-node failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/kube-bench-node failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/kube-bench-node failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/kube-bench-node failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/kube-bench-node failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/kube-bench-node failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: job-nodejs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: akhmadwildan/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job
policy disallow-default-namespace -> resource default/Job/nodejs-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/node-js:
apiVersion: batch/v1
kind: Job
metadata:
  name: node-js
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: khannedy/nodejs-job
        name: nodejs-job
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/node-js

skipped mutate policy add-safe-to-evict -> resource default/Job/node-js
policy disallow-default-namespace -> resource default/Job/node-js failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/node-js failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/node-js failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/node-js failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/node-js failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/node-js failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/node-js failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/node-js failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-nodejs-node-selector.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/nodejs-job-node-selector:
apiVersion: batch/v1
kind: Job
metadata:
  name: nodejs-job-node-selector
  namespace: default
spec:
  completions: 4
  parallelism: 2
  template:
    spec:
      containers:
      - image: akhmadwildan/nodejs-job
        name: nodejs-job
      nodeSelector:
        cpu: "true"
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job-node-selector

skipped mutate policy add-safe-to-evict -> resource default/Job/nodejs-job-node-selector
policy disallow-default-namespace -> resource default/Job/nodejs-job-node-selector failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/nodejs-job-node-selector failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-name:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    annotation-key1: annotation-value1
  labels:
    label-key1: label-value1
  name: job-name
  namespace: default
spec:
  completions: 5
  parallelism: 2
  selector:
    matchLabels:
      abel-key1: label-value1
  template:
    metadata:
      labels:
        label-key1: label-value1
      name: pod-name
    spec:
      containers:
      - image: image-name
        name: container-name
        ports:
        - containerPort: 80
      nodeSelector:
        hardisk: ssd
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-name

skipped mutate policy add-safe-to-evict -> resource default/Job/job-name
policy disallow-default-namespace -> resource default/Job/job-name failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-name failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-name failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-name failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-name failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/job-name failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-name failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-name failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-node-selector9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/python-job:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    author: ashry-ramadhan
    category: job
    context: tutorial
  name: python-job
  namespace: default
spec:
  completions: 3
  parallelism: 2
  template:
    metadata:
      labels:
        category: job
        context: tutorial
      name: job-pod
    spec:
      containers:
      - image: localhost:5000/hello-world-python
        name: python-hello-world
      nodeSelector:
        type: main-cpu
      restartPolicy: Never
  ttlSecondsAfterFinished: 100

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/python-job

skipped mutate policy add-safe-to-evict -> resource default/Job/python-job
policy disallow-default-namespace -> resource default/Job/python-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/python-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/python-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/python-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/python-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/python-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/python-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-normal-end.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-normal-end:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-normal-end
  namespace: default
spec:
  completions: 6
  parallelism: 2
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 5; exit 0
        image: docker.io/busybox
        name: busybox
      imagePullSecrets:
      - name: regcred
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-normal-end

skipped mutate policy add-safe-to-evict -> resource default/Job/job-normal-end
policy disallow-default-namespace -> resource default/Job/job-normal-end failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-normal-end failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-normal-end failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-normal-end failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-normal-end failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job-normal-end failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-normal-end failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-normal-end failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job03:
apiVersion: batch/v1
kind: Job
metadata:
  name: job03
  namespace: default
  ownerReferences:
    name: foo-bar
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job03

skipped mutate policy add-safe-to-evict -> resource default/Job/job03
policy disallow-default-namespace -> resource default/Job/job03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job02:
apiVersion: batch/v1
kind: Job
metadata:
  name: job02
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job02

skipped mutate policy add-safe-to-evict -> resource default/Job/job02
policy disallow-default-namespace -> resource default/Job/job02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job03:
apiVersion: batch/v1
kind: Job
metadata:
  name: job03
  namespace: default
  ownerReferences:
    name: foo-bar
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job03

skipped mutate policy add-safe-to-evict -> resource default/Job/job03
policy disallow-default-namespace -> resource default/Job/job03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job02:
apiVersion: batch/v1
kind: Job
metadata:
  name: job02
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job02

skipped mutate policy add-safe-to-evict -> resource default/Job/job02
policy disallow-default-namespace -> resource default/Job/job02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job03:
apiVersion: batch/v1
kind: Job
metadata:
  name: job03
  namespace: default
  ownerReferences:
    name: foo-bar
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job03

skipped mutate policy add-safe-to-evict -> resource default/Job/job03
policy disallow-default-namespace -> resource default/Job/job03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job02:
apiVersion: batch/v1
kind: Job
metadata:
  name: job02
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job02

skipped mutate policy add-safe-to-evict -> resource default/Job/job02
policy disallow-default-namespace -> resource default/Job/job02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job03:
apiVersion: batch/v1
kind: Job
metadata:
  name: job03
  namespace: default
  ownerReferences:
    name: foo-bar
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job03

skipped mutate policy add-safe-to-evict -> resource default/Job/job03
policy disallow-default-namespace -> resource default/Job/job03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job02:
apiVersion: batch/v1
kind: Job
metadata:
  name: job02
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job02

skipped mutate policy add-safe-to-evict -> resource default/Job/job02
policy disallow-default-namespace -> resource default/Job/job02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job03:
apiVersion: batch/v1
kind: Job
metadata:
  name: job03
  namespace: default
  ownerReferences:
    name: foo-bar
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job03

skipped mutate policy add-safe-to-evict -> resource default/Job/job03
policy disallow-default-namespace -> resource default/Job/job03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-not-patched4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job02:
apiVersion: batch/v1
kind: Job
metadata:
  name: job02
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job02

skipped mutate policy add-safe-to-evict -> resource default/Job/job02
policy disallow-default-namespace -> resource default/Job/job02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-parallel.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/hello-world-parallel:
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-parallel
  namespace: default
spec:
  parallelism: 4
  template:
    spec:
      containers:
      - args:
        - "i=0 \n while [ $i -lt 100 ]\ndo \n /bin/echo hola en linea $i\n let i=$i+1
          \n sleep 1; done"
        command:
        - /bin/bash
        - -c
        image: ubuntu:latest
        name: test
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-parallel

skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-parallel
policy disallow-default-namespace -> resource default/Job/hello-world-parallel failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/hello-world-parallel failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/hello-world-parallel failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/hello-world-parallel failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/hello-world-parallel failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/hello-world-parallel failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/hello-world-parallel failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/hello-world-parallel failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-parallel-backoff.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/hello-world-parallel-backoff:
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-parallel-backoff
  namespace: default
spec:
  backoffLimit: 2
  parallelism: 2
  template:
    metadata: null
    spec:
      containers:
      - args:
        - "i=0 \n while [ $i -lt 100 ]\ndo \n /bin/echo hola en linea $i\n let i=$i+1
          \n sleep 1; done"
        command:
        - /bin/bash
        - -c
        image: ubuntu:14.04
        name: test
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-parallel-backoff

skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-parallel-backoff
policy disallow-default-namespace -> resource default/Job/hello-world-parallel-backoff failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/hello-world-parallel-backoff failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/hello-world-parallel-backoff failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/hello-world-parallel-backoff failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/hello-world-parallel-backoff failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/hello-world-parallel-backoff failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/hello-world-parallel-backoff failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-parallel-completions.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/hello-world-parallel-completions:
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-parallel-completions
  namespace: default
spec:
  completions: 5
  parallelism: 4
  template:
    spec:
      containers:
      - args:
        - "i=0 \n while [ $i -lt 10 ]\ndo \n /bin/echo hola en linea $i\n let i=$i+1
          \n sleep 1; done"
        command:
        - /bin/bash
        - -c
        image: ubuntu:latest
        name: test
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-parallel-completions

skipped mutate policy add-safe-to-evict -> resource default/Job/hello-world-parallel-completions
policy disallow-default-namespace -> resource default/Job/hello-world-parallel-completions failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/hello-world-parallel-completions failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-parallelism.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job-wq-2:
apiVersion: batch/v1
kind: Job
metadata:
  name: job-wq-2
  namespace: default
spec:
  parallelism: 2
  template:
    metadata:
      name: job-wq-2
    spec:
      containers:
      - env:
        - name: BROKER_URL
          value: amqp://guest:guest@rabbitmq-service:5672
        - name: QUEUE
          value: job2
        image: gcr.io/myproject/job-wq-2
        name: c
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job-wq-2

skipped mutate policy add-safe-to-evict -> resource default/Job/job-wq-2
policy disallow-default-namespace -> resource default/Job/job-wq-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/job-wq-2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/job-wq-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job-wq-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job-wq-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/job-wq-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job-wq-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job-wq-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-parallelism1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/myjobparallel:
apiVersion: batch/v1
kind: Job
metadata:
  name: myjobparallel
  namespace: default
spec:
  completions: 5
  parallelism: 2
  template:
    metadata:
      labels:
        app: myjobparallel
    spec:
      containers:
      - args:
        - sleep
        - "10"
        image: busybox:latest
        name: main
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/myjobparallel

skipped mutate policy add-safe-to-evict -> resource default/Job/myjobparallel
policy disallow-default-namespace -> resource default/Job/myjobparallel failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/myjobparallel failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/myjobparallel failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/myjobparallel failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/myjobparallel failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/myjobparallel failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/myjobparallel failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/myjobparallel failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/not-important:
apiVersion: batch/v1
kind: Job
metadata:
  name: not-important
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: kbench
        volumeDevices: []
        volumeMounts:
        - mountPath: /volume/
          name: vol
      volumes:
      - name: vol
        persistentVolumeClaim:
          claimName: kbench-k8s-cephfs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/not-important

skipped mutate policy add-safe-to-evict -> resource default/Job/not-important
policy disallow-default-namespace -> resource default/Job/not-important failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Job/not-important failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Job/not-important failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/not-important failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/not-important failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/not-important failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/not-important failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/not-important failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/not-important failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: job-patch1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/not-important:
apiVersion: batch/v1
kind: Job
metadata:
  name: not-important
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: kbench
        volumeDevices:
        - devicePath: /volume/test
          name: vol
        volumeMounts: []
      volumes:
      - name: vol
        persistentVolumeClaim:
          claimName: kbench-k8s-rbd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/not-important

skipped mutate policy add-safe-to-evict -> resource default/Job/not-important
policy disallow-default-namespace -> resource default/Job/not-important failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Job/not-important failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Job/not-important failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/not-important failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/not-important failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/not-important failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/not-important failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/not-important failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/not-important failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: job-patch2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/not-important:
apiVersion: batch/v1
kind: Job
metadata:
  name: not-important
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: kbench
        volumeDevices: []
        volumeMounts:
        - mountPath: /volume/
          name: vol
      volumes:
      - name: vol
        persistentVolumeClaim:
          claimName: kbench-local-path

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/not-important

skipped mutate policy add-safe-to-evict -> resource default/Job/not-important
policy disallow-default-namespace -> resource default/Job/not-important failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-helm-tiller -> resource default/Job/not-important failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource default/Job/not-important failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/not-important failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/not-important failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/not-important failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/not-important failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/not-important failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/not-important failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 4, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: job-patch3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/volume-migration:
apiVersion: v1
kind: Job
metadata:
  name: volume-migration
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: old-vol
        persistentVolumeClaim:
          claimName: example-pvc-old
      - name: new-vol
        persistentVolumeClaim:
          claimName: example-pvc-new

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration

skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration
policy disallow-default-namespace -> resource default/Job/volume-migration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/volume-migration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/volume-migration failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource default/Job/volume-migration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource default/Job/volume-migration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patch4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/volume-migration:
apiVersion: v1
kind: Job
metadata:
  name: volume-migration
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: old-vol
        persistentVolumeClaim:
          claimName: homarr-icons
      - name: new-vol
        persistentVolumeClaim:
          claimName: homarr-icons-bak

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration

skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration
policy disallow-default-namespace -> resource default/Job/volume-migration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/volume-migration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/volume-migration failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource default/Job/volume-migration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource default/Job/volume-migration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patch5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/volume-migration:
apiVersion: v1
kind: Job
metadata:
  name: volume-migration
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: old-vol
        persistentVolumeClaim:
          claimName: joplin-db-repo1-old
      - name: new-vol
        persistentVolumeClaim:
          claimName: joplin-db-repo1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration

skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration
policy disallow-default-namespace -> resource default/Job/volume-migration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/volume-migration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/volume-migration failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource default/Job/volume-migration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource default/Job/volume-migration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patch6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/volume-migration:
apiVersion: v1
kind: Job
metadata:
  name: volume-migration
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: old-vol
        persistentVolumeClaim:
          claimName: nextcloud-nextcloud
      - name: new-vol
        persistentVolumeClaim:
          claimName: nextcloud-nextcloud-new

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration

skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration
policy disallow-default-namespace -> resource default/Job/volume-migration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/volume-migration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/volume-migration failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource default/Job/volume-migration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource default/Job/volume-migration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patch7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/volume-migration:
apiVersion: v1
kind: Job
metadata:
  name: volume-migration
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: old-vol
        persistentVolumeClaim:
          claimName: vaultwarden
      - name: new-vol
        persistentVolumeClaim:
          claimName: vaultwarden-new

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration

skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration
policy disallow-default-namespace -> resource default/Job/volume-migration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/volume-migration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/volume-migration failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource default/Job/volume-migration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource default/Job/volume-migration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patch8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/volume-migration:
apiVersion: v1
kind: Job
metadata:
  name: volume-migration
  namespace: default
spec:
  template:
    spec:
      volumes:
      - name: old-vol
        persistentVolumeClaim:
          claimName: wpcyberengine-wordpress
      - name: new-vol
        persistentVolumeClaim:
          claimName: wpcyberengine-wordpress-new

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration

skipped mutate policy add-safe-to-evict -> resource default/Job/volume-migration
policy disallow-default-namespace -> resource default/Job/volume-migration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Job/volume-migration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/volume-migration failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/

policy require-ro-rootfs -> resource default/Job/volume-migration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/

policy restrict-image-registries -> resource default/Job/volume-migration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/


pass: 4, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patched.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job01:
apiVersion: batch/v1
kind: Job
metadata:
  name: job01
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job01

skipped mutate policy add-safe-to-evict -> resource default/Job/job01
policy disallow-default-namespace -> resource default/Job/job01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-patched1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job01:
apiVersion: batch/v1
kind: Job
metadata:
  name: job01
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job01

skipped mutate policy add-safe-to-evict -> resource default/Job/job01
policy disallow-default-namespace -> resource default/Job/job01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-patched2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job01:
apiVersion: batch/v1
kind: Job
metadata:
  name: job01
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job01

skipped mutate policy add-safe-to-evict -> resource default/Job/job01
policy disallow-default-namespace -> resource default/Job/job01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-patched3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job01:
apiVersion: batch/v1
kind: Job
metadata:
  name: job01
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job01

skipped mutate policy add-safe-to-evict -> resource default/Job/job01
policy disallow-default-namespace -> resource default/Job/job01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-patched4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/job01:
apiVersion: batch/v1
kind: Job
metadata:
  name: job01
  namespace: default
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:1.35
        name: busybox
      restartPolicy: Never
  ttlSecondsAfterFinished: 900

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/job01

skipped mutate policy add-safe-to-evict -> resource default/Job/job01
policy disallow-default-namespace -> resource default/Job/job01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/job01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/job01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/job01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/job01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/job01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/job01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: job-patchWebhook1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Job/kube-prometheus-stack-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission-patch
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 47.1.0
    chart: kube-prometheus-stack-47.1.0
    heritage: Helm
    release: kube-prometheus-stack
  name: kube-prometheus-stack-admission-patch
  namespace: monitoring
spec:
  template:
    metadata:
      labels:
        app: kube-prometheus-stack-admission-patch
        app.kubernetes.io/instance: kube-prometheus-stack
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kube-prometheus-stack
        app.kubernetes.io/version: 47.1.0
        chart: kube-prometheus-stack-47.1.0
        heritage: Helm
        release: kube-prometheus-stack
      name: kube-prometheus-stack-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=kube-prometheus-stack-admission
        - --namespace=monitoring
        - --secret-name=kube-prometheus-stack-admission
        - --patch-failure-policy=
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
        imagePullPolicy: IfNotPresent
        name: patch
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-prometheus-stack-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-patch

skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-patch
policy drop-cap-net-raw -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: job-patchWebhook15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress/Job/my-ing-ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: my-ing
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.48.1
    helm.sh/chart: ingress-nginx-3.35.0
  name: my-ing-ingress-nginx-admission-patch
  namespace: ingress
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: my-ing
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.48.1
        helm.sh/chart: ingress-nginx-3.35.0
      name: my-ing-ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=my-ing-ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=my-ing-ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/jettech/kube-webhook-certgen:v1.5.1
        imagePullPolicy: IfNotPresent
        name: patch
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: my-ing-ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patchWebhook23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress/Job/my-ing-ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: my-ing
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.48.1
    helm.sh/chart: ingress-nginx-3.35.0
  name: my-ing-ingress-nginx-admission-patch
  namespace: ingress
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: my-ing
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.48.1
        helm.sh/chart: ingress-nginx-3.35.0
      name: my-ing-ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=my-ing-ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=my-ing-ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/jettech/kube-webhook-certgen:v1.5.1
        imagePullPolicy: IfNotPresent
        name: patch
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: my-ing-ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress/Job/my-ing-ingress-nginx-admission-patch
policy drop-all-capabilities -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ingress/Job/my-ing-ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: job-patchWebhook4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Job/kube-prometheus-stack-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission-patch
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 47.1.0
    chart: kube-prometheus-stack-47.1.0
    heritage: Helm
    release: kube-prometheus-stack
  name: kube-prometheus-stack-admission-patch
  namespace: monitoring
spec:
  template:
    metadata:
      labels:
        app: kube-prometheus-stack-admission-patch
        app.kubernetes.io/instance: kube-prometheus-stack
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kube-prometheus-stack
        app.kubernetes.io/version: 47.1.0
        chart: kube-prometheus-stack-47.1.0
        heritage: Helm
        release: kube-prometheus-stack
      name: kube-prometheus-stack-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=kube-prometheus-stack-admission
        - --namespace=monitoring
        - --secret-name=kube-prometheus-stack-admission
        - --patch-failure-policy=
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
        imagePullPolicy: IfNotPresent
        name: patch
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-prometheus-stack-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-patch

skipped mutate policy add-safe-to-evict -> resource monitoring/Job/kube-prometheus-stack-admission-patch
policy drop-cap-net-raw -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy restrict-image-registries -> resource monitoring/Job/kube-prometheus-stack-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: Job-pi.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/pi-calc-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: pi-calc-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - command:
        - perl
        - -Mbignum=bpi
        - -wle
        - print bpi(2000)
        image: perl
        name: pi-calc-container
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/pi-calc-job

skipped mutate policy add-safe-to-evict -> resource default/Job/pi-calc-job
policy disallow-default-namespace -> resource default/Job/pi-calc-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/pi-calc-job failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/pi-calc-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/pi-calc-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/pi-calc-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/pi-calc-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/pi-calc-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/pi-calc-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: job-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/job-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app-label: job-app
  template:
    metadata:
      labels:
        app-label: job-app
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: job-db-secrets
        image: ssamantr/job-service:1.0.0
        name: job-app
        ports:
        - containerPort: 8080
          name: job-port
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
          periodSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 2000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        startupProbe:
          failureThreshold: 35
          httpGet:
            path: /actuator/health
            port: 8080
          periodSeconds: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/job-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/job-app
policy disallow-default-namespace -> resource default/Deployment/job-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/job-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/job-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/job-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/job-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/job-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: job-service-load-balancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/job-service-lb:
apiVersion: v1
kind: Service
metadata:
  name: job-service-lb
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app-label: job-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

