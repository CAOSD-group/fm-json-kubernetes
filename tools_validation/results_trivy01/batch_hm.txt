
Report Summary

┌─────────────────┬────────────┬───────────────────┐
│     Target      │    Type    │ Misconfigurations │
├─────────────────┼────────────┼───────────────────┤
│ RBAC210.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC210_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC210_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC210_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC299.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC299_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC400.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC400_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ RBAC400_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac144_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac144_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac144_4.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac144_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac145.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac145_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac145_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac145_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac145_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac146.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac146_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac147.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac147_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac148.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac148_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac149.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac149_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac15.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac150.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac150_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac151.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac153.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac153_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac153_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac154.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac154_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac154_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac155.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac155_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac156.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac156_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac157.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac157_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac157_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac157_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac157_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac158.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac158_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac158_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac15_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac15_2.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac15_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac15_4.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac16.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac161.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac161_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac163.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac163_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac164.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_10.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_11.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_12.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_13.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_14.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_15.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_16.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_17.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_18.yaml │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_19.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_4.yaml  │ kubernetes │         5         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_7.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_8.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac168_9.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac16_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac16_2.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac16_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac16_4.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac17.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac170.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac170_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac171_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac172.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac172_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac173.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac173_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac173_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac173_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac173_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac178.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac178_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac17_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac17_2.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac17_3.yaml   │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac17_4.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac18.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac183.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac183_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac183_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac184.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac186.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac186_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac186_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac186_3.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac186_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac187.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac187_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac187_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac187_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac187_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac188.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac188_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac188_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac188_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac188_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac189.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac18_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac18_2.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac18_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac18_4.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac19.yaml     │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac190.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac190_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac190_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac190_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac190_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac191.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac191_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac191_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac191_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac191_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac192.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac192_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac192_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac192_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac192_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac193.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac193_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac193_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac193_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac193_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac194.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac194_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac194_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac198.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac198_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac199.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac199_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac199_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac19_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac2.yaml      │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac20.yaml     │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac200.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac200_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac200_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac201.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac201_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac201_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac202.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac202_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac203.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac203_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac204.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac204_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac204_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac204_3.yaml  │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac205.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac205_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac205_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac206.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac206_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac206_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac207.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac207_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac208.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac208_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac208_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac208_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac209.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac209_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac21.yaml     │ kubernetes │         4         │
├─────────────────┼────────────┼───────────────────┤
│ rbac211.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac212.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac212_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac212_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac212_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac212_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac213.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac213_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac213_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac213_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac213_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac214.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac214_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac214_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac214_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac214_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac215.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac215_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac215_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac215_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac215_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac216.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac217.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac217_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac217_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac217_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac217_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac218.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac218_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac218_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac218_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac218_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac219.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac219_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac219_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac219_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac219_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac21_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac22.yaml     │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac220.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac220_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac220_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac220_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac220_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac221.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac221_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac221_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac222.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac222_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac223.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac223_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac223_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac224.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac224_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac224_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac224_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac224_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac228.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac228_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac22_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac245.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac245_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac246.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac246_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac246_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac247.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac247_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac248.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac248_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac249.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac249_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac250.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac251.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac252.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac252_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac253.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac253_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac254.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac254_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac254_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac256.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac256_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac257.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac257_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac258.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac258_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac258_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac259.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac260.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac260_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac260_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac261.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac261_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac262.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac263.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac264.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac264_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac264_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac264_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac264_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac265.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac265_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac265_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac265_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac265_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac267.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac267_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac267_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac268.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac268_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac268_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac268_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac268_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac269.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac269_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac269_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac269_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac269_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac270.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac270_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac270_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac271.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac273.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac274.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac274_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac275.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac277.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac277_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac279.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac279_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac279_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac280.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac280_1.yaml  │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac280_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac280_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac280_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac281.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac281_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac281_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac283.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac284.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac284_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac284_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac285.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac285_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac285_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac285_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac286.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac286_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac287.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac287_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac287_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac288.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac288_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac289.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac289_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac290.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac290_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac291.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac292.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac292_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac292_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac293.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac293_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac293_4.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac293_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac293_8.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac294.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac294_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac294_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac295.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac295_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac295_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac296.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac296_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac296_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac296_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac296_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac297.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac2_1.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac2_2.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac2_3.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac2_4.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac300.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac300_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac316.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac316_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac316_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac318.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac318_1.yaml  │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac318_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac318_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac321.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac322.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac322_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac323.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac323_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac324.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac324_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac325.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac325_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac326.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac327.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac327_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac328.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac328_1.yaml  │ kubernetes │         4         │
├─────────────────┼────────────┼───────────────────┤
│ rbac329.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac329_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_10.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_11.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_12.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_13.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_14.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_15.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_16.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_17.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_18.yaml │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_19.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_4.yaml  │ kubernetes │         5         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_7.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_8.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac330_9.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac331.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac331_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac331_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac331_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac332.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac332_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac333.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac333_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac334.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac334_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac335.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac335_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac336.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac336_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac336_2.yaml  │ kubernetes │         5         │
├─────────────────┼────────────┼───────────────────┤
│ rbac336_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac336_4.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac336_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac337.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac337_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac337_2.yaml  │ kubernetes │         5         │
├─────────────────┼────────────┼───────────────────┤
│ rbac337_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac337_4.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac337_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac338.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac338_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac339.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac339_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac340.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac340_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac341.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac341_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac342.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac342_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac343.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac343_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac344.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac344_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac345.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac345_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac346.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac346_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac347.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac347_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac348.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac348_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac349.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac349_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac350.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac350_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac351.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac351_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac352.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac352_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac352_2.yaml  │ kubernetes │         5         │
├─────────────────┼────────────┼───────────────────┤
│ rbac352_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac352_4.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac352_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac353.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac353_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac353_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac354.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac354_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac354_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac355.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac355_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac355_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac356.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac356_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac356_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac357.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac357_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac357_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac358.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac358_1.yaml  │ kubernetes │         7         │
├─────────────────┼────────────┼───────────────────┤
│ rbac358_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_10.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_11.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_12.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_13.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_14.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_15.yaml │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_16.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_17.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_18.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_7.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_8.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac359_9.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac36.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac362.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac362_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac362_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac363.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac364.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac364_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac364_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac364_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac364_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac365.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac365_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac365_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac365_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac365_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac366.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac366_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac366_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac366_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac366_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac367.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac367_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac367_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac367_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac367_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac368.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac368_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac369.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac36_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac36_2.yaml   │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac36_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac37.yaml     │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac375.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac375_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac379.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac379_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac37_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac38.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac380.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac380_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac381.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac381_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac382.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac382_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac383.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac383_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac385.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac386.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac386_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac386_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac386_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac386_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac387.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac387_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac387_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac387_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac387_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac388.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac388_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac388_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac388_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac388_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac389_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac389_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac389_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac38_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac38_2.yaml   │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac39.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac390.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac391.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac391_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac391_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac391_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac391_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac392.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac392_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac392_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac392_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac392_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac393.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac393_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac393_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac393_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac393_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac394.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac394_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac394_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac394_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac394_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac395.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac396.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac396_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac396_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac396_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac396_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac397.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac397_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac397_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac397_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac397_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac398.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac398_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac398_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac398_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac398_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac399.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac399_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac399_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac399_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac399_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac39_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac39_2.yaml   │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac39_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac4.yaml      │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac40.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac401.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac401_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac402.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac402_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac402_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac404.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac404_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac404_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac40_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac41.yaml     │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac413.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac413_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac413_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac414.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac414_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac414_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac414_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac416.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac416_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac416_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac417.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac417_1.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac417_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac418.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac418_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac418_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac418_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac418_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac419.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac419_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac419_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac419_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac41_1.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac42.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac420.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac420_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac428.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac428_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac428_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac42_1.yaml   │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac42_2.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac42_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_2.yaml  │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_6.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac430_7.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac431.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac431_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac432.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac433.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac433_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac434.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac434_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac437.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac437_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac438.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac438_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac439.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac439_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac44.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac440.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac441.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac441_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac441_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac441_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac441_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac442.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac442_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac442_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac443.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac443_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac443_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac443_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac443_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac444.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac444_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac444_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac444_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac444_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac445.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac445_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac445_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac445_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac445_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac446.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac446_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac446_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac447.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac447_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac448.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac448_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac449.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac449_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac449_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac44_2.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac44_3.yaml   │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac450.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac450_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac451.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac451_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac452.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac452_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac453.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac453_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac454.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac454_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac454_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac455.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac455_1.yaml  │ kubernetes │         6         │
├─────────────────┼────────────┼───────────────────┤
│ rbac455_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac456.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac456_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac456_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac458.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac459.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac459_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac459_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac461.yaml    │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac461_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac462.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac462_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac462_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac462_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac462_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac462_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac463.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464_3.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464_4.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464_5.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac464_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac465.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac465_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac465_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac466.yaml    │ kubernetes │         3         │
├─────────────────┼────────────┼───────────────────┤
│ rbac466_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac467.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac467_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac468.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac468_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac469.yaml    │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac469_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac469_2.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac47.yaml     │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac470.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac470_1.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471.yaml    │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_1.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_10.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_11.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_12.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_13.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_14.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_15.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_16.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_17.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_18.yaml │ kubernetes │         2         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_19.yaml │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_2.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_3.yaml  │ kubernetes │         1         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_4.yaml  │ kubernetes │         5         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_5.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_6.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_7.yaml  │ kubernetes │         0         │
├─────────────────┼────────────┼───────────────────┤
│ rbac471_8.yaml  │ kubernetes │         0         │
└─────────────────┴────────────┴───────────────────┘
Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)


RBAC210_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'defender-updater-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 RBAC210_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - apps
   8 │   resources:
   9 │   - daemonsets
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'defender-updater-role' shouldn't have access to manage secrets in namespace 'default'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 RBAC210_1.yaml:18-24
────────────────────────────────────────
  18 ┌ - apiGroups:
  19 │   - ''
  20 │   resources:
  21 │   - secrets
  22 │   verbs:
  23 │   - get
  24 └   - list
────────────────────────────────────────



rbac144_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'flux-edit' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac144_2.yaml:9-22
────────────────────────────────────────
   9 ┌ - apiGroups:
  10 │   - notification.toolkit.fluxcd.io
  11 │   - source.toolkit.fluxcd.io
  12 │   - helm.toolkit.fluxcd.io
  13 │   - image.toolkit.fluxcd.io
  14 │   - kustomize.toolkit.fluxcd.io
  15 │   resources:
  16 │   - '*'
  17 └   verbs:
  ..   
────────────────────────────────────────



rbac144_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'flux-view' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac144_3.yaml:10-21
────────────────────────────────────────
  10 ┌ - apiGroups:
  11 │   - notification.toolkit.fluxcd.io
  12 │   - source.toolkit.fluxcd.io
  13 │   - helm.toolkit.fluxcd.io
  14 │   - image.toolkit.fluxcd.io
  15 │   - kustomize.toolkit.fluxcd.io
  16 │   resources:
  17 │   - '*'
  18 └   verbs:
  ..   
────────────────────────────────────────



rbac144_4.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'cluster-reconciler' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac144_4.yaml:4
────────────────────────────────────────
   4 [   name: cluster-reconciler
────────────────────────────────────────



rbac145_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'webhook-cert-role' shouldn't have access to manage secrets in namespace 'system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac145_1.yaml:7-13
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 │   - create
  13 └   - patch
────────────────────────────────────────



rbac145_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0114 (CRITICAL): ClusterRole 'webhook-cert-role' should not have access to resources ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Webhooks can silently intercept or actively mutate/block resources as they are being created or updated. This includes secrets and pod specs.

See https://avd.aquasec.com/misconfig/ksv114
────────────────────────────────────────
 rbac145_3.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - admissionregistration.k8s.io
   8 │   resources:
   9 │   - validatingwebhookconfigurations
  10 │   verbs:
  11 └   - patch
────────────────────────────────────────



rbac147_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'home-ops-runner' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac147_1.yaml:4
────────────────────────────────────────
   4 [   name: home-ops-runner
────────────────────────────────────────



rbac149.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'multus' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac149.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - k8s.cni.cncf.io
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'multus' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac149.yaml:12-19
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - pods
  16 │   - pods/status
  17 │   verbs:
  18 │   - get
  19 └   - update
────────────────────────────────────────



rbac150.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'gatus' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac150.yaml:6-14
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 └   - list
────────────────────────────────────────



rbac151.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade-controller' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac151.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade-controller
────────────────────────────────────────



rbac153_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'job-cleanup-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac153_1.yaml:8-15
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - batch
  10 │   resources:
  11 │   - jobs
  12 │   verbs:
  13 │   - delete
  14 │   - get
  15 └   - list
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'job-cleanup-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac153_1.yaml:16-23
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - pods
  20 │   verbs:
  21 │   - delete
  22 │   - get
  23 └   - list
────────────────────────────────────────



rbac156.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac156.yaml:15-22
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - secrets
  19 │   verbs:
  20 │   - get
  21 │   - list
  22 └   - watch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac156.yaml:23-32
────────────────────────────────────────
  23 ┌ - apiGroups:
  24 │   - ''
  25 │   resources:
  26 │   - configmaps
  27 │   verbs:
  28 │   - get
  29 │   - list
  30 │   - watch
  31 │   - update
  32 └   - create
────────────────────────────────────────



rbac157_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac157_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - endpoints
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────



rbac158_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-manager-read-role' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac158_1.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   resourceNames:
  11 │   - tls-secret
  12 │   verbs:
  13 └   - get
────────────────────────────────────────



rbac161.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 71, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 2)

AVD-KSV-0041 (CRITICAL): ClusterRole 'manager-role' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac161.yaml:55-66
────────────────────────────────────────
  55 ┌ - apiGroups:
  56 │   - ''
  57 │   resources:
  58 │   - secrets
  59 │   verbs:
  60 │   - get
  61 │   - list
  62 │   - watch
  63 └   - create
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'manager-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac161.yaml:67-78
────────────────────────────────────────
  67 ┌ - apiGroups:
  68 │   - ''
  69 │   resources:
  70 │   - services
  71 │   verbs:
  72 │   - get
  73 │   - list
  74 │   - watch
  75 └   - create
  ..   
────────────────────────────────────────


AVD-KSV-0114 (CRITICAL): ClusterRole 'manager-role' should not have access to resources ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Webhooks can silently intercept or actively mutate/block resources as they are being created or updated. This includes secrets and pod specs.

See https://avd.aquasec.com/misconfig/ksv114
────────────────────────────────────────
 rbac161.yaml:42-54
────────────────────────────────────────
  42 ┌ - apiGroups:
  43 │   - admissionregistration.k8s.io
  44 │   resources:
  45 │   - mutatingwebhookconfigurations
  46 │   - validatingwebhookconfigurations
  47 │   verbs:
  48 │   - get
  49 │   - list
  50 └   - watch
  ..   
────────────────────────────────────────



rbac163.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'default-pod-reader' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac163.yaml:9-16
────────────────────────────────────────
   9 ┌ - apiGroups:
  10 │   - ''
  11 │   resources:
  12 │   - pods
  13 │   verbs:
  14 │   - get
  15 │   - list
  16 └   - delete
────────────────────────────────────────



rbac164.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'rbac-tools-admin' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac164.yaml:4-7
────────────────────────────────────────
   4 ┌   name: rbac-tools-admin
   5 │   namespace: default
   6 │   labels:
   7 └     kiamol: ch17
────────────────────────────────────────



rbac168.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-issuers' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac168.yaml:29-39
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 │   - watch
  37 └   - create
  ..   
────────────────────────────────────────



rbac168_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-clusterissuers' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac168_1.yaml:29-39
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 │   - watch
  37 └   - create
  ..   
────────────────────────────────────────



rbac168_18.yaml (kubernetes)
============================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0049 (MEDIUM): Role 'cert-083-cert-manager:leaderelection' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac168_18.yaml:15-24
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - configmaps
  19 │   resourceNames:
  20 │   - cert-manager-controller
  21 │   verbs:
  22 │   - get
  23 │   - update
  24 └   - patch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'cert-083-cert-manager:leaderelection' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac168_18.yaml:25-30
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - configmaps
  29 │   verbs:
  30 └   - create
────────────────────────────────────────



rbac168_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-certificates' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac168_2.yaml:51-61
────────────────────────────────────────
  51 ┌ - apiGroups:
  52 │   - ''
  53 │   resources:
  54 │   - secrets
  55 │   verbs:
  56 │   - get
  57 │   - list
  58 │   - watch
  59 └   - create
  ..   
────────────────────────────────────────



rbac168_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-orders' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac168_3.yaml:52-59
────────────────────────────────────────
  52 ┌ - apiGroups:
  53 │   - ''
  54 │   resources:
  55 │   - secrets
  56 │   verbs:
  57 │   - get
  58 │   - list
  59 └   - watch
────────────────────────────────────────



rbac168_4.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 71, FAILURES: 5)
Failures: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 2, CRITICAL: 2)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-challenges' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac168_4.yaml:38-45
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - ''
  40 │   resources:
  41 │   - secrets
  42 │   verbs:
  43 │   - get
  44 │   - list
  45 └   - watch
────────────────────────────────────────


AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-challenges' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac168_4.yaml:98-105
────────────────────────────────────────
  98 ┌ - apiGroups:
  99 │   - ''
 100 │   resources:
 101 │   - secrets
 102 │   verbs:
 103 │   - get
 104 │   - list
 105 └   - watch
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac168_4.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - pods
  57 │   - services
  58 │   verbs:
  59 │   - get
  60 │   - list
  61 └   - watch
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac168_4.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - pods
  57 │   - services
  58 │   verbs:
  59 │   - get
  60 │   - list
  61 └   - watch
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac168_4.yaml:64-74
────────────────────────────────────────
  64 ┌ - apiGroups:
  65 │   - networking.k8s.io
  66 │   resources:
  67 │   - ingresses
  68 │   verbs:
  69 │   - get
  70 │   - list
  71 │   - watch
  72 └   - create
  ..   
────────────────────────────────────────



rbac170.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kube-backup-reader' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac170.yaml:6-12
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 │   - get
  12 └   - list
────────────────────────────────────────



rbac171_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0049 (MEDIUM): Role 'configmap-updater' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac171_2.yaml:7-15
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - configmaps
  11 │   resourceNames:
  12 │   - my-configmap
  13 │   verbs:
  14 │   - update
  15 └   - get
────────────────────────────────────────



rbac171_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'secret-reader' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac171_3.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   verbs:
  11 │   - get
  12 │   - watch
  13 └   - list
────────────────────────────────────────



rbac172.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac172.yaml:15-22
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - secrets
  19 │   verbs:
  20 │   - get
  21 │   - list
  22 └   - watch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac172.yaml:23-32
────────────────────────────────────────
  23 ┌ - apiGroups:
  24 │   - ''
  25 │   resources:
  26 │   - configmaps
  27 │   verbs:
  28 │   - get
  29 │   - list
  30 │   - watch
  31 │   - update
  32 └   - create
────────────────────────────────────────



rbac173_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac173_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - endpoints
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────



rbac17_3.yaml (kubernetes)
==========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac17_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac183_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 2, CRITICAL: 0)

AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac183_1.yaml:14-23
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - services
  18 │   - endpoints
  19 │   verbs:
  20 │   - list
  21 │   - get
  22 │   - watch
  23 └   - update
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac183_1.yaml:44-52
────────────────────────────────────────
  44 ┌ - apiGroups:
  45 │   - discovery.k8s.io
  46 │   resources:
  47 │   - endpointslices
  48 │   verbs:
  49 │   - list
  50 │   - get
  51 │   - watch
  52 └   - update
────────────────────────────────────────



rbac184.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac184.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac186_3.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0049 (MEDIUM): Role 'k8s-oci-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac186_3.yaml:9-14
────────────────────────────────────────
   9 ┌ - apiGroups:
  10 │   - ''
  11 │   resources:
  12 │   - configmaps
  13 │   verbs:
  14 └   - create
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'k8s-oci-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac186_3.yaml:15-24
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - configmaps
  19 │   resourceNames:
  20 │   - k8s-oci-operator
  21 │   verbs:
  22 │   - delete
  23 │   - get
  24 └   - update
────────────────────────────────────────



rbac187_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac187_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - endpoints
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────



rbac188_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'nfs-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac188_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - list
  14 │   - watch
  15 └   - create
  ..   
────────────────────────────────────────



rbac19.yaml (kubernetes)
========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'default-pod-reader' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac19.yaml:9-16
────────────────────────────────────────
   9 ┌ - apiGroups:
  10 │   - ''
  11 │   resources:
  12 │   - pods
  13 │   verbs:
  14 │   - get
  15 │   - list
  16 └   - delete
────────────────────────────────────────



rbac192_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac192_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac194_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'modify-pods-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac194_1.yaml:8-17
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - ''
  10 │   resources:
  11 │   - pods
  12 │   verbs:
  13 │   - get
  14 │   - list
  15 │   - delete
  16 │   - update
  17 └   - patch
────────────────────────────────────────



rbac198.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac198.yaml:15-22
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - secrets
  19 │   verbs:
  20 │   - get
  21 │   - list
  22 └   - watch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac198.yaml:23-32
────────────────────────────────────────
  23 ┌ - apiGroups:
  24 │   - ''
  25 │   resources:
  26 │   - configmaps
  27 │   verbs:
  28 │   - get
  29 │   - list
  30 │   - watch
  31 │   - update
  32 └   - create
────────────────────────────────────────



rbac20.yaml (kubernetes)
========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'rbac-tools-admin' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac20.yaml:4-7
────────────────────────────────────────
   4 ┌   name: rbac-tools-admin
   5 │   namespace: default
   6 │   labels:
   7 └     kiamol: ch17
────────────────────────────────────────



rbac202.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac202.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac202.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac202.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac204_3.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'pod-exec-and-list' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac204_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - pods
  10 │   - pods/exec
  11 │   - nodes
  12 │   verbs:
  13 │   - get
  14 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'pod-exec-and-list' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac204_3.yaml:17-24
────────────────────────────────────────
  17 ┌ - apiGroups:
  18 │   - apps
  19 │   resources:
  20 │   - deployments
  21 │   verbs:
  22 │   - get
  23 │   - list
  24 └   - patch
────────────────────────────────────────


AVD-KSV-0053 (HIGH): ClusterRole 'pod-exec-and-list' should not have access to resource '["pods/exec"]' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to exec into a container with privileged access to the host or with an attached SA with higher RBAC permissions is a common escalation path to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv053
────────────────────────────────────────
 rbac204_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - pods
  10 │   - pods/exec
  11 │   - nodes
  12 │   verbs:
  13 │   - get
  14 └   - list
  ..   
────────────────────────────────────────



rbac205_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac205_2.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac206_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system:kubernetes-dashboard' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac206_2.yaml:4
────────────────────────────────────────
   4 [   name: system:kubernetes-dashboard
────────────────────────────────────────



rbac208_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'gatus' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac208_2.yaml:11-19
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - ''
  13 │   resources:
  14 │   - configmaps
  15 │   - secrets
  16 │   verbs:
  17 │   - get
  18 │   - watch
  19 └   - list
────────────────────────────────────────



rbac209.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

AVD-KSV-0044 (CRITICAL): Role permits wildcard verb on wildcard resource
════════════════════════════════════════
Check whether role permits wildcard verb on wildcard resource

See https://avd.aquasec.com/misconfig/ksv044
────────────────────────────────────────
 rbac209.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - '*'
   9 │   resources:
  10 │   - '*'
  11 │   verbs:
  12 └   - '*'
────────────────────────────────────────


AVD-KSV-0112 (CRITICAL): Role 'system-admin' shouldn't manage all resources at the namespace 'replace-me'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac209.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - '*'
   9 │   resources:
  10 │   - '*'
  11 │   verbs:
  12 └   - '*'
────────────────────────────────────────



rbac209_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0123 (CRITICAL): RoleBinding 'system-admin' should not bind to roles {"system:masters"}
════════════════════════════════════════
Binding to system:masters group to any clusterrole or role is a security risk.

See https://avd.aquasec.com/misconfig/ksv0123
────────────────────────────────────────
 rbac209_1.yaml:4-5
────────────────────────────────────────
   4 ┌   name: system-admin
   5 └   namespace: replace-me
────────────────────────────────────────



rbac21.yaml (kubernetes)
========================
Tests: 74 (SUCCESSES: 70, FAILURES: 4)
Failures: 4 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'exam-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac21.yaml:7-19
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   - services
  12 │   - configmaps
  13 │   - secrets
  14 │   verbs:
  15 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'exam-role' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac21.yaml:7-19
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   - services
  12 │   - configmaps
  13 │   - secrets
  14 │   verbs:
  15 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): Role 'exam-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac21.yaml:7-19
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   - services
  12 │   - configmaps
  13 │   - secrets
  14 │   verbs:
  15 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'exam-role' shouldn't have access to manage secrets in namespace 'exam'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac21.yaml:7-19
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   - services
  12 │   - configmaps
  13 │   - secrets
  14 │   verbs:
  15 └   - get
  ..   
────────────────────────────────────────



rbac214_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac214_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac219_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac219_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac22.yaml (kubernetes)
========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'tailscale' shouldn't have access to manage secrets in namespace 'prometheus'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac22.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 └   - create
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'tailscale' shouldn't have access to manage secrets in namespace 'prometheus'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac22.yaml:13-22
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resources:
  16 │   - secrets
  17 │   verbs:
  18 │   - get
  19 │   - update
  20 │   - patch
  21 │   resourceNames:
  22 └   - tailscale-state
────────────────────────────────────────



rbac221_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0114 (CRITICAL): ClusterRole 'vault-agent-injector-clusterrole' should not have access to resources ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Webhooks can silently intercept or actively mutate/block resources as they are being created or updated. This includes secrets and pod specs.

See https://avd.aquasec.com/misconfig/ksv114
────────────────────────────────────────
 rbac221_1.yaml:9-17
────────────────────────────────────────
   9 ┌ - apiGroups:
  10 │   - admissionregistration.k8s.io
  11 │   resources:
  12 │   - mutatingwebhookconfigurations
  13 │   verbs:
  14 │   - get
  15 │   - list
  16 │   - watch
  17 └   - patch
────────────────────────────────────────



rbac223_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'kube-downscaler' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac223_1.yaml:15-25
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - apps
  17 │   resources:
  18 │   - deployments
  19 │   - statefulsets
  20 │   verbs:
  21 │   - get
  22 │   - watch
  23 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kube-downscaler' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac223_1.yaml:46-55
────────────────────────────────────────
  46 ┌ - apiGroups:
  47 │   - batch
  48 │   resources:
  49 │   - cronjobs
  50 │   verbs:
  51 │   - get
  52 │   - watch
  53 │   - list
  54 │   - update
  55 └   - patch
────────────────────────────────────────



rbac224.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'script-clusterrole' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac224.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - pods
  10 │   - secrets
  11 │   verbs:
  12 │   - get
  13 └   - list
────────────────────────────────────────



rbac224_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'manage-deployment' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac224_1.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - apps
  18 │   resources:
  19 │   - deployments
  20 │   verbs:
  21 │   - get
  22 │   - list
  23 │   - watch
  24 └   - create
  ..   
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'manage-deployment' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac224_1.yaml:7-15
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - configmaps
  11 │   verbs:
  12 │   - delete
  13 │   - get
  14 │   - list
  15 └   - create
────────────────────────────────────────



rbac250.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac250.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac251.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac251.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac253.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac253.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac253.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac253.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac254.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'external-secrets-pg' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac254.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────



rbac256.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'kube-nimble-cluster-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac256.yaml:18-29
────────────────────────────────────────
  18 ┌ - apiGroups:
  19 │   - apps
  20 │   resources:
  21 │   - deployments
  22 │   verbs:
  23 │   - get
  24 │   - list
  25 │   - watch
  26 └   - create
  ..   
────────────────────────────────────────



rbac258_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 2, CRITICAL: 0)

AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac258_1.yaml:14-23
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - services
  18 │   - endpoints
  19 │   verbs:
  20 │   - list
  21 │   - get
  22 │   - watch
  23 └   - update
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac258_1.yaml:44-52
────────────────────────────────────────
  44 ┌ - apiGroups:
  45 │   - discovery.k8s.io
  46 │   resources:
  47 │   - endpointslices
  48 │   verbs:
  49 │   - list
  50 │   - get
  51 │   - watch
  52 └   - update
────────────────────────────────────────



rbac259.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac259.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac260_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system:kubernetes-dashboard' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac260_2.yaml:4
────────────────────────────────────────
   4 [   name: system:kubernetes-dashboard
────────────────────────────────────────



rbac262.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac262.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac263.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac263.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac264_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac264_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - endpoints
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────



rbac265_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac265_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - endpoints
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────



rbac267_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'kube-downscaler' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac267_1.yaml:15-25
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - apps
  17 │   resources:
  18 │   - deployments
  19 │   - statefulsets
  20 │   verbs:
  21 │   - get
  22 │   - watch
  23 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kube-downscaler' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac267_1.yaml:46-55
────────────────────────────────────────
  46 ┌ - apiGroups:
  47 │   - batch
  48 │   resources:
  49 │   - cronjobs
  50 │   verbs:
  51 │   - get
  52 │   - watch
  53 │   - list
  54 │   - update
  55 └   - patch
────────────────────────────────────────



rbac268_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac268_3.yaml:6-16
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - endpoints
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 │   - watch
  14 └   - create
  ..   
────────────────────────────────────────



rbac269.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'e10s-clusterrole' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac269.yaml:6-14
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - pods
  10 │   - secrets
  11 │   - namespaces
  12 │   verbs:
  13 │   - get
  14 └   - list
────────────────────────────────────────



rbac269_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'manage-deployment' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac269_1.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - apps
  18 │   resources:
  19 │   - deployments
  20 │   verbs:
  21 │   - get
  22 │   - list
  23 │   - watch
  24 └   - create
  ..   
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'manage-deployment' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac269_1.yaml:7-15
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - configmaps
  11 │   verbs:
  12 │   - delete
  13 │   - get
  14 │   - list
  15 └   - create
────────────────────────────────────────



rbac270_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system:kubernetes-dashboard' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac270_2.yaml:4
────────────────────────────────────────
   4 [   name: system:kubernetes-dashboard
────────────────────────────────────────



rbac271.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac271.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac275.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac275.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac277.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'pods-create' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac277.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - pods
  10 │   - persistentvolumes
  11 │   - persistentvolumeclaims
  12 │   verbs:
  13 └   - create
────────────────────────────────────────



rbac280_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 73, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 3)

AVD-KSV-0112 (CRITICAL): Role 'test-controller' shouldn't manage all resources at the namespace 'default'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac280_1.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────


AVD-KSV-0112 (CRITICAL): Role 'test-controller' shouldn't manage all resources at the namespace 'default'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac280_1.yaml:14-19
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - autoscaling
  16 │   resources:
  17 │   - '*'
  18 │   verbs:
  19 └   - '*'
────────────────────────────────────────


AVD-KSV-0112 (CRITICAL): Role 'test-controller' shouldn't manage all resources at the namespace 'default'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac280_1.yaml:20-25
────────────────────────────────────────
  20 ┌ - apiGroups:
  21 │   - apps.kruise.io
  22 │   resources:
  23 │   - '*'
  24 │   verbs:
  25 └   - '*'
────────────────────────────────────────



rbac280_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'test-controller' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac280_3.yaml:8-15
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - ''
  10 │   resources:
  11 │   - '*'
  12 │   verbs:
  13 │   - get
  14 │   - list
  15 └   - watch
────────────────────────────────────────



rbac281_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 2, CRITICAL: 0)

AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac281_1.yaml:14-23
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - services
  18 │   - endpoints
  19 │   verbs:
  20 │   - list
  21 │   - get
  22 │   - watch
  23 └   - update
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac281_1.yaml:44-52
────────────────────────────────────────
  44 ┌ - apiGroups:
  45 │   - discovery.k8s.io
  46 │   resources:
  47 │   - endpointslices
  48 │   verbs:
  49 │   - list
  50 │   - get
  51 │   - watch
  52 └   - update
────────────────────────────────────────



rbac287.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'external-secrets-pg' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac287.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────



rbac288.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac288.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac288.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac288.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac289.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'multus' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac289.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - k8s.cni.cncf.io
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'multus' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac289.yaml:12-19
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - pods
  16 │   - pods/status
  17 │   verbs:
  18 │   - get
  19 └   - update
────────────────────────────────────────



rbac290.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'gatus' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac290.yaml:6-14
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 └   - list
────────────────────────────────────────



rbac291.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac291.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac292.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'descheduler-cluster-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac292.yaml:29-37
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - pods
  33 │   verbs:
  34 │   - get
  35 │   - watch
  36 │   - list
  37 └   - delete
────────────────────────────────────────



rbac293.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0112 (CRITICAL): Role 'k8s-deployment-full-access-role' shouldn't manage all resources at the namespace 'k8s-deployment'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac293.yaml:7-15
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   - extensions
  10 │   - apps
  11 │   - storage.k8s.io
  12 │   resources:
  13 │   - '*'
  14 │   verbs:
  15 └   - '*'
────────────────────────────────────────



rbac293_4.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0112 (CRITICAL): Role 'k8s-deployment-integration-access-role' shouldn't manage all resources at the namespace 'k8s-deployment'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac293_4.yaml:7-21
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   - extensions
  10 │   - apps
  11 │   resources:
  12 │   - '*'
  13 │   verbs:
  14 │   - create
  15 └   - get
  ..   
────────────────────────────────────────



rbac296_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac296_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - list
  14 │   - watch
  15 └   - create
  ..   
────────────────────────────────────────



rbac2_3.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'leader-locking-nfs-client-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac2_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - list
  14 │   - watch
  15 └   - create
  ..   
────────────────────────────────────────



rbac300_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'kubedoom' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac300_1.yaml:4
────────────────────────────────────────
   4 [   name: kubedoom
────────────────────────────────────────



rbac318_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 71, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 1)

AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac318_1.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): Role 'vault' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac318_1.yaml:12-19
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - pods
  16 │   verbs:
  17 │   - get
  18 │   - update
  19 └   - patch
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'vault' shouldn't have access to manage secrets in namespace 'default'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac318_1.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────



rbac321.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'portainer' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac321.yaml:5
────────────────────────────────────────
   5 [   name: portainer
────────────────────────────────────────



rbac324.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac324.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac324.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac324.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac325.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 2, CRITICAL: 0)

AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac325.yaml:14-23
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - services
  18 │   - endpoints
  19 │   verbs:
  20 │   - list
  21 │   - get
  22 │   - watch
  23 └   - update
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac325.yaml:44-52
────────────────────────────────────────
  44 ┌ - apiGroups:
  45 │   - discovery.k8s.io
  46 │   resources:
  47 │   - endpointslices
  48 │   verbs:
  49 │   - list
  50 │   - get
  51 │   - watch
  52 └   - update
────────────────────────────────────────



rbac326.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac326.yaml:5
────────────────────────────────────────
   5 [   name: system-upgrade
────────────────────────────────────────



rbac327.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 71, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac327.yaml:22-29
────────────────────────────────────────
  22 ┌ - apiGroups:
  23 │   - ''
  24 │   resources:
  25 │   - secrets
  26 │   verbs:
  27 │   - get
  28 │   - list
  29 └   - watch
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac327.yaml:40-48
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - get
  46 │   - list
  47 │   - watch
  48 └   - update
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac327.yaml:30-39
────────────────────────────────────────
  30 ┌ - apiGroups:
  31 │   - ''
  32 │   resources:
  33 │   - configmaps
  34 │   verbs:
  35 │   - get
  36 │   - list
  37 │   - watch
  38 │   - update
  39 └   - create
────────────────────────────────────────



rbac328_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 72, FAILURES: 4)
Failures: 4 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 3, CRITICAL: 0)

AVD-KSV-0049 (MEDIUM): ClusterRole 'edns-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac328_1.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - services
  10 │   - ingresses
  11 │   - configmaps
  12 │   verbs:
  13 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'edns-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac328_1.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - services
  10 │   - ingresses
  11 │   - configmaps
  12 │   verbs:
  13 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'edns-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac328_1.yaml:14-20
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - apps
  16 │   resources:
  17 │   - services
  18 │   - ingresses
  19 │   verbs:
  20 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'edns-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac328_1.yaml:34-39
────────────────────────────────────────
  34 ┌ - apiGroups:
  35 │   - networking.k8s.io
  36 │   resources:
  37 │   - ingresses
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────



rbac329.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'reader' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac329.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - deployments
  10 │   - configmaps
  11 │   - pods
  12 │   - secrets
  13 │   - services
  14 └   verbs:
  ..   
────────────────────────────────────────



rbac330.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-issuers' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac330.yaml:29-39
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 │   - watch
  37 └   - create
  ..   
────────────────────────────────────────



rbac330_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-clusterissuers' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac330_1.yaml:29-39
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 │   - watch
  37 └   - create
  ..   
────────────────────────────────────────



rbac330_18.yaml (kubernetes)
============================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0049 (MEDIUM): Role 'cert-083-cert-manager:leaderelection' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac330_18.yaml:15-24
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - configmaps
  19 │   resourceNames:
  20 │   - cert-manager-controller
  21 │   verbs:
  22 │   - get
  23 │   - update
  24 └   - patch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'cert-083-cert-manager:leaderelection' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac330_18.yaml:25-30
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - configmaps
  29 │   verbs:
  30 └   - create
────────────────────────────────────────



rbac330_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-certificates' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac330_2.yaml:51-61
────────────────────────────────────────
  51 ┌ - apiGroups:
  52 │   - ''
  53 │   resources:
  54 │   - secrets
  55 │   verbs:
  56 │   - get
  57 │   - list
  58 │   - watch
  59 └   - create
  ..   
────────────────────────────────────────



rbac330_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-orders' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac330_3.yaml:52-59
────────────────────────────────────────
  52 ┌ - apiGroups:
  53 │   - ''
  54 │   resources:
  55 │   - secrets
  56 │   verbs:
  57 │   - get
  58 │   - list
  59 └   - watch
────────────────────────────────────────



rbac330_4.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 71, FAILURES: 5)
Failures: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 2, CRITICAL: 2)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-challenges' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac330_4.yaml:38-45
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - ''
  40 │   resources:
  41 │   - secrets
  42 │   verbs:
  43 │   - get
  44 │   - list
  45 └   - watch
────────────────────────────────────────


AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-challenges' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac330_4.yaml:98-105
────────────────────────────────────────
  98 ┌ - apiGroups:
  99 │   - ''
 100 │   resources:
 101 │   - secrets
 102 │   verbs:
 103 │   - get
 104 │   - list
 105 └   - watch
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac330_4.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - pods
  57 │   - services
  58 │   verbs:
  59 │   - get
  60 │   - list
  61 └   - watch
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac330_4.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - pods
  57 │   - services
  58 │   verbs:
  59 │   - get
  60 │   - list
  61 └   - watch
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac330_4.yaml:64-74
────────────────────────────────────────
  64 ┌ - apiGroups:
  65 │   - networking.k8s.io
  66 │   resources:
  67 │   - ingresses
  68 │   verbs:
  69 │   - get
  70 │   - list
  71 │   - watch
  72 └   - create
  ..   
────────────────────────────────────────



rbac336_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kiali-viewer' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac336_1.yaml:55-66
────────────────────────────────────────
  55 ┌ - apiGroups:
  56 │   - networking.istio.io
  57 │   - security.istio.io
  58 │   - extensions.istio.io
  59 │   - telemetry.istio.io
  60 │   - gateway.networking.k8s.io
  61 │   resources:
  62 │   - '*'
  63 └   verbs:
  ..   
────────────────────────────────────────



rbac336_2.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 71, FAILURES: 5)
Failures: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kiali' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac336_2.yaml:58-72
────────────────────────────────────────
  58 ┌ - apiGroups:
  59 │   - networking.istio.io
  60 │   - security.istio.io
  61 │   - extensions.istio.io
  62 │   - telemetry.istio.io
  63 │   - gateway.networking.k8s.io
  64 │   resources:
  65 │   - '*'
  66 └   verbs:
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac336_2.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - namespaces
  20 │   - pods
  21 │   - replicationcontrollers
  22 │   - services
  23 │   verbs:
  24 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac336_2.yaml:35-47
────────────────────────────────────────
  35 ┌ - apiGroups:
  36 │   - extensions
  37 │   - apps
  38 │   resources:
  39 │   - daemonsets
  40 │   - deployments
  41 │   - replicasets
  42 │   - statefulsets
  43 └   verbs:
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac336_2.yaml:48-57
────────────────────────────────────────
  48 ┌ - apiGroups:
  49 │   - batch
  50 │   resources:
  51 │   - cronjobs
  52 │   - jobs
  53 │   verbs:
  54 │   - get
  55 │   - list
  56 │   - watch
  57 └   - patch
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'kiali' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac336_2.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - namespaces
  20 │   - pods
  21 │   - replicationcontrollers
  22 │   - services
  23 │   verbs:
  24 └   - get
  ..   
────────────────────────────────────────



rbac336_4.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'kiali-controlplane' shouldn't have access to manage secrets in namespace 'istio-system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac336_4.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 └   - list
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'kiali-controlplane' shouldn't have access to manage secrets in namespace 'istio-system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac336_4.yaml:13-23
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resourceNames:
  16 │   - cacerts
  17 │   - istio-ca-secret
  18 │   resources:
  19 │   - secrets
  20 │   verbs:
  21 └   - get
  ..   
────────────────────────────────────────



rbac337_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kiali-viewer' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac337_1.yaml:55-66
────────────────────────────────────────
  55 ┌ - apiGroups:
  56 │   - networking.istio.io
  57 │   - security.istio.io
  58 │   - extensions.istio.io
  59 │   - telemetry.istio.io
  60 │   - gateway.networking.k8s.io
  61 │   resources:
  62 │   - '*'
  63 └   verbs:
  ..   
────────────────────────────────────────



rbac337_2.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 71, FAILURES: 5)
Failures: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kiali' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac337_2.yaml:58-72
────────────────────────────────────────
  58 ┌ - apiGroups:
  59 │   - networking.istio.io
  60 │   - security.istio.io
  61 │   - extensions.istio.io
  62 │   - telemetry.istio.io
  63 │   - gateway.networking.k8s.io
  64 │   resources:
  65 │   - '*'
  66 └   verbs:
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac337_2.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - namespaces
  20 │   - pods
  21 │   - replicationcontrollers
  22 │   - services
  23 │   verbs:
  24 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac337_2.yaml:35-47
────────────────────────────────────────
  35 ┌ - apiGroups:
  36 │   - extensions
  37 │   - apps
  38 │   resources:
  39 │   - daemonsets
  40 │   - deployments
  41 │   - replicasets
  42 │   - statefulsets
  43 └   verbs:
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac337_2.yaml:48-57
────────────────────────────────────────
  48 ┌ - apiGroups:
  49 │   - batch
  50 │   resources:
  51 │   - cronjobs
  52 │   - jobs
  53 │   verbs:
  54 │   - get
  55 │   - list
  56 │   - watch
  57 └   - patch
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'kiali' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac337_2.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - namespaces
  20 │   - pods
  21 │   - replicationcontrollers
  22 │   - services
  23 │   verbs:
  24 └   - get
  ..   
────────────────────────────────────────



rbac337_4.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'kiali-controlplane' shouldn't have access to manage secrets in namespace 'istio-system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac337_4.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 └   - list
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'kiali-controlplane' shouldn't have access to manage secrets in namespace 'istio-system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac337_4.yaml:13-23
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resourceNames:
  16 │   - cacerts
  17 │   - istio-ca-secret
  18 │   resources:
  19 │   - secrets
  20 │   verbs:
  21 └   - get
  ..   
────────────────────────────────────────



rbac338.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac338.yaml:6-24
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   - nodes
  12 │   - pods
  13 │   - services
  14 └   - serviceaccounts
  ..   
────────────────────────────────────────



rbac340_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac340_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac340_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac340_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac340_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac340_1.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac340_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac340_1.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ''
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



rbac341.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac341.yaml:6-24
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   - nodes
  12 │   - pods
  13 │   - services
  14 └   - serviceaccounts
  ..   
────────────────────────────────────────



rbac343_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac343_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac343_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac343_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac343_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac343_1.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac343_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac343_1.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ''
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



rbac344.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'kube-state-metrics' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac344.yaml:6-24
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   - nodes
  12 │   - pods
  13 │   - services
  14 └   - serviceaccounts
  ..   
────────────────────────────────────────



rbac346_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac346_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac346_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac346_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac346_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac346_1.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac346_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac346_1.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ''
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



rbac347_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac347_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac347_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac347_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac347_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac347_1.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac347_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac347_1.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ''
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



rbac351_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac351_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac351_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac351_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac351_1.yaml:27-32
────────────────────────────────────────
  27 ┌ - apiGroups:
  28 │   - apps
  29 │   resources:
  30 │   - statefulsets
  31 │   verbs:
  32 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac351_1.yaml:40-46
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - list
  46 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac351_1.yaml:33-39
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - ''
  35 │   resources:
  36 │   - configmaps
  37 │   - secrets
  38 │   verbs:
  39 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac351_1.yaml:47-57
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ''
  49 │   resources:
  50 │   - services
  51 │   - services/finalizers
  52 │   - endpoints
  53 │   verbs:
  54 │   - get
  55 └   - create
  ..   
────────────────────────────────────────



rbac352_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kiali-viewer' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac352_1.yaml:55-66
────────────────────────────────────────
  55 ┌ - apiGroups:
  56 │   - networking.istio.io
  57 │   - security.istio.io
  58 │   - extensions.istio.io
  59 │   - telemetry.istio.io
  60 │   - gateway.networking.k8s.io
  61 │   resources:
  62 │   - '*'
  63 └   verbs:
  ..   
────────────────────────────────────────



rbac352_2.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 71, FAILURES: 5)
Failures: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kiali' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac352_2.yaml:58-72
────────────────────────────────────────
  58 ┌ - apiGroups:
  59 │   - networking.istio.io
  60 │   - security.istio.io
  61 │   - extensions.istio.io
  62 │   - telemetry.istio.io
  63 │   - gateway.networking.k8s.io
  64 │   resources:
  65 │   - '*'
  66 └   verbs:
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac352_2.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - namespaces
  20 │   - pods
  21 │   - replicationcontrollers
  22 │   - services
  23 │   verbs:
  24 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac352_2.yaml:35-47
────────────────────────────────────────
  35 ┌ - apiGroups:
  36 │   - extensions
  37 │   - apps
  38 │   resources:
  39 │   - daemonsets
  40 │   - deployments
  41 │   - replicasets
  42 │   - statefulsets
  43 └   verbs:
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'kiali' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac352_2.yaml:48-57
────────────────────────────────────────
  48 ┌ - apiGroups:
  49 │   - batch
  50 │   resources:
  51 │   - cronjobs
  52 │   - jobs
  53 │   verbs:
  54 │   - get
  55 │   - list
  56 │   - watch
  57 └   - patch
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'kiali' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac352_2.yaml:16-27
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - namespaces
  20 │   - pods
  21 │   - replicationcontrollers
  22 │   - services
  23 │   verbs:
  24 └   - get
  ..   
────────────────────────────────────────



rbac352_4.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'kiali-controlplane' shouldn't have access to manage secrets in namespace 'istio-system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac352_4.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 └   - list
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'kiali-controlplane' shouldn't have access to manage secrets in namespace 'istio-system'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac352_4.yaml:13-23
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resourceNames:
  16 │   - cacerts
  17 │   - istio-ca-secret
  18 │   resources:
  19 │   - secrets
  20 │   verbs:
  21 └   - get
  ..   
────────────────────────────────────────



rbac354_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac354_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac354_1.yaml:33-38
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - apps
  35 │   resources:
  36 │   - statefulsets
  37 │   verbs:
  38 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac354_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac354_1.yaml:33-38
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - apps
  35 │   resources:
  36 │   - statefulsets
  37 │   verbs:
  38 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac354_1.yaml:46-52
────────────────────────────────────────
  46 ┌ - apiGroups:
  47 │   - ''
  48 │   resources:
  49 │   - pods
  50 │   verbs:
  51 │   - list
  52 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac354_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac354_1.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - services
  57 │   - services/finalizers
  58 │   - endpoints
  59 │   verbs:
  60 │   - get
  61 └   - create
  ..   
────────────────────────────────────────



rbac356_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac356_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac356_1.yaml:33-38
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - apps
  35 │   resources:
  36 │   - statefulsets
  37 │   verbs:
  38 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac356_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac356_1.yaml:33-38
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - apps
  35 │   resources:
  36 │   - statefulsets
  37 │   verbs:
  38 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac356_1.yaml:46-52
────────────────────────────────────────
  46 ┌ - apiGroups:
  47 │   - ''
  48 │   resources:
  49 │   - pods
  50 │   verbs:
  51 │   - list
  52 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac356_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac356_1.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - services
  57 │   - services/finalizers
  58 │   - endpoints
  59 │   verbs:
  60 │   - get
  61 └   - create
  ..   
────────────────────────────────────────



rbac358_1.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 69, FAILURES: 7)
Failures: 7 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 3)

AVD-KSV-0041 (CRITICAL): ClusterRole 'prometheus-operator' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac358_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac358_1.yaml:33-38
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - apps
  35 │   resources:
  36 │   - statefulsets
  37 │   verbs:
  38 └   - '*'
────────────────────────────────────────


AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac358_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac358_1.yaml:33-38
────────────────────────────────────────
  33 ┌ - apiGroups:
  34 │   - apps
  35 │   resources:
  36 │   - statefulsets
  37 │   verbs:
  38 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac358_1.yaml:46-52
────────────────────────────────────────
  46 ┌ - apiGroups:
  47 │   - ''
  48 │   resources:
  49 │   - pods
  50 │   verbs:
  51 │   - list
  52 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'prometheus-operator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac358_1.yaml:39-45
────────────────────────────────────────
  39 ┌ - apiGroups:
  40 │   - ''
  41 │   resources:
  42 │   - configmaps
  43 │   - secrets
  44 │   verbs:
  45 └   - '*'
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'prometheus-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac358_1.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - services
  57 │   - services/finalizers
  58 │   - endpoints
  59 │   verbs:
  60 │   - get
  61 └   - create
  ..   
────────────────────────────────────────



rbac359_15.yaml (kubernetes)
============================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0114 (CRITICAL): ClusterRole 'system:vpa-admission-controller' should not have access to resources ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Webhooks can silently intercept or actively mutate/block resources as they are being created or updated. This includes secrets and pod specs.

See https://avd.aquasec.com/misconfig/ksv114
────────────────────────────────────────
 rbac359_15.yaml:17-25
────────────────────────────────────────
  17 ┌ - apiGroups:
  18 │   - admissionregistration.k8s.io
  19 │   resources:
  20 │   - mutatingwebhookconfigurations
  21 │   verbs:
  22 │   - create
  23 │   - delete
  24 │   - get
  25 └   - list
────────────────────────────────────────



rbac365_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac365_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac367_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'external-snapshotter-runner' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac367_1.yaml:16-22
────────────────────────────────────────
  16 ┌ - apiGroups:
  17 │   - ''
  18 │   resources:
  19 │   - secrets
  20 │   verbs:
  21 │   - get
  22 └   - list
────────────────────────────────────────



rbac368.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'default-pod-reader' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac368.yaml:9-16
────────────────────────────────────────
   9 ┌ - apiGroups:
  10 │   - ''
  11 │   resources:
  12 │   - pods
  13 │   verbs:
  14 │   - get
  15 │   - list
  16 └   - delete
────────────────────────────────────────



rbac369.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'rbac-tools-admin' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac369.yaml:4-7
────────────────────────────────────────
   4 ┌   name: rbac-tools-admin
   5 │   namespace: default
   6 │   labels:
   7 └     kiamol: ch17
────────────────────────────────────────



rbac36_2.yaml (kubernetes)
==========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'smb-external-provisioner-role' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac36_2.yaml:71-76
────────────────────────────────────────
  71 ┌ - apiGroups:
  72 │   - ''
  73 │   resources:
  74 │   - secrets
  75 │   verbs:
  76 └   - get
────────────────────────────────────────



rbac37.yaml (kubernetes)
========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac37.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac37.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac37.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac375.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 71, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac375.yaml:29-36
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 └   - watch
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac375.yaml:47-55
────────────────────────────────────────
  47 ┌ - apiGroups:
  48 │   - ''
  49 │   resources:
  50 │   - pods
  51 │   verbs:
  52 │   - get
  53 │   - list
  54 │   - watch
  55 └   - update
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac375.yaml:37-46
────────────────────────────────────────
  37 ┌ - apiGroups:
  38 │   - ''
  39 │   resources:
  40 │   - configmaps
  41 │   verbs:
  42 │   - get
  43 │   - list
  44 │   - watch
  45 │   - update
  46 └   - create
────────────────────────────────────────



rbac379.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 rbac379.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



rbac380.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 rbac380.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - nodes
  10 │   - nodes/proxy
  11 │   - services
  12 │   - endpoints
  13 │   - pods
  14 └   verbs:
  ..   
────────────────────────────────────────



rbac382.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'otel-collector-role' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac382.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────



rbac383.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'otel-collector-role' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac383.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────



rbac388_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac388_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac38_2.yaml (kubernetes)
==========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac38_2.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac39_2.yaml (kubernetes)
==========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'gatus' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac39_2.yaml:11-19
────────────────────────────────────────
  11 ┌ - apiGroups:
  12 │   - ''
  13 │   resources:
  14 │   - configmaps
  15 │   - secrets
  16 │   verbs:
  17 │   - get
  18 │   - watch
  19 └   - list
────────────────────────────────────────



rbac4.yaml (kubernetes)
=======================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'resource-reader' shouldn't have access to manage secrets in namespace 'miniprojet'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac4.yaml:7-16
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   - services
  12 │   - configmaps
  13 │   - secrets
  14 │   verbs:
  15 │   - get
  16 └   - list
────────────────────────────────────────



rbac401.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 71, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac401.yaml:22-29
────────────────────────────────────────
  22 ┌ - apiGroups:
  23 │   - ''
  24 │   resources:
  25 │   - secrets
  26 │   verbs:
  27 │   - get
  28 │   - list
  29 └   - watch
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac401.yaml:40-48
────────────────────────────────────────
  40 ┌ - apiGroups:
  41 │   - ''
  42 │   resources:
  43 │   - pods
  44 │   verbs:
  45 │   - get
  46 │   - list
  47 │   - watch
  48 └   - update
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac401.yaml:30-39
────────────────────────────────────────
  30 ┌ - apiGroups:
  31 │   - ''
  32 │   resources:
  33 │   - configmaps
  34 │   verbs:
  35 │   - get
  36 │   - list
  37 │   - watch
  38 │   - update
  39 └   - create
────────────────────────────────────────



rbac402_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

AVD-KSV-0044 (CRITICAL): Role permits wildcard verb on wildcard resource
════════════════════════════════════════
Check whether role permits wildcard verb on wildcard resource

See https://avd.aquasec.com/misconfig/ksv044
────────────────────────────────────────
 rbac402_1.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - '*'
   9 │   resources:
  10 │   - '*'
  11 │   verbs:
  12 └   - '*'
────────────────────────────────────────


AVD-KSV-0112 (CRITICAL): Role 'roboshop' shouldn't manage all resources at the namespace 'roboshop-admin-Role'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac402_1.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - '*'
   9 │   resources:
  10 │   - '*'
  11 │   verbs:
  12 └   - '*'
────────────────────────────────────────



rbac41.yaml (kubernetes)
========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'multus' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac41.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - k8s.cni.cncf.io
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'multus' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac41.yaml:12-21
────────────────────────────────────────
  12 ┌ - apiGroups:
  13 │   - ''
  14 │   resources:
  15 │   - pods
  16 │   - pods/status
  17 │   verbs:
  18 │   - get
  19 │   - list
  20 │   - update
  21 └   - watch
────────────────────────────────────────



rbac414.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'allow-more' shouldn't have access to manage secrets in namespace 'learning'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac414.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   - secrets
  12 │   - services
  13 │   - configmaps
  14 │   verbs:
  15 └   - get
  ..   
────────────────────────────────────────



rbac416_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'ns-object-mirror' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac416_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   - namespaces
  12 │   verbs:
  13 │   - get
  14 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'ns-object-mirror' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac416_1.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   - namespaces
  12 │   verbs:
  13 │   - get
  14 └   - list
  ..   
────────────────────────────────────────



rbac417_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 2, CRITICAL: 0)

AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac417_1.yaml:14-23
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - ''
  16 │   resources:
  17 │   - services
  18 │   - endpoints
  19 │   verbs:
  20 │   - list
  21 │   - get
  22 │   - watch
  23 └   - update
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'system:kube-vip-role' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac417_1.yaml:44-52
────────────────────────────────────────
  44 ┌ - apiGroups:
  45 │   - discovery.k8s.io
  46 │   resources:
  47 │   - endpointslices
  48 │   verbs:
  49 │   - list
  50 │   - get
  51 │   - watch
  52 └   - update
────────────────────────────────────────



rbac418_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'nfs-provisioner' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac418_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - list
  14 │   - watch
  15 └   - create
  ..   
────────────────────────────────────────



rbac419_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'batch-compute-environment-role' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac419_2.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - pods
  11 │   verbs:
  12 │   - create
  13 │   - get
  14 │   - list
  15 └   - watch
  ..   
────────────────────────────────────────



rbac420.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0047 (HIGH): Role permits privilege escalation from node proxy
════════════════════════════════════════
Check whether role permits privilege escalation from node proxy

See https://avd.aquasec.com/misconfig/ksv047
────────────────────────────────────────
 rbac420.yaml:10-21
────────────────────────────────────────
  10 ┌ - apiGroups:
  11 │   - ''
  12 │   resources:
  13 │   - namespaces
  14 │   - pods
  15 │   - pods/logs
  16 │   - nodes
  17 │   - nodes/proxy
  18 └   verbs:
  ..   
────────────────────────────────────────



rbac42_1.yaml (kubernetes)
==========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0045 (CRITICAL): Role permits wildcard verb on specific resources
════════════════════════════════════════
Check whether role permits wildcard verb on specific resources

See https://avd.aquasec.com/misconfig/ksv045
────────────────────────────────────────
 rbac42_1.yaml:19-24
────────────────────────────────────────
  19 ┌ - apiGroups:
  20 │   - apps
  21 │   resources:
  22 │   - deployments
  23 │   verbs:
  24 └   - '*'
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): Role 'benk' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac42_1.yaml:19-24
────────────────────────────────────────
  19 ┌ - apiGroups:
  20 │   - apps
  21 │   resources:
  22 │   - deployments
  23 │   verbs:
  24 └   - '*'
────────────────────────────────────────



rbac430.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0112 (CRITICAL): Role 'easy-full-access' shouldn't manage all resources at the namespace 'easy'
════════════════════════════════════════
Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)

See https://avd.aquasec.com/misconfig/ksv112
────────────────────────────────────────
 rbac430.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - '*'
  11 │   verbs:
  12 └   - '*'
────────────────────────────────────────



rbac430_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): Role 'medium-limited-access' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac430_2.yaml:13-20
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resources:
  16 │   - pods
  17 │   verbs:
  18 │   - create
  19 │   - get
  20 └   - list
────────────────────────────────────────


AVD-KSV-0113 (MEDIUM): Role 'medium-limited-access' shouldn't have access to manage secrets in namespace 'medium'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac430_2.yaml:7-12
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 └   - list
────────────────────────────────────────



rbac430_6.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'secret-reader' shouldn't have access to manage secrets in namespace 'medium'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac430_6.yaml:7-14
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 └   - list
────────────────────────────────────────



rbac431.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'traefik-ingress-controller' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac431.yaml:6-15
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - services
  10 │   - endpoints
  11 │   - secrets
  12 │   verbs:
  13 │   - get
  14 │   - list
  15 └   - watch
────────────────────────────────────────



rbac433.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac433.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac433.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac433.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac437.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

AVD-KSV-0044 (CRITICAL): Role permits wildcard verb on wildcard resource
════════════════════════════════════════
Check whether role permits wildcard verb on wildcard resource

See https://avd.aquasec.com/misconfig/ksv044
────────────────────────────────────────
 rbac437.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0046 (CRITICAL): ClusterRole 'argocd-controller-all-access' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac437.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────



rbac438.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

AVD-KSV-0044 (CRITICAL): Role permits wildcard verb on wildcard resource
════════════════════════════════════════
Check whether role permits wildcard verb on wildcard resource

See https://avd.aquasec.com/misconfig/ksv044
────────────────────────────────────────
 rbac438.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0046 (CRITICAL): ClusterRole 'image-updater-all-access' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac438.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────



rbac439.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

AVD-KSV-0044 (CRITICAL): Role permits wildcard verb on wildcard resource
════════════════════════════════════════
Check whether role permits wildcard verb on wildcard resource

See https://avd.aquasec.com/misconfig/ksv044
────────────────────────────────────────
 rbac439.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────


AVD-KSV-0046 (CRITICAL): ClusterRole 'django-updater-all-access' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac439.yaml:6-11
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 └   - '*'
────────────────────────────────────────



rbac444_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-KSV-0056 (HIGH): Role 'external-provisioner-cfg' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac444_3.yaml:7-17
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - endpoints
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 │   - list
  15 └   - delete
  ..   
────────────────────────────────────────



rbac446_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'kube-web-view' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac446_1.yaml:6-12
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 │   - list
  12 └   - get
────────────────────────────────────────



rbac447_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'kubectl-admin' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac447_1.yaml:4
────────────────────────────────────────
   4 [   name: kubectl-admin
────────────────────────────────────────



rbac450_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'kubectl-admin' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac450_1.yaml:4
────────────────────────────────────────
   4 [   name: kubectl-admin
────────────────────────────────────────



rbac452_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'kubectl-admin' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac452_1.yaml:4
────────────────────────────────────────
   4 [   name: kubectl-admin
────────────────────────────────────────



rbac455_1.yaml (kubernetes)
===========================
Tests: 75 (SUCCESSES: 69, FAILURES: 6)
Failures: 6 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 1, CRITICAL: 2)

AVD-KSV-0046 (CRITICAL): ClusterRole 'event-generator' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac455_1.yaml:51-56
────────────────────────────────────────
  51 ┌ - apiGroups:
  52 │   - ''
  53 │   resources:
  54 │   - '*'
  55 │   verbs:
  56 └   - get
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'event-generator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac455_1.yaml:13-24
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resources:
  16 │   - configmaps
  17 │   - services
  18 │   - serviceaccounts
  19 │   - pods
  20 │   verbs:
  21 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'event-generator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac455_1.yaml:25-34
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - apps
  27 │   - extensions
  28 │   resources:
  29 │   - deployments
  30 │   verbs:
  31 │   - list
  32 │   - get
  33 │   - create
  34 └   - delete
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'event-generator' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac455_1.yaml:13-24
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resources:
  16 │   - configmaps
  17 │   - services
  18 │   - serviceaccounts
  19 │   - pods
  20 │   verbs:
  21 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0050 (CRITICAL): ClusterRole 'event-generator' should not have access to resources ["roles", "rolebindings"] for verbs ["create", "update", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
An effective level of access equivalent to cluster-admin should not be provided.

See https://avd.aquasec.com/misconfig/ksv050
────────────────────────────────────────
 rbac455_1.yaml:35-44
────────────────────────────────────────
  35 ┌ - apiGroups:
  36 │   - rbac.authorization.k8s.io
  37 │   resources:
  38 │   - roles
  39 │   - rolebindings
  40 │   verbs:
  41 │   - get
  42 │   - list
  43 │   - create
  44 └   - delete
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'event-generator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac455_1.yaml:13-24
────────────────────────────────────────
  13 ┌ - apiGroups:
  14 │   - ''
  15 │   resources:
  16 │   - configmaps
  17 │   - services
  18 │   - serviceaccounts
  19 │   - pods
  20 │   verbs:
  21 └   - list
  ..   
────────────────────────────────────────



rbac458.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac458.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac459.yaml (kubernetes)
=========================
Tests: 76 (SUCCESSES: 73, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 3)

AVD-KSV-0046 (CRITICAL): ClusterRole 'k9s-reader' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac459.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - '*'
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────


AVD-KSV-0046 (CRITICAL): ClusterRole 'k9s-reader' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac459.yaml:14-21
────────────────────────────────────────
  14 ┌ - apiGroups:
  15 │   - apps
  16 │   resources:
  17 │   - '*'
  18 │   verbs:
  19 │   - get
  20 │   - list
  21 └   - watch
────────────────────────────────────────


AVD-KSV-0046 (CRITICAL): ClusterRole 'k9s-reader' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac459.yaml:22-29
────────────────────────────────────────
  22 ┌ - apiGroups:
  23 │   - batch
  24 │   resources:
  25 │   - '*'
  26 │   verbs:
  27 │   - get
  28 │   - list
  29 └   - watch
────────────────────────────────────────



rbac461.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 72, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'nginx-ingress' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac461.yaml:15-22
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - secrets
  19 │   verbs:
  20 │   - get
  21 │   - list
  22 └   - watch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): ClusterRole 'nginx-ingress' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac461.yaml:23-32
────────────────────────────────────────
  23 ┌ - apiGroups:
  24 │   - ''
  25 │   resources:
  26 │   - configmaps
  27 │   verbs:
  28 │   - get
  29 │   - list
  30 │   - watch
  31 │   - update
  32 └   - create
────────────────────────────────────────



rbac463.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0111 (MEDIUM): ClusterRoleBinding 'system-upgrade' should not bind to roles ["cluster-admin", "admin", "edit"]
════════════════════════════════════════
Either cluster-admin or those granted powerful permissions.

See https://avd.aquasec.com/misconfig/ksv111
────────────────────────────────────────
 rbac463.yaml:4
────────────────────────────────────────
   4 [   name: system-upgrade
────────────────────────────────────────



rbac464.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0046 (CRITICAL): ClusterRole 'webhook-dnsimple:domain-solver' shouldn't manage all resources
════════════════════════════════════════
Full control of the cluster resources, and therefore also root on all nodes where workloads can run and has access to all pods, secrets, and data.

See https://avd.aquasec.com/misconfig/ksv046
────────────────────────────────────────
 rbac464.yaml:8-13
────────────────────────────────────────
   8 ┌ - apiGroups:
   9 │   - acme.hsn.dev
  10 │   resources:
  11 │   - '*'
  12 │   verbs:
  13 └   - create
────────────────────────────────────────



rbac464_5.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

AVD-KSV-0113 (MEDIUM): Role 'webhook-dnsimple:access-secret' shouldn't have access to manage secrets in namespace 'cert-manager'
════════════════════════════════════════
Viewing secrets at the namespace scope can lead to escalation if another service account in that namespace has a higher privileged rolebinding or clusterrolebinding bound.

See https://avd.aquasec.com/misconfig/ksv113
────────────────────────────────────────
 rbac464_5.yaml:7-13
────────────────────────────────────────
   7 ┌ - apiGroups:
   8 │   - ''
   9 │   resources:
  10 │   - secrets
  11 │   verbs:
  12 │   - get
  13 └   - watch
────────────────────────────────────────



rbac465.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'external-secrets-pg' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac465.yaml:6-13
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - secrets
  10 │   verbs:
  11 │   - get
  12 │   - list
  13 └   - watch
────────────────────────────────────────



rbac466.yaml (kubernetes)
=========================
Tests: 75 (SUCCESSES: 72, FAILURES: 3)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 1, CRITICAL: 0)

AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac466.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'dragonfly-operator' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac466.yaml:38-49
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - apps
  40 │   resources:
  41 │   - statefulsets
  42 │   verbs:
  43 │   - create
  44 │   - delete
  45 │   - get
  46 └   - list
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'dragonfly-operator' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac466.yaml:25-37
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - pods
  29 │   - services
  30 │   verbs:
  31 │   - create
  32 │   - delete
  33 └   - get
  ..   
────────────────────────────────────────



rbac468.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'gatus' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac468.yaml:6-14
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - ''
   8 │   resources:
   9 │   - configmaps
  10 │   - secrets
  11 │   verbs:
  12 │   - get
  13 │   - watch
  14 └   - list
────────────────────────────────────────



rbac470.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'reader' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac470.yaml:6-17
────────────────────────────────────────
   6 ┌ - apiGroups:
   7 │   - '*'
   8 │   resources:
   9 │   - deployments
  10 │   - configmaps
  11 │   - pods
  12 │   - secrets
  13 │   - services
  14 └   verbs:
  ..   
────────────────────────────────────────



rbac471.yaml (kubernetes)
=========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-issuers' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac471.yaml:29-39
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 │   - watch
  37 └   - create
  ..   
────────────────────────────────────────



rbac471_1.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-clusterissuers' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac471_1.yaml:29-39
────────────────────────────────────────
  29 ┌ - apiGroups:
  30 │   - ''
  31 │   resources:
  32 │   - secrets
  33 │   verbs:
  34 │   - get
  35 │   - list
  36 │   - watch
  37 └   - create
  ..   
────────────────────────────────────────



rbac471_18.yaml (kubernetes)
============================
Tests: 75 (SUCCESSES: 73, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 0, CRITICAL: 0)

AVD-KSV-0049 (MEDIUM): Role 'cert-083-cert-manager:leaderelection' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac471_18.yaml:15-24
────────────────────────────────────────
  15 ┌ - apiGroups:
  16 │   - ''
  17 │   resources:
  18 │   - configmaps
  19 │   resourceNames:
  20 │   - cert-manager-controller
  21 │   verbs:
  22 │   - get
  23 │   - update
  24 └   - patch
────────────────────────────────────────


AVD-KSV-0049 (MEDIUM): Role 'cert-083-cert-manager:leaderelection' should not have access to resource 'configmaps' for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Some workloads leverage configmaps to store sensitive data or configuration parameters that affect runtime behavior that can be modified by an attacker or combined with another issue to potentially lead to compromise.

See https://avd.aquasec.com/misconfig/ksv049
────────────────────────────────────────
 rbac471_18.yaml:25-30
────────────────────────────────────────
  25 ┌ - apiGroups:
  26 │   - ''
  27 │   resources:
  28 │   - configmaps
  29 │   verbs:
  30 └   - create
────────────────────────────────────────



rbac471_2.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-certificates' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac471_2.yaml:51-61
────────────────────────────────────────
  51 ┌ - apiGroups:
  52 │   - ''
  53 │   resources:
  54 │   - secrets
  55 │   verbs:
  56 │   - get
  57 │   - list
  58 │   - watch
  59 └   - create
  ..   
────────────────────────────────────────



rbac471_3.yaml (kubernetes)
===========================
Tests: 74 (SUCCESSES: 73, FAILURES: 1)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-orders' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac471_3.yaml:52-59
────────────────────────────────────────
  52 ┌ - apiGroups:
  53 │   - ''
  54 │   resources:
  55 │   - secrets
  56 │   verbs:
  57 │   - get
  58 │   - list
  59 └   - watch
────────────────────────────────────────



rbac471_4.yaml (kubernetes)
===========================
Tests: 76 (SUCCESSES: 71, FAILURES: 5)
Failures: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 2, CRITICAL: 2)

AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-challenges' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac471_4.yaml:38-45
────────────────────────────────────────
  38 ┌ - apiGroups:
  39 │   - ''
  40 │   resources:
  41 │   - secrets
  42 │   verbs:
  43 │   - get
  44 │   - list
  45 └   - watch
────────────────────────────────────────


AVD-KSV-0041 (CRITICAL): ClusterRole 'cert-083-cert-manager-controller-challenges' shouldn't have access to manage resource 'secrets'
════════════════════════════════════════
Viewing secrets at the cluster-scope is akin to cluster-admin in most clusters as there are typically at least one service accounts (their token stored in a secret) bound to cluster-admin directly or a role/clusterrole that gives similar permissions.

See https://avd.aquasec.com/misconfig/ksv041
────────────────────────────────────────
 rbac471_4.yaml:98-105
────────────────────────────────────────
  98 ┌ - apiGroups:
  99 │   - ''
 100 │   resources:
 101 │   - secrets
 102 │   verbs:
 103 │   - get
 104 │   - list
 105 └   - watch
────────────────────────────────────────


AVD-KSV-0048 (MEDIUM): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["pods", "deployments", "jobs", "cronjobs", "statefulsets", "daemonsets", "replicasets", "replicationcontrollers"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
Depending on the policies enforced by the admission controller, this permission ranges from the ability to steal compute (crypto) by running workloads or allowing for creating workloads that escape to the node as root and escalation to cluster-admin.

See https://avd.aquasec.com/misconfig/ksv048
────────────────────────────────────────
 rbac471_4.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - pods
  57 │   - services
  58 │   verbs:
  59 │   - get
  60 │   - list
  61 └   - watch
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac471_4.yaml:53-63
────────────────────────────────────────
  53 ┌ - apiGroups:
  54 │   - ''
  55 │   resources:
  56 │   - pods
  57 │   - services
  58 │   verbs:
  59 │   - get
  60 │   - list
  61 └   - watch
  ..   
────────────────────────────────────────


AVD-KSV-0056 (HIGH): ClusterRole 'cert-083-cert-manager-controller-challenges' should not have access to resources ["services", "endpoints", "endpointslices", "networkpolicies", "ingresses"] for verbs ["create", "update", "patch", "delete", "deletecollection", "impersonate", "*"]
════════════════════════════════════════
The ability to control which pods get service traffic directed to them allows for interception attacks. Controlling network policy allows for bypassing lateral movement restrictions.

See https://avd.aquasec.com/misconfig/ksv056
────────────────────────────────────────
 rbac471_4.yaml:64-74
────────────────────────────────────────
  64 ┌ - apiGroups:
  65 │   - networking.k8s.io
  66 │   resources:
  67 │   - ingresses
  68 │   verbs:
  69 │   - get
  70 │   - list
  71 │   - watch
  72 └   - create
  ..   
────────────────────────────────────────


